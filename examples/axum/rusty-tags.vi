!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        A,$/;"	e	enum:tests::MyEnum
A	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl<'de, 'a, A: ?Sized> MapAccess<'de> for &'a mut A$/;"	c
A	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl<'de, 'a, A: ?Sized> SeqAccess<'de> for &'a mut A$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl AbortHandle {$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl Drop for AbortHandle {$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl RefUnwindSafe for AbortHandle {}$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl UnwindSafe for AbortHandle {}$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl fmt::Debug for AbortHandle {$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^pub struct AbortHandle {$/;"	s
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^unsafe impl Send for AbortHandle {}$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^unsafe impl Sync for AbortHandle {}$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortHandle,$/;"	e	enum:CombiAbortSource
AbortOnPanic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    impl Drop for AbortOnPanic {$/;"	c	function:run
AbortOnPanic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    struct AbortOnPanic;$/;"	s	function:run
AbortedAfterConsumeOutput	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortedAfterConsumeOutput = 4,$/;"	e	enum:CombiAbort
AbortedAfterFinish	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortedAfterFinish = 3,$/;"	e	enum:CombiAbort
AbortedFirstPoll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortedFirstPoll = 2,$/;"	e	enum:CombiAbort
AbortedImmediately	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortedImmediately = 1,$/;"	e	enum:CombiAbort
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    AccessError,$/;"	e	enum:ScopeInnerErr
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl Error for AccessError {}$/;"	c
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl fmt::Debug for AccessError {$/;"	c
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl fmt::Display for AccessError {$/;"	c
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^pub struct AccessError {$/;"	s
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl Drop for Acquire<'_> {$/;"	c
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl Future for Acquire<'_> {$/;"	c
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl<'a> Acquire<'a> {$/;"	c
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^pub(crate) struct Acquire<'a> {$/;"	s
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^unsafe impl Sync for Acquire<'_> {}$/;"	c
AcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl AcquireError {$/;"	c
AcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl fmt::Display for AcquireError {$/;"	c
AcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl std::error::Error for AcquireError {}$/;"	c
AcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^pub struct AcquireError(());$/;"	s
Adapter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^        impl<'ser, W, F> Write for Adapter<'ser, W, F>$/;"	c	function:collect_str
Adapter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^        struct Adapter<'ser, W: 'ser, F: 'ser> {$/;"	s	function:collect_str
AddExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^impl<ResBody, S, T> Service<Request<ResBody>> for AddExtension<S, T>$/;"	c
AddExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^pub struct AddExtension<S, T> {$/;"	s
Address	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl Address {$/;"	c
Address	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) struct Address(usize);$/;"	s
Adhoc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^impl Adhoc {$/;"	c
Adhoc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^pub struct Adhoc;$/;"	s
AdhocKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^pub trait AdhocKind: Sized {$/;"	i
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<E: AioSource + fmt::Debug> fmt::Debug for Aio<E> {$/;"	c
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<E: AioSource> Aio<E> {$/;"	c
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<E: AioSource> Deref for Aio<E> {$/;"	c
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<E: AioSource> DerefMut for Aio<E> {$/;"	c
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^pub struct Aio<E> {$/;"	s
AioEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^pub struct AioEvent(ReadyEvent);$/;"	s
AioSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^pub trait AioSource {$/;"	i
AllEntries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^        impl<T, F: FnMut(T)> AllEntries<T, F> {$/;"	c	method:IdleNotifiedSet::drain
AllEntries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^        impl<T, F: FnMut(T)> Drop for AllEntries<T, F> {$/;"	c	method:IdleNotifiedSet::drain
AllEntries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^        struct AllEntries<T, F: FnMut(T)> {$/;"	s	method:IdleNotifiedSet::drain
AllWaiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    AllWaiters,$/;"	e	enum:NotificationType
Allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T: Entry> Allocator<T> {$/;"	c
Allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> fmt::Debug for Allocator<T> {$/;"	c
Allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) struct Allocator<T> {$/;"	s
AllowHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^enum AllowHeader {$/;"	g
AllowHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl AllowHeader {$/;"	c
AlreadyInitializedError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    AlreadyInitializedError(T),$/;"	e	enum:SetError
AppState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    impl Clone for AppState {$/;"	c	function:state_isnt_cloned_too_much
AppState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    struct AppState {$/;"	s	function:extract_state
AppState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    struct AppState;$/;"	s	function:state_isnt_cloned_too_much
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Schedule for Arc<Handle> {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl task::Schedule for Arc<Handle> {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl task::Schedule for Arc<Shared> {$/;"	c
ArcFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl io::Read for ArcFile {$/;"	c
ArcFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl io::Write for ArcFile {$/;"	c
ArcFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^struct ArcFile(Arc<StdFile>);$/;"	s
ArcWeak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for ArcWeak<T>$/;"	c
ArcWeak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for ArcWeak<T>$/;"	c
Arguments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<'a> Serialize for fmt::Arguments<'a> {$/;"	c
Array	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    Array(Vec<Value>),$/;"	e	enum:Value
ArrayInPlaceVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for ArrayVisitor<[T; 0]> {$/;"	c
ArrayVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<A> ArrayVisitor<A> {$/;"	c
ArrayVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
AsCast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^pub trait AsCast: AsPrimitive {$/;"	i
AsHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait AsHandle {$/;"	i	module:windows::io
AsPrimitive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^pub trait AsPrimitive: Sized + Copy + PartialOrd {$/;"	i
AsRawHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait AsRawHandle {$/;"	i	module:windows::io
AsRawSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait AsRawSocket {$/;"	i	module:windows::io
AsSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait AsSocket {$/;"	i	module:windows::io
AsciiAlphanumeric	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^        impl Arbitrary for AsciiAlphanumeric {$/;"	c	function:tests::ascii_alphanumeric
AsciiAlphanumeric	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^        struct AsciiAlphanumeric(String);$/;"	s	function:tests::ascii_alphanumeric
AsciiControl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    AsciiControl(u8),$/;"	e	enum:CharEscape
AssertDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl AssertDrop {$/;"	c
AssertDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl Drop for AssertDrop {$/;"	c
AssertDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct AssertDrop {$/;"	s
AssertDropHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl AssertDropHandle {$/;"	c
AssertDropHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct AssertDropHandle {$/;"	s
AssertSend	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^trait AssertSend: Send {}$/;"	i
AssertSync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^trait AssertSync: Sync {}$/;"	i
AsyncBufRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^pub trait AsyncBufRead: AsyncRead {$/;"	i
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: AsRawFd> AsRawFd for AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: AsRawFd> AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: AsRawFd> Drop for AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: AsRawFd> std::os::unix::io::AsFd for AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: std::fmt::Debug + AsRawFd> std::fmt::Debug for AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^pub struct AsyncFd<T: AsRawFd> {$/;"	s
AsyncFdReadyGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<'a, Inner: AsRawFd> AsyncFdReadyGuard<'a, Inner> {$/;"	c
AsyncFdReadyGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<'a, T: std::fmt::Debug + AsRawFd> std::fmt::Debug for AsyncFdReadyGuard<'a, T> {$/;"	c
AsyncFdReadyGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^pub struct AsyncFdReadyGuard<'a, T: AsRawFd> {$/;"	s
AsyncFdReadyMutGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<'a, Inner: AsRawFd> AsyncFdReadyMutGuard<'a, Inner> {$/;"	c
AsyncFdReadyMutGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<'a, T: std::fmt::Debug + AsRawFd> std::fmt::Debug for AsyncFdReadyMutGuard<'a, T> {$/;"	c
AsyncFdReadyMutGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^pub struct AsyncFdReadyMutGuard<'a, T: AsRawFd> {$/;"	s
AsyncRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^pub trait AsyncRead {$/;"	i
AsyncSeek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^pub trait AsyncSeek {$/;"	i
AsyncWrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^pub trait AsyncWrite {$/;"	i
AtCapacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    AtCapacity = 2,$/;"	e	enum:Kind
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^impl<T> AtomicCell<T> {$/;"	c
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^impl<T> Drop for AtomicCell<T> {$/;"	c
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^pub(crate) struct AtomicCell<T> {$/;"	s
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^unsafe impl<T: Send> Send for AtomicCell<T> {}$/;"	c
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^unsafe impl<T: Send> Sync for AtomicCell<T> {}$/;"	c
AtomicOneshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^impl<T> AtomicOneshot<T> {$/;"	c
AtomicOneshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^struct AtomicOneshot<T> {$/;"	s
AtomicState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl AtomicState {$/;"	c	module:state
AtomicState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub(super) struct AtomicState(AtomicUsize);$/;"	s	module:state
AtomicTake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    impl<T> AtomicTake<T> {$/;"	c	module:atomic_take
AtomicTake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    impl<T> Drop for AtomicTake<T> {$/;"	c	module:atomic_take
AtomicTake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    pub(super) struct AtomicTake<T> {$/;"	s	module:atomic_take
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^impl AtomicU16 {$/;"	c
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^impl Deref for AtomicU16 {$/;"	c
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^impl fmt::Debug for AtomicU16 {$/;"	c
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^pub(crate) struct AtomicU16 {$/;"	s
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^unsafe impl Send for AtomicU16 {}$/;"	c
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^unsafe impl Sync for AtomicU16 {}$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^impl AtomicU32 {$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^impl Deref for AtomicU32 {$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^impl fmt::Debug for AtomicU32 {$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^pub(crate) struct AtomicU32 {$/;"	s
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^unsafe impl Send for AtomicU32 {}$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^unsafe impl Sync for AtomicU32 {}$/;"	c
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^impl AtomicU64 {$/;"	c
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^impl Default for AtomicU64 {$/;"	c
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^pub(crate) struct AtomicU64 {$/;"	s
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_const_new.rs	/^impl AtomicU64 {$/;"	c
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^impl AtomicU64 {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^impl AtomicUsize {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^impl fmt::Debug for AtomicUsize {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^impl ops::Deref for AtomicUsize {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^impl ops::DerefMut for AtomicUsize {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^pub(crate) struct AtomicUsize {$/;"	s
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^unsafe impl Send for AtomicUsize {}$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^unsafe impl Sync for AtomicUsize {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl AtomicWaker {$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl Default for AtomicWaker {$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl RefUnwindSafe for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl UnwindSafe for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl fmt::Debug for AtomicWaker {$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^pub(crate) struct AtomicWaker {$/;"	s
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^unsafe impl Send for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^unsafe impl Sync for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^impl AssertSend for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^impl AssertSync for AtomicWaker {}$/;"	c
B	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^impl<A, B> BothDebug for (A, B)$/;"	c
B	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^impl<A, B> NotBothDebug for &(A, B) {$/;"	c
B	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        B,$/;"	e	enum:tests::MyEnum
B	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    impl<A, B> Pair for (A, B) {$/;"	c	module:private
BTreeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, K, V, E> IntoDeserializer<'de, E> for BTreeMap<K, V>$/;"	c
BTreeSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for BTreeSet<T>$/;"	c
Backspace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    Backspace,$/;"	e	enum:CharEscape
Backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    impl Backtrace {$/;"	c	module:capture
Backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    impl Debug for Backtrace {$/;"	c	module:capture
Backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    impl Display for Backtrace {$/;"	c	module:capture
Backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    pub(crate) struct Backtrace {$/;"	s	module:capture
Backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^pub(crate) enum Backtrace {}$/;"	g
BacktraceFrame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    impl Debug for BacktraceFrame {$/;"	c	module:capture
BacktraceFrame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    struct BacktraceFrame {$/;"	s	module:capture
BacktraceStatus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    pub(crate) enum BacktraceStatus {$/;"	g	module:capture
BacktraceSymbol	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    impl Debug for BacktraceSymbol {$/;"	c	module:capture
BacktraceSymbol	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    struct BacktraceSymbol {$/;"	s	module:capture
Bar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    struct Bar {$/;"	s	module:tests
Barrier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^impl Barrier {$/;"	c
Barrier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^pub struct Barrier {$/;"	s
BarrierState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^struct BarrierState {$/;"	s
BarrierWaitResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^impl BarrierWaitResult {$/;"	c
BarrierWaitResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^pub struct BarrierWaitResult(bool);$/;"	s
BatchTaskIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^        impl<'a, T: 'static> Iterator for BatchTaskIter<'a, T> {$/;"	c	method:Local::push_overflow
BatchTaskIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^        struct BatchTaskIter<'a, T: 'static> {$/;"	s	method:Local::push_overflow
BigNotify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl BigNotify {$/;"	c	module:big_notify
BigNotify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub(super) struct BigNotify {$/;"	s	module:big_notify
Bigint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bignum.rs	/^impl Default for Bigint {$/;"	c
Bigint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bignum.rs	/^impl Math for Bigint {$/;"	c
Bigint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bignum.rs	/^pub(crate) struct Bigint {$/;"	s
Binary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    Binary(Vec<u8>),$/;"	e	enum:Message
Block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^impl<T> Block<T> {$/;"	c
Block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^pub(crate) struct Block<T> {$/;"	s
BlockHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^struct BlockHeader<T> {$/;"	s
BlockedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^impl Future for BlockedFuture {$/;"	c
BlockedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^struct BlockedFuture {$/;"	s
Blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^impl<T> AsyncRead for Blocking<T>$/;"	c
Blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^impl<T> AsyncWrite for Blocking<T>$/;"	c
Blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^pub(crate) struct Blocking<T> {$/;"	s
BlockingPool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl BlockingPool {$/;"	c
BlockingPool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl Drop for BlockingPool {$/;"	c
BlockingPool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl fmt::Debug for BlockingPool {$/;"	c
BlockingPool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) struct BlockingPool {$/;"	s
BlockingSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^impl BlockingSchedule {$/;"	c
BlockingSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^impl task::Schedule for BlockingSchedule {$/;"	c
BlockingSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^pub(crate) struct BlockingSchedule {$/;"	s
BlockingTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^impl<T, R> Future for BlockingTask<T>$/;"	c
BlockingTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^impl<T> BlockingTask<T> {$/;"	c
BlockingTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^impl<T> Unpin for BlockingTask<T> {}$/;"	c
BlockingTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^pub(crate) struct BlockingTask<T> {$/;"	s
Body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl<S, E> HttpBody for Body<S>$/;"	c
BodyStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^impl Stream for BodyStream {$/;"	c
BodyStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^impl fmt::Debug for BodyStream {$/;"	c
BodyStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^impl<S, B> FromRequest<S, B> for BodyStream$/;"	c
BodyStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^pub struct BodyStream($/;"	s
Bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Bool(bool),$/;"	e	enum:Unexpected
Bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Bool(bool),$/;"	e	enum:content::Content
Bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Bool(bool),$/;"	e	enum:content::Content
Bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    Bool(bool),$/;"	e	enum:Value
BoolVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Visitor<'de> for BoolVisitor {$/;"	c
BoolVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
Boolean	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    Boolean,$/;"	e	enum:Unsupported
BorrowError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    BorrowError,$/;"	e	enum:ScopeInnerErr
Borrowed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for Borrowed<'de, [u8]>$/;"	c
Borrowed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for Borrowed<'de, str>$/;"	c
Borrowed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub struct Borrowed<'de, T: 'de + ?Sized>(pub &'de T);$/;"	s
Borrowed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    Borrowed(&'b T),$/;"	e	enum:Reference
BorrowedBytesDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> BorrowedBytesDeserializer<'de, E> {$/;"	c
BorrowedBytesDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> Debug for BorrowedBytesDeserializer<'de, E> {$/;"	c
BorrowedBytesDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> Deserializer<'de> for BorrowedBytesDeserializer<'de, E>$/;"	c
BorrowedBytesDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedCowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> BorrowedCowStrDeserializer<'de> {$/;"	c
BorrowedCowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> de::Deserializer<'de> for BorrowedCowStrDeserializer<'de> {$/;"	c
BorrowedCowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> de::EnumAccess<'de> for BorrowedCowStrDeserializer<'de> {$/;"	c
BorrowedCowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct BorrowedCowStrDeserializer<'de> {$/;"	s
BorrowedHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub type BorrowedHandle<'handle> = crate::doc::NotDefinedHere;$/;"	t	module:windows::io
BorrowedRawDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> MapAccess<'de> for BorrowedRawDeserializer<'de> {$/;"	c
BorrowedRawDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^pub struct BorrowedRawDeserializer<'de> {$/;"	s
BorrowedSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub type BorrowedSocket<'socket> = crate::doc::NotDefinedHere;$/;"	t	module:windows::io
BorrowedStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> BorrowedStrDeserializer<'de, E> {$/;"	c
BorrowedStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> Debug for BorrowedStrDeserializer<'de, E> {$/;"	c
BorrowedStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
BorrowedStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'de, E> Deserializer<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
Both	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    Both(T, T),$/;"	e	enum:Item
BothDebug	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^pub trait BothDebug {$/;"	i
Bound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Bound<T>$/;"	c
Bound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T> Serialize for Bound<T>$/;"	c
BoundVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for BoundVisitor<T>$/;"	c	function:deserialize
BoundVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s	function:deserialize
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl From<Error> for Box<dyn StdError + 'static> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl From<Error> for Box<dyn StdError + Send + 'static> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl From<Error> for Box<dyn StdError + Send + Sync + 'static> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^impl BoxedKind for Box<dyn StdError + Send + Sync> {}$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl Clone for Box<RawValue> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl Default for Box<RawValue> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl From<Box<RawValue>> for Box<str> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> Deserialize<'de> for Box<RawValue> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl<T: ?Sized + AsyncBufRead + Unpin> AsyncBufRead for Box<T> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl<T: ?Sized + AsyncRead + Unpin> AsyncRead for Box<T> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^impl<T: ?Sized + AsyncSeek + Unpin> AsyncSeek for Box<T> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl<T: ?Sized + AsyncWrite + Unpin> AsyncWrite for Box<T> {$/;"	c
Boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^impl Boxed {$/;"	c
Boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^pub struct Boxed;$/;"	s
BoxedError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl Debug for BoxedError {$/;"	c
BoxedError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl Display for BoxedError {$/;"	c
BoxedError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl StdError for BoxedError {$/;"	c
BoxedError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^pub struct BoxedError(pub Box<dyn StdError + Send + Sync>);$/;"	s
BoxedFromString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> DeserializeSeed<'de> for BoxedFromString {$/;"	c
BoxedFromString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> Visitor<'de> for BoxedFromString {$/;"	c
BoxedFromString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^pub struct BoxedFromString;$/;"	s
BoxedHandler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    BoxedHandler(BoxedIntoRoute<S, B, E>),$/;"	e	enum:MethodEndpoint
BoxedHandler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    BoxedHandler(BoxedIntoRoute<S, B, E>),$/;"	e	enum:Fallback
BoxedIntoRoute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<S, B, E> BoxedIntoRoute<S, B, E> {$/;"	c
BoxedIntoRoute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<S, B, E> Clone for BoxedIntoRoute<S, B, E> {$/;"	c
BoxedIntoRoute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<S, B, E> fmt::Debug for BoxedIntoRoute<S, B, E> {$/;"	c
BoxedIntoRoute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<S, B> BoxedIntoRoute<S, B, Infallible>$/;"	c
BoxedIntoRoute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^pub(crate) struct BoxedIntoRoute<S, B, E>(Box<dyn ErasedIntoRoute<S, B, E>>);$/;"	s
BoxedKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^pub trait BoxedKind: Sized {$/;"	i
BoxedVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^        impl<'de> Visitor<'de> for BoxedVisitor {$/;"	c	method:Box::deserialize
BoxedVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^        struct BoxedVisitor;$/;"	s	method:Box::deserialize
Budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^impl Budget {$/;"	c
Budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) struct Budget(Option<u8>);$/;"	s
BudgetDecrement	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) struct BudgetDecrement {$/;"	s
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^impl Buf {$/;"	c
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^impl Write for Buf {$/;"	c
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^struct Buf {$/;"	s
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/format.rs	/^impl<'a> Buf<'a> {$/;"	c
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/format.rs	/^impl<'a> Write for Buf<'a> {$/;"	c
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/format.rs	/^pub(super) struct Buf<'a> {$/;"	s
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^impl Buf {$/;"	c
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^pub(crate) struct Buf {$/;"	s
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead + AsyncSeek> AsyncSeek for BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead + AsyncWrite> AsyncWrite for BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead> AsyncBufRead for BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead> AsyncRead for BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead> BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: fmt::Debug> fmt::Debug for BufReader<R> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite + AsyncSeek> AsyncSeek for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite> AsyncBufRead for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite> AsyncRead for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite> AsyncWrite for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite> BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW> From<BufReader<BufWriter<RW>>> for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW> From<BufWriter<BufReader<RW>>> for BufStream<RW> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite + AsyncBufRead> AsyncBufRead for BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite + AsyncRead> AsyncRead for BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite + AsyncSeek> AsyncSeek for BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite> AsyncWrite for BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite> BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: fmt::Debug> fmt::Debug for BufWriter<W> {$/;"	c
Buffered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    Buffered {$/;"	e	enum:ChainState
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^impl Builder {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^impl fmt::Debug for Builder {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^pub struct Builder {$/;"	s
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^impl<'a> Builder<'a> {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^pub struct Builder<'a> {$/;"	s
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<'a, T: 'static> Builder<'a, T> {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<'a, T> fmt::Debug for Builder<'a, T> {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^pub struct Builder<'a, T> {$/;"	s
Burst	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    Burst,$/;"	e	enum:MissedTickBehavior
Busy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Busy(JoinHandle<(Operation, Buf)>),$/;"	e	enum:State
Busy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    Busy(sys::Blocking<(io::Result<usize>, Buf, T)>),$/;"	e	enum:State
Busy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    Busy,$/;"	e	enum:TryPopResult
Byte	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    Byte,$/;"	e	enum:PipeMode
ByteArray	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    ByteArray,$/;"	e	enum:Unsupported
ByteBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        ByteBuf(Vec<u8>),$/;"	e	enum:content::Content
Bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        Bytes(Vec<u8>),$/;"	e	enum:capture::BytesOrWide
Bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    Bytes(BytesMut),$/;"	e	enum:AllowHeader
Bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Bytes(&'a [u8]),$/;"	e	enum:Unexpected
Bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Bytes(&'de [u8]),$/;"	e	enum:content::Content
Bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Bytes(Vec<u8>),$/;"	e	enum:content::Content
BytesDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'a, E> BytesDeserializer<'a, E> {$/;"	c
BytesDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'a, E> Debug for BytesDeserializer<'a, E> {$/;"	c
BytesDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, 'a, E> Deserializer<'de> for BytesDeserializer<'a, E>$/;"	c
BytesDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesOrWide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    enum BytesOrWide {$/;"	g	module:capture
BytesOrWide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    impl Debug for BytesOrWide {$/;"	c	module:capture
BytesVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'a> Visitor<'a> for BytesVisitor {$/;"	c
BytesVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
C	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        C,$/;"	e	enum:tests::MyEnum
COUNT	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    static COUNT: AtomicUsize = AtomicUsize::new(0);$/;"	v	function:middleware_still_run_for_unmatched_requests
COUNT	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    static COUNT: AtomicUsize = AtomicUsize::new(0);$/;"	v	function:state_isnt_cloned_too_much
COUNTER	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    static COUNTER: AtomicU32 = AtomicU32::new(1);$/;"	v	module:rand
CStr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for CStr {$/;"	c
CString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for CString {$/;"	c
CString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for CString {$/;"	c
CStringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Visitor<'de> for CStringVisitor {$/;"	c
CStringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CURRENT	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^static CURRENT: TryLock<Option<Runtime>> = TryLock::new(None);$/;"	v
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> CachedPage<T> {$/;"	c
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Default for CachedPage<T> {$/;"	c
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct CachedPage<T> {$/;"	s
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Send for CachedPage<T> {}$/;"	c
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Sync for CachedPage<T> {}$/;"	c
CachedParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl CachedParkThread {$/;"	c
CachedParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^pub(crate) struct CachedParkThread {$/;"	s
Cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    Cancelled,$/;"	e	enum:Repr
Cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Cancelled,$/;"	e	enum:TransitionToIdle
Cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Cancelled,$/;"	e	enum:TransitionToRunning
Capture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    impl Capture {$/;"	c	module:capture
Capture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    struct Capture {$/;"	s	module:capture
Captured	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        Captured(LazilyResolvedCapture),$/;"	e	enum:capture::Inner
Captured	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        Captured,$/;"	e	enum:capture::BacktraceStatus
CarriageReturn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    CarriageReturn,$/;"	e	enum:CharEscape
CastTo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^pub trait CastTo {$/;"	i
Category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^pub enum Category {$/;"	g
Cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Cell<T>$/;"	c
Cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T> Serialize for Cell<T>$/;"	c
Cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl<T: Future, S: Schedule> Cell<T, S> {$/;"	c
Cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) struct Cell<T: Future, S> {$/;"	s
Cfg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^pub(crate) struct Cfg {$/;"	s
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^impl Default for Chain<'_> {$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^impl DoubleEndedIterator for Chain<'_> {$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^impl ExactSizeIterator for Chain<'_> {$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^impl<'a> Chain<'a> {$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^impl<'a> Iterator for Chain<'a> {$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^pub(crate) struct Chain<'a> {$/;"	s
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^pub struct Chain<'a> {$/;"	s
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^impl<T, U> AsyncBufRead for Chain<T, U>$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^impl<T, U> AsyncRead for Chain<T, U>$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^impl<T, U> Chain<T, U>$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^impl<T, U> fmt::Debug for Chain<T, U>$/;"	c
ChainState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^pub(crate) enum ChainState<'a> {$/;"	g
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Chan<T, S> {$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Drop for Chan<T, S> {$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> fmt::Debug for Chan<T, S>$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(super) struct Chan<T, S> {$/;"	s
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^unsafe impl<T: Send, S: Send> Send for Chan<T, S> {}$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^unsafe impl<T: Send, S: Sync> Sync for Chan<T, S> {}$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^struct Chan {$/;"	s
Char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Char(char),$/;"	e	enum:Unexpected
Char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    Char,$/;"	e	enum:Unsupported
CharEscape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl CharEscape {$/;"	c
CharEscape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub enum CharEscape {$/;"	g
CharVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Visitor<'de> for CharVisitor {$/;"	c
CharVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct CharVisitor;$/;"	s
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    Child(ChildDropGuard<imp::Child>),$/;"	e	enum:FusedChild
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct Child {$/;"	s
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Future for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Kill for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl fmt::Debug for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) struct Child {$/;"	s
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl AsRawHandle for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl Future for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl Kill for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl fmt::Debug for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(crate) struct Child {$/;"	s
ChildDropGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl<T, E, F> Future for ChildDropGuard<F>$/;"	c
ChildDropGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl<T: Kill> Drop for ChildDropGuard<T> {$/;"	c
ChildDropGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl<T: Kill> Kill for ChildDropGuard<T> {$/;"	c
ChildDropGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^struct ChildDropGuard<T: Kill> {$/;"	s
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsFd for ChildStderr {$/;"	c	module:sys
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsRawFd for ChildStderr {$/;"	c	module:sys
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl AsyncRead for ChildStderr {$/;"	c
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl ChildStderr {$/;"	c
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl TryInto<Stdio> for ChildStderr {$/;"	c
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct ChildStderr {$/;"	s
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsFd for ChildStdin {$/;"	c	module:sys
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsRawFd for ChildStdin {$/;"	c	module:sys
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl AsyncWrite for ChildStdin {$/;"	c
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl ChildStdin {$/;"	c
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl TryInto<Stdio> for ChildStdin {$/;"	c
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct ChildStdin {$/;"	s
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsFd for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsRawFd for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsyncRead for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsyncWrite for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl fmt::Debug for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) struct ChildStdio {$/;"	s
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl AsRawHandle for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl AsyncRead for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl AsyncWrite for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(crate) struct ChildStdio {$/;"	s
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsFd for ChildStdout {$/;"	c	module:sys
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsRawFd for ChildStdout {$/;"	c	module:sys
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl AsyncRead for ChildStdout {$/;"	c
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl ChildStdout {$/;"	c
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl TryInto<Stdio> for ChildStdout {$/;"	c
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct ChildStdout {$/;"	s
Clear	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    Clear(u8),$/;"	e	enum:Tick
Client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    Client,$/;"	e	enum:PipeEnd
ClientOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl ClientOptions {$/;"	c
ClientOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct ClientOptions {$/;"	s
Close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    Close(Option<CloseFrame<'static>>),$/;"	e	enum:Message
CloseCode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub type CloseCode = u16;$/;"	t
CloseFrame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub struct CloseFrame<'t> {$/;"	s
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    Closed,$/;"	e	enum:TryAcquireError
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Closed,$/;"	e	enum:error::RecvError
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Closed,$/;"	e	enum:error::TryRecvError
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    Closed,$/;"	e	enum:Read
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    Closed(T),$/;"	e	enum:TrySendError
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    Closed,$/;"	e	enum:TryPopResult
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^        Closed,$/;"	e	enum:error::TryRecvError
CombiAbort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiAbort {$/;"	g
CombiAbortSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiAbortSource {$/;"	g
CombiJoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiJoinHandle {$/;"	g
CombiJoinInterest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiJoinInterest {$/;"	g
CombiLocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiLocalSet {$/;"	g
CombiOutput	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiOutput {$/;"	g
CombiRuntime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiRuntime {$/;"	g
CombiTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiTask {$/;"	g
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl Command {$/;"	c
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl From<StdCommand> for Command {$/;"	c
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct Command {$/;"	s
Complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    Complete,$/;"	e	enum:PollFuture
Compound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::SerializeMap for Compound<'a, W, F>$/;"	c
Compound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::SerializeSeq for Compound<'a, W, F>$/;"	c
Compound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::SerializeStruct for Compound<'a, W, F>$/;"	c
Compound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::SerializeStructVariant for Compound<'a, W, F>$/;"	c
Compound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::SerializeTuple for Compound<'a, W, F>$/;"	c
Compound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::SerializeTupleStruct for Compound<'a, W, F>$/;"	c
Compound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::SerializeTupleVariant for Compound<'a, W, F>$/;"	c
Compound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub enum Compound<'a, W: 'a, F: 'a> {$/;"	g
Condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl Condvar {$/;"	c
Condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct Condvar(PhantomData<std::sync::Condvar>, parking_lot::Condvar);$/;"	s
Config	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^pub(crate) struct Config {$/;"	s
ConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^impl<S, T> FromRequestParts<S> for ConnectInfo<T>$/;"	c
ConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^pub struct ConnectInfo<T>(pub T);$/;"	s
Connected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^pub trait Connected<T>: Clone + Send + Sync + 'static {$/;"	i
Consumed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    Consumed,$/;"	e	enum:Stage
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Content(Content<'de>),$/;"	e	enum:content::TagOrContent
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagContentOtherField
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagOrContentField
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> Content<'de> {$/;"	c	module:content
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> Deserialize<'de> for Content<'de> {$/;"	c	module:content
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g	module:content
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl Serialize for Content {$/;"	c	module:content
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub enum Content {$/;"	g	module:content
ContentDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E> {$/;"	c	module:content
ContentDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> de::IntoDeserializer<'de, E> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s	module:content
ContentRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E> {$/;"	c	module:content
ContentRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a, E> Deserializer<'de> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a, E> de::IntoDeserializer<'de, E> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s	module:content
ContentSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> ContentSerializer<E> {$/;"	c	module:content
ContentSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> Serializer for ContentSerializer<E>$/;"	c	module:content
ContentSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s	module:content
ContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> Visitor<'de> for ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s	module:content
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^pub trait Context<T, E>: context::private::Sealed {$/;"	i
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^struct Context {$/;"	s
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^struct Context {$/;"	s
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^struct Context {$/;"	s
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^        struct Context {$/;"	s	function:try_recv
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^struct Context {$/;"	s
ContextError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^impl<C, E> Debug for ContextError<C, E>$/;"	c
ContextError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^impl<C, E> Display for ContextError<C, E>$/;"	c
ContextError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^impl<C, E> StdError for ContextError<C, E>$/;"	c
ContextError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^impl<C> StdError for ContextError<C, Error>$/;"	c
ContextError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^pub(crate) struct ContextError<C, E> {$/;"	s
ControlCharacterWhileParsingString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    ControlCharacterWhileParsingString,$/;"	e	enum:ErrorCode
Copied	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    Copied(&'c T),$/;"	e	enum:Reference
Copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^impl<R, W> Future for Copy<'_, R, W>$/;"	c
Copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^struct Copy<'a, R: ?Sized, W: ?Sized> {$/;"	s
CopyBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^impl<R, W> Future for CopyBuf<'_, R, W>$/;"	c
CopyBuffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^impl CopyBuffer {$/;"	c
CopyBuffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^pub(super) struct CopyBuffer {$/;"	s
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Core {$/;"	c
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^struct Core {$/;"	s
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Core {$/;"	c
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^struct Core {$/;"	s
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl<T: Future, S: Schedule> Core<T, S> {$/;"	c
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) struct Core<T: Future, S> {$/;"	s
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct Core {$/;"	s
CoreGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl CoreGuard<'_> {$/;"	c
CoreGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Drop for CoreGuard<'_> {$/;"	c
CoreGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^struct CoreGuard<'a> {$/;"	s
CoreStage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl<T: Future> CoreStage<T> {$/;"	c
CoreStage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) struct CoreStage<T: Future> {$/;"	s
CountMiddleware	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    impl<R, S> Service<R> for CountMiddleware<S>$/;"	c	function:middleware_still_run_for_unmatched_requests
CountMiddleware	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    struct CountMiddleware<S>(S);$/;"	s	function:middleware_still_run_for_unmatched_requests
Cow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, 'a, T: ?Sized> Deserialize<'de> for Cow<'a, T>$/;"	c
Cow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for Cow<'a, str>$/;"	c
CowBytesVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowBytesVisitor {$/;"	c	function:borrow_cow_bytes
CowBytesVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s	function:borrow_cow_bytes
CowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'a, E> Clone for CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'a, E> CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'a, E> Debug for CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowStrVisitor {$/;"	c	function:borrow_cow_str
CowStrVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s	function:borrow_cow_str
Crud	/home/trey/code/sqlx-crud/src/traits.rs	/^pub trait Crud<'e, E>$/;"	i
CrudFut	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type CrudFut<'e, T> = Pin<Box<dyn Future<Output = Result<T, sqlx::Error>> + Send + 'e>>;$/;"	t
CrudStream	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type CrudStream<'e, T> =$/;"	t
CtrlBreak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlBreak {$/;"	c
CtrlBreak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlBreak {$/;"	s
CtrlC	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlC {$/;"	c
CtrlC	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlC {$/;"	s
CtrlClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlClose {$/;"	c
CtrlClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlClose {$/;"	s
CtrlLogoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlLogoff {$/;"	c
CtrlLogoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlLogoff {$/;"	s
CtrlShutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlShutdown {$/;"	c
CtrlShutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlShutdown {$/;"	s
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    CurrentThread,$/;"	e	enum:Kind
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    CurrentThread(CurrentThread),$/;"	e	enum:Scheduler
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    CurrentThread,$/;"	e	enum:RuntimeFlavor
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl CurrentThread {$/;"	c
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl fmt::Debug for CurrentThread {$/;"	c
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^pub(crate) struct CurrentThread {$/;"	s
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^    CurrentThread(Arc<current_thread::Handle>),$/;"	e	enum:Handle
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    CurrentThread,$/;"	e	enum:CombiRuntime
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl<T: AsRef<[u8]> + Unpin> AsyncBufRead for io::Cursor<T> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl<T: AsRef<[u8]> + Unpin> AsyncRead for io::Cursor<T> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^impl<T: AsRef<[u8]> + Unpin> AsyncSeek for io::Cursor<T> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for io::Cursor<&mut Vec<u8>> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for io::Cursor<&mut [u8]> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for io::Cursor<Box<[u8]>> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for io::Cursor<Vec<u8>> {$/;"	c
DID_SPAWN	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    static DID_SPAWN: AtomicBool = AtomicBool::new(false);$/;"	v	function:spawn_during_shutdown
Data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    type Data = Bytes;$/;"	t
Data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    type Data = Bytes;$/;"	t
Data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    Data,$/;"	e	enum:Category
Dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    Dealloc,$/;"	e	enum:PollFuture
Dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Dealloc,$/;"	e	enum:TransitionToNotifiedByVal
Dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Dealloc,$/;"	e	enum:TransitionToRunning
Default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    Default(Route<B, E>),$/;"	e	enum:Fallback
DefaultOnFailedUpdgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl OnFailedUpdgrade for DefaultOnFailedUpdgrade {$/;"	c
DefaultOnFailedUpdgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub struct DefaultOnFailedUpdgrade;$/;"	s
Defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^impl Defer {$/;"	c
Defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^pub(crate) struct Defer {$/;"	s
Delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    Delay,$/;"	e	enum:MissedTickBehavior
Deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for ! {$/;"	c
Deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for () {$/;"	c
Deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	i
DeserializeOwned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	i
DeserializeSeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	i
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IntoDeserializer
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	i
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Deserializer = Self;$/;"	t	module:content
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    type Deserializer = <u64 as IntoDeserializer<'de, E>>::Deserializer;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    type Deserializer = BorrowedBytesDeserializer<'de, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    type Deserializer = BorrowedStrDeserializer<'de, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IdentifierDeserializer
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'a> Deserializer<read::SliceRead<'a>> {$/;"	c
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'a> Deserializer<read::StrRead<'a>> {$/;"	c
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, 'a, R: Read<'de>> de::Deserializer<'de> for &'a mut Deserializer<R> {$/;"	c
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, R: Read<'de>> Deserializer<R> {$/;"	c
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, R> Deserializer<R>$/;"	c
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<R> Deserializer<read::IoRead<R>>$/;"	c
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^pub struct Deserializer<R> {$/;"	s
Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Deserializer = Self;$/;"	t	implementation:Value
DirBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^impl DirBuilder {$/;"	c
DirBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^pub struct DirBuilder {$/;"	s
DirEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^impl DirEntry {$/;"	c
DirEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^pub struct DirEntry {$/;"	s
Direction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^enum Direction {$/;"	g
Direction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl Direction {$/;"	c
Disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        Disabled,$/;"	e	enum:capture::BacktraceStatus
Disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        Disabled,$/;"	e	enum:capture::Inner
Disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^    Disabled,$/;"	e	enum:Handle
Disconnected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    Disconnected,$/;"	e	enum:TryRecvError
DisplayError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl<M> Debug for DisplayError<M>$/;"	c
DisplayError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl<M> Display for DisplayError<M>$/;"	c
DisplayError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl<M> StdError for DisplayError<M> where M: Display + 'static {}$/;"	c
DisplayError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^pub struct DisplayError<M>(pub M);$/;"	s
DoNothing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    DoNothing,$/;"	e	enum:TransitionToNotifiedByRef
DoNothing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    DoNothing,$/;"	e	enum:TransitionToNotifiedByVal
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    Done(Fut::Output),$/;"	e	enum:MaybeDone
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^    Done(u64),$/;"	e	enum:TransferState
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    Done(ExitStatus),$/;"	e	enum:FusedChild
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    Done,$/;"	e	enum:PollFuture
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    Done,$/;"	e	enum:State
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^pub(crate) struct Driver {$/;"	s
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl fmt::Debug for Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^pub(crate) struct Driver {$/;"	s
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^pub(crate) struct Driver {$/;"	s
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^pub(crate) struct Driver {$/;"	s
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^pub(crate) struct Driver {$/;"	s
DropAfterConsume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    DropAfterConsume = 4,$/;"	e	enum:CombiJoinHandle
DropAfterNoConsume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    DropAfterNoConsume = 3,$/;"	e	enum:CombiJoinHandle
DropFirstPoll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    DropFirstPoll = 2,$/;"	e	enum:CombiJoinHandle
DropImmediately	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    DropImmediately = 1,$/;"	e	enum:CombiJoinHandle
DuplexStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl AsyncRead for DuplexStream {$/;"	c
DuplexStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl AsyncWrite for DuplexStream {$/;"	c
DuplexStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl Drop for DuplexStream {$/;"	c
DuplexStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^pub struct DuplexStream {$/;"	s
Duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for Duration {$/;"	c
Duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for Duration {$/;"	c
DurationVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:Duration::deserialize
DurationVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:SystemTime::deserialize
DurationVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:Duration::deserialize
DurationVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:SystemTime::deserialize
E	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    impl<E> StdError for E$/;"	c	module:ext
E	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^impl<E> TraitKind for E where E: Into<Error> {}$/;"	c
ENABLED	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^            static ENABLED: AtomicUsize = AtomicUsize::new(0);$/;"	v	method:capture::Backtrace::enabled
ESCAPE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^static ESCAPE: [bool; 256] = {$/;"	v
ESCAPE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^static ESCAPE: [u8; 256] = [$/;"	v	method:Formatter::write_char_escape
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    Elapsed,$/;"	e	enum:InsertError
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl Elapsed {$/;"	c
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl fmt::Display for Elapsed {$/;"	c
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl std::error::Error for Elapsed {}$/;"	c
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^pub struct Elapsed(());$/;"	s
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    Empty,$/;"	e	enum:State
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^impl AsyncBufRead for Empty {$/;"	c
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^impl AsyncRead for Empty {$/;"	c
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^impl fmt::Debug for Empty {$/;"	c
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Empty,$/;"	e	enum:error::TryRecvError
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    Empty,$/;"	e	enum:TryRecvError
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    Empty,$/;"	e	enum:TryPopResult
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^        Empty,$/;"	e	enum:error::TryRecvError
EmptyStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    type EmptyStream = StreamBody<Empty<Result<Bytes, BoxError>>>;$/;"	t	function:stream_body_traits
Encode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/utf8.rs	/^impl Encode {$/;"	c
Encode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/utf8.rs	/^pub struct Encode {$/;"	s
End	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        End,$/;"	e	enum:range::Field
Endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^enum Endpoint<S, B> {$/;"	g
Endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B> Clone for Endpoint<S, B> {$/;"	c
Endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B> Endpoint<S, B>$/;"	c
Endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B> fmt::Debug for Endpoint<S, B> {$/;"	c
EnterGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^pub struct EnterGuard<'a> {$/;"	s
Entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl<'a> Entry<'a> {$/;"	c
Entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub enum Entry<'a> {$/;"	g
Entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    struct Entry {$/;"	s	module:tests
Entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    unsafe impl<'a> Link for &'a Entry {$/;"	c	module:tests
Entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) trait Entry: Default {$/;"	i
EntryInOneOfTheLists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^impl<'a, T> EntryInOneOfTheLists<'a, T> {$/;"	c
EntryInOneOfTheLists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^pub(crate) struct EntryInOneOfTheLists<'a, T> {$/;"	s
EntryList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(super) type EntryList = crate::util::linked_list::LinkedList<TimerShared, TimerShared>;$/;"	t
Enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Enum,$/;"	e	enum:Unexpected
Enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    Enum,$/;"	e	enum:Unsupported
EnumAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	i
EnumAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for EnumAccessDeserializer<A>$/;"	c
EnumAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<A> EnumAccessDeserializer<A> {$/;"	c
EnumAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct EnumAccessDeserializer<A> {$/;"	s
EnumDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^impl<'de> EnumAccess<'de> for EnumDeserializer {$/;"	c
EnumDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^struct EnumDeserializer {$/;"	s
EnumDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> de::EnumAccess<'de> for EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s	module:content
EnumDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> EnumAccess<'de> for EnumDeserializer {$/;"	c
EnumDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct EnumDeserializer {$/;"	s
EnumRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a, E> de::EnumAccess<'de> for EnumRefDeserializer<'a, 'de, E>$/;"	c	module:content
EnumRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
EnumRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> EnumAccess<'de> for EnumRefDeserializer<'de> {$/;"	c
EnumRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct EnumRefDeserializer<'de> {$/;"	s
Eof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    Eof,$/;"	e	enum:Category
EofWhileParsingList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    EofWhileParsingList,$/;"	e	enum:ErrorCode
EofWhileParsingObject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    EofWhileParsingObject,$/;"	e	enum:ErrorCode
EofWhileParsingString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    EofWhileParsingString,$/;"	e	enum:ErrorCode
EofWhileParsingValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    EofWhileParsingValue,$/;"	e	enum:ErrorCode
ErasedIntoRoute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^pub(crate) trait ErasedIntoRoute<S, B, E>: Send {$/;"	i
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Err,$/;"	e	enum:deserialize::Field
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Err = Error;$/;"	t	implementation:Number
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Err = Error;$/;"	t	implementation:Value
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    impl StdError for Error {$/;"	c	module:ext
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl AsRef<dyn StdError + Send + Sync> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl AsRef<dyn StdError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl Debug for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl Deref for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl DerefMut for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl Drop for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl std::any::Provider for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl<E> From<E> for Error$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^pub struct Error {$/;"	s
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    type Error = Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    type Error = S::Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^            type Error = PathDeserializationError;$/;"	t	implementation:ValueDeserializer::deserialize_tuple::PairDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    type Error = PathDeserializationError;$/;"	t	implementation:EnumDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    type Error = PathDeserializationError;$/;"	t	implementation:KeyDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    type Error = PathDeserializationError;$/;"	t	implementation:MapDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    type Error = PathDeserializationError;$/;"	t	implementation:PathDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    type Error = PathDeserializationError;$/;"	t	implementation:SeqDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    type Error = PathDeserializationError;$/;"	t	implementation:UnitVariant
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    type Error = PathDeserializationError;$/;"	t	implementation:ValueDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    type Error = Error;$/;"	t	implementation:WebSocket
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    type Error = T::Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    type Error = Infallible;$/;"	t	implementation:Next
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    type Error = E;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^    type Error = NoMatchingMethodFilter;$/;"	t	implementation:MethodFilter
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    type Error = E;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/not_found.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    type Error = E;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    type Error = S::Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^    type Error = hyper::Error;$/;"	t	implementation:Svc
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        type Error = Infallible;$/;"	t	implementation:wrong_method_service::Svc
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        type Error = S::Error;$/;"	t	function:middleware_still_run_for_unmatched_requests
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^        type Error = S::Error;$/;"	t	function:outer_middleware_still_see_whole_url
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    Error(headers::Error),$/;"	e	enum:TypedHeaderRejectionReason
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    type Error = Infallible;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Error = A::Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:Deserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:EnumAccess
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:MapAccess
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:SeqAccess
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:VariantAccess
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        type Error = A::Error;$/;"	t	module:private
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        type Error = E;$/;"	t	module:private
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Error = A::Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Error = E;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl Debug for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl de::Error for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl error::Error for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Error = E;$/;"	t	function:missing_field
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    type Error = E;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^impl Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^impl error::Error for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^pub struct Error;$/;"	s
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type Error = M::Error;$/;"	t	module:content
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type Error = M::Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type Error = S::Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type Error = fmt::Error;$/;"	t	implementation:Formatter
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^impl Error for fmt::Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    type Error = Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeMap
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeSeq
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStruct
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStructVariant
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTuple
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleStruct
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleVariant
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:Serializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/std_error.rs	/^pub trait Error: Debug + Display {$/;"	i
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Error = Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Error = Error;$/;"	t	implementation:Deserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Error = Error;$/;"	t	implementation:MapAccess
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Error = Error;$/;"	t	implementation:SeqAccess
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Error = Error;$/;"	t	implementation:UnitVariantAccess
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Error = Error;$/;"	t	implementation:VariantAccess
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl Debug for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl From<Error> for io::Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl de::Error for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl serde::de::StdError for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^impl Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^impl Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^pub struct Error;$/;"	s
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    type Error = Error;$/;"	t	implementation:Number
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    type Error = Error;$/;"	t	implementation:NumberDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    type Error = Error;$/;"	t	implementation:NumberFieldDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    type Error = Error;$/;"	t	implementation:BorrowedRawDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    type Error = Error;$/;"	t	implementation:OwnedRawDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    type Error = Error;$/;"	t	implementation:RawKeyDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type Error = Error;$/;"	t
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:NumberStrEmitter
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:RawValueStrEmitter
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:BorrowedCowStrDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:EnumDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:EnumRefDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:MapDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:MapKeyDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:MapRefDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:SeqDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:SeqRefDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:UnitOnly
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:Value
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:VariantDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Error = Error;$/;"	t	implementation:VariantRefDeserializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:MapKeySerializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:NumberValueEmitter
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:RawValueEmitter
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:SerializeMap
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:SerializeStructVariant
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:SerializeTupleVariant
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:SerializeVec
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Error = Error;$/;"	t	implementation:Serializer
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    type Error = io::Error;$/;"	t	implementation:TcpListener
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    type Error = io::Error;$/;"	t	implementation:TcpStream
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    type Error = io::Error;$/;"	t	implementation:UdpSocket
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    type Error = io::Error;$/;"	t	implementation:UnixDatagram
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    type Error = io::Error;$/;"	t	implementation:UnixListener
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    type Error = io::Error;$/;"	t	implementation:UnixStream
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    type Error = io::Error;$/;"	t	implementation:ChildStderr
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    type Error = io::Error;$/;"	t	implementation:ChildStdin
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    type Error = io::Error;$/;"	t	implementation:ChildStdout
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl From<SpawnError> for io::Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl From<JoinError> for io::Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl From<Elapsed> for std::io::Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl From<Kind> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl error::Error for Error {}$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^pub struct Error(Kind);$/;"	s
ErrorCode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl Display for ErrorCode {$/;"	c
ErrorCode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^pub(crate) enum ErrorCode {$/;"	g
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl ErrorImpl {$/;"	c
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl<E> Debug for ErrorImpl<E>$/;"	c
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl<E> Display for ErrorImpl<E>$/;"	c
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl<E> ErrorImpl<E> {$/;"	c
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^impl<E> StdError for ErrorImpl<E>$/;"	c
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^pub(crate) struct ErrorImpl<E = ()> {$/;"	s
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^impl ErrorImpl {$/;"	c
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^type ErrorImpl = ();$/;"	t
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	t
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^impl Display for ErrorImpl {$/;"	c
ErrorImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^struct ErrorImpl {$/;"	s
ErrorKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl fmt::Display for ErrorKind {$/;"	c
ErrorKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^pub enum ErrorKind {$/;"	g
ErrorKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^pub enum ErrorKind {$/;"	g
ErrorVTable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    *(p.as_ptr() as *const &'static ErrorVTable)$/;"	v	function:vtable
ErrorVTable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^struct ErrorVTable {$/;"	s
Event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl Event {$/;"	c
Event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^pub struct Event {$/;"	s
EventId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) type EventId = usize;$/;"	t
EventInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl Default for EventInfo {$/;"	c
EventInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) struct EventInfo {$/;"	s
Excluded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Excluded,$/;"	e	enum:deserialize::Field
Expected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait Expected {$/;"	i
ExpectedColon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    ExpectedColon,$/;"	e	enum:ErrorCode
ExpectedInMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl Expected for ExpectedInMap {$/;"	c
ExpectedInMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl Expected for ExpectedInSeq {$/;"	c
ExpectedInSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
ExpectedListCommaOrEnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    ExpectedListCommaOrEnd,$/;"	e	enum:ErrorCode
ExpectedObjectCommaOrEnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    ExpectedObjectCommaOrEnd,$/;"	e	enum:ErrorCode
ExpectedSomeIdent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    ExpectedSomeIdent,$/;"	e	enum:ErrorCode
ExpectedSomeValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    ExpectedSomeValue,$/;"	e	enum:ErrorCode
Expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^pub(crate) struct Expiration {$/;"	s
Ext	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^        struct Ext;$/;"	s	function:tests::extract_request_parts
ExtendedFloat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^impl ModeratePathCache for ExtendedFloat {$/;"	c
ExtendedFloat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^impl ExtendedFloat {$/;"	c
ExtendedFloat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^pub(crate) struct ExtendedFloat {$/;"	s
ExtendedFloatArray	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^impl ExtendedFloatArray {$/;"	c
ExtendedFloatArray	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^pub(crate) struct ExtendedFloatArray {$/;"	s
Extension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^impl<S, T> tower_layer::Layer<S> for Extension<T>$/;"	c
Extension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^impl<T, S> FromRequestParts<S> for Extension<T>$/;"	c
Extension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^impl<T> IntoResponse for Extension<T>$/;"	c
Extension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^impl<T> IntoResponseParts for Extension<T>$/;"	c
Extension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^pub struct Extension<T>(pub T);$/;"	s
F	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<F, B, E, B2, E2> LayerFn<B, E, B2, E2> for F$/;"	c
F	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl<F> OnFailedUpdgrade for F$/;"	c
F	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^impl<F, Fut, Res, S, B> Handler<((),), S, B> for F$/;"	c
F32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        F32(f32),$/;"	e	enum:content::Content
F32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        F32(f32),$/;"	e	enum:content::Content
F64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        F64(f64),$/;"	e	enum:content::Content
F64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        F64(f64),$/;"	e	enum:content::Content
F64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    F64(f64),$/;"	e	enum:ParserNumber
Failed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Failed,$/;"	e	enum:TransitionToRunning
FailedToDeserializePathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl FailedToDeserializePathParams {$/;"	c
FailedToDeserializePathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl IntoResponse for FailedToDeserializePathParams {$/;"	c
FailedToDeserializePathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl fmt::Display for FailedToDeserializePathParams {$/;"	c
FailedToDeserializePathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl std::error::Error for FailedToDeserializePathParams {}$/;"	c
FailedToDeserializePathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^pub struct FailedToDeserializePathParams(PathDeserializationError);$/;"	s
Fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^enum Fallback<S, B, E = Infallible> {$/;"	g
Fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B, E> Clone for Fallback<S, B, E> {$/;"	c
Fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B, E> Fallback<S, B, E>$/;"	c
Fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B, E> fmt::Debug for Fallback<S, B, E> {$/;"	c
FastRand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^impl FastRand {$/;"	c
FastRand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^pub(crate) struct FastRand {$/;"	s
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^impl<'a> Field<'a> {$/;"	c
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^impl<'a> Stream for Field<'a> {$/;"	c
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^pub struct Field<'a> {$/;"	s
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        enum Field {$/;"	g	function:deserialize
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        enum Field {$/;"	g	method:Duration::deserialize
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        enum Field {$/;"	g	method:SystemTime::deserialize
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	function:deserialize
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:Duration::deserialize
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:SystemTime::deserialize
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    enum Field {$/;"	g	module:range
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    impl<'de> Deserialize<'de> for Field {$/;"	c	module:range
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:deserialize::Field::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:deserialize::Field::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:range::Field::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s	method:range::Field::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^        impl<'de> de::Visitor<'de> for FieldVisitor {$/;"	c	method:NumberKey::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^        struct FieldVisitor;$/;"	s	method:NumberKey::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^        impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:RawKey::deserialize
FieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^        struct FieldVisitor;$/;"	s	method:RawKey::deserialize
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl AsyncRead for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl AsyncSeek for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl AsyncWrite for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl From<StdFile> for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl fmt::Debug for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl std::os::unix::io::AsFd for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl std::os::unix::io::AsRawFd for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl std::os::unix::io::FromRawFd for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^pub struct File {$/;"	s
FillBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/fill_buf.rs	/^impl<'a, R: AsyncBufRead + ?Sized + Unpin> Future for FillBuf<'a, R> {$/;"	c
Finished	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    Finished(super::Result<T::Output>),$/;"	e	enum:Stage
First	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    First(T),$/;"	e	enum:Item
First	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        type First = A;$/;"	t	implementation:private::B
First	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        type First;$/;"	t	interface:private::Pair
First	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	t	module:private
First	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    First,$/;"	e	enum:State
FlatInternallyTaggedAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatInternallyTaggedAccess<'a, 'de, E>$/;"	c
FlatInternallyTaggedAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, 'de, E> FlatMapAccess<'a, 'de, E> {$/;"	c
FlatMapAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatMapAccess<'a, 'de, E>$/;"	c
FlatMapAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, 'de, E> Deserializer<'de> for FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, 'de, E> FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl<'a, M> ser::SerializeMap for FlatMapSerializeMap<'a, M>$/;"	c
FlatMapSerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl<'a, M> ser::SerializeStruct for FlatMapSerializeStruct<'a, M>$/;"	c
FlatMapSerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl<'a, M> FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl<'a, M> ser::SerializeStructVariant for FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl<'a, M> FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl<'a, M> Serializer for FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, 'de, E> FlatStructAccess<'a, 'de, E> {$/;"	c
FlatStructAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatStructAccess<'a, 'de, E>$/;"	c
FlatStructAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
Float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Float(f64),$/;"	e	enum:Unexpected
Float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    Float,$/;"	e	enum:Unsupported
Float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^pub trait Float: Number {$/;"	i
Float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    Float(f64),$/;"	e	enum:N
FloatErrors	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^pub(crate) trait FloatErrors {$/;"	i
Flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/flush.rs	/^impl<A> Future for Flush<'_, A>$/;"	c
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    struct Foo {$/;"	s	module:tests
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    struct Foo {$/;"	s	function:assert_no_stack_overflow
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    impl Default for Foo {$/;"	c	module:test
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    impl Entry for Foo {$/;"	c	module:test
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    struct Foo {$/;"	s	module:test
Form	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^impl<T, S, B> FromRequest<S, B> for Form<T>$/;"	c
Form	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^impl<T> IntoResponse for Form<T>$/;"	c
Form	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^pub struct Form<T>(pub T);$/;"	s
FormFeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    FormFeed,$/;"	e	enum:CharEscape
Formatter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^impl<'a, 'b> Serializer for &'a mut fmt::Formatter<'b> {$/;"	c
Formatter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub trait Formatter {$/;"	i
FromExtractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^impl<T, E, B, S> Service<Request<B>> for FromExtractor<T, E, S>$/;"	c
FromExtractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^impl<T, E, S> Clone for FromExtractor<T, E, S>$/;"	c
FromExtractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^impl<T, E, S> fmt::Debug for FromExtractor<T, E, S>$/;"	c
FromExtractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^pub struct FromExtractor<T, E, S> {$/;"	s
FromExtractorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^impl<E, S> Clone for FromExtractorLayer<E, S>$/;"	c
FromExtractorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^impl<E, S> fmt::Debug for FromExtractorLayer<E, S>$/;"	c
FromExtractorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^impl<E, T, S> Layer<T> for FromExtractorLayer<E, S>$/;"	c
FromExtractorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^pub struct FromExtractorLayer<E, S> {$/;"	s
FromFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<F, S, I, T> Clone for FromFn<F, S, I, T>$/;"	c
FromFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<F, S, I, T> fmt::Debug for FromFn<F, S, I, T>$/;"	c
FromFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^pub struct FromFn<F, S, I, T> {$/;"	s
FromFnLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<F, S, T> Clone for FromFnLayer<F, S, T>$/;"	c
FromFnLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<F, S, T> fmt::Debug for FromFnLayer<F, S, T>$/;"	c
FromFnLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<S, I, F, T> Layer<I> for FromFnLayer<F, S, T>$/;"	c
FromFnLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^pub struct FromFnLayer<F, S, T> {$/;"	s
FromRawHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait FromRawHandle {$/;"	i	module:windows::io
FromRawSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait FromRawSocket {$/;"	i	module:windows::io
FromStrVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for FromStrVisitor<T>$/;"	c
FromStrVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<T> FromStrVisitor<T> {$/;"	c
FromStrVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct FromStrVisitor<T> {$/;"	s
Full	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    Full(T),$/;"	e	enum:TrySendError
Fused	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^pub trait Fused: private::Sealed {}$/;"	i
FusedChild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^enum FusedChild {$/;"	g
FutWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl<F: Future> Future for FutWrapper<F> {$/;"	c	function:test_combination
FutWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl<F> Drop for FutWrapper<F> {$/;"	c	function:test_combination
FutWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    struct FutWrapper<F> {$/;"	s	function:test_combination
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    type Future = future::HandleErrorFuture;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    type Future = S::Future;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    type Future = ResponseFuture<S, C>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    type Future = super::future::IntoServiceFuture<H::Future>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    type Future = Pin<Box<dyn Future<Output = Response> + Send>>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    type Future = future::LayeredFuture<B2, L::Service>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    type Future: Future<Output = Response> + Send + 'static;$/;"	t	interface:Handler
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    type Future = super::future::IntoServiceFuture<H::Future>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    type Future = ResponseFuture<B, T, E, S>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>> + Send>>;$/;"	t	implementation:Next
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^    type Future = IntoMakeServiceFuture<S>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    type Future = InfallibleRouteFuture<B>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    type Future = RouteFuture<B, E>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    type Future = RouteFuture<B, Infallible>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/not_found.rs	/^    type Future = std::future::Ready<Result<Response, Self::Error>>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    type Future = RouteFuture<B, E>;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    type Future = S::Future;$/;"	t
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^    type Future = Ready<Result<Self::Response, Self::Error>>;$/;"	t	implementation:Svc
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        type Future = Ready<Result<Self::Response, Self::Error>>;$/;"	t	implementation:wrong_method_service::Svc
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        type Future = S::Future;$/;"	t	function:middleware_still_run_for_unmatched_requests
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^        type Future = S::Future;$/;"	t	function:outer_middleware_still_see_whole_url
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    Future(Fut),$/;"	e	enum:MaybeDone
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^        type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;$/;"	t	interface:sealed::ToSocketAddrsPriv
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = ReadyFuture<Self::Iter>;$/;"	t	implementation:SocketAddr
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = ReadyFuture<Self::Iter>;$/;"	t	implementation:SocketAddrV4
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = ReadyFuture<Self::Iter>;$/;"	t	implementation:SocketAddrV6
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = ReadyFuture<Self::Iter>;$/;"	t	implementation:u16
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = T::Future;$/;"	t
GLOBALS	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    static GLOBALS: OnceCell<Globals> = OnceCell::new();$/;"	v	function:globals
GlobalOrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl GlobalOrphanQueue {$/;"	c
GlobalOrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl OrphanQueue<StdChild> for GlobalOrphanQueue {$/;"	c
GlobalOrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl fmt::Debug for GlobalOrphanQueue {$/;"	c
GlobalOrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) struct GlobalOrphanQueue;$/;"	s
Globals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl Globals {$/;"	c
Globals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl ops::Deref for Globals {$/;"	c
Globals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) struct Globals {$/;"	s
Gone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    Gone,$/;"	e	enum:MaybeDone
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> Drop for Guard<'_, T> {$/;"	c
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> Guard<'_, T> {$/;"	c
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^struct Guard<'a, T> {$/;"	s
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^        impl<'a, T: Future, S: Schedule> Drop for Guard<'a, T, S> {$/;"	c	function:poll_future
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^        struct Guard<'a, T: Future, S: Schedule> {$/;"	s	function:poll_future
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^        impl<'a, T: 'static> Drop for Guard<'a, T> {$/;"	c	method:LocalKey::scope_inner
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^        struct Guard<'a, T: 'static> {$/;"	s	method:LocalKey::scope_inner
GuardedWaitList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^type GuardedWaitList = GuardedLinkedList<Waiter, <Waiter as linked_list::Link>::Target>;$/;"	t
H	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^impl<H, T, B> HandlerWithoutStateExt<T, B> for H$/;"	c
HEX	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^static HEX: [u8; 256] = {$/;"	v
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^pub struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl fmt::Debug for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Wake for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl fmt::Debug for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^pub(crate) enum Handle {$/;"	g
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^impl fmt::Debug for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    type Handle = Task<S>;$/;"	t	implementation:Task
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    type Handle = TimerHandle;$/;"	t	implementation:TimerShared
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^impl fmt::Debug for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    type Handle = NonNull<Waiter>;$/;"	t	implementation:Waiter
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    type Handle = NonNull<Waiter>;$/;"	t	implementation:Waiter
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    type Handle = NonNull<Waiter>;$/;"	t	implementation:Waiter
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    type Handle = Arc<ListEntry<T>>;$/;"	t	implementation:ListEntry
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        type Handle = Pin<&'a Entry>;$/;"	t	implementation:tests::Entry
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    type Handle;$/;"	t	interface:Link
HandleError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^impl<S, F, B, Fut, Res> Service<Request<B>> for HandleError<S, F, ()>$/;"	c
HandleError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^impl<S, F, E> fmt::Debug for HandleError<S, F, E>$/;"	c
HandleError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^impl<S, F, T> Clone for HandleError<S, F, T>$/;"	c
HandleError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^impl<S, F, T> HandleError<S, F, T> {$/;"	c
HandleError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^pub struct HandleError<S, F, T> {$/;"	s
HandleErrorFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    impl Future for HandleErrorFuture {$/;"	c	module:future
HandleErrorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^impl<F, E> fmt::Debug for HandleErrorLayer<F, E> {$/;"	c
HandleErrorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^impl<F, T> Clone for HandleErrorLayer<F, T>$/;"	c
HandleErrorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^impl<F, T> HandleErrorLayer<F, T> {$/;"	c
HandleErrorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^impl<S, F, T> Layer<S> for HandleErrorLayer<F, T>$/;"	c
HandleErrorLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^pub struct HandleErrorLayer<F, T> {$/;"	s
Handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^pub trait Handler<T, S, B = Body>: Clone + Send + Sized + 'static {$/;"	i
HandlerService	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^impl<H, T, S, B> Clone for HandlerService<H, T, S, B>$/;"	c
HandlerService	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^impl<H, T, S, B> HandlerService<H, T, S, B> {$/;"	c
HandlerService	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^impl<H, T, S, B> Service<Request<B>> for HandlerService<H, T, S, B>$/;"	c
HandlerService	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^impl<H, T, S, B> fmt::Debug for HandlerService<H, T, S, B> {$/;"	c
HandlerService	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^pub struct HandlerService<H, T, S, B> {$/;"	s
HandlerWithoutStateExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^pub trait HandlerWithoutStateExt<T, B>: Handler<T, (), B> {$/;"	i
Harness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^impl<T, S> Harness<T, S>$/;"	c
Harness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^pub(super) struct Harness<T: Future, S: 'static> {$/;"	s
HashMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, K, V, S, E> IntoDeserializer<'de, E> for HashMap<K, V, S>$/;"	c
HashSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, T, S, E> IntoDeserializer<'de, E> for HashSet<T, S>$/;"	c
Header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl Header {$/;"	c
Header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(crate) struct Header {$/;"	s
Header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^unsafe impl Send for Header {}$/;"	c
Header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^unsafe impl Sync for Header {}$/;"	c
Hi64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^trait Hi64<T>: AsRef<[T]> {$/;"	i
Host	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^impl<S> FromRequestParts<S> for Host$/;"	c
Host	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^pub struct Host(pub String);$/;"	s
Html	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^impl<T> From<T> for Html<T> {$/;"	c
Html	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^impl<T> IntoResponse for Html<T>$/;"	c
Html	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^pub struct Html<T>(pub T);$/;"	s
I16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        I16(i16),$/;"	e	enum:content::Content
I16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        I16(i16),$/;"	e	enum:content::Content
I32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        I32(i32),$/;"	e	enum:content::Content
I32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        I32(i32),$/;"	e	enum:content::Content
I64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        I64(i64),$/;"	e	enum:content::Content
I64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        I64(i64),$/;"	e	enum:content::Content
I64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    I64(i64),$/;"	e	enum:ParserNumber
I8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        I8(i8),$/;"	e	enum:content::Content
I8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        I8(i8),$/;"	e	enum:content::Content
INIT	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    static INIT: Once = Once::new();$/;"	v	function:global_init
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^impl Id {$/;"	c
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^impl fmt::Display for Id {$/;"	c
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^pub struct Id(u64);$/;"	s
Id	/home/trey/code/sqlx-crud/src/traits.rs	/^    type Id: Copy + Send + Sync;$/;"	t	interface:Schema
IdentifierDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	i
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Idle(Option<Buf>),$/;"	e	enum:State
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    Idle(Option<(VecDeque<io::Result<DirEntry>>, StdReadDir)>),$/;"	e	enum:State
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    Idle(Option<Buf>),$/;"	e	enum:State
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl Idle {$/;"	c
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^pub(super) struct Idle {$/;"	s
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    Idle,$/;"	e	enum:List
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^impl<T> Drop for IdleNotifiedSet<T> {$/;"	c
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^impl<T> IdleNotifiedSet<T> {$/;"	c
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^pub(crate) struct IdleNotifiedSet<T> {$/;"	s
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T: Send> Send for IdleNotifiedSet<T> {}$/;"	c
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T: Sync> Sync for IdleNotifiedSet<T> {}$/;"	c
Idx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    Idx { idx: usize, key: Arc<str> },$/;"	e	enum:KeyOrIdx
IgnoredAny	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^impl<'de> Deserialize<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^impl<'de> Visitor<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
Impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^impl<Ok, Error> SerializeMap for Impossible<Ok, Error>$/;"	c
Impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^impl<Ok, Error> SerializeSeq for Impossible<Ok, Error>$/;"	c
Impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStructVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTuple for Impossible<Ok, Error>$/;"	c
Impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InPlaceSeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/seed.rs	/^impl<'a, 'de, T> DeserializeSeed<'de> for InPlaceSeed<'a, T>$/;"	c
InPlaceSeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/seed.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
Included	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Included,$/;"	e	enum:deserialize::Field
Indented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^impl<T> Write for Indented<'_, T>$/;"	c
Indented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^struct Indented<'a, D> {$/;"	s
Index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^pub trait Index: private::Sealed {$/;"	i
InfallibleRouteFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^impl<B> Future for InfallibleRouteFuture<B>$/;"	c
InfallibleRouteFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^impl<B> InfallibleRouteFuture<B> {$/;"	c
Init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    Init,$/;"	e	enum:SeekState
Init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    Init,$/;"	e	enum:SeekState
Init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) trait Init {$/;"	i
Init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    Init,$/;"	e	enum:State
InitializingError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    InitializingError(T),$/;"	e	enum:SetError
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^impl<T: 'static> Drop for Inject<T> {$/;"	c
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^impl<T: 'static> Inject<T> {$/;"	c
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^pub(crate) struct Inject<T: 'static> {$/;"	s
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^unsafe impl<T> Send for Inject<T> {}$/;"	c
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^unsafe impl<T> Sync for Inject<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    enum Inner {$/;"	g	module:capture
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^struct Inner<T> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^pub(crate) struct Inner<T: 'static> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^unsafe impl<T> Send for Inner<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^unsafe impl<T> Sync for Inner<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^impl fmt::Debug for Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T: fmt::Debug> fmt::Debug for Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Drop for Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^unsafe impl<T: Send> Send for Inner<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^unsafe impl<T: Send> Sync for Inner<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^struct Inner<T: ?Sized, U: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^struct Inner<T: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^struct Inner<T: ?Sized, U: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^struct Inner<'a, T: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^struct Inner<'a, T: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^struct Inner<'a, T: ?Sized> {$/;"	s
InnerState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    impl FromRef<AppState> for InnerState {$/;"	c	function:extract_state
InnerState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    struct InnerState {$/;"	s	function:extract_state
InnerState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^struct InnerState {$/;"	s
Input	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^        struct Input {$/;"	s	function:tests::consume_body_to_json_requires_json_content_type
Input	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^        struct Input {$/;"	s	function:tests::deserialize_body
InsertError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^pub(crate) enum InsertError {$/;"	g
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl From<Instant> for std::time::Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl From<std::time::Instant> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl fmt::Debug for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::Add<Duration> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::AddAssign<Duration> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::Sub for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::Sub<Duration> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::SubAssign<Duration> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^pub struct Instant {$/;"	s
Instrumented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/trace.rs	/^impl<F: Future> InstrumentedFuture for tracing::instrument::Instrumented<F> {$/;"	c
InstrumentedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/trace.rs	/^pub(crate) trait InstrumentedFuture: Future {$/;"	i
Integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    Integer,$/;"	e	enum:Unsupported
Integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^pub trait Integer: Number + ops::BitAnd<Output = Self> + ops::Shr<i32, Output = Self> {$/;"	i
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^impl Interest {$/;"	c
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^impl fmt::Debug for Interest {$/;"	c
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^impl ops::BitOr for Interest {$/;"	c
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^impl ops::BitOrAssign for Interest {$/;"	c
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^pub struct Interest(mio::Interest);$/;"	s
Internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    pub struct Internal;$/;"	s	module:sealed
InternalStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) trait InternalStream {$/;"	i
InternallyTaggedUnitVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'a> InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s	module:content
Interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^impl Interval {$/;"	c
Interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^pub struct Interval {$/;"	s
IntoDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	i
IntoDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for !$/;"	c
IntoDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for ()$/;"	c
IntoIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    type IntoIter = RawPathParamsIter<'a>;$/;"	t	implementation:RawPathParams
IntoIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    type IntoIter = IntoIter;$/;"	t	implementation:Map
IntoIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    type IntoIter = Iter<'a>;$/;"	t	implementation:Map
IntoIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    type IntoIter = IterMut<'a>;$/;"	t	implementation:Map
IntoIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct IntoIter {$/;"	s
IntoIterImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type IntoIterImpl = btree_map::IntoIter<String, Value>;$/;"	t
IntoIterImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type IntoIterImpl = indexmap::map::IntoIter<String, Value>;$/;"	t
IntoMakeService	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^impl<S, T> Service<T> for IntoMakeService<S>$/;"	c
IntoMakeService	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^impl<S> IntoMakeService<S> {$/;"	c
IntoMakeService	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^pub struct IntoMakeService<S> {$/;"	s
IntoMakeServiceWithConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^impl<S, C, T> Service<T> for IntoMakeServiceWithConnectInfo<S, C>$/;"	c
IntoMakeServiceWithConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^impl<S, C> Clone for IntoMakeServiceWithConnectInfo<S, C>$/;"	c
IntoMakeServiceWithConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^impl<S, C> IntoMakeServiceWithConnectInfo<S, C> {$/;"	c
IntoMakeServiceWithConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^impl<S, C> fmt::Debug for IntoMakeServiceWithConnectInfo<S, C>$/;"	c
IntoMakeServiceWithConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^pub struct IntoMakeServiceWithConnectInfo<S, C> {$/;"	s
IntoMapRequestResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^pub trait IntoMapRequestResult<B>: private::Sealed<B> {$/;"	i
IntoRawSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait IntoRawSocket {$/;"	i	module:windows::io
IntoServiceStateInExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^impl<H, T, S, B> Clone for IntoServiceStateInExtension<H, T, S, B>$/;"	c
IntoServiceStateInExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^impl<H, T, S, B> IntoServiceStateInExtension<H, T, S, B> {$/;"	c
IntoServiceStateInExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^impl<H, T, S, B> Service<Request<B>> for IntoServiceStateInExtension<H, T, S, B>$/;"	c
IntoServiceStateInExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^impl<H, T, S, B> fmt::Debug for IntoServiceStateInExtension<H, T, S, B> {$/;"	c
IntoServiceStateInExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^pub(crate) struct IntoServiceStateInExtension<H, T, S, B> {$/;"	s
Invalid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    Invalid = 3,$/;"	e	enum:Kind
InvalidEscape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    InvalidEscape,$/;"	e	enum:ErrorCode
InvalidNumber	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    InvalidNumber,$/;"	e	enum:ErrorCode
InvalidUnicodeCodePoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    InvalidUnicodeCodePoint,$/;"	e	enum:ErrorCode
InvalidUtf8InPathParam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    InvalidUtf8InPathParam {$/;"	e	enum:ErrorKind
InvalidUtf8InPathParam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl IntoResponse for InvalidUtf8InPathParam {$/;"	c
InvalidUtf8InPathParam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl InvalidUtf8InPathParam {$/;"	c
InvalidUtf8InPathParam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl fmt::Display for InvalidUtf8InPathParam {$/;"	c
InvalidUtf8InPathParam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl std::error::Error for InvalidUtf8InPathParam {}$/;"	c
InvalidUtf8InPathParam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^pub struct InvalidUtf8InPathParam {$/;"	s
InvalidUtf8InPathParam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/url_params.rs	/^    InvalidUtf8InPathParam { key: Arc<str> },$/;"	e	enum:UrlParams
Io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    Io(io::Error),$/;"	e	enum:ErrorCode
Io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    Io,$/;"	e	enum:Category
IoDispatcher	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl IoDispatcher {$/;"	c
IoDispatcher	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^struct IoDispatcher {$/;"	s
IoDriverMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^impl IoDriverMetrics {$/;"	c
IoDriverMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^pub(crate) struct IoDriverMetrics {$/;"	s
IoRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'de, R> Read<'de> for IoRead<R>$/;"	c
IoRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<R> IoRead<R>$/;"	c
IoRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<R> private::Sealed for IoRead<R> where R: io::Read {}$/;"	c
IoRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^pub struct IoRead<R>$/;"	s
IpAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::IpAddr {$/;"	c
IpAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for net::IpAddr {$/;"	c
Ipv4Addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for net::Ipv4Addr {$/;"	c
Ipv6Addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for net::Ipv6Addr {$/;"	c
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    type Item = &'a (dyn StdError + 'static);$/;"	t	implementation:Chain
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    type Item = Result<Bytes, MultipartError>;$/;"	t	implementation:Field
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    type Item = (&'a str, &'a str);$/;"	t	implementation:RawPathParams
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    type Item = (&'a str, &'a str);$/;"	t	implementation:RawPathParamsIter
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^    type Item = Result<Bytes, Error>;$/;"	t	implementation:BodyStream
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    type Item = Result<Message, Error>;$/;"	t	implementation:WebSocket
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    type Item = &'a [u8];$/;"	t	implementation:MemchrSplit
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^enum Item<T> {$/;"	g
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Item = Result<T>;$/;"	t
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    type Item = io::Result<u8>;$/;"	t
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    type Item = (&'a String, &'a Value);$/;"	t	implementation:Map
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    type Item = (&'a String, &'a mut Value);$/;"	t	implementation:Map
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    type Item = (String, Value);$/;"	t	implementation:Map
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            type Item = task::Notified<T>;$/;"	t	implementation:Local::push_overflow::BatchTaskIter
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct Iter<'a> {$/;"	s
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^        type Iter: Iterator<Item = SocketAddr> + Send + 'static;$/;"	t	interface:sealed::ToSocketAddrsPriv
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = T::Iter;$/;"	t
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::option::IntoIter<SocketAddr>;$/;"	t	implementation:SocketAddr
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::option::IntoIter<SocketAddr>;$/;"	t	implementation:SocketAddrV4
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::option::IntoIter<SocketAddr>;$/;"	t	implementation:SocketAddrV6
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::option::IntoIter<SocketAddr>;$/;"	t	implementation:u16
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::vec::IntoIter<SocketAddr>;$/;"	t	implementation:SocketAddr
IterImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type IterImpl<'a> = btree_map::Iter<'a, String, Value>;$/;"	t
IterImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type IterImpl<'a> = indexmap::map::Iter<'a, String, Value>;$/;"	t
IterMut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct IterMut<'a> {$/;"	s
IterMutImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type IterMutImpl<'a> = btree_map::IterMut<'a, String, Value>;$/;"	t
IterMutImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type IterMutImpl<'a> = indexmap::map::IterMut<'a, String, Value>;$/;"	t
JoinError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl JoinError {$/;"	c
JoinError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl fmt::Debug for JoinError {$/;"	c
JoinError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl fmt::Display for JoinError {$/;"	c
JoinError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl std::error::Error for JoinError {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl<T> Future for JoinHandle<T> {$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^pub(super) struct JoinHandle<T> {$/;"	s
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> Drop for JoinHandle<T> {$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> Future for JoinHandle<T> {$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> JoinHandle<T> {$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> RefUnwindSafe for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> Unpin for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> UnwindSafe for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> fmt::Debug for JoinHandle<T>$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^unsafe impl<T: Send> Send for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^unsafe impl<T: Send> Sync for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    JoinHandle,$/;"	e	enum:CombiAbortSource
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T: 'static> JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T> Default for JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T> Drop for JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T> JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T> fmt::Debug for JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^pub struct JoinSet<T> {$/;"	s
Json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^impl<T, S, B> FromRequest<S, B> for Json<T>$/;"	c
Json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^impl<T> From<T> for Json<T> {$/;"	c
Json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^impl<T> IntoResponse for Json<T>$/;"	c
Json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^pub struct Json<T>(pub T);$/;"	s
KeepAlive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl Default for KeepAlive {$/;"	c
KeepAlive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl KeepAlive {$/;"	c
KeepAlive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^pub struct KeepAlive {$/;"	s
KeepAliveStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl KeepAliveStream {$/;"	c
Key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    Key(Arc<str>),$/;"	e	enum:KeyOrIdx
Key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^            impl<'a, Q: ?Sized> RangeBounds<Q> for Key<'a, Q> {$/;"	c	method:Map::remove_entry
Key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^            struct Key<'a, Q: ?Sized>(&'a Q);$/;"	s	method:Map::remove_entry
KeyClass	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^enum KeyClass {$/;"	g
KeyClassifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> DeserializeSeed<'de> for KeyClassifier {$/;"	c
KeyClassifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> Visitor<'de> for KeyClassifier {$/;"	c
KeyClassifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct KeyClassifier;$/;"	s
KeyDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^impl<'de> Deserializer<'de> for KeyDeserializer {$/;"	c
KeyDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^struct KeyDeserializer {$/;"	s
KeyMustBeAString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    KeyMustBeAString,$/;"	e	enum:ErrorCode
KeyOrIdx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^enum KeyOrIdx {$/;"	g
Keys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct Keys<'a> {$/;"	s
KeysImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type KeysImpl<'a> = btree_map::Keys<'a, String, Value>;$/;"	t
KeysImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type KeysImpl<'a> = indexmap::map::Keys<'a, String, Value>;$/;"	t
Kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/kill.rs	/^pub(crate) trait Kill {$/;"	i
Kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^pub(crate) enum Kind {$/;"	g
Kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^pub(crate) enum Kind {$/;"	g
Lagged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Lagged(u64),$/;"	e	enum:error::RecvError
Lagged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Lagged(u64),$/;"	e	enum:error::TryRecvError
Launch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Launch {$/;"	c
Launch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(crate) struct Launch(Vec<Arc<Worker>>);$/;"	s
LayerFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^pub(crate) trait LayerFn<B, E, B2, E2>: FnOnce(Route<B, E>) -> Route<B2, E2> + Send {$/;"	i
Layered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^impl<H, S, T, L, B, B2> Handler<T, S, B2> for Layered<L, H, T, S, B, B2>$/;"	c
Layered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^impl<L, H, T, S, B, B2> Clone for Layered<L, H, T, S, B, B2>$/;"	c
Layered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^impl<L, H, T, S, B, B2> fmt::Debug for Layered<L, H, T, S, B, B2>$/;"	c
Layered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^pub struct Layered<L, H, T, S, B, B2> {$/;"	s
LayeredFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/future.rs	/^impl<B, S> Future for LayeredFuture<B, S>$/;"	c
LayeredFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/future.rs	/^impl<B, S> LayeredFuture<B, S>$/;"	c
LazilyResolvedCapture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    impl LazilyResolvedCapture {$/;"	c	module:capture
LazilyResolvedCapture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    struct LazilyResolvedCapture {$/;"	s	module:capture
LazilyResolvedCapture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    unsafe impl Sync for LazilyResolvedCapture where Capture: Sync {}$/;"	c	module:capture
Level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^impl Level {$/;"	c
Level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^impl fmt::Debug for Level {$/;"	c
Level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^pub(crate) struct Level {$/;"	s
Limb	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^pub type Limb = u32;$/;"	t
Limb	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^pub type Limb = u64;$/;"	t
LineColIterator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^impl<I> Iterator for LineColIterator<I>$/;"	c
LineColIterator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^impl<I> LineColIterator<I>$/;"	c
LineColIterator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^pub struct LineColIterator<I> {$/;"	s
LineFeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    LineFeed,$/;"	e	enum:CharEscape
Lines	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^impl<R> Lines<R>$/;"	c
Link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^pub(crate) unsafe trait Link {$/;"	i
Linked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    Linked {$/;"	e	enum:ChainState
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^type LinkedList<T> =$/;"	t
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<L, T> LinkedList<L, T> {$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<L: Link> Default for LinkedList<L, L::Target> {$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<L: Link> LinkedList<L, L::Target> {$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<L: Link> fmt::Debug for LinkedList<L, L::Target> {$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^pub(crate) struct LinkedList<L, T> {$/;"	s
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^unsafe impl<L: Link> Send for LinkedList<L, L::Target> where L::Target: Send {}$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^unsafe impl<L: Link> Sync for LinkedList<L, L::Target> where L::Target: Sync {}$/;"	c
List	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^enum List {$/;"	g
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^impl<T: 'static> Wake for ListEntry<T> {$/;"	c
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^struct ListEntry<T> {$/;"	s
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T> Send for ListEntry<T> {}$/;"	c
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T> Sync for ListEntry<T> {}$/;"	c
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T> linked_list::Link for ListEntry<T> {$/;"	c
Lists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^type Lists<T> = Mutex<ListsInner<T>>;$/;"	t
ListsInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^struct ListsInner<T> {$/;"	s
Local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Drop for Local<T> {$/;"	c
Local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Local<T> {$/;"	c
Local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^pub(crate) struct Local<T: 'static> {$/;"	s
LocalData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^struct LocalData {$/;"	s
LocalEnterGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Drop for LocalEnterGuard {$/;"	c
LocalEnterGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl fmt::Debug for LocalEnterGuard {$/;"	c
LocalEnterGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^pub struct LocalEnterGuard(Option<Rc<Context>>);$/;"	s
LocalKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static> LocalKey<T> {$/;"	c
LocalKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static> fmt::Debug for LocalKey<T> {$/;"	c
LocalKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: Copy + 'static> LocalKey<T> {$/;"	c
LocalKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^pub struct LocalKey<T: 'static> {$/;"	s
LocalNotified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: Schedule> LocalNotified<S> {$/;"	c
LocalNotified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) struct LocalNotified<S: 'static> {$/;"	s
LocalOwnedTasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^impl<S: 'static> LocalOwnedTasks<S> {$/;"	c
LocalOwnedTasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^pub(crate) struct LocalOwnedTasks<S: 'static> {$/;"	s
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Default for LocalSet {$/;"	c
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Drop for LocalSet {$/;"	c
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Future for LocalSet {$/;"	c
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl LocalSet {$/;"	c
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl fmt::Debug for LocalSet {$/;"	c
LocalState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl LocalState {$/;"	c
LocalState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^struct LocalState {$/;"	s
LocalState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^unsafe impl Send for LocalState {}$/;"	c
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^impl<T> Deref for LockGuard<'_, T> {$/;"	c
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^impl<T> DerefMut for LockGuard<'_, T> {$/;"	c
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^impl<T> Drop for LockGuard<'_, T> {$/;"	c
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^pub(crate) struct LockGuard<'a, T> {$/;"	s
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^unsafe impl<T: Sync> Sync for LockGuard<'_, T> {}$/;"	c
LoggingMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    impl LoggingMockWriter {$/;"	c	module:tests
LoggingMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    impl crate::io::AsyncWrite for LoggingMockWriter {$/;"	c	module:tests
LoggingMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    struct LoggingMockWriter {$/;"	s	module:tests
LoneLeadingSurrogateInHexEscape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    LoneLeadingSurrogateInHexEscape,$/;"	e	enum:ErrorCode
MakeErasedHandler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<H, S, B> Clone for MakeErasedHandler<H, S, B>$/;"	c
MakeErasedHandler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<H, S, B> ErasedIntoRoute<S, B, Infallible> for MakeErasedHandler<H, S, B>$/;"	c
MakeErasedHandler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^pub(crate) struct MakeErasedHandler<H, S, B> {$/;"	s
MakeErasedRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<S, B> Clone for MakeErasedRouter<S, B>$/;"	c
MakeErasedRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<S, B> ErasedIntoRoute<S, B, Infallible> for MakeErasedRouter<S, B>$/;"	c
MakeErasedRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^pub(crate) struct MakeErasedRouter<S, B> {$/;"	s
Mandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    Mandatory,$/;"	e	enum:Mandatory
Mandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) enum Mandatory {$/;"	g
Mantissa	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^pub trait Mantissa: Integer {$/;"	i
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^impl<S, B, E, B2, E2> ErasedIntoRoute<S, B2, E2> for Map<S, B, E, B2, E2>$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^pub(crate) struct Map<S, B, E, B2, E2> {$/;"	s
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Map,$/;"	e	enum:Unexpected
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Map(Vec<(Content<'de>, Content<'de>)>),$/;"	e	enum:content::Content
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Map(Vec<(Content, Content)>),$/;"	e	enum:content::Content
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl Clone for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl Debug for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl Default for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl Eq for Map<String, Value> {}$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl Extend<(String, Value)> for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl FromIterator<(String, Value)> for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl IntoIterator for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl PartialEq for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl serde::ser::Serialize for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl<'a, Q> ops::Index<&'a Q> for Map<String, Value>$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl<'a, Q> ops::IndexMut<&'a Q> for Map<String, Value>$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl<'a> IntoIterator for &'a Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl<'a> IntoIterator for &'a mut Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl<'de> de::Deserialize<'de> for Map<String, Value> {$/;"	c
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct Map<K, V> {$/;"	s
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    Map {$/;"	e	enum:Compound
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    Map(String),$/;"	e	enum:KeyClass
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    Map {$/;"	e	enum:SerializeMap
MapAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	i
MapAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'a, R: 'a> MapAccess<'a, R> {$/;"	c
MapAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::MapAccess<'de> for MapAccess<'a, R> {$/;"	c
MapAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^struct MapAccess<'a, R: 'a> {$/;"	s
MapAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, A> de::EnumAccess<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<A> MapAccessDeserializer<A> {$/;"	c
MapAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    impl<'de, A> VariantAccess<'de> for MapAsEnum<A>$/;"	c	module:private
MapAsEnum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s	module:private
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^impl<'de> MapAccess<'de> for MapDeserializer<'de> {$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^struct MapDeserializer<'de> {$/;"	s
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, I, E> Clone for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, I, E> Debug for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, I, E> MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, I, E> de::Deserializer<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, I, E> de::MapAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, I, E> de::SeqAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> de::MapAccess<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s	module:content
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl MapDeserializer {$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> MapAccess<'de> for MapDeserializer {$/;"	c
MapDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct MapDeserializer {$/;"	s
MapImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type MapImpl<K, V> = BTreeMap<K, V>;$/;"	t
MapImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type MapImpl<K, V> = IndexMap<K, V>;$/;"	t
MapKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, 'a, R> de::Deserializer<'de> for MapKey<'a, R>$/;"	c
MapKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^struct MapKey<'a, R: 'a> {$/;"	s
MapKeyDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for MapKeyDeserializer<'de> {$/;"	c
MapKeyDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct MapKeyDeserializer<'de> {$/;"	s
MapKeySerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::Serializer for MapKeySerializer<'a, W, F>$/;"	c
MapKeySerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^struct MapKeySerializer<'a, W: 'a, F: 'a> {$/;"	s
MapKeySerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::Serializer for MapKeySerializer {$/;"	c
MapKeySerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^struct MapKeySerializer;$/;"	s
MapRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'a, 'de, E> MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a, E> de::MapAccess<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
MapRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> MapAccess<'de> for MapRefDeserializer<'de> {$/;"	c
MapRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> MapRefDeserializer<'de> {$/;"	c
MapRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct MapRefDeserializer<'de> {$/;"	s
MapRequest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl<F, S, I, T> Clone for MapRequest<F, S, I, T>$/;"	c
MapRequest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl<F, S, I, T> fmt::Debug for MapRequest<F, S, I, T>$/;"	c
MapRequest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^pub struct MapRequest<F, S, I, T> {$/;"	s
MapRequestLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl<F, S, T> Clone for MapRequestLayer<F, S, T>$/;"	c
MapRequestLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl<F, S, T> fmt::Debug for MapRequestLayer<F, S, T>$/;"	c
MapRequestLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl<S, I, F, T> Layer<I> for MapRequestLayer<F, S, T>$/;"	c
MapRequestLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^pub struct MapRequestLayer<F, S, T> {$/;"	s
MapResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^impl<F, S, I, T> Clone for MapResponse<F, S, I, T>$/;"	c
MapResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^impl<F, S, I, T> fmt::Debug for MapResponse<F, S, I, T>$/;"	c
MapResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^pub struct MapResponse<F, S, I, T> {$/;"	s
MapResponseLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^impl<F, S, T> Clone for MapResponseLayer<F, S, T>$/;"	c
MapResponseLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^impl<F, S, T> fmt::Debug for MapResponseLayer<F, S, T>$/;"	c
MapResponseLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^impl<S, I, F, T> Layer<I> for MapResponseLayer<F, S, T>$/;"	c
MapResponseLayer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^pub struct MapResponseLayer<F, S, T> {$/;"	s
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized + fmt::Debug> fmt::Debug for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized + fmt::Display> fmt::Display for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> Deref for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> DerefMut for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> Drop for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct MappedMutexGuard<'a, T: ?Sized> {$/;"	s
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<'a, T> Send for MappedMutexGuard<'a, T> where T: ?Sized + Send + 'a {}$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<'a, T> Sync for MappedMutexGuard<'a, T> where T: ?Sized + Sync + 'a {}$/;"	c
MappedMutexGuardInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^struct MappedMutexGuardInner<'a, T: ?Sized> {$/;"	s
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<&'a [u8], Vec<u8>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<&'a str, String> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<Option<&'a [u8]>, Option<&'a Vec<u8>>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<Option<&'a [u8]>, Option<Vec<u8>>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<Option<&'a str>, Option<&'a String>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<Option<&'a str>, Option<String>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> MatchBorrow<T, U> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> MatchBorrowExt for &'_ MatchBorrow<T, U> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<&'_ &'_ T, T> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<&'_ T, T> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<Option<&'_ &'_ T>, Option<T>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<Option<&'_ T>, Option<T>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<Option<T>, Option<&'_ &'_ T>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<Option<T>, Option<&'_ T>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<T, &'_ &'_ T> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<T, &'_ T> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub struct MatchBorrow<T, U>(PhantomData<T>, PhantomData<U>);$/;"	s
MatchBorrowExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub trait MatchBorrowExt: Sized {$/;"	i
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = &'a [u8];$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = &'a str;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = Option<&'a [u8]>;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = Option<&'a str>;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = Option<T>;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = T;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = U;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched;$/;"	t	interface:MatchBorrowExt
MatchedNestedPath	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^struct MatchedNestedPath(Arc<str>);$/;"	s
MatchedPath	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^impl MatchedPath {$/;"	c
MatchedPath	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^impl<S> FromRequestParts<S> for MatchedPath$/;"	c
MatchedPath	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^pub struct MatchedPath(pub(crate) Arc<str>);$/;"	s
Math	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^pub(crate) trait Math: Clone + Sized + Default {$/;"	i
MaybeDone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^impl<Fut: Future + Unpin> Unpin for MaybeDone<Fut> {}$/;"	c
MaybeDone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^impl<Fut: Future> Future for MaybeDone<Fut> {$/;"	c
MaybeDone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^impl<Fut: Future> MaybeDone<Fut> {$/;"	c
MaybeDone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^pub enum MaybeDone<Fut: Future> {$/;"	g
MemchrSplit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl<'a> Iterator for MemchrSplit<'a> {$/;"	c
MemchrSplit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^struct MemchrSplit<'a> {$/;"	s
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    Message(String),$/;"	e	enum:ErrorKind
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl From<String> for Message {$/;"	c
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl From<Vec<u8>> for Message {$/;"	c
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl Message {$/;"	c
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl<'b> From<&'b [u8]> for Message {$/;"	c
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl<'s> From<&'s str> for Message {$/;"	c
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub enum Message {$/;"	g
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    Message(Box<str>),$/;"	e	enum:ErrorCode
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    Message,$/;"	e	enum:PipeMode
MessageError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl<M> Debug for MessageError<M>$/;"	c
MessageError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl<M> Display for MessageError<M>$/;"	c
MessageError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^impl<M> StdError for MessageError<M> where M: Display + Debug + 'static {}$/;"	c
MessageError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^pub struct MessageError<M>(pub M);$/;"	s
Metadata	/home/trey/code/sqlx-crud/src/schema.rs	/^pub struct Metadata<'s, const C: usize> {$/;"	s
MethodEndpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^enum MethodEndpoint<S, B, E> {$/;"	g
MethodEndpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B, E> Clone for MethodEndpoint<S, B, E> {$/;"	c
MethodEndpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B, E> MethodEndpoint<S, B, E>$/;"	c
MethodEndpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B, E> fmt::Debug for MethodEndpoint<S, B, E> {$/;"	c
MethodFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^impl TryFrom<Method> for MethodFilter {$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<B, E> Service<Request<B>> for MethodRouter<(), B, E>$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<B> MethodRouter<(), B, Infallible>$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B, E> Clone for MethodRouter<S, B, E> {$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B, E> Default for MethodRouter<S, B, E>$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B, E> MethodRouter<S, B, E>$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B, E> fmt::Debug for MethodRouter<S, B, E> {$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B> Handler<(), S, B> for MethodRouter<S, B>$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^impl<S, B> MethodRouter<S, B, Infallible>$/;"	c
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^pub struct MethodRouter<S = (), B = Body, E = Infallible> {$/;"	s
MethodRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    MethodRouter(MethodRouter<S, B>),$/;"	e	enum:Endpoint
MetricsBatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^impl MetricsBatch {$/;"	c
MetricsBatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^pub(crate) struct MetricsBatch {$/;"	s
MetricsBatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^impl MetricsBatch {$/;"	c
MetricsBatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^pub(crate) struct MetricsBatch {}$/;"	s
MioSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<T: AioSource> Source for MioSource<T> {$/;"	c
MioSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^struct MioSource<T>(T);$/;"	s
MissedTickBehavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^impl Default for MissedTickBehavior {$/;"	c
MissedTickBehavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^impl MissedTickBehavior {$/;"	c
MissedTickBehavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^pub enum MissedTickBehavior {$/;"	g
Missing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    Missing,$/;"	e	enum:TypedHeaderRejectionReason
MissingFieldDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for MissingFieldDeserializer<E>$/;"	c	function:missing_field
MissingFieldDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s	function:missing_field
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl Future for Mock {$/;"	c	module:test
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl Kill for Mock {$/;"	c	module:test
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl Mock {$/;"	c	module:test
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    struct Mock {$/;"	s	module:test
MockConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^impl<S, T> Layer<S> for MockConnectInfo<T>$/;"	c
MockConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^pub struct MockConnectInfo<T>(pub T);$/;"	s
MockFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl Read for &'_ MockFile {$/;"	c
MockFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl Read for MockFile {$/;"	c
MockFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl Seek for &'_ MockFile {$/;"	c
MockFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl Write for &'_ MockFile {$/;"	c
MockQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    impl<W> MockQueue<W> {$/;"	c	module:test
MockQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    impl<W> OrphanQueue<W> for MockQueue<W> {$/;"	c	module:test
MockQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    pub(crate) struct MockQueue<W> {$/;"	s	module:test
MockStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl InternalStream for MockStream {$/;"	c	module:test
MockStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl MockStream {$/;"	c	module:test
MockStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    struct MockStream {$/;"	s	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    impl MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    impl Wait for MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    struct MockWait {$/;"	s	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl Kill for MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl Wait for MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    struct MockWait {$/;"	s	module:test
ModeratePathCache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^pub(crate) trait ModeratePathCache {$/;"	i
ModeratePathPowers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^impl ModeratePathPowers {$/;"	c
ModeratePathPowers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^pub(crate) struct ModeratePathPowers {$/;"	s
Multi1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    Multi1,$/;"	e	enum:CombiRuntime
Multi2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    Multi2,$/;"	e	enum:CombiRuntime
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    MultiThread,$/;"	e	enum:Kind
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    MultiThread(MultiThread),$/;"	e	enum:Scheduler
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    MultiThread,$/;"	e	enum:RuntimeFlavor
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^    MultiThread(Arc<multi_thread::Handle>),$/;"	e	enum:Handle
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^impl MultiThread {$/;"	c
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^impl fmt::Debug for MultiThread {$/;"	c
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^pub(crate) struct MultiThread;$/;"	s
Multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^impl Multipart {$/;"	c
Multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^impl<S, B> FromRequest<S, B> for Multipart$/;"	c
Multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^pub struct Multipart {$/;"	s
MultipartError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^impl IntoResponse for MultipartError {$/;"	c
MultipartError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^impl MultipartError {$/;"	c
MultipartError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^impl fmt::Display for MultipartError {$/;"	c
MultipartError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^impl std::error::Error for MultipartError {$/;"	c
MultipartError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^pub struct MultipartError {$/;"	s
Mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<'a, T> Clone for Mut<'a, T>$/;"	c
Mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<'a, T> Copy for Mut<'a, T> where T: ?Sized {}$/;"	c
Mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<'a, T> Mut<'a, T> {$/;"	c
Mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<'a, T> Mut<'a, T>$/;"	c
Mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^pub struct Mut<'a, T>$/;"	s
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for Mutex<T>$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    impl<T> Mutex<T> {$/;"	c	module:sync
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    pub(crate) struct Mutex<T>(loom::sync::Mutex<T>);$/;"	s	module:sync
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^impl<T> Mutex<T> {$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^pub(crate) struct Mutex<T: ?Sized>(sync::Mutex<T>);$/;"	s
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<T> Mutex<T> {$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct Mutex<T: ?Sized>(PhantomData<std::sync::Mutex<T>>, parking_lot::Mutex<T>);$/;"	s
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Mutex<T> {$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> std::fmt::Debug for Mutex<T>$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T> Default for Mutex<T>$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T> From<T> for Mutex<T> {$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct Mutex<T: ?Sized> {$/;"	s
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T> Send for Mutex<T> where T: ?Sized + Send {}$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T> Sync for Mutex<T> where T: ?Sized + Send {}$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized + fmt::Display> fmt::Display for MutexGuard<'a, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> Deref for MutexGuard<'a, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> DerefMut for MutexGuard<'a, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct MutexGuard<'a, T: ?Sized>($/;"	s
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> MutexGuard<'a, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized + fmt::Debug> fmt::Debug for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized + fmt::Display> fmt::Display for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Deref for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> DerefMut for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Drop for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct MutexGuard<'a, T: ?Sized> {$/;"	s
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T> Sync for MutexGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
MutexGuardInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^struct MutexGuardInner<'a, T: ?Sized> {$/;"	s
MyConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^        impl Connected<&AddrStream> for MyConnectInfo {$/;"	c	function:tests::custom
MyConnectInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^        struct MyConnectInfo {$/;"	s	function:tests::custom
MyEnum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    enum MyEnum {$/;"	g	module:tests
MyExtractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^        impl<S> FromRequestParts<S> for MyExtractor$/;"	c	function:tests::works_with_request_body_limit
MyExtractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^        struct MyExtractor;$/;"	s	function:tests::works_with_request_body_limit
N	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^enum N {$/;"	g
N	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl Eq for N {}$/;"	c
N	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl Hash for N {$/;"	c
N	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl PartialEq for N {$/;"	c
N	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^type N = String;$/;"	t
NANOS_PER_SEC	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            static NANOS_PER_SEC: u32 = 1_000_000_000;$/;"	v	function:Duration::deserialize::check_overflow
NANOS_PER_SEC	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            static NANOS_PER_SEC: u32 = 1_000_000_000;$/;"	v	function:SystemTime::deserialize::check_overflow
NEXT_ID	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^        static NEXT_ID: StaticAtomicU64 = StaticAtomicU64::new(1);$/;"	v	method:Id::next
NEXT_ID	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^        static NEXT_ID: StaticAtomicU64 = StaticAtomicU64::new(0);$/;"	v	method:ThreadId::next
NONPANICKING_VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^    static NONPANICKING_VTABLE: RawWakerVTable = RawWakerVTable::new($/;"	v	function:atomic_waker_panic_safe
NULL	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^        static NULL: Value = Value::Null;$/;"	v	function:index
NamedPipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^        pub type NamedPipe = crate::doc::NotDefinedHere;$/;"	t	module:doc::mio_windows
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsHandle for NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsRawHandle for NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsyncRead for NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsyncWrite for NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct NamedPipeClient {$/;"	s
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsHandle for NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsRawHandle for NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsyncRead for NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsyncWrite for NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct NamedPipeServer {$/;"	s
Nanos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Nanos,$/;"	e	enum:Duration::deserialize::Field
Nanos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Nanos,$/;"	e	enum:SystemTime::deserialize::Field
NegInt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    NegInt(i64),$/;"	e	enum:N
Neither	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    Neither,$/;"	e	enum:List
NeverDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for NeverDeserializer<E>$/;"	c
NeverDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
Newtype	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Newtype(Box<Content<'de>>),$/;"	e	enum:content::Content
NewtypeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    NewtypeStruct,$/;"	e	enum:Unexpected
NewtypeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        NewtypeStruct(&'static str, Box<Content>),$/;"	e	enum:content::Content
NewtypeVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    NewtypeVariant,$/;"	e	enum:Unexpected
NewtypeVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        NewtypeVariant(&'static str, u32, &'static str, Box<Content>),$/;"	e	enum:content::Content
Next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<B> Clone for Next<B> {$/;"	c
Next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<B> Next<B> {$/;"	c
Next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<B> Service<Request<B>> for Next<B> {$/;"	c
Next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl<B> fmt::Debug for Next<B> {$/;"	c
Next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^pub struct Next<B> {$/;"	s
No	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    No,$/;"	e	enum:CombiLocalSet
NoContext	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    NoContext,$/;"	e	enum:TryCurrentErrorKind
NoMatchingMethodFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^impl NoMatchingMethodFilter {$/;"	c
NoMatchingMethodFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^impl fmt::Display for NoMatchingMethodFilter {$/;"	c
NoMatchingMethodFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^impl std::error::Error for NoMatchingMethodFilter {}$/;"	c
NoMatchingMethodFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^pub struct NoMatchingMethodFilter {$/;"	s
NoPanic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    NoPanic,$/;"	e	enum:CombiOutput
NoPanic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    NoPanic,$/;"	e	enum:CombiTask
NoPermits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    NoPermits,$/;"	e	enum:TryAcquireError
NoThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    NoThreads(io::Error),$/;"	e	enum:SpawnError
Node	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^impl Node {$/;"	c
Node	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^impl fmt::Debug for Node {$/;"	c
Node	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^struct Node {$/;"	s
NonMandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    NonMandatory,$/;"	e	enum:Mandatory
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    None,$/;"	e	enum:AllowHeader
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    None,$/;"	e	enum:MethodEndpoint
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        None,$/;"	e	enum:content::Content
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        None,$/;"	e	enum:content::Content
NoopSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^    impl task::Schedule for NoopSchedule {$/;"	c	module:noop_scheduler
NoopSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^    pub(crate) struct NoopSchedule;$/;"	s	module:noop_scheduler
NotAborted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    NotAborted = 0,$/;"	e	enum:CombiAbort
NotBothDebug	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^pub trait NotBothDebug {$/;"	i
NotDefinedHere	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/mod.rs	/^pub enum NotDefinedHere {}$/;"	g
NotFound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/not_found.rs	/^impl<B> Service<Request<B>> for NotFound$/;"	c
NotFound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/not_found.rs	/^pub(super) struct NotFound;$/;"	s
NotPolled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    NotPolled,$/;"	e	enum:CombiJoinInterest
NotSendSync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/mod.rs	/^pub(crate) struct NotSendSync(*const ());$/;"	s
NotificationType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^enum NotificationType {$/;"	g
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^type Notified = task::Notified<Arc<Handle>>;$/;"	t
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    Notified,$/;"	e	enum:PollFuture
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: 'static> Notified<S> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S> fmt::Debug for Notified<S> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) struct Notified<S: 'static>(Task<S>);$/;"	s
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S: Schedule> Send for Notified<S> {}$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S: Schedule> Sync for Notified<S> {}$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Drop for Notified<'_> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Future for Notified<'_> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Notified<'_> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^pub struct Notified<'a> {$/;"	s
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^unsafe impl<'a> Send for Notified<'a> {}$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^unsafe impl<'a> Sync for Notified<'a> {}$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    Notified,$/;"	e	enum:List
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Default for Notify {$/;"	c
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Notify {$/;"	c
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl RefUnwindSafe for Notify {}$/;"	c
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl UnwindSafe for Notify {}$/;"	c
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^pub struct Notify {$/;"	s
NotifyWaitersList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Drop for NotifyWaitersList<'_> {$/;"	c
NotifyWaitersList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl<'a> NotifyWaitersList<'a> {$/;"	c
NotifyWaitersList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^struct NotifyWaitersList<'a> {$/;"	s
Null	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    Null,$/;"	e	enum:Value
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl FromStr for Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^pub trait Number: AsCast + ops::Add<Output = Self> {}$/;"	i
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl Debug for Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl Display for Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl From<ParserNumber> for Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl Serialize for Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl<'de, 'a> Deserializer<'de> for &'a Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl<'de> Deserialize<'de> for Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl<'de> Deserializer<'de> for Number {$/;"	c
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^pub struct Number {$/;"	s
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    Number { ser: &'a mut Serializer<W, F> },$/;"	e	enum:Compound
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    Number,$/;"	e	enum:KeyClass
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    Number(Number),$/;"	e	enum:Value
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    Number { out_value: Option<Value> },$/;"	e	enum:SerializeMap
NumberDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl<'de> MapAccess<'de> for NumberDeserializer {$/;"	c
NumberDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^pub(crate) struct NumberDeserializer {$/;"	s
NumberFieldDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl<'de> Deserializer<'de> for NumberFieldDeserializer {$/;"	c
NumberFieldDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^struct NumberFieldDeserializer;$/;"	s
NumberFromString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl<'de> de::Deserialize<'de> for NumberFromString {$/;"	c
NumberFromString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^pub struct NumberFromString {$/;"	s
NumberKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^impl<'de> de::Deserialize<'de> for NumberKey {$/;"	c
NumberKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^struct NumberKey;$/;"	s
NumberOutOfRange	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    NumberOutOfRange,$/;"	e	enum:ErrorCode
NumberStrEmitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W: io::Write, F: Formatter> ser::Serializer for NumberStrEmitter<'a, W, F> {$/;"	c
NumberStrEmitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^struct NumberStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
NumberValueEmitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::Serializer for NumberValueEmitter {$/;"	c
NumberValueEmitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^struct NumberValueEmitter;$/;"	s
NumberVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^        impl<'de> Visitor<'de> for NumberVisitor {$/;"	c	method:Number::deserialize
NumberVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^        struct NumberVisitor;$/;"	s	method:Number::deserialize
O	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^impl<T, O: OrphanQueue<T>> OrphanQueue<T> for &O {$/;"	c
Object	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    Object(Map<String, Value>),$/;"	e	enum:Value
Occupied	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    Occupied(OccupiedEntry<'a>),$/;"	e	enum:Entry
OccupiedEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl<'a> OccupiedEntry<'a> {$/;"	c
OccupiedEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct OccupiedEntry<'a> {$/;"	s
OccupiedEntryImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type OccupiedEntryImpl<'a> = btree_map::OccupiedEntry<'a, String, Value>;$/;"	t
OccupiedEntryImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type OccupiedEntryImpl<'a> = indexmap::map::OccupiedEntry<'a, String, Value>;$/;"	t
OffsetHelper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^impl<T: Future, S: Schedule> OffsetHelper<T, S> {$/;"	c
OffsetHelper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^struct OffsetHelper<T, S>(T, S);$/;"	s
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^pub fn Ok<T>(t: T) -> Result<T> {$/;"	f
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Ok,$/;"	e	enum:deserialize::Field
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type Ok = Content;$/;"	t	module:content
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	t	module:content
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type Ok = ();$/;"	t
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	t
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type Ok = ();$/;"	t	implementation:Formatter
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	t
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeMap
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeSeq
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStruct
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStructVariant
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTuple
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleStruct
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleVariant
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:Serializer
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type Ok = ();$/;"	t
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type Ok = ();$/;"	t	implementation:NumberStrEmitter
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type Ok = ();$/;"	t	implementation:RawValueStrEmitter
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Ok = String;$/;"	t	implementation:MapKeySerializer
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:NumberValueEmitter
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:RawValueEmitter
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeMap
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeStructVariant
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeTupleVariant
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeVec
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type Ok = Value;$/;"	t	implementation:Serializer
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Ok,$/;"	e	enum:TransitionToIdle
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    Ok(T),$/;"	e	enum:TryPopResult
OkDealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    OkDealloc,$/;"	e	enum:TransitionToIdle
OkNotified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    OkNotified,$/;"	e	enum:TransitionToIdle
OnClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^impl Future for OnClose<'_> {$/;"	c
OnClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^impl<'a> OnClose<'a> {$/;"	c
OnClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^struct OnClose<'a> {$/;"	s
OnFailedUpdgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub trait OnFailedUpdgrade: Send + 'static {$/;"	i
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: Clone> Clone for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: Eq> Eq for OnceCell<T> {}$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: PartialEq> PartialEq for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: fmt::Debug> fmt::Debug for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> Default for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> Drop for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> From<T> for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^pub struct OnceCell<T> {$/;"	s
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^unsafe impl<T: Send> Send for OnceCell<T> {}$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^unsafe impl<T: Sync + Send> Sync for OnceCell<T> {}$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^impl<T> Drop for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^impl<T> OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^pub(crate) struct OnceCell<T> {$/;"	s
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^unsafe impl<T: Send + Sync> Send for OnceCell<T> {}$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^unsafe impl<T: Send + Sync> Sync for OnceCell<T> {}$/;"	c
OneOf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl Display for OneOf {$/;"	c
OneOf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^struct OneOf {$/;"	s
OneWaiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    OneWaiter,$/;"	e	enum:NotificationType
Op	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        enum Op {$/;"	g	function:tests::fuzz_linked_list
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^impl Default for OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^impl From<StdOpenOptions> for OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^impl OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^pub struct OpenOptions(StdOpenOptions);$/;"	s
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl Default for OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^pub struct OpenOptions {$/;"	s
Operation	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^enum Operation {$/;"	g
Option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    impl<T> Sealed for Option<T> {}$/;"	c	module:private
Option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^impl<T> Context<T, Infallible> for Option<T> {$/;"	c
Option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Option<T>$/;"	c
Option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Option,$/;"	e	enum:Unexpected
Option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T> Serialize for Option<T>$/;"	c
OptionVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for OptionVisitor<T>$/;"	c
OptionVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
Optional	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    Optional,$/;"	e	enum:Unsupported
OriginalUri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^impl<S> FromRequestParts<S> for OriginalUri$/;"	c
OriginalUri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^pub struct OriginalUri(pub Uri);$/;"	s
OrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^pub(crate) trait OrphanQueue<T> {$/;"	i
OrphanQueueImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^impl<T> OrphanQueueImpl<T> {$/;"	c
OrphanQueueImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^pub(crate) struct OrphanQueueImpl<T> {$/;"	s
OsExtraData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Init for OsExtraData {$/;"	c
OsExtraData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) struct OsExtraData {$/;"	s
OsExtraData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^impl Init for OsExtraData {$/;"	c
OsExtraData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(crate) struct OsExtraData {}$/;"	s
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Init for OsStorage {$/;"	c
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Storage for OsStorage {$/;"	c
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) type OsStorage = Vec<SignalInfo>;$/;"	t
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^impl Init for OsStorage {$/;"	c
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^impl Storage for OsStorage {$/;"	c
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(crate) struct OsStorage {$/;"	s
OsStr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for OsStr {$/;"	c
OsString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for OsString {$/;"	c
OsString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for OsString {$/;"	c
OsStringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Visitor<'de> for OsStringVisitor {$/;"	c
OsStringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
Other	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Other(&'a str),$/;"	e	enum:Unexpected
Other	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Other,$/;"	e	enum:content::TagContentOtherField
Other	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    Other,$/;"	e	enum:ErrorKind
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^        type Output = Result<Response, Infallible>;$/;"	t	implementation:future::HandleErrorFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/future.rs	/^    type Output = Response;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    type Output = Result<Response, T::Error>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    type Output = Result<Response, Infallible>;$/;"	t	implementation:ResponseFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    type Output = Result<Response, Infallible>;$/;"	t	implementation:ResponseFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    type Output = Result<Response, Infallible>;$/;"	t	implementation:ResponseFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    type Output = Response;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    type Output = Result<Response, E>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    type Output = Value;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    type Output = Value;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    type Output = Result<T, io::Error>;$/;"	t	implementation:JoinHandle
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    type Output = ();$/;"	t	implementation:MaybeDone
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^    type Output = T;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/try_join.rs	/^    type Output = Result<(T1, T2, T3), E>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    type Output = Self;$/;"	t	implementation:Interest
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    type Output = Ready;$/;"	t	implementation:Ready
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/seek.rs	/^    type Output = io::Result<u64>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    type Output = io::Result<u64>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^    type Output = io::Result<u64>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/fill_buf.rs	/^    type Output = io::Result<&'a [u8]>;$/;"	t	implementation:FillBuf
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/flush.rs	/^    type Output = io::Result<()>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_buf.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^    type Output = io::Result<usize>;$/;"	t	implementation:ReadLine
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^    type Output = io::Result<usize>;$/;"	t	implementation:ReadUntil
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/shutdown.rs	/^    type Output = io::Result<()>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all.rs	/^    type Output = io::Result<()>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all_buf.rs	/^    type Output = io::Result<()>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_buf.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_vectored.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        type Output = Result<(), ()>;$/;"	t	implementation:test::Mock
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    type Output = Result<T, E>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    type Output = io::Result<ExitStatus>;$/;"	t	implementation:Child
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    type Output = io::Result<ExitStatus>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    type Output = io::Result<ExitStatus>;$/;"	t	implementation:Child
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^    type Output = R;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    type Output = super::Result<T>;$/;"	t	implementation:JoinHandle
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    type Output = ();$/;"	t	implementation:BlockedFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    type Output = ();$/;"	t	implementation:ResetFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    type Output = Track<T::Output>;$/;"	t	implementation:Track
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        type Output = F::Output;$/;"	t	implementation:test_combination::FutWrapper
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl Drop for Output {$/;"	c	function:test_combination
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl Output {$/;"	c	function:test_combination
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    struct Output {$/;"	s	function:test_combination
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^        type Output = u32;$/;"	t	implementation:test::ZeroSizedFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    type Output = T;$/;"	t	implementation:ReusableBoxFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    type Output = Result<(), AcquireError>;$/;"	t	implementation:Acquire
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    type Output = Result<T, RecvError>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    type Output = UnsafeCell<MaybeUninit<T>>;$/;"	t	implementation:Values
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    type Output = ();$/;"	t	implementation:Notified
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    type Output = Result<T, RecvError>;$/;"	t	implementation:Receiver
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^    type Output = bool;$/;"	t	implementation:OnClose
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    type Output = ();$/;"	t	implementation:LocalSet
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    type Output = T::Output;$/;"	t	implementation:RunUntil
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    type Output = F::Output;$/;"	t	implementation:TaskLocalFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/unconstrained.rs	/^    type Output = <F as Future>::Output;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^        type Output = ();$/;"	t	implementation:yield_now::YieldNow
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    type Output = Duration;$/;"	t	implementation:Instant
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    type Output = Instant;$/;"	t	implementation:Instant
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    type Output = ();$/;"	t	implementation:Sleep
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    type Output = Result<T::Output, Elapsed>;$/;"	t
Own	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<T> Clone for Own<T>$/;"	c
Own	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<T> Copy for Own<T> where T: ?Sized {}$/;"	c
Own	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<T> Own<T>$/;"	c
Own	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^pub struct Own<T>$/;"	s
Own	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^unsafe impl<T> Send for Own<T> where T: ?Sized {}$/;"	c
Own	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^unsafe impl<T> Sync for Own<T> where T: ?Sized {}$/;"	c
Owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    type Owned = Box<RawValue>;$/;"	t	implementation:RawValue
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized + fmt::Debug> fmt::Debug for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized + fmt::Display> fmt::Display for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized> Deref for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized> DerefMut for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized> Drop for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized> OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct OwnedMappedMutexGuard<T: ?Sized, U: ?Sized = T> {$/;"	s
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T, U> Send for OwnedMappedMutexGuard<T, U>$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T, U> Sync for OwnedMappedMutexGuard<T, U>$/;"	c
OwnedMappedMutexGuardInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^struct OwnedMappedMutexGuardInner<T: ?Sized, U: ?Sized> {$/;"	s
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized + fmt::Debug> fmt::Debug for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized + fmt::Display> fmt::Display for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Deref for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> DerefMut for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Drop for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct OwnedMutexGuard<T: ?Sized> {$/;"	s
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T> Sync for OwnedMutexGuard<T> where T: ?Sized + Send + Sync {}$/;"	c
OwnedMutexGuardInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^struct OwnedMutexGuardInner<T: ?Sized> {$/;"	s
OwnedPermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Drop for OwnedPermit<T> {$/;"	c
OwnedPermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> OwnedPermit<T> {$/;"	c
OwnedPermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for OwnedPermit<T> {$/;"	c
OwnedPermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct OwnedPermit<T> {$/;"	s
OwnedRawDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> MapAccess<'de> for OwnedRawDeserializer {$/;"	c
OwnedRawDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^pub struct OwnedRawDeserializer {$/;"	s
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl AsRef<TcpStream> for OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl AsyncRead for OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub struct OwnedReadHalf {$/;"	s
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl AsRef<UnixStream> for OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl AsyncRead for OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub struct OwnedReadHalf {$/;"	s
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T, U> Send for OwnedRwLockMappedWriteGuard<T, U>$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T, U> Sync for OwnedRwLockMappedWriteGuard<T, U>$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> Drop for OwnedRwLockMappedWriteGuard<T, U> {$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> OwnedRwLockMappedWriteGuard<T, U> {$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> fmt::Debug for OwnedRwLockMappedWriteGuard<T, U>$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> fmt::Display for OwnedRwLockMappedWriteGuard<T, U>$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> ops::Deref for OwnedRwLockMappedWriteGuard<T, U> {$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> ops::DerefMut for OwnedRwLockMappedWriteGuard<T, U> {$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^pub struct OwnedRwLockMappedWriteGuard<T: ?Sized, U: ?Sized = T> {$/;"	s
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T, U> Send for OwnedRwLockReadGuard<T, U>$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T, U> Sync for OwnedRwLockReadGuard<T, U>$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> Drop for OwnedRwLockReadGuard<T, U> {$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> OwnedRwLockReadGuard<T, U> {$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> fmt::Debug for OwnedRwLockReadGuard<T, U>$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> fmt::Display for OwnedRwLockReadGuard<T, U>$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> ops::Deref for OwnedRwLockReadGuard<T, U> {$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^pub struct OwnedRwLockReadGuard<T: ?Sized, U: ?Sized = T> {$/;"	s
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for OwnedRwLockWriteGuard<T> where T: ?Sized + Send + Sync {}$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for OwnedRwLockWriteGuard<T> where T: ?Sized + Send + Sync {}$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> Drop for OwnedRwLockWriteGuard<T> {$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> OwnedRwLockWriteGuard<T> {$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> fmt::Debug for OwnedRwLockWriteGuard<T>$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> fmt::Display for OwnedRwLockWriteGuard<T>$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> ops::Deref for OwnedRwLockWriteGuard<T> {$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> ops::DerefMut for OwnedRwLockWriteGuard<T> {$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^pub struct OwnedRwLockWriteGuard<T: ?Sized> {$/;"	s
OwnedSemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl Drop for OwnedSemaphorePermit {$/;"	c
OwnedSemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl OwnedSemaphorePermit {$/;"	c
OwnedSemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^pub struct OwnedSemaphorePermit {$/;"	s
OwnedTasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^impl<S: 'static> OwnedTasks<S> {$/;"	c
OwnedTasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^pub(crate) struct OwnedTasks<S: 'static> {$/;"	s
OwnedTasksInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^struct OwnedTasksInner<S: 'static> {$/;"	s
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl AsRef<TcpStream> for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl AsyncWrite for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl Drop for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub struct OwnedWriteHalf {$/;"	s
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl AsRef<UnixStream> for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl AsyncWrite for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl Drop for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub struct OwnedWriteHalf {$/;"	s
PANICKING_VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^    static PANICKING_VTABLE: RawWakerVTable = RawWakerVTable::new($/;"	v	function:atomic_waker_panic_safe
PANICKING_VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^    static PANICKING_VTABLE: RawWakerVTable =$/;"	v	function:test_panicky_waker
POW10	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^static POW10: [f64; 309] = [$/;"	v
Pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^impl Pack {$/;"	c
Pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^impl fmt::Debug for Pack {$/;"	c
Pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^pub(crate) struct Pack {$/;"	s
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T: Entry> Page<T> {$/;"	c
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Default for Page<T> {$/;"	c
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Page<T> {$/;"	c
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct Page<T> {$/;"	s
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Send for Page<T> {}$/;"	c
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Sync for Page<T> {}$/;"	c
Pagination	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^        struct Pagination {$/;"	s	function:tests::test_query
Pagination	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    struct Pagination {$/;"	s	module:tests
Pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub trait Pair {$/;"	i	module:private
PairDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        impl<'de> SeqAccess<'de> for PairDeserializer<'de> {$/;"	c	method:ValueDeserializer::deserialize_tuple
PairDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        struct PairDeserializer<'de> {$/;"	s	method:ValueDeserializer::deserialize_tuple
PairDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, A, B, E> de::Deserializer<'de> for PairDeserializer<A, B, E>$/;"	c
PairDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, A, B, E> de::SeqAccess<'de> for PairVisitor<A, B, E>$/;"	c
PairVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
Panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    Panic(SyncWrapper<Box<dyn Any + Send + 'static>>),$/;"	e	enum:Repr
PanicOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    PanicOnDrop,$/;"	e	enum:CombiOutput
PanicOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    PanicOnDrop,$/;"	e	enum:CombiTask
PanicOnRun	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    PanicOnRun,$/;"	e	enum:CombiTask
PanicOnRunAndDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    PanicOnRunAndDrop,$/;"	e	enum:CombiTask
PanickingWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    impl ArcWake for PanickingWaker {$/;"	c	function:notify_waiters_handles_panicking_waker
PanickingWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    struct PanickingWaker(Arc<Notify>);$/;"	s	function:notify_waiters_handles_panicking_waker
Param	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^        impl<'de> serde::Deserialize<'de> for Param {$/;"	c	function:tests::str_reference_deserialize
Param	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^        struct Param(String);$/;"	s	function:tests::str_reference_deserialize
Params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        struct Params {$/;"	s	function:tests::test_parse_error_at_key_error
Params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        struct Params {$/;"	s	function:tests::test_parse_error_at_key_error_multiple
Params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^        struct Params {$/;"	s	function:tests::type_that_uses_deserialize_any
Params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^        struct Params {$/;"	s	function:tests::correct_rejection_status_code
Params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/url_params.rs	/^    Params(Vec<(Arc<str>, PercentDecodedStr)>),$/;"	e	enum:UrlParams
ParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl Default for ParkThread {$/;"	c
ParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl ParkThread {$/;"	c
ParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^pub(crate) struct ParkThread {$/;"	s
Parker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^impl Clone for Parker {$/;"	c
Parker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^impl Parker {$/;"	c
Parker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^pub(crate) struct Parker {$/;"	s
ParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    ParseError {$/;"	e	enum:ErrorKind
ParseErrorAtIndex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    ParseErrorAtIndex {$/;"	e	enum:ErrorKind
ParseErrorAtKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    ParseErrorAtKey {$/;"	e	enum:ErrorKind
ParserNumber	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl ParserNumber {$/;"	c
ParserNumber	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^pub(crate) enum ParserNumber {$/;"	g
Path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl<T, S> FromRequestParts<S> for Path<T>$/;"	c
Path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^pub struct Path<T>(pub T);$/;"	s
Path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a Path {$/;"	c
Path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for Path {$/;"	c
PathBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for PathBuf {$/;"	c
PathBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for PathBuf {$/;"	c
PathBufVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Visitor<'de> for PathBufVisitor {$/;"	c
PathBufVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathDeserializationError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl PathDeserializationError {$/;"	c
PathDeserializationError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl fmt::Display for PathDeserializationError {$/;"	c
PathDeserializationError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl serde::de::Error for PathDeserializationError {$/;"	c
PathDeserializationError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl std::error::Error for PathDeserializationError {}$/;"	c
PathDeserializationError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^pub(crate) struct PathDeserializationError {$/;"	s
PathDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^impl<'de> Deserializer<'de> for PathDeserializer<'de> {$/;"	c
PathDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^impl<'de> PathDeserializer<'de> {$/;"	c
PathDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^pub(crate) struct PathDeserializer<'de> {$/;"	s
PathRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^impl<B, S> Default for PathRouter<S, B> {$/;"	c
PathRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^impl<S, B> Clone for PathRouter<S, B> {$/;"	c
PathRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^impl<S, B> PathRouter<S, B>$/;"	c
PathRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^impl<S, B> fmt::Debug for PathRouter<S, B> {$/;"	c
PathRouter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^pub(super) struct PathRouter<S = (), B = Body> {$/;"	s
PathVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'a> Visitor<'a> for PathVisitor {$/;"	c
PathVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct PathVisitor;$/;"	s
Payload	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^        struct Payload {$/;"	s	function:tests::deserialize_error_status_codes
Pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    Pending(JoinHandle<(VecDeque<io::Result<DirEntry>>, StdReadDir)>),$/;"	e	enum:State
Pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    Pending,$/;"	e	enum:SeekState
Pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    Pending,$/;"	e	enum:SeekState
PendingOverflowed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    PendingOverflowed(i64),$/;"	e	enum:SeekState
PercentDecodedStr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^impl Deref for PercentDecodedStr {$/;"	c
PercentDecodedStr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^impl PercentDecodedStr {$/;"	c
PercentDecodedStr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^pub(crate) struct PercentDecodedStr(Arc<str>);$/;"	s
Permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Drop for Permit<'_, T> {$/;"	c
Permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Permit<'_, T> {$/;"	c
Permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for Permit<'_, T> {$/;"	c
Permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct Permit<'a, T> {$/;"	s
PhantomData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for PhantomData<T> {$/;"	c
PhantomData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl<'de, T> DeserializeSeed<'de> for PhantomData<T>$/;"	c
PhantomData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for PhantomData<T> {$/;"	c
PhantomDataVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T: ?Sized> Visitor<'de> for PhantomDataVisitor<T> {$/;"	c
PhantomDataVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl<P> AsyncBufRead for Pin<P>$/;"	c
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl<P> AsyncRead for Pin<P>$/;"	c
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^impl<P> AsyncSeek for Pin<P>$/;"	c
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl<P> AsyncWrite for Pin<P>$/;"	c
Ping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    Ping(Vec<u8>),$/;"	e	enum:Message
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl AsyncRead for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl AsyncWrite for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^struct Pipe {$/;"	s
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsFd for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsRawFd for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Source for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl<'a> io::Read for &'a Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl<'a> io::Write for &'a Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl<T: IntoRawFd> From<T> for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) struct Pipe {$/;"	s
PipeEnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^enum PipeEnd {$/;"	g
PipeEnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub enum PipeEnd {$/;"	g
PipeInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct PipeInfo {$/;"	s
PipeMode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub enum PipeMode {$/;"	g
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^struct Pointers {$/;"	s
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<T> Pointers<T> {$/;"	c
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<T> fmt::Debug for Pointers<T> {$/;"	c
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^pub(crate) struct Pointers<T> {$/;"	s
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^unsafe impl<T: Send> Send for Pointers<T> {}$/;"	c
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^unsafe impl<T: Sync> Sync for Pointers<T> {}$/;"	c
PointersInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^struct PointersInner<T> {$/;"	s
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source + fmt::Debug> fmt::Debug for PollEvented<E> {$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> Deref for PollEvented<E> {$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> Drop for PollEvented<E> {$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> PollEvented<E> {$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> RefUnwindSafe for PollEvented<E> {}$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> UnwindSafe for PollEvented<E> {}$/;"	c
PollFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^impl<F> fmt::Debug for PollFn<F> {$/;"	c
PollFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^impl<T, F> Future for PollFn<F>$/;"	c
PollFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^pub struct PollFn<F> {$/;"	s
PollFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^enum PollFuture {$/;"	g
Polled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    Polled,$/;"	e	enum:CombiJoinInterest
Pong	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    Pong(Vec<u8>),$/;"	e	enum:Message
Pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^            Pop,$/;"	e	enum:tests::fuzz_linked_list::Op
PosInt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    PosInt(u64),$/;"	e	enum:N
Position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^pub struct Position {$/;"	s
Push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^            Push,$/;"	e	enum:tests::fuzz_linked_list::Op
Query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^impl<T, S> FromRequestParts<S> for Query<T>$/;"	c
Query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^pub struct Query<T>(pub T);$/;"	s
Quote	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    Quote,$/;"	e	enum:CharEscape
Quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^impl Write for Quoted<&mut fmt::Formatter<'_>> {$/;"	c
Quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^impl<C> Debug for Quoted<C>$/;"	c
Quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^struct Quoted<C>(C);$/;"	s
R	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a, 'de, R> Read<'de> for &'a mut R$/;"	c
R	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a, 'de, R> private::Sealed for &'a mut R where R: Read<'de> {}$/;"	c
R	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/async_buf_read_ext.rs	/^impl<R: AsyncBufRead + ?Sized> AsyncBufReadExt for R {}$/;"	c
R	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/async_read_ext.rs	/^impl<R: AsyncRead + ?Sized> AsyncReadExt for R {}$/;"	c
Range	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for Range<Idx>$/;"	c
Range	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<Idx> Serialize for Range<Idx>$/;"	c
RangeInclusive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for RangeInclusive<Idx>$/;"	c
RangeInclusive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<Idx> Serialize for RangeInclusive<Idx>$/;"	c
RangeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    impl<'de, Idx> Visitor<'de> for RangeVisitor<Idx>$/;"	c	module:range
RangeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s	module:range
RawBody	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^impl<S, B> FromRequest<S, B> for RawBody<B>$/;"	c
RawBody	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^pub struct RawBody<B = Body>(pub B);$/;"	s
RawForm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^impl<S, B> FromRequest<S, B> for RawForm$/;"	c
RawForm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^pub struct RawForm(pub Bytes);$/;"	s
RawHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub type RawHandle = crate::doc::NotDefinedHere;$/;"	t	module:windows::io
RawKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> Deserialize<'de> for RawKey {$/;"	c
RawKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^struct RawKey;$/;"	s
RawKeyDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> Deserializer<'de> for RawKeyDeserializer {$/;"	c
RawKeyDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^struct RawKeyDeserializer;$/;"	s
RawPathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl RawPathParams {$/;"	c
RawPathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl<'a> IntoIterator for &'a RawPathParams {$/;"	c
RawPathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl<S> FromRequestParts<S> for RawPathParams$/;"	c
RawPathParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^pub struct RawPathParams(Vec<(Arc<str>, PercentDecodedStr)>);$/;"	s
RawPathParamsIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl<'a> Iterator for RawPathParamsIter<'a> {$/;"	c
RawPathParamsIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^pub struct RawPathParamsIter<'a>(std::slice::Iter<'a, (Arc<str>, PercentDecodedStr)>);$/;"	s
RawQuery	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_query.rs	/^impl<S> FromRequestParts<S> for RawQuery$/;"	c
RawQuery	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_query.rs	/^pub struct RawQuery(pub Option<String>);$/;"	s
RawSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub type RawSocket = crate::doc::NotDefinedHere;$/;"	t	module:windows::io
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^impl RawTask {$/;"	c
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^impl Clone for RawTask {$/;"	c
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^impl Copy for RawTask {}$/;"	c
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^impl RawTask {$/;"	c
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^pub(super) struct RawTask {$/;"	s
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl Debug for RawValue {$/;"	c
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl Display for RawValue {$/;"	c
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl RawValue {$/;"	c
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl Serialize for RawValue {$/;"	c
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl ToOwned for RawValue {$/;"	c
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a RawValue {$/;"	c
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^pub struct RawValue {$/;"	s
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    RawValue { ser: &'a mut Serializer<W, F> },$/;"	e	enum:Compound
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    RawValue,$/;"	e	enum:KeyClass
RawValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    RawValue { out_value: Option<Value> },$/;"	e	enum:SerializeMap
RawValueEmitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::Serializer for RawValueEmitter {$/;"	c
RawValueEmitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^struct RawValueEmitter;$/;"	s
RawValueStrEmitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W: io::Write, F: Formatter> ser::Serializer for RawValueStrEmitter<'a, W, F> {$/;"	c
RawValueStrEmitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^struct RawValueStrEmitter<'a, W: 'a + io::Write, F: 'a + Formatter>(&'a mut Serializer<W, F>);$/;"	s
RcCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^impl<T> RcCell<T> {$/;"	c
RcCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^pub(crate) struct RcCell<T> {$/;"	s
RcWeak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for RcWeak<T>$/;"	c
RcWeak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for RcWeak<T>$/;"	c
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^pub trait Read<'de>: private::Sealed {$/;"	i
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Read(io::Result<usize>),$/;"	e	enum:Operation
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read.rs	/^impl<R> Future for Read<'_, R>$/;"	c
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    Read,$/;"	e	enum:Direction
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^pub(crate) enum Read<T> {$/;"	g
ReadBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^impl fmt::Debug for ReadBuf<'_> {$/;"	c
ReadBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^impl<'a> ReadBuf<'a> {$/;"	c
ReadBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^pub struct ReadBuf<'a> {$/;"	s
ReadBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_buf.rs	/^impl<R, B> Future for ReadBuf<'_, R, B>$/;"	c
ReadBufParts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^pub(crate) struct ReadBufParts {$/;"	s
ReadDir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^impl ReadDir {$/;"	c
ReadDir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^pub struct ReadDir(State);$/;"	s
ReadExact	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^impl<A> Future for ReadExact<'_, A>$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T: AsyncRead> AsyncRead for ReadHalf<T> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T: fmt::Debug> fmt::Debug for ReadHalf<T> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> ReadHalf<T> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^unsafe impl<T: Send> Send for ReadHalf<T> {}$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^unsafe impl<T: Sync> Sync for ReadHalf<T> {}$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl AsRef<TcpStream> for ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl AsyncRead for ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^pub struct ReadHalf<'a>(&'a TcpStream);$/;"	s
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl AsRef<UnixStream> for ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl AsyncRead for ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^pub struct ReadHalf<'a>(&'a UnixStream);$/;"	s
ReadLine	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^impl<R: AsyncBufRead + ?Sized + Unpin> Future for ReadLine<'_, R> {$/;"	c
ReadToEnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^impl<A> Future for ReadToEnd<'_, A>$/;"	c
ReadToString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^impl<A> Future for ReadToString<'_, A>$/;"	c
ReadUntil	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^impl<R: AsyncBufRead + ?Sized + Unpin> Future for ReadUntil<'_, R> {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl fmt::Debug for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl ops::BitAnd<Ready> for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl ops::BitOr<Ready> for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl ops::BitOrAssign<Ready> for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl ops::Sub<Ready> for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^pub struct Ready(usize);$/;"	s
ReadyEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^pub(crate) struct ReadyEvent {$/;"	s
ReadyFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^type ReadyFuture<T> = future::Ready<io::Result<T>>;$/;"	t
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Deref for Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Drop for Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Future for Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Kill for Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^pub(crate) struct Reaper<W, Q, S>$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    Receiver,$/;"	e	enum:PipeEnd
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsFd for Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsRawFd for Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsyncRead for Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^pub struct Receiver {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^impl Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^pub(super) struct Receiver {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^pub(crate) struct Receiver<T> {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T: Clone> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Drop for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> fmt::Debug for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<T: Send> Send for Receiver<T> {}$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<T: Send> Sync for Receiver<T> {}$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Unpin for Receiver<T> {}$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Drop for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Future for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Clone for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Drop for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub struct Receiver<T> {$/;"	s
RecursionLimitExceeded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    RecursionLimitExceeded,$/;"	e	enum:ErrorCode
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> Drop for Recv<'a, T> {$/;"	c
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> Future for Recv<'a, T>$/;"	c
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> Recv<'a, T> {$/;"	c
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Recv<'a, T> {$/;"	s
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<'a, T: Send> Send for Recv<'a, T> {}$/;"	c
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<'a, T: Send> Sync for Recv<'a, T> {}$/;"	c
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl fmt::Display for RecvError {$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl std::error::Error for RecvError {}$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub enum RecvError {$/;"	g	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl Error for RecvError {}$/;"	c
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl fmt::Display for RecvError {$/;"	c
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^pub struct RecvError(());$/;"	s
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    impl fmt::Display for RecvError {$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    impl std::error::Error for RecvError {}$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub struct RecvError(pub(super) ());$/;"	s	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl fmt::Display for RecvError {$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl std::error::Error for RecvError {}$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub struct RecvError(pub(super) ());$/;"	s	module:error
RecvGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> Drop for RecvGuard<'a, T> {$/;"	c
RecvGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> RecvGuard<'a, T> {$/;"	c
RecvGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct RecvGuard<'a, T> {$/;"	s
Redirect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^impl IntoResponse for Redirect {$/;"	c
Redirect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^impl Redirect {$/;"	c
Redirect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^pub struct Redirect {$/;"	s
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<'a, T> Clone for Ref<'a, T>$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<'a, T> Copy for Ref<'a, T> where T: ?Sized {}$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<'a, T> Ref<'a, T>$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^pub struct Ref<'a, T>$/;"	s
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<'a, T> Ref<'a, T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> ops::Deref for Ref<'_, T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub struct Ref<'a, T> {$/;"	s
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T: fmt::Debug> fmt::Debug for Ref<T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Drop for Ref<T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> ops::Deref for Ref<T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) struct Ref<T> {$/;"	s
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Send for Ref<T> {}$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Sync for Ref<T> {}$/;"	c
RefCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for RefCell<T>$/;"	c
Reference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'b, 'c, T> Deref for Reference<'b, 'c, T>$/;"	c
Reference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^pub enum Reference<'b, 'c, T>$/;"	g
ReferenceFromString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> DeserializeSeed<'de> for ReferenceFromString {$/;"	c
ReferenceFromString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^impl<'de> Visitor<'de> for ReferenceFromString {$/;"	c
ReferenceFromString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^pub struct ReferenceFromString;$/;"	s
ReferenceVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^        impl<'de> Visitor<'de> for ReferenceVisitor {$/;"	c	method:RawValue::deserialize
ReferenceVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^        struct ReferenceVisitor;$/;"	s	method:RawValue::deserialize
Registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^impl Drop for Registration {$/;"	c
Registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^impl Registration {$/;"	c
Registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^unsafe impl Send for Registration {}$/;"	c
Registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^unsafe impl Sync for Registration {}$/;"	c
Registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl<S: Storage> Registry<S> {$/;"	c
Registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl<S> Registry<S> {$/;"	c
Registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) struct Registry<S> {$/;"	s
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    type Rejection = ExtensionRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    type Rejection = <Extension<Self> as FromRequestParts<S>>::Rejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    type Rejection = HostRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    type Rejection = MatchedPathRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    type Rejection = MultipartRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    type Rejection = PathRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    type Rejection = RawPathParamsRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^    type Rejection = QueryRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^    type Rejection = RawFormRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_query.rs	/^    type Rejection = Infallible;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^    type Rejection = Infallible;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^    type Rejection = Infallible;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    type Rejection = WebSocketUpgradeRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    type Rejection = FormRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    type Rejection = JsonRejection;$/;"	t
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^            type Rejection = StatusCode;$/;"	t	function:tests::test_from_extractor
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^            type Rejection = std::convert::Infallible;$/;"	t	function:tests::works_with_request_body_limit
Rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    type Rejection = TypedHeaderRejection;$/;"	t
RejectionEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    struct RejectionEvent {$/;"	s	function:logging_rejections
ReleaseOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^    impl ArcWake for ReleaseOnDrop {$/;"	c	function:release_permits_at_drop
ReleaseOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^    struct ReleaseOnDrop(Option<OwnedSemaphorePermit>);$/;"	s	function:release_permits_at_drop
Remote	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^struct Remote {$/;"	s
Remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^            Remove(usize),$/;"	e	enum:tests::fuzz_linked_list::Op
Repeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/repeat.rs	/^impl AsyncRead for Repeat {$/;"	c
Repr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^enum Repr {$/;"	g
Request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    impl<B> Sealed<B> for Request<B> {}$/;"	c	module:private
Request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl<B> IntoMapRequestResult<B> for Request<B> {$/;"	c
RequestBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^impl RequestBuilder {$/;"	c
RequestBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^pub(crate) struct RequestBuilder {$/;"	s
RequireAuth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^        impl<S> FromRequestParts<S> for RequireAuth$/;"	c	function:tests::test_from_extractor
RequireAuth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^        struct RequireAuth;$/;"	s	function:tests::test_from_extractor
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^        impl Drop for Reset {$/;"	c	method:ScopedKey::set
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^        struct Reset {$/;"	s	method:ScopedKey::set
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    impl Drop for Reset {$/;"	c	function:block_in_place
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    struct Reset(coop::Budget);$/;"	s	function:block_in_place
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    impl Drop for Reset {$/;"	c	function:with
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    struct Reset;$/;"	s	function:with
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^            impl<'a> Drop for Reset<'a> {$/;"	c	method:LocalSet::with
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^            impl<'a> Drop for Reset<'a> {$/;"	c	method:LocalSet::with_if_possible
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^            struct Reset<'a> {$/;"	s	method:LocalSet::with
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^            struct Reset<'a> {$/;"	s	method:LocalSet::with_if_possible
ResetFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^impl Future for ResetFuture {$/;"	c
ResetFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^struct ResetFuture {$/;"	s
ResetGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    impl Drop for ResetGuard {$/;"	c	function:with_budget
ResetGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    struct ResetGuard {$/;"	s	function:with_budget
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    type Response = Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    type Response = S::Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    type Response = AddExtension<S, ConnectInfo<C>>;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    type Response = Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    type Response = Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    type Response = Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    type Response = Response;$/;"	t	implementation:Next
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^    type Response = S;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    type Response = Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    type Response = Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/not_found.rs	/^    type Response = Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    type Response = Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    type Response = S::Response;$/;"	t
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^    type Response = Response<Body>;$/;"	t	implementation:Svc
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        type Response = Response<Empty<Bytes>>;$/;"	t	implementation:wrong_method_service::Svc
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        type Response = S::Response;$/;"	t	function:middleware_still_run_for_unmatched_requests
Response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^        type Response = S::Response;$/;"	t	function:outer_middleware_still_see_whole_url
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^impl<B, T, E, S> Future for ResponseFuture<B, T, E, S>$/;"	c
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl Future for ResponseFuture {$/;"	c
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^impl fmt::Debug for ResponseFuture {$/;"	c
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^pub struct ResponseFuture {$/;"	s
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl Future for ResponseFuture {$/;"	c
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl fmt::Debug for ResponseFuture {$/;"	c
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^pub struct ResponseFuture {$/;"	s
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^impl Future for ResponseFuture {$/;"	c
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^impl fmt::Debug for ResponseFuture {$/;"	c
ResponseFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^pub struct ResponseFuture {$/;"	s
Rest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    Rest,$/;"	e	enum:State
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    impl<T, E> Sealed for Result<T, E> where E: ext::StdError {}$/;"	c	module:private
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^impl<T, E> Context<T, E> for Result<T, E>$/;"	c
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^pub type Result<T, E = Error> = core::result::Result<T, E>;$/;"	t
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    impl<B, E> Sealed<B> for Result<Request<B>, E> where E: IntoResponse {}$/;"	c	module:private
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^impl<B, E> IntoMapRequestResult<B> for Result<Request<B>, E>$/;"	c
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T, E> Deserialize<'de> for Result<T, E>$/;"	c
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T, E> Serialize for Result<T, E>$/;"	c
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	t
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^pub type Result<T> = result::Result<T, Error>;$/;"	t
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) type Result<T> = std::result::Result<T, JoinError>;$/;"	t
ResultVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'de, T, E> Visitor<'de> for ResultVisitor<T, E>$/;"	c	function:deserialize
ResultVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s	function:deserialize
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl Error for ReuniteError {}$/;"	c
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl fmt::Display for ReuniteError {$/;"	c
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub struct ReuniteError(pub OwnedReadHalf, pub OwnedWriteHalf);$/;"	s
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl Error for ReuniteError {}$/;"	c
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl fmt::Display for ReuniteError {$/;"	c
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub struct ReuniteError(pub OwnedReadHalf, pub OwnedWriteHalf);$/;"	s
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> Drop for ReusableBoxFuture<T> {$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> Future for ReusableBoxFuture<T> {$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> ReusableBoxFuture<T> {$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> Unpin for ReusableBoxFuture<T> {}$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> fmt::Debug for ReusableBoxFuture<T> {$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^pub(crate) struct ReusableBoxFuture<T> {$/;"	s
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^unsafe impl<T> Send for ReusableBoxFuture<T> {}$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^unsafe impl<T> Sync for ReusableBoxFuture<T> {}$/;"	c
Reverse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T> Serialize for Reverse<T>$/;"	c
ReverseSolidus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    ReverseSolidus,$/;"	e	enum:CharEscape
RngSeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^impl RngSeed {$/;"	c
RngSeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^pub struct RngSeed {$/;"	s
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    Route(Route<B, E>),$/;"	e	enum:MethodEndpoint
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    Route(Route<B>),$/;"	e	enum:Endpoint
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^impl<B, E> Clone for Route<B, E> {$/;"	c
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^impl<B, E> Route<B, E> {$/;"	c
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^impl<B, E> Service<Request<B>> for Route<B, E>$/;"	c
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^impl<B, E> fmt::Debug for Route<B, E> {$/;"	c
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^pub struct Route<B = Body, E = Infallible>(BoxCloneService<Request<B>, Response, E>);$/;"	s
RouteFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^impl<B, E> Future for RouteFuture<B, E>$/;"	c
RouteFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^impl<B, E> RouteFuture<B, E> {$/;"	c
RouteId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^pub(crate) struct RouteId(u32);$/;"	s
Router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<B> Router<(), B>$/;"	c
Router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<B> Service<Request<B>> for Router<(), B>$/;"	c
Router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B> Clone for Router<S, B> {$/;"	c
Router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B> Default for Router<S, B>$/;"	c
Router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B> Router<S, B>$/;"	c
Router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^impl<S, B> fmt::Debug for Router<S, B> {$/;"	c
Router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^pub struct Router<S = (), B = Body> {$/;"	s
Rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl Rt {$/;"	c	function:test_combination
Rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    struct Rt {$/;"	s	function:test_combination
RunResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^type RunResult = Result<Box<Core>, ()>;$/;"	t
RunUntil	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl<T: Future> Future for RunUntil<'_, T> {$/;"	c
Running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^    Running(CopyBuffer),$/;"	e	enum:TransferState
Running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    Running(T),$/;"	e	enum:Stage
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^impl Drop for Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^impl Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^pub struct Runtime {$/;"	s
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^impl Schedule for Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^struct Runtime;$/;"	s
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl Schedule for Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct Runtime(Arc<Inner>);$/;"	s
RuntimeFlavor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^pub enum RuntimeFlavor {$/;"	g
RuntimeMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^impl RuntimeMetrics {$/;"	c
RuntimeMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^pub struct RuntimeMetrics {$/;"	s
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for RwLock<T>$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<T> RwLock<T> {$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct RwLock<T>(PhantomData<std::sync::RwLock<T>>, parking_lot::RwLock<T>);$/;"	s
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^impl<T: ?Sized> Default for RwLock<T>$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^impl<T: ?Sized> RwLock<T> {$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^impl<T> From<T> for RwLock<T> {$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub struct RwLock<T: ?Sized> {$/;"	s
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for RwLock<T> where T: ?Sized + Send {}$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for RwLock<T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for RwLockMappedWriteGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for RwLockMappedWriteGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<'a, T: ?Sized> Drop for RwLockMappedWriteGuard<'a, T> {$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<'a, T: ?Sized> RwLockMappedWriteGuard<'a, T> {$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<'a, T: ?Sized> fmt::Debug for RwLockMappedWriteGuard<'a, T>$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<'a, T: ?Sized> fmt::Display for RwLockMappedWriteGuard<'a, T>$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<T: ?Sized> ops::Deref for RwLockMappedWriteGuard<'_, T> {$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<T: ?Sized> ops::DerefMut for RwLockMappedWriteGuard<'_, T> {$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^pub struct RwLockMappedWriteGuard<'a, T: ?Sized> {$/;"	s
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized + fmt::Display> fmt::Display for RwLockReadGuard<'a, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> Deref for RwLockReadGuard<'a, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct RwLockReadGuard<'a, T: ?Sized>($/;"	s
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for RwLockReadGuard<'_, T> where T: ?Sized + Sync {}$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for RwLockReadGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<'a, T: ?Sized> Drop for RwLockReadGuard<'a, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<'a, T: ?Sized> RwLockReadGuard<'a, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<'a, T: ?Sized> fmt::Debug for RwLockReadGuard<'a, T>$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<'a, T: ?Sized> fmt::Display for RwLockReadGuard<'a, T>$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<T: ?Sized> ops::Deref for RwLockReadGuard<'_, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^pub struct RwLockReadGuard<'a, T: ?Sized> {$/;"	s
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized + fmt::Display> fmt::Display for RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> Deref for RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> DerefMut for RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct RwLockWriteGuard<'a, T: ?Sized>($/;"	s
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for RwLockWriteGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for RwLockWriteGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<'a, T: ?Sized> Drop for RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<'a, T: ?Sized> RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<'a, T: ?Sized> fmt::Debug for RwLockWriteGuard<'a, T>$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<'a, T: ?Sized> fmt::Display for RwLockWriteGuard<'a, T>$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<T: ?Sized> ops::Deref for RwLockWriteGuard<'_, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<T: ?Sized> ops::DerefMut for RwLockWriteGuard<'_, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^pub struct RwLockWriteGuard<'a, T: ?Sized> {$/;"	s
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: Semaphore + fmt::Debug> fmt::Debug for Rx<T, S> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: Semaphore> Drop for Rx<T, S> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: Semaphore> Rx<T, S> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(crate) struct Rx<T, S: Semaphore> {$/;"	s
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^impl<T> Rx<T> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^impl<T> fmt::Debug for Rx<T> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^pub(crate) struct Rx<T> {$/;"	s
RxFields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T> fmt::Debug for RxFields<T> {$/;"	c
RxFields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^struct RxFields<T> {$/;"	s
RxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^impl RxFuture {$/;"	c
RxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^struct RxFuture {$/;"	s
S	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/service_ext.rs	/^impl<S, R> ServiceExt<R> for S$/;"	c
S	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/async_seek_ext.rs	/^impl<S: AsyncSeek + ?Sized> AsyncSeekExt for S {}$/;"	c
SETUP_DONE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    static SETUP_DONE: AtomicBool = AtomicBool::new(false);$/;"	v	function:state_isnt_cloned_too_much
Schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) trait Schedule: Sync + Sized + 'static {$/;"	i
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^impl Default for ScheduledIo {$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^impl Drop for ScheduledIo {$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^impl Entry for ScheduledIo {$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^impl ScheduledIo {$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^pub(crate) struct ScheduledIo {$/;"	s
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^unsafe impl Send for ScheduledIo {}$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^unsafe impl Sync for ScheduledIo {}$/;"	c
Scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^pub(super) enum Scheduler {$/;"	g
SchedulerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^impl SchedulerMetrics {$/;"	c
SchedulerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^pub(crate) struct SchedulerMetrics {}$/;"	s
SchedulerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^impl SchedulerMetrics {$/;"	c
SchedulerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^pub(crate) struct SchedulerMetrics {$/;"	s
Schema	/home/trey/code/sqlx-crud/src/traits.rs	/^pub trait Schema {$/;"	i
ScopeInnerErr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^enum ScopeInnerErr {$/;"	g
ScopeInnerErr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl From<std::cell::BorrowMutError> for ScopeInnerErr {$/;"	c
ScopeInnerErr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl From<std::thread::AccessError> for ScopeInnerErr {$/;"	c
ScopeInnerErr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl ScopeInnerErr {$/;"	c
ScopedKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^impl<T> ScopedKey<T> {$/;"	c
ScopedKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^pub(crate) struct ScopedKey<T> {$/;"	s
ScopedKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^unsafe impl<T> Sync for ScopedKey<T> {}$/;"	c
Sealed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    pub trait Sealed {}$/;"	i	module:private
Sealed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    pub trait Sealed<B> {}$/;"	i	module:private
Sealed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    pub trait Sealed {}$/;"	i	module:private
Sealed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    pub trait Sealed {}$/;"	i	module:private
Second	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    Second(T),$/;"	e	enum:Item
Second	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        type Second = B;$/;"	t	implementation:private::B
Second	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        type Second;$/;"	t	interface:private::Pair
Second	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	t	module:private
Secret	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^        struct Secret(&'static str);$/;"	s	function:tests::test_from_extractor
Secs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Secs,$/;"	e	enum:Duration::deserialize::Field
Secs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Secs,$/;"	e	enum:SystemTime::deserialize::Field
SeedStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedStructVariant<V>$/;"	c	module:private
SeedStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s	module:private
SeedTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedTupleVariant<V>$/;"	c	module:private
SeedTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s	module:private
Seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Seek(io::Result<u64>),$/;"	e	enum:Operation
Seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/seek.rs	/^impl<S> Future for Seek<'_, S>$/;"	c
SeekState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^pub(super) enum SeekState {$/;"	g
SeekState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^pub(super) enum SeekState {$/;"	g
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl fmt::Debug for Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^pub(crate) struct Semaphore {$/;"	s
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub(crate) struct Semaphore {$/;"	s
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl Semaphore for bounded::Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl Semaphore for unbounded::Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(crate) trait Semaphore {$/;"	i
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub(crate) struct Semaphore(pub(crate) AtomicUsize);$/;"	s
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^pub struct Semaphore {$/;"	s
SemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl Drop for SemaphorePermit<'_> {$/;"	c
SemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl<'a> SemaphorePermit<'a> {$/;"	c
SemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^pub struct SemaphorePermit<'a> {$/;"	s
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl<T: fmt::Debug> std::error::Error for SendError<T> {}$/;"	c	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl<T> fmt::Display for SendError<T> {$/;"	c	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub struct SendError<T>(pub T);$/;"	s	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T: fmt::Debug> std::error::Error for SendError<T> {}$/;"	c
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T> fmt::Display for SendError<T> {$/;"	c
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^pub struct SendError<T>(pub T);$/;"	s
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl<T: fmt::Debug> fmt::Display for SendError<T> {$/;"	c	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl<T: fmt::Debug> std::error::Error for SendError<T> {}$/;"	c	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub struct SendError<T>(pub T);$/;"	s	module:error
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    Sender,$/;"	e	enum:PipeEnd
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsFd for Sender {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsRawFd for Sender {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsyncWrite for Sender {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl Sender {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^pub struct Sender {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^pub(super) struct Sender {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^pub(crate) struct Sender<T> {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Clone for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Drop for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> fmt::Debug for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<T: Send> Send for Sender<T> {}$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<T: Send> Sync for Sender<T> {}$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Clone for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Drop for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Drop for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub struct Sender<T> {$/;"	s
Seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Seq,$/;"	e	enum:Unexpected
Seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Seq(Vec<Content<'de>>),$/;"	e	enum:content::Content
Seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Seq(Vec<Content>),$/;"	e	enum:content::Content
SeqAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	i
SeqAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'a, R: 'a> SeqAccess<'a, R> {$/;"	c
SeqAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::SeqAccess<'de> for SeqAccess<'a, R> {$/;"	c
SeqAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^struct SeqAccess<'a, R: 'a> {$/;"	s
SeqAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for SeqAccessDeserializer<A>$/;"	c
SeqAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<A> SeqAccessDeserializer<A> {$/;"	c
SeqAccessDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^impl<'de> SeqAccess<'de> for SeqDeserializer<'de> {$/;"	c
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^struct SeqDeserializer<'de> {$/;"	s
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, I, T, E> de::Deserializer<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, I, T, E> de::SeqAccess<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<I, E> Debug for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<I, E> SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> de::SeqAccess<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s	module:content
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl SeqDeserializer {$/;"	c
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> SeqAccess<'de> for SeqDeserializer {$/;"	c
SeqDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct SeqDeserializer {$/;"	s
SeqRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'a, 'de, E> SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a, E> de::SeqAccess<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
SeqRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> SeqAccess<'de> for SeqRefDeserializer<'de> {$/;"	c
SeqRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> SeqRefDeserializer<'de> {$/;"	c
SeqRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct SeqRefDeserializer<'de> {$/;"	s
Sequence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    Sequence,$/;"	e	enum:Unsupported
Serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for ! {$/;"	c
Serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for () {$/;"	c
Serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait Serialize {$/;"	i
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	t	module:content
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> ser::SerializeMap for SerializeMap<E>$/;"	c	module:content
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s	module:content
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	t
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	t
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type SerializeMap = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	i
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeMap = Compound<'a, W, F>;$/;"	t
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	t
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeMap = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeMap = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeMap = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeMap = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeMap = SerializeMap;$/;"	t	implementation:Serializer
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::SerializeMap for SerializeMap {$/;"	c
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::SerializeStruct for SerializeMap {$/;"	c
SerializeMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^pub enum SerializeMap {$/;"	g
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	t	module:content
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> ser::SerializeSeq for SerializeSeq<E>$/;"	c	module:content
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s	module:content
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	t
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type SerializeSeq = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	i
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeSeq = Compound<'a, W, F>;$/;"	t
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	t
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeSeq = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeSeq = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeSeq = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeSeq = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeSeq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeSeq = SerializeVec;$/;"	t	implementation:Serializer
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	t	module:content
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> ser::SerializeStruct for SerializeStruct<E>$/;"	c	module:content
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s	module:content
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	t
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	t
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type SerializeStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	i
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeStruct = Compound<'a, W, F>;$/;"	t
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	t
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeStruct = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeStruct = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeStruct = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeStruct = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeStruct = SerializeMap;$/;"	t	implementation:Serializer
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	t	module:content
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> ser::SerializeStructVariant for SerializeStructVariant<E>$/;"	c	module:content
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s	module:content
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	t
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type SerializeStructVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	i
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeStructVariant = Compound<'a, W, F>;$/;"	t
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	t
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeStructVariant = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeStructVariant = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeStructVariant = SerializeStructVariant;$/;"	t	implementation:Serializer
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::SerializeStructVariant for SerializeStructVariant {$/;"	c
SerializeStructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^pub struct SerializeStructVariant {$/;"	s
SerializeStructVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<M> SerializeStructVariantAsMapValue<M> {$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<M> ser::SerializeStructVariant for SerializeStructVariantAsMapValue<M>$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s	module:content
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	t	module:content
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> ser::SerializeTuple for SerializeTuple<E>$/;"	c	module:content
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s	module:content
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type SerializeTuple = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	i
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTuple = Compound<'a, W, F>;$/;"	t
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	t
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTuple = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTuple = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTuple = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTuple = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeTuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTuple = SerializeVec;$/;"	t	implementation:Serializer
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	t	module:content
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> ser::SerializeTupleStruct for SerializeTupleStruct<E>$/;"	c	module:content
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s	module:content
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type SerializeTupleStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	i
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTupleStruct = Compound<'a, W, F>;$/;"	t
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	t
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTupleStruct = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTupleStruct = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeTupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTupleStruct = SerializeVec;$/;"	t	implementation:Serializer
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	t	module:content
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<E> ser::SerializeTupleVariant for SerializeTupleVariant<E>$/;"	c	module:content
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s	module:content
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    type SerializeTupleVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	i
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTupleVariant = Compound<'a, W, F>;$/;"	t
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	t
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	t	implementation:NumberStrEmitter
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    type SerializeTupleVariant = Impossible<(), Error>;$/;"	t	implementation:RawValueStrEmitter
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<String, Error>;$/;"	t	implementation:MapKeySerializer
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<Value, Error>;$/;"	t	implementation:NumberValueEmitter
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTupleVariant = Impossible<Value, Error>;$/;"	t	implementation:RawValueEmitter
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariant;$/;"	t	implementation:Serializer
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::SerializeTupleVariant for SerializeTupleVariant {$/;"	c
SerializeTupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^pub struct SerializeTupleVariant {$/;"	s
SerializeTupleVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<M> SerializeTupleVariantAsMapValue<M> {$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    impl<M> ser::SerializeTupleVariant for SerializeTupleVariantAsMapValue<M>$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s	module:content
SerializeVec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::SerializeSeq for SerializeVec {$/;"	c
SerializeVec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::SerializeTuple for SerializeVec {$/;"	c
SerializeVec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::ser::SerializeTupleStruct for SerializeVec {$/;"	c
SerializeVec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^pub struct SerializeVec {$/;"	s
Serializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	i
Serializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W, F> ser::Serializer for &'a mut Serializer<W, F>$/;"	c
Serializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<'a, W> Serializer<W, PrettyFormatter<'a>>$/;"	c
Serializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<W, F> Serializer<W, F>$/;"	c
Serializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^impl<W> Serializer<W>$/;"	c
Serializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub struct Serializer<W, F = CompactFormatter> {$/;"	s
Serializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl serde::Serializer for Serializer {$/;"	c
Serializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^pub struct Serializer;$/;"	s
Server	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    Server,$/;"	e	enum:PipeEnd
ServerOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl ServerOptions {$/;"	c
ServerOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct ServerOptions {$/;"	s
Service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    type Service = HandleError<S, F, T>;$/;"	t
Service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    type Service = AddExtension<S, T>;$/;"	t
Service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    type Service = <Extension<Self> as Layer<S>>::Service;$/;"	t
Service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    type Service = FromExtractor<T, E, S>;$/;"	t
Service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    type Service = FromFn<F, S, I, T>;$/;"	t
Service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    type Service = MapRequest<F, S, I, T>;$/;"	t
Service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    type Service = MapResponse<F, S, I, T>;$/;"	t
Service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    Service(Route<B, E>),$/;"	e	enum:Fallback
ServiceExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/service_ext.rs	/^pub trait ServiceExt<R>: Service<R> + Sized {$/;"	i
Set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    Set(u8),$/;"	e	enum:Tick
SetError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: fmt::Debug> Error for SetError<T> {}$/;"	c
SetError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> SetError<T> {$/;"	c
SetError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> fmt::Display for SetError<T> {$/;"	c
SetError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^pub enum SetError<T> {$/;"	g
SetUriExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^    impl<S, B> Service<Request<B>> for SetUriExtension<S>$/;"	c	function:outer_middleware_still_see_whole_url
SetUriExtension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^    struct SetUriExtension<S>(S);$/;"	s	function:outer_middleware_still_see_whole_url
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(super) struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Shared<T> {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^    struct Shared {$/;"	s	function:basic_usage
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T: fmt::Debug> fmt::Debug for Shared<T> {$/;"	c
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^struct Shared<T> {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Shared {$/;"	c
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^unsafe impl Sync for Shared {}$/;"	c
Shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/shutdown.rs	/^impl<A> Future for Shutdown<'_, A>$/;"	c
Shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    Shutdown = 1,$/;"	e	enum:Kind
ShuttingDown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^    ShuttingDown(u64),$/;"	e	enum:TransferState
ShuttingDown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    ShuttingDown,$/;"	e	enum:SpawnError
Signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl InternalStream for Signal {$/;"	c
Signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Signal {$/;"	c
Signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub struct Signal {$/;"	s
SignalInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Default for SignalInfo {$/;"	c
SignalInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) struct SignalInfo {$/;"	s
SignalKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl From<std::os::raw::c_int> for SignalKind {$/;"	c
SignalKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl SignalKind {$/;"	c
SignalKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub struct SignalKind(libc::c_int);$/;"	s
Signals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    struct Signals {$/;"	s	function:test_combination
Signed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Signed(i64),$/;"	e	enum:Unexpected
Sink	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^impl AsyncWrite for Sink {$/;"	c
Sink	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^impl fmt::Debug for Sink {$/;"	c
Skip	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    Skip,$/;"	e	enum:AllowHeader
Skip	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    Skip,$/;"	e	enum:MissedTickBehavior
Slab	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Slab<T> {$/;"	c
Slab	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> fmt::Debug for Slab<T> {$/;"	c
Slab	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) struct Slab<T> {$/;"	s
Sleep	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^impl Future for Sleep {$/;"	c
Sleep	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^impl Sleep {$/;"	c
SliceRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a> Fused for SliceRead<'a> {}$/;"	c
SliceRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a> Read<'a> for SliceRead<'a> {$/;"	c
SliceRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a> SliceRead<'a> {$/;"	c
SliceRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a> private::Sealed for SliceRead<'a> {}$/;"	c
SliceRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^pub struct SliceRead<'a> {$/;"	s
Slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Slot<T> {$/;"	s
Slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct Slot<T> {$/;"	s
Slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Slots<T> {$/;"	c
Slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct Slots<T> {$/;"	s
Snapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^impl Snapshot {$/;"	c
Snapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^impl fmt::Debug for Snapshot {$/;"	c
Snapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) struct Snapshot(usize);$/;"	s
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^impl Connected<&AddrStream> for SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for net::SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for &[SocketAddr] {}$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for SocketAddr {}$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for &[SocketAddr] {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^impl SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^impl fmt::Debug for SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^pub struct SocketAddr(pub(super) mio::net::SocketAddr);$/;"	s
SocketAddrV4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV4 {$/;"	c
SocketAddrV4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for SocketAddrV4 {}$/;"	c
SocketAddrV4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for SocketAddrV4 {$/;"	c
SocketAddrV6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV6 {$/;"	c
SocketAddrV6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for SocketAddrV6 {}$/;"	c
SocketAddrV6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for SocketAddrV6 {$/;"	c
Solidus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    Solidus,$/;"	e	enum:CharEscape
Some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Some(Box<Content<'de>>),$/;"	e	enum:content::Content
Some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Some(Box<Content>),$/;"	e	enum:content::Content
SpawnError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) enum SpawnError {$/;"	g
SpawnOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    impl Drop for SpawnOnDrop {$/;"	c	function:spawn_during_shutdown
SpawnOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    struct SpawnOnDrop(Runtime);$/;"	s	function:spawn_during_shutdown
SpawnedChild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub(crate) struct SpawnedChild {$/;"	s
Spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl Spawner {$/;"	c
Spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl fmt::Debug for Spawner {$/;"	c
Spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) struct Spawner {$/;"	s
SpawnerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl SpawnerMetrics {$/;"	c
SpawnerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) struct SpawnerMetrics {$/;"	s
Split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^impl<R> Split<R>$/;"	c
SplitByUtf8BoundaryIfWindows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^impl<W> SplitByUtf8BoundaryIfWindows<W> {$/;"	c
SplitByUtf8BoundaryIfWindows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^impl<W> crate::io::AsyncWrite for SplitByUtf8BoundaryIfWindows<W>$/;"	c
SplitByUtf8BoundaryIfWindows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^pub(crate) struct SplitByUtf8BoundaryIfWindows<W> {$/;"	s
Sse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl<S, E> IntoResponse for Sse<S>$/;"	c
Sse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl<S> Sse<S> {$/;"	c
Sse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^impl<S> fmt::Debug for Sse<S> {$/;"	c
Sse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^pub struct Sse<S> {$/;"	s
Stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) enum Stage<T: Future> {$/;"	g
Start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        Start,$/;"	e	enum:range::Field
Start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    Start(SeekFrom),$/;"	e	enum:SeekState
Start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    Start(SeekFrom),$/;"	e	enum:SeekState
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^impl<OuterState, InnerState> FromRequestParts<OuterState> for State<InnerState>$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^impl<S> Deref for State<S> {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^impl<S> DerefMut for State<S> {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^pub struct State<S>(pub S);$/;"	s
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub enum State {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^enum State {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^enum State {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^enum State<T> {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl From<usize> for State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl fmt::Debug for State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^struct State(usize);$/;"	s
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^impl State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^impl fmt::Debug for State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) struct State {$/;"	s
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^enum State {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl fmt::Debug for State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^struct State(usize);$/;"	s
StateCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl Default for StateCell {$/;"	c
StateCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl StateCell {$/;"	c
StateCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl std::fmt::Debug for StateCell {$/;"	c
StateCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(super) struct StateCell {$/;"	s
StateSnapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl StateSnapshot {$/;"	c	module:state
StateSnapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub(super) struct StateSnapshot(usize);$/;"	s	module:state
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^        pub(crate) type StaticAtomicU64 = std::sync::atomic::AtomicU64;$/;"	t	module:sync::atomic
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_native.rs	/^pub(crate) type StaticAtomicU64 = AtomicU64;$/;"	t
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_const_new.rs	/^pub(crate) type StaticAtomicU64 = AtomicU64;$/;"	t
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^impl StaticAtomicU64 {$/;"	c
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^pub(crate) struct StaticAtomicU64 {$/;"	s
StdChild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Kill for StdChild {$/;"	c
StdChild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Wait for StdChild {$/;"	c
StdError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    pub trait StdError {$/;"	i	module:ext
StdError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^trait StdError: Debug + Display {$/;"	i
StdReadDir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^type StdReadDir = std::iter::Fuse<std::fs::ReadDir>;$/;"	t
Stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    impl AsFd for Stderr {$/;"	c	module:sys
Stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    impl AsRawFd for Stderr {$/;"	c	module:sys
Stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^impl AsyncWrite for Stderr {$/;"	c
Stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^    impl AsFd for Stdin {$/;"	c	module:sys
Stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^    impl AsRawFd for Stdin {$/;"	c	module:sys
Stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^impl AsyncRead for Stdin {$/;"	c
Stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    impl AsFd for Stdout {$/;"	c	module:sys
Stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    impl AsRawFd for Stdout {$/;"	c	module:sys
Stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^impl AsyncWrite for Stdout {$/;"	c
Steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Clone for Steal<T> {$/;"	c
Steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Steal<T> {$/;"	c
Steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^pub(crate) struct Steal<T: 'static>(Arc<Inner<T>>);$/;"	s
Storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) trait Storage {$/;"	i
Str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Str(&'a str),$/;"	e	enum:Unexpected
Str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Str(&'de str),$/;"	e	enum:content::Content
StrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'a, E> Debug for StrDeserializer<'a, E> {$/;"	c
StrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'a, E> StrDeserializer<'a, E> {$/;"	c
StrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'de, 'a, E> Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a> Fused for StrRead<'a> {}$/;"	c
StrRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a> Read<'a> for StrRead<'a> {$/;"	c
StrRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a> StrRead<'a> {$/;"	c
StrRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^impl<'a> private::Sealed for StrRead<'a> {}$/;"	c
StrRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^pub struct StrRead<'a> {$/;"	s
StrVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'a> Visitor<'a> for StrVisitor {$/;"	c
StrVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct StrVisitor;$/;"	s
StreamBody	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^impl Default for StreamBody<futures_util::stream::Empty<Result<Bytes, Error>>> {$/;"	c
StreamBody	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^impl<S> From<S> for StreamBody<S>$/;"	c
StreamBody	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^impl<S> HttpBody for StreamBody<S>$/;"	c
StreamBody	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^impl<S> IntoResponse for StreamBody<S>$/;"	c
StreamBody	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^impl<S> StreamBody<S> {$/;"	c
StreamBody	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^impl<S> fmt::Debug for StreamBody<S> {$/;"	c
StreamDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, R, T> FusedIterator for StreamDeserializer<'de, R, T>$/;"	c
StreamDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, R, T> Iterator for StreamDeserializer<'de, R, T>$/;"	c
StreamDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, R, T> StreamDeserializer<'de, R, T>$/;"	c
StreamDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^pub struct StreamDeserializer<'de, R, T> {$/;"	s
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for String {$/;"	c
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for String$/;"	c
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    String,$/;"	e	enum:Unsupported
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for String {$/;"	c
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    String(String),$/;"	e	enum:ParserNumber
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    impl Sealed for alloc::string::String {}$/;"	c	module:private
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^impl Index for String {$/;"	c
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    String(String),$/;"	e	enum:Value
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^impl PartialEq<Value> for String {$/;"	c
StringDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<E> Clone for StringDeserializer<E> {$/;"	c
StringDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<E> Debug for StringDeserializer<E> {$/;"	c
StringDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<E> StringDeserializer<E> {$/;"	c
StringDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringInPlaceVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'a, 'de> Visitor<'de> for StringInPlaceVisitor<'a> {$/;"	c
StringInPlaceVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Visitor<'de> for StringVisitor {$/;"	c
StringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct StringVisitor;$/;"	s
StripPrefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^impl<S, B> Service<Request<B>> for StripPrefix<S>$/;"	c
StripPrefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^impl<S> StripPrefix<S> {$/;"	c
StripPrefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^pub(super) struct StripPrefix<S> {$/;"	s
Struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    struct Struct {$/;"	s	module:tests
Struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Struct(&'static str, Vec<(&'static str, Content)>),$/;"	e	enum:content::Content
StructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    StructVariant,$/;"	e	enum:Unexpected
StructVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        StructVariant($/;"	e	enum:content::Content
Submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Submit,$/;"	e	enum:TransitionToNotifiedByRef
Submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Submit,$/;"	e	enum:TransitionToNotifiedByVal
Success	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Success,$/;"	e	enum:TransitionToRunning
SuperFallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^struct SuperFallback<S, B>(SyncWrapper<PathRouter<S, B>>);$/;"	s
Svc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^impl<R> Service<R> for Svc {$/;"	c
Svc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^struct Svc;$/;"	s
Svc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    impl<R> Service<R> for Svc {$/;"	c	function:wrong_method_service
Svc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    struct Svc;$/;"	s	function:wrong_method_service
SyncWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^impl<T> SyncWrapper<T> {$/;"	c
SyncWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^pub(crate) struct SyncWrapper<T> {$/;"	s
SyncWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^unsafe impl<T: Send> Send for SyncWrapper<T> {}$/;"	c
SyncWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^unsafe impl<T> Sync for SyncWrapper<T> {}$/;"	c
Syntax	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    Syntax,$/;"	e	enum:Category
SystemTime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for SystemTime {$/;"	c
SystemTime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for SystemTime {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^impl<T> AdhocKind for &T where T: ?Sized + Display + Debug + Send + Sync + 'static {}$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^impl<T> CastTo for T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for [T; 0] {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl<'de, T> Expected for T$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl<T> DeserializeOwned for T where T: for<'de> Deserialize<'de> {}$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^    pub struct T;$/;"	s	module:actually_private
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T> Serialize for [T; 0] {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T> Serialize for [T]$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    impl<'a, T> Sealed for &'a T where T: ?Sized + Sealed {}$/;"	c	module:private
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^impl<'a, T> Index for &'a T$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl<T: ?Sized + AsyncBufRead + Unpin> AsyncBufRead for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl<T: ?Sized + AsyncRead + Unpin> AsyncRead for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^impl<T: ?Sized + AsyncSeek + Unpin> AsyncSeek for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl<T: ?Sized + AsyncWrite + Unpin> AsyncWrite for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl<T: ToSocketAddrs + ?Sized> ToSocketAddrs for &T {}$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl<T> sealed::ToSocketAddrsPriv for &T$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/kill.rs	/^impl<T: Kill> Kill for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^impl<T: Wait> Wait for &mut T {$/;"	c
Tab	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    Tab,$/;"	e	enum:CharEscape
Tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagContentOtherField
Tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContent
Tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContentField
TagContentOtherField	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g	module:content
TagContentOtherFieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s	module:content
TagOrContent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g	module:content
TagOrContentField	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g	module:content
TagOrContentFieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s	module:content
TagOrContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s	module:content
TaggedContent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s	module:content
TaggedContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, T> DeserializeSeed<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, T> TaggedContentVisitor<'de, T> {$/;"	c	module:content
TaggedContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, T> Visitor<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s	module:content
TaggedSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl<S> Serializer for TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl<S> TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
Tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl Tail {$/;"	c
Tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Tail {$/;"	s
Take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^impl<R: AsyncBufRead> AsyncBufRead for Take<R> {$/;"	c
Take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^impl<R: AsyncRead> AsyncRead for Take<R> {$/;"	c
Take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^impl<R: AsyncRead> Take<R> {$/;"	c
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    type Target = dyn StdError + Send + Sync + 'static;$/;"	t	implementation:Error
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    type Target = T;$/;"	t	implementation:T
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    type Target;$/;"	t	interface:CastTo
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^    type Target = S;$/;"	t	implementation:State
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^    type Target = str;$/;"	t	implementation:PercentDecodedStr
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    type Target = T;$/;"	t
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    type Target = E;$/;"	t	implementation:Aio
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    type Target = E;$/;"	t	implementation:PollEvented
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    type Target = std::sync::atomic::AtomicU16;$/;"	t	implementation:AtomicU16
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    type Target = std::sync::atomic::AtomicU32;$/;"	t	implementation:AtomicU32
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    type Target = std::sync::atomic::AtomicUsize;$/;"	t	implementation:AtomicUsize
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    type Target = T;$/;"	t	implementation:MutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    type Target = T;$/;"	t	implementation:RwLockReadGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    type Target = T;$/;"	t	implementation:RwLockWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    type Target = W;$/;"	t
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    type Target = Header;$/;"	t	implementation:Task
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^    type Target = Waker;$/;"	t	implementation:WakerRef
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    type Target = TimerShared;$/;"	t	implementation:TimerShared
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    type Target = OsExtraData;$/;"	t	implementation:Globals
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    type Target = Waiter;$/;"	t	implementation:Waiter
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    type Target = Waiter;$/;"	t	implementation:Waiter
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    type Target = T;$/;"	t	implementation:MappedMutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    type Target = T;$/;"	t	implementation:MutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    type Target = T;$/;"	t	implementation:OwnedMutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    type Target = U;$/;"	t	implementation:OwnedMappedMutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    type Target = Waiter;$/;"	t	implementation:Waiter
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    type Target = U;$/;"	t	implementation:OwnedRwLockReadGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    type Target = T;$/;"	t	implementation:OwnedRwLockWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    type Target = U;$/;"	t	implementation:OwnedRwLockMappedWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    type Target = T;$/;"	t	implementation:RwLockReadGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    type Target = T;$/;"	t	implementation:RwLockWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    type Target = T;$/;"	t	implementation:RwLockMappedWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    type Target = T;$/;"	t	implementation:Ref
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    type Target = ListEntry<T>;$/;"	t	implementation:ListEntry
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        type Target = Entry;$/;"	t	implementation:tests::Entry
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    type Target;$/;"	t	interface:Link
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    type Target = T;$/;"	t	implementation:Ref
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    type Target = T;$/;"	t	implementation:LockGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    type Target = Waker;$/;"	t	implementation:WakerRef
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl Task {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) struct Task {$/;"	s
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^type Task = task::Task<Arc<Handle>>;$/;"	t
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: 'static> Drop for Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: 'static> Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: Schedule> Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S> fmt::Debug for Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) struct Task<S: 'static> {$/;"	s
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> Send for Task<S> {}$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> Sync for Task<S> {}$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> linked_list::Link for Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl Task {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^struct Task(UnsafeCell<MaybeUninit<Waker>>);$/;"	s
Task	/home/trey/code/sqlx-crud/examples/axum/src/main.rs	/^struct Task {$/;"	s
TaskIdGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl Drop for TaskIdGuard {$/;"	c
TaskIdGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl TaskIdGuard {$/;"	c
TaskIdGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(crate) struct TaskIdGuard {$/;"	s
TaskLocalFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static, F: Future> Future for TaskLocalFuture<T, F> {$/;"	c
TaskLocalFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static, F> Drop for TaskLocalFuture<T, F> {$/;"	c
TaskLocalFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static, F> fmt::Debug for TaskLocalFuture<T, F>$/;"	c
TaskLocalFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^pub struct TaskLocalFuture<T, F>$/;"	s
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    impl AsFd for TcpListener {$/;"	c	module:sys
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    impl AsRawFd for TcpListener {$/;"	c	module:sys
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^impl TcpListener {$/;"	c
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^impl TryFrom<net::TcpListener> for TcpListener {$/;"	c
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^impl fmt::Debug for TcpListener {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl AsFd for TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl AsRawFd for TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl FromRawFd for TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl IntoRawFd for TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl fmt::Debug for TcpSocket {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    impl AsFd for TcpStream {$/;"	c	module:sys
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    impl AsRawFd for TcpStream {$/;"	c	module:sys
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl AsyncRead for TcpStream {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl AsyncWrite for TcpStream {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl TcpStream {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl TryFrom<std::net::TcpStream> for TcpStream {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl fmt::Debug for TcpStream {$/;"	c
TestClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^impl TestClient {$/;"	c
TestClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^pub(crate) struct TestClient {$/;"	s
TestMakeWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^impl TestMakeWriter {$/;"	c
TestMakeWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^impl<'a> MakeWriter<'a> for TestMakeWriter {$/;"	c
TestMakeWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^struct TestMakeWriter {$/;"	s
TestResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^impl TestResponse {$/;"	c
TestResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^pub(crate) struct TestResponse {$/;"	s
Text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    Text(String),$/;"	e	enum:Message
TextMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    impl crate::io::AsyncWrite for TextMockWriter {$/;"	c	module:tests
TextMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    struct TextMockWriter;$/;"	s	module:tests
ThreadId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^impl ThreadId {$/;"	c
ThreadId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^pub(crate) struct ThreadId(NonZeroU64);$/;"	s
ThreadLocalDestroyed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    ThreadLocalDestroyed,$/;"	e	enum:TryCurrentErrorKind
ThreadNameFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^pub(crate) type ThreadNameFn = std::sync::Arc<dyn Fn() -> String + Send + Sync + 'static>;$/;"	t
Tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^enum Tick {$/;"	g
TimeSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^impl TimeSource {$/;"	c
TimeSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^pub(crate) struct TimeSource {$/;"	s
Timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^impl<T> Future for Timeout<T>$/;"	c
Timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^impl<T> Timeout<T> {$/;"	c
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl Drop for TimerEntry {$/;"	c
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl TimerEntry {$/;"	c
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(crate) struct TimerEntry {$/;"	s
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl Send for TimerEntry {}$/;"	c
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl Sync for TimerEntry {}$/;"	c
TimerHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl TimerHandle {$/;"	c
TimerHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(crate) struct TimerHandle {$/;"	s
TimerResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^type TimerResult = Result<(), crate::time::error::Error>;$/;"	t
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl TimerShared {$/;"	c
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl std::fmt::Debug for TimerShared {$/;"	c
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(crate) struct TimerShared {$/;"	s
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl Send for TimerShared {}$/;"	c
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl Sync for TimerShared {}$/;"	c
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl linked_list::Link for TimerShared {$/;"	c
ToSocketAddrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^pub trait ToSocketAddrs: sealed::ToSocketAddrsPriv {}$/;"	i
ToSocketAddrsPriv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    pub trait ToSocketAddrsPriv {$/;"	i	module:sealed
TracingEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^pub(crate) struct TracingEvent<T> {$/;"	s
Track	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^impl<T: Future> Future for Track<T> {$/;"	c
Track	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^impl<T> Track<T> {$/;"	c
Trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl Trailer {$/;"	c
Trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) struct Trailer {$/;"	s
TrailingCharacters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    TrailingCharacters,$/;"	e	enum:ErrorCode
TrailingComma	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    TrailingComma,$/;"	e	enum:ErrorCode
Trait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^impl Trait {$/;"	c
Trait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^pub struct Trait;$/;"	s
TraitKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^pub trait TraitKind: Sized {$/;"	i
TransferState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^enum TransferState {$/;"	g
TransitionToIdle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) enum TransitionToIdle {$/;"	g
TransitionToNotifiedByRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) enum TransitionToNotifiedByRef {$/;"	g
TransitionToNotifiedByVal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) enum TransitionToNotifiedByVal {$/;"	g
TransitionToRunning	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) enum TransitionToRunning {$/;"	g
TransparentOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^        impl<'a, T: fmt::Debug> fmt::Debug for TransparentOption<'a, T> {$/;"	c	function:fmt
TransparentOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^        struct TransparentOption<'a, T> {$/;"	s	function:fmt
TryAcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl TryAcquireError {$/;"	c
TryAcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl fmt::Display for TryAcquireError {$/;"	c
TryAcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl std::error::Error for TryAcquireError {}$/;"	c
TryAcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^pub enum TryAcquireError {$/;"	g
TryCollectFut	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type TryCollectFut<'e, T> = TryCollect<CrudStream<'e, T>, Vec<T>>;$/;"	t
TryCurrentError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl TryCurrentError {$/;"	c
TryCurrentError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl error::Error for TryCurrentError {}$/;"	c
TryCurrentError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl fmt::Display for TryCurrentError {$/;"	c
TryCurrentError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^pub struct TryCurrentError {$/;"	s
TryCurrentErrorKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^enum TryCurrentErrorKind {$/;"	g
TryCurrentErrorKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl fmt::Debug for TryCurrentErrorKind {$/;"	c
TryIoError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^pub struct TryIoError(());$/;"	s
TryJoin3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/try_join.rs	/^impl<T1, F1, T2, F2, T3, F3, E> Future for TryJoin3<F1, F2, F3>$/;"	c
TryLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^impl<T> TryLock<T> {$/;"	c
TryLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^pub(crate) struct TryLock<T> {$/;"	s
TryLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^unsafe impl<T: Send> Send for TryLock<T> {}$/;"	c
TryLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^unsafe impl<T: Send> Sync for TryLock<T> {}$/;"	c
TryLockError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl Error for TryLockError {}$/;"	c
TryLockError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl fmt::Display for TryLockError {$/;"	c
TryLockError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct TryLockError(pub(super) ());$/;"	s
TryPopResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^pub(crate) enum TryPopResult<T> {$/;"	g
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl fmt::Display for TryRecvError {$/;"	c	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl std::error::Error for TryRecvError {}$/;"	c	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub enum TryRecvError {$/;"	g	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl Error for TryRecvError {}$/;"	c
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl fmt::Display for TryRecvError {$/;"	c
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^pub enum TryRecvError {$/;"	g
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    impl fmt::Display for TryRecvError {$/;"	c	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    impl std::error::Error for TryRecvError {}$/;"	c	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub enum TryRecvError {$/;"	g	module:error
TrySendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T: fmt::Debug> Error for TrySendError<T> {}$/;"	c
TrySendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T> From<SendError<T>> for TrySendError<T> {$/;"	c
TrySendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T> fmt::Display for TrySendError<T> {$/;"	c
TrySendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^pub enum TrySendError<T> {$/;"	g
Tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Tuple(Vec<Content>),$/;"	e	enum:content::Content
Tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    Tuple,$/;"	e	enum:Unsupported
TupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        struct TupleStruct(i32, bool, String);$/;"	s	function:tests::test_parse_seq
TupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        TupleStruct(&'static str, Vec<Content>),$/;"	e	enum:content::Content
TupleStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    TupleStruct,$/;"	e	enum:Unsupported
TupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    TupleVariant,$/;"	e	enum:Unexpected
TupleVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        TupleVariant(&'static str, u32, &'static str, Vec<Content>),$/;"	e	enum:content::Content
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: Semaphore> Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: fmt::Debug> fmt::Debug for Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Clone for Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Drop for Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(crate) struct Tx<T, S> {$/;"	s
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^impl<T> Tx<T> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^impl<T> fmt::Debug for Tx<T> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^pub(crate) struct Tx<T> {$/;"	s
Type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^impl<'a> Display for Type<'a> {$/;"	c
Type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^struct Type<'a>(&'a Value);$/;"	s
TypedHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^impl<T, S> FromRequestParts<S> for TypedHeader<T>$/;"	c
TypedHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^impl<T> IntoResponse for TypedHeader<T>$/;"	c
TypedHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^impl<T> IntoResponseParts for TypedHeader<T>$/;"	c
TypedHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^pub struct TypedHeader<T>(pub T);$/;"	s
TypedHeaderRejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^impl IntoResponse for TypedHeaderRejection {$/;"	c
TypedHeaderRejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^impl TypedHeaderRejection {$/;"	c
TypedHeaderRejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^impl std::error::Error for TypedHeaderRejection {$/;"	c
TypedHeaderRejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^impl std::fmt::Display for TypedHeaderRejection {$/;"	c
TypedHeaderRejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^pub struct TypedHeaderRejection {$/;"	s
TypedHeaderRejectionReason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^pub enum TypedHeaderRejectionReason {$/;"	g
U16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        U16(u16),$/;"	e	enum:content::Content
U16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        U16(u16),$/;"	e	enum:content::Content
U32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<E> Debug for U32Deserializer<E> {$/;"	c
U32Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<E> U32Deserializer<E> {$/;"	c
U32Deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
U64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        U64(u64),$/;"	e	enum:content::Content
U64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        U64(u64),$/;"	e	enum:content::Content
U64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    U64(u64),$/;"	e	enum:ParserNumber
U8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        U8(u8),$/;"	e	enum:content::Content
U8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        U8(u8),$/;"	e	enum:content::Content
UCred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^impl UCred {$/;"	c
UCred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub struct UCred {$/;"	s
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    impl AsFd for UdpSocket {$/;"	c	module:sys
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    impl AsRawFd for UdpSocket {$/;"	c	module:sys
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^impl TryFrom<std::net::UdpSocket> for UdpSocket {$/;"	c
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^impl UdpSocket {$/;"	c
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^impl fmt::Debug for UdpSocket {$/;"	c
Unbounded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            Unbounded,$/;"	e	enum:deserialize::Field
UnboundedReceiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> UnboundedReceiver<T> {$/;"	c
UnboundedReceiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> fmt::Debug for UnboundedReceiver<T> {$/;"	c
UnboundedReceiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub struct UnboundedReceiver<T> {$/;"	s
UnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> Clone for UnboundedSender<T> {$/;"	c
UnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> UnboundedSender<T> {$/;"	c
UnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> fmt::Debug for UnboundedSender<T> {$/;"	c
UnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub struct UnboundedSender<T> {$/;"	s
Unconstrained	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/unconstrained.rs	/^impl<F> Future for Unconstrained<F>$/;"	c
Unexpected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl<'a> fmt::Display for Unexpected<'a> {$/;"	c
Unexpected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
UnexpectedEndOfHexEscape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    UnexpectedEndOfHexEscape,$/;"	e	enum:ErrorCode
Unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Unit,$/;"	e	enum:Unexpected
Unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        Unit,$/;"	e	enum:content::Content
UnitDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for UnitDeserializer<E>$/;"	c
UnitDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<E> Debug for UnitDeserializer<E> {$/;"	c
UnitDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<E> UnitDeserializer<E> {$/;"	c
UnitDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    impl<'de, E> de::VariantAccess<'de> for UnitOnly<E>$/;"	c	module:private
UnitOnly	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s	module:private
UnitOnly	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> de::VariantAccess<'de> for UnitOnly {$/;"	c
UnitOnly	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct UnitOnly;$/;"	s
UnitStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        UnitStruct(&'static str),$/;"	e	enum:content::Content
UnitStruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    UnitStruct,$/;"	e	enum:Unsupported
UnitVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^impl<'de> VariantAccess<'de> for UnitVariant {$/;"	c
UnitVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^struct UnitVariant;$/;"	s
UnitVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    UnitVariant,$/;"	e	enum:Unexpected
UnitVariant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        UnitVariant(&'static str, u32, &'static str),$/;"	e	enum:content::Content
UnitVariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'a, R: 'a> UnitVariantAccess<'a, R> {$/;"	c
UnitVariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::EnumAccess<'de> for UnitVariantAccess<'a, R> {$/;"	c
UnitVariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::VariantAccess<'de> for UnitVariantAccess<'a, R> {$/;"	c
UnitVariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^struct UnitVariantAccess<'a, R: 'a> {$/;"	s
UnitVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Visitor<'de> for UnitVisitor {$/;"	c
UnitVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl AsFd for UnixDatagram {$/;"	c
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl AsRawFd for UnixDatagram {$/;"	c
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl TryFrom<std::os::unix::net::UnixDatagram> for UnixDatagram {$/;"	c
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl UnixDatagram {$/;"	c
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl fmt::Debug for UnixDatagram {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl AsFd for UnixListener {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl AsRawFd for UnixListener {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl TryFrom<std::os::unix::net::UnixListener> for UnixListener {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl UnixListener {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl fmt::Debug for UnixListener {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl AsFd for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl AsRawFd for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl AsyncRead for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl AsyncWrite for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl TryFrom<net::UnixStream> for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl fmt::Debug for UnixStream {$/;"	c
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: 'static> Drop for UnownedTask<S> {$/;"	c
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: Schedule> UnownedTask<S> {$/;"	c
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) struct UnownedTask<S: 'static> {$/;"	s
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> Send for UnownedTask<S> {}$/;"	c
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> Sync for UnownedTask<S> {}$/;"	c
UnparkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl UnparkThread {$/;"	c
UnparkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^pub(crate) struct UnparkThread {$/;"	s
Unparker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^impl Unparker {$/;"	c
Unparker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^pub(crate) struct Unparker {$/;"	s
UnsafeCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^impl<T> UnsafeCell<T> {$/;"	c
UnsafeCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^pub(crate) struct UnsafeCell<T>(std::cell::UnsafeCell<T>);$/;"	s
Unsigned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    Unsigned(u64),$/;"	e	enum:Unexpected
Unsigned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    type Unsigned = u32;$/;"	t	implementation:f32
Unsigned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    type Unsigned = u64;$/;"	t	implementation:f64
Unsigned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    type Unsigned: Integer;$/;"	t	interface:Float
Unsupported	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        Unsupported,$/;"	e	enum:capture::BacktraceStatus
Unsupported	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        Unsupported,$/;"	e	enum:capture::Inner
Unsupported	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^enum Unsupported {$/;"	g
Unsupported	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^impl Display for Unsupported {$/;"	c
UnsupportedType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    UnsupportedType {$/;"	e	enum:ErrorKind
UntaggedUnitVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'a> UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s	module:content
UpdateResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^type UpdateResult = Result<Snapshot, Snapshot>;$/;"	t
Uri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^    struct Uri(http::Uri);$/;"	s	function:outer_middleware_still_see_whole_url
UriAndPrefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    impl Arbitrary for UriAndPrefix {$/;"	c	module:tests
UriAndPrefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    struct UriAndPrefix {$/;"	s	module:tests
UrlParams	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/url_params.rs	/^pub(crate) enum UrlParams {$/;"	g
Vacant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    Vacant(VacantEntry<'a>),$/;"	e	enum:Entry
VacantEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^impl<'a> VacantEntry<'a> {$/;"	c
VacantEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct VacantEntry<'a> {$/;"	s
VacantEntryImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type VacantEntryImpl<'a> = btree_map::VacantEntry<'a, String, Value>;$/;"	t
VacantEntryImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type VacantEntryImpl<'a> = indexmap::map::VacantEntry<'a, String, Value>;$/;"	t
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	t	implementation:IgnoredAny
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:deserialize::Field::deserialize::FieldVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                type Value = Field;$/;"	t	implementation:range::Field::deserialize::FieldVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            type Value = ();$/;"	t	function:deserialize_in_place
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	t	function:deserialize
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:Duration::deserialize::DurationVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:SystemTime::deserialize::DurationVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	t	function:deserialize
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	t	function:deserialize
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	t	module:range
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = &'a Path;$/;"	t	implementation:PathVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	t	implementation:BytesVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = &'a str;$/;"	t	implementation:StrVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:StringInPlaceVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:UnitVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = CString;$/;"	t	implementation:CStringVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = Option<T>;$/;"	t
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = OsString;$/;"	t	implementation:OsStringVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = PathBuf;$/;"	t	implementation:PathBufVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	t	implementation:PhantomDataVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = String;$/;"	t	implementation:StringVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = T;$/;"	t
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = [T; 0];$/;"	t	implementation:ArrayVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = bool;$/;"	t	implementation:BoolVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    type Value = char;$/;"	t	implementation:CharVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Value = T;$/;"	t
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Value;$/;"	t	interface:DeserializeSeed
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Value;$/;"	t	interface:Visitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/seed.rs	/^    type Value = ();$/;"	t
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        type Value = V::Value;$/;"	t	module:private
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::InternallyTaggedUnitVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::UntaggedUnitVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = Content<'de>;$/;"	t	implementation:content::ContentVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	t	implementation:borrow_cow_bytes::CowBytesVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	t	implementation:borrow_cow_str::CowStrVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	t	implementation:content::TagContentOtherFieldVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	t	implementation:content::TagOrContentVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	t	implementation:content::TagOrContentFieldVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	t	module:content
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^            type Value = Map<String, Value>;$/;"	t	implementation:Map::deserialize::Visitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            type Value = ();$/;"	t	implementation:NumberKey::deserialize::FieldVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            type Value = Number;$/;"	t	implementation:Number::deserialize::NumberVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            type Value = NumberFromString;$/;"	t	implementation:NumberFromString::deserialize::Visitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            type Value = &'de RawValue;$/;"	t	implementation:RawValue::deserialize::ReferenceVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            type Value = ();$/;"	t	implementation:RawKey::deserialize::FieldVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            type Value = Box<RawValue>;$/;"	t	implementation:Box::deserialize::BoxedVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    type Value = &'de RawValue;$/;"	t	implementation:ReferenceFromString
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    type Value = Box<RawValue>;$/;"	t	implementation:BoxedFromString
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            type Value = Value;$/;"	t	implementation:Value::deserialize::ValueVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Value = KeyClass;$/;"	t	implementation:KeyClassifier
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl FromStr for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> Deserialize<'de> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> IntoDeserializer<'de, Error> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for &'de Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> serde::Deserializer<'de> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl From<()> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl From<Map<String, Value>> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl From<Number> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl From<String> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl From<bool> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl From<f32> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl From<f64> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl<'a, T: Clone + Into<Value>> From<&'a [T]> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl<'a> From<&'a str> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl<'a> From<Cow<'a, str>> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl<K: Into<String>, V: Into<Value>> FromIterator<(K, V)> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl<T: Into<Value>> From<Vec<T>> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl<T: Into<Value>> FromIterator<T> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^impl<T> From<Option<T>> for Value$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^impl<I> ops::Index<I> for Value$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^impl<I> ops::IndexMut<I> for Value$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^impl Debug for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^impl Default for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^impl Display for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^impl Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^pub enum Value {$/;"	g
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^impl PartialEq<String> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^impl PartialEq<str> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^impl<'a> PartialEq<&'a str> for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^impl Serialize for Value {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    Value(T),$/;"	e	enum:Read
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Value<T> {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct Value<T> {$/;"	s
ValueDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^impl<'de> Deserializer<'de> for ValueDeserializer<'de> {$/;"	c
ValueDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^struct ValueDeserializer<'de> {$/;"	s
ValueVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^        impl<'de> Visitor<'de> for ValueVisitor {$/;"	c	method:Value::deserialize
ValueVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^        struct ValueVisitor;$/;"	s	method:Value::deserialize
Values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct Values<'a> {$/;"	s
Values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^impl<T> Values<T> {$/;"	c
Values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^impl<T> ops::Index<usize> for Values<T> {$/;"	c
Values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^struct Values<T>([UnsafeCell<MaybeUninit<T>>; BLOCK_CAP]);$/;"	s
ValuesImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type ValuesImpl<'a> = btree_map::Values<'a, String, Value>;$/;"	t
ValuesImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type ValuesImpl<'a> = indexmap::map::Values<'a, String, Value>;$/;"	t
ValuesMut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^pub struct ValuesMut<'a> {$/;"	s
ValuesMutImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type ValuesMutImpl<'a> = btree_map::ValuesMut<'a, String, Value>;$/;"	t
ValuesMutImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^type ValuesMutImpl<'a> = indexmap::map::ValuesMut<'a, String, Value>;$/;"	t
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    type Variant = UnitVariant;$/;"	t	implementation:EnumDeserializer
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	t	interface:EnumAccess
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	t
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	t
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	t	module:content
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	t	module:content
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Variant = Self;$/;"	t	implementation:UnitVariantAccess
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    type Variant = Self;$/;"	t	implementation:VariantAccess
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Variant = UnitOnly;$/;"	t	implementation:BorrowedCowStrDeserializer
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Variant = VariantDeserializer;$/;"	t	implementation:EnumDeserializer
Variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    type Variant = VariantRefDeserializer<'de>;$/;"	t	implementation:EnumRefDeserializer
VariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	i
VariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'a, R: 'a> VariantAccess<'a, R> {$/;"	c
VariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::EnumAccess<'de> for VariantAccess<'a, R> {$/;"	c
VariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^impl<'de, 'a, R: Read<'de> + 'a> de::VariantAccess<'de> for VariantAccess<'a, R> {$/;"	c
VariantAccess	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^struct VariantAccess<'a, R: 'a> {$/;"	s
VariantDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, E> de::VariantAccess<'de> for VariantDeserializer<'de, E>$/;"	c	module:content
VariantDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s	module:content
VariantDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> VariantAccess<'de> for VariantDeserializer {$/;"	c
VariantDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct VariantDeserializer {$/;"	s
VariantRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    impl<'de, 'a, E> de::VariantAccess<'de> for VariantRefDeserializer<'a, 'de, E>$/;"	c	module:content
VariantRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
VariantRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^impl<'de> VariantAccess<'de> for VariantRefDeserializer<'de> {$/;"	c
VariantRefDeserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^struct VariantRefDeserializer<'de> {$/;"	s
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl From<Message> for Vec<u8> {$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Vec<T>$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for Vec<T>$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^impl Write for Vec<u8> {$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for Vec<u8> {$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^unsafe impl VecU8 for &mut Vec<u8> {}$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^unsafe impl VecU8 for Vec<u8> {}$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl Storage for Vec<EventInfo> {$/;"	c
VecInPlaceVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'a, 'de, T> Visitor<'de> for VecInPlaceVisitor<'a, T>$/;"	c	function:deserialize_in_place
VecInPlaceVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s	function:deserialize_in_place
VecU8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^pub(crate) unsafe trait VecU8: AsRef<Vec<u8>> + AsMut<Vec<u8>> {}$/;"	i
VecVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for VecVisitor<T>$/;"	c	function:deserialize
VecVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s	function:deserialize
VecWithInitialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^impl VecWithInitialized<Vec<u8>> {$/;"	c
VecWithInitialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^impl<V> VecWithInitialized<V>$/;"	c
VecWithInitialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^pub(crate) struct VecWithInitialized<V> {$/;"	s
Version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl Version {$/;"	c	module:state
Version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub(super) struct Version(usize);$/;"	s	module:state
Visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	i
Visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^        impl<'de> de::Visitor<'de> for Visitor {$/;"	c	method:Map::deserialize
Visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^        struct Visitor;$/;"	s	method:Map::deserialize
Visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^        impl<'de> de::Visitor<'de> for Visitor {$/;"	c	method:NumberFromString::deserialize
Visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^        struct Visitor;$/;"	s	method:NumberFromString::deserialize
Void	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^enum Void {}$/;"	g
Vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^pub(super) struct Vtable {$/;"	s
W	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^impl<W: Write> Write for &mut W {$/;"	c
W	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/async_write_ext.rs	/^impl<W: AsyncWrite + ?Sized> AsyncWriteExt for W {}$/;"	c
WAKER_VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^static WAKER_VTABLE: RawWakerVTable =$/;"	v
Wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^pub(crate) trait Wait {$/;"	i
WaitList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^type WaitList = LinkedList<Waiter, <Waiter as linked_list::Link>::Target>;$/;"	t
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl Waiter {$/;"	c
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^struct Waiter {$/;"	s
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^unsafe impl linked_list::Link for Waiter {$/;"	c
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Waiter {$/;"	s
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl linked_list::Link for Waiter {$/;"	c
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Waiter {$/;"	c
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^struct Waiter {$/;"	s
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^unsafe impl linked_list::Link for Waiter {$/;"	c
Waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^struct Waiters {$/;"	s
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl Drop for Waiting {$/;"	c
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^struct Waiting {$/;"	s
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^unsafe impl Send for Waiting {}$/;"	c
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^unsafe impl Sync for Waiting {}$/;"	c
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    Waiting,$/;"	e	enum:State
Waitlist	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^struct Waitlist {$/;"	s
Wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^pub(crate) trait Wake: Send + Sync + Sized + 'static {$/;"	i
WakeList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^impl Drop for WakeList {$/;"	c
WakeList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^impl WakeList {$/;"	c
WakeList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^pub(crate) struct WakeList {$/;"	s
Waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl WakerRef for &Waker {$/;"	c
Waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl WakerRef for Waker {$/;"	c
Waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^impl AssertSend for Waker {}$/;"	c
Waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^impl AssertSync for Waker {}$/;"	c
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^impl<S> ops::Deref for WakerRef<'_, S> {$/;"	c
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^pub(super) struct WakerRef<'a, S: 'static> {$/;"	s
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^trait WakerRef {$/;"	i
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^impl Deref for WakerRef<'_> {$/;"	c
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^pub(crate) struct WakerRef<'a> {$/;"	s
WeakSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Clone for WeakSender<T> {$/;"	c
WeakSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> WeakSender<T> {$/;"	c
WeakSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for WeakSender<T> {$/;"	c
WeakSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct WeakSender<T> {$/;"	s
WeakUnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> Clone for WeakUnboundedSender<T> {$/;"	c
WeakUnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> WeakUnboundedSender<T> {$/;"	c
WeakUnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> fmt::Debug for WeakUnboundedSender<T> {$/;"	c
WeakUnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub struct WeakUnboundedSender<T> {$/;"	s
WebSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl Sink<Message> for WebSocket {$/;"	c
WebSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl Stream for WebSocket {$/;"	c
WebSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl WebSocket {$/;"	c
WebSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub struct WebSocket {$/;"	s
WebSocketUpgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl<F> WebSocketUpgrade<F> {$/;"	c
WebSocketUpgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl<F> std::fmt::Debug for WebSocketUpgrade<F> {$/;"	c
WebSocketUpgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^impl<S> FromRequestParts<S> for WebSocketUpgrade<DefaultOnFailedUpdgrade>$/;"	c
WebSocketUpgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub struct WebSocketUpgrade<F = DefaultOnFailedUpdgrade> {$/;"	s
Wheel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^impl Wheel {$/;"	c
Wheel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^pub(crate) struct Wheel {$/;"	s
Wide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        Wide(Vec<u16>),$/;"	e	enum:capture::BytesOrWide
Wide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^type Wide = u128;$/;"	t
Wide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^type Wide = u64;$/;"	t
Worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Worker {$/;"	c
Worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(super) struct Worker {$/;"	s
WorkerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^impl WorkerMetrics {$/;"	c
WorkerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^pub(crate) struct WorkerMetrics {}$/;"	s
WorkerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^impl WorkerMetrics {$/;"	c
WorkerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^pub(crate) struct WorkerMetrics {$/;"	s
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> WrapSame<T, U> {$/;"	c
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> WrapSameExt for &'_ WrapSame<T, U> {$/;"	c
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> WrapSameExt for WrapSame<T, Option<U>> {$/;"	c
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub struct WrapSame<T, U>(PhantomData<T>, PhantomData<U>);$/;"	s
WrapSameExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub trait WrapSameExt: Sized {$/;"	i
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Wrapped = Option<T>;$/;"	t	implementation:WrapSame
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Wrapped = T;$/;"	t	implementation:WrapSame
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Wrapped;$/;"	t	interface:WrapSameExt
Wrapping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Wrapping<T>$/;"	c
Wrapping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl<T> Serialize for Wrapping<T>$/;"	c
Write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^pub trait Write {$/;"	i
Write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Write(io::Result<()>),$/;"	e	enum:Operation
Write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write.rs	/^impl<W> Future for Write<'_, W>$/;"	c
Write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    Write,$/;"	e	enum:Direction
WriteAll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all.rs	/^impl<W> Future for WriteAll<'_, W>$/;"	c
WriteAllBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all_buf.rs	/^impl<W, B> Future for WriteAllBuf<'_, W, B>$/;"	c
WriteBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_buf.rs	/^impl<W, B> Future for WriteBuf<'_, W, B>$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T: AsyncWrite> AsyncWrite for WriteHalf<T> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T: fmt::Debug> fmt::Debug for WriteHalf<T> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> WriteHalf<T> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^unsafe impl<T: Send> Send for WriteHalf<T> {}$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^unsafe impl<T: Sync> Sync for WriteHalf<T> {}$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl AsRef<TcpStream> for WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl AsyncWrite for WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^pub struct WriteHalf<'a>(&'a TcpStream);$/;"	s
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl AsRef<UnixStream> for WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl AsyncWrite for WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^pub struct WriteHalf<'a>(&'a UnixStream);$/;"	s
WriteVectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_vectored.rs	/^impl<W> Future for WriteVectored<'_, '_, W>$/;"	c
Writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    type Writer = Writer<'a>;$/;"	t	implementation:TestMakeWriter
Writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^impl<'a> io::Write for Writer<'a> {$/;"	c
Writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^struct Writer<'a>(&'a TestMakeWriter);$/;"	s
WriterFormatter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^        impl<'a, 'b> io::Write for WriterFormatter<'a, 'b> {$/;"	c	method:Value::fmt
WriterFormatter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^        struct WriterFormatter<'a, 'b: 'a> {$/;"	s	method:Value::fmt
WrongNumberOfParameters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    WrongNumberOfParameters {$/;"	e	enum:ErrorKind
WrongNumberOfParameters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl WrongNumberOfParameters<usize> {$/;"	c
WrongNumberOfParameters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^impl<G> WrongNumberOfParameters<G> {$/;"	c
WrongNumberOfParameters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^pub(super) struct WrongNumberOfParameters<G> {$/;"	s
Yes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    Yes,$/;"	e	enum:CombiLocalSet
YieldNow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^    impl Future for YieldNow {$/;"	c	function:yield_now
YieldNow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^    struct YieldNow {$/;"	s	function:yield_now
ZeroSizedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    impl Future for ZeroSizedFuture {$/;"	c	module:test
ZeroSizedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    struct ZeroSizedFuture {}$/;"	s	module:test
__anyhow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/macros.rs	/^macro_rules! __anyhow {$/;"	M
__deserialize_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn __deserialize_content<V>($/;"	P	interface:Deserializer
__deserialize_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn __deserialize_content<V>($/;"	f	module:content
__dispatch_ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    fn __dispatch_ensure(self, msg: &'static str) -> Error {$/;"	P	implementation:B
__dispatch_ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    fn __dispatch_ensure(self, msg: &'static str) -> Error {$/;"	f
__dispatch_ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    fn __dispatch_ensure(self, msg: &'static str) -> Error;$/;"	P	interface:BothDebug
__dispatch_ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    fn __dispatch_ensure(self, msg: &'static str) -> Error;$/;"	P	interface:NotBothDebug
__fallback_ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^macro_rules! __fallback_ensure {$/;"	M
__fancy_ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^macro_rules! __fancy_ensure {$/;"	M
__parse_ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^macro_rules! __parse_ensure {$/;"	M
__private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^pub mod __private {$/;"	n
__private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^pub mod __private;$/;"	n
__private_serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^macro_rules! __private_serialize {$/;"	M
__private_visit_untagged_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	P	interface:Visitor
__serialize_unimplemented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^macro_rules! __serialize_unimplemented {$/;"	M
__serialize_unimplemented_helper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	M
__serialize_unimplemented_method	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	M
__task_local_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^macro_rules! __task_local_inner {$/;"	M
_a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^        _a: [u8; 2_000_000],$/;"	m	struct:assert_no_stack_overflow::Foo
_anchor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    _anchor: PhantomData<Rc<()>>,$/;"	m	struct:CachedParkThread
_assert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    fn _assert<T: Send + Sync>() {}$/;"	f	function:_assert_send_sync
_assert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn _assert<T: Send + Sync>() {}$/;"	f	function:_assert_kinds
_assert_kinds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^fn _assert_kinds() {$/;"	f
_assert_send_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^fn _assert_send_sync() {$/;"	f
_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    _connect_info: PhantomData<fn() -> C>,$/;"	m	struct:IntoMakeServiceWithConnectInfo
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    _extractor: PhantomData<fn() -> T>,$/;"	m	struct:HandleError
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    _extractor: PhantomData<fn() -> T>,$/;"	m	struct:HandleErrorLayer
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    _extractor: PhantomData<fn() -> E>,$/;"	m	struct:FromExtractor
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    _extractor: PhantomData<fn() -> T>,$/;"	m	struct:FromFn
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    _extractor: PhantomData<fn() -> T>,$/;"	m	struct:FromFnLayer
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    _extractor: PhantomData<fn() -> T>,$/;"	m	struct:MapRequest
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    _extractor: PhantomData<fn() -> T>,$/;"	m	struct:MapRequestLayer
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    _extractor: PhantomData<fn() -> T>,$/;"	m	struct:MapResponse
_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    _extractor: PhantomData<fn() -> T>,$/;"	m	struct:MapResponseLayer
_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    _guard: context::SetCurrentGuard,$/;"	m	struct:EnterGuard
_handle_lifetime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    _handle_lifetime: PhantomData<&'a Handle>,$/;"	m	struct:EnterGuard
_m	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    _m: std::marker::PhantomPinned,$/;"	m	struct:TimerEntry
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    _marker: PhantomData<fn() -> (T, S, B)>,$/;"	m	struct:IntoServiceStateInExtension
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    _marker: PhantomData<fn() -> (T, S, B, B2)>,$/;"	m	struct:Layered
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    _marker: PhantomData<fn() -> (T, B)>,$/;"	m	struct:HandlerService
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    _marker: PhantomData<fn() -> E>,$/;"	m	struct:FromExtractorLayer
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatInternallyTaggedAccess
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatMapAccess
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatStructAccess
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^    pub(crate) _marker: marker::PhantomData<T>,$/;"	m	struct:ScopedKey
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    _marker: PhantomData<*const L>,$/;"	m	struct:LinkedList
_multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    _multipart: &'a mut Multipart,$/;"	m	struct:Field
_multipart_from_request_limited	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    fn _multipart_from_request_limited() {$/;"	f	module:tests
_not_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    _not_send: PhantomData<*const ()>,$/;"	m	struct:LocalNotified
_not_send_or_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    _not_send_or_sync: PhantomData<*const ()>,$/;"	m	struct:LocalOwnedTasks
_object	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    _object: E,$/;"	m	struct:ErrorImpl
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    _p: PhantomData<T>,$/;"	m	struct:Inject
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    _p: PhantomData<S>,$/;"	m	struct:Task
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    _p: PhantomData<S>,$/;"	m	struct:UnownedTask
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^    _p: PhantomData<(&'a Header, S)>,$/;"	m	struct:WakerRef
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    _p: PhantomPinned,$/;"	m	struct:TimerShared
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    _p: PhantomPinned,$/;"	m	struct:Waiter
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    _p: PhantomPinned,$/;"	m	struct:Waiter
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    _p: PhantomPinned,$/;"	m	struct:Waiter
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub(super) _p: PhantomData<T>,$/;"	m	struct:OwnedRwLockReadGuard
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) _p: PhantomData<T>,$/;"	m	struct:OwnedRwLockWriteGuard
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) _p: PhantomData<T>,$/;"	m	struct:OwnedRwLockMappedWriteGuard
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    _p: PhantomData<std::rc::Rc<()>>,$/;"	m	struct:LockGuard
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    _p: PhantomData<&'a ()>,$/;"	m	struct:WakerRef
_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    _pin: PhantomPinned,$/;"	m	struct:ListEntry
_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    _pin: PhantomPinned,$/;"	m	struct:PointersInner
_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    _pin: std::marker::PhantomPinned,$/;"	m	struct:Slot
_pinned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    _pinned: PhantomPinned,$/;"	m	struct:TaskLocalFuture
_private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    _private: (),$/;"	m	struct:AccessError
_rename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub fn _rename() {}$/;"	f
_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^    _tx: Arc<oneshot::Sender<()>>,$/;"	m	struct:Sender
a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^            a: u32,$/;"	m	struct:tests::test_parse_error_at_key_error::Params
a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^            a: u32,$/;"	m	struct:tests::test_parse_error_at_key_error_multiple::Params
a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        a: i32,$/;"	m	struct:tests::Struct
a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^            a: Date,$/;"	m	struct:tests::type_that_uses_deserialize_any::Params
a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^            a: i32,$/;"	m	struct:tests::deserialize_error_status_codes::Payload
a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^        a: i32,$/;"	m	struct:tests::Foo
a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl<'a> Display for Expected + 'a {$/;"	c
abort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    pub fn abort(&self) {$/;"	P	implementation:AbortHandle
abort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub fn abort(&self) {$/;"	P	implementation:JoinHandle
abort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod abort;$/;"	n
abort_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn abort_all(&mut self) {$/;"	P	implementation:JoinSet
abort_all_during_completion	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_join_set.rs	/^fn abort_all_during_completion() {$/;"	f
abort_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub fn abort_handle(&self) -> super::AbortHandle {$/;"	P	implementation:JoinHandle
about_to_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn about_to_park(&mut self) {$/;"	P	implementation:MetricsBatch
about_to_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn about_to_park(&mut self) {}$/;"	P	implementation:MetricsBatch
accept	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub async fn accept(&self) -> io::Result<(TcpStream, SocketAddr)> {$/;"	P	implementation:TcpListener
accept	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub async fn accept(&self) -> io::Result<(UnixStream, SocketAddr)> {$/;"	P	implementation:UnixListener
accept_unmasked_frames	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn accept_unmasked_frames(mut self, accept: bool) -> Self {$/;"	P	implementation:WebSocketUpgrade
access	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    access: A,$/;"	m	struct:EnumAccessDeserializer
access_inbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    access_inbound: bool,$/;"	m	struct:ServerOptions
access_inbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn access_inbound(&mut self, allowed: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
access_outbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    access_outbound: bool,$/;"	m	struct:ServerOptions
access_outbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn access_outbound(&mut self, allowed: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
access_system_security	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    access_system_security: bool,$/;"	m	struct:ServerOptions
access_system_security	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn access_system_security(&mut self, requested: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
accessing_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn accessing_state() {$/;"	f	module:tests
acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn acquire(&self, num_permits: u32) -> Acquire<'_> {$/;"	P	implementation:Semaphore
acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    async fn acquire(&self) {$/;"	P	implementation:Mutex
acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub async fn acquire(&self) -> Result<SemaphorePermit<'_>, AcquireError> {$/;"	P	implementation:Semaphore
acquire_many	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub async fn acquire_many(&self, n: u32) -> Result<SemaphorePermit<'_>, AcquireError> {$/;"	P	implementation:Semaphore
acquire_many_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub async fn acquire_many_owned($/;"	P	implementation:Semaphore
acquire_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub async fn acquire_owned(self: Arc<Self>) -> Result<OwnedSemaphorePermit, AcquireError> {$/;"	P	implementation:Semaphore
action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^fn action(globals: &'static Globals, signal: libc::c_int) {$/;"	f
active	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^        active: AtomicUsize,$/;"	m	struct:basic_usage::Shared
actor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^    async fn actor(shared: Arc<Shared>) {$/;"	f	function:basic_usage
actual_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        actual_start: usize,$/;"	m	struct:capture::Capture
actually_private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^mod actually_private {$/;"	n
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn add(x: &[Limb], y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn add(x: Limb, y: Limb) -> (Limb, bool) {$/;"	f	module:scalar
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub const fn add(self, other: Interest) -> Interest {$/;"	P	implementation:Interest
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn add(self, other: Duration) -> Instant {$/;"	P	implementation:Instant
add_assign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn add_assign(&mut self, rhs: Duration) {$/;"	P	implementation:Instant
add_digit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/digit.rs	/^pub(crate) fn add_digit(value: u64, digit: u32) -> Option<u64> {$/;"	f
add_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) unsafe fn add_entry(&mut self, item: TimerHandle) {$/;"	P	implementation:Level
add_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^        async fn add_header<B>(_req: Request<B>) -> Result<Request<B>, (StatusCode, &'static str/;"	f	function:tests::works_for_short_circutting
add_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^        async fn add_header<B>(mut req: Request<B>) -> Request<B> {$/;"	f	function:tests::works
add_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^        async fn add_header<B>(mut res: Response<B>) -> Response<B> {$/;"	f	function:tests::works
add_permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn add_permit(&self) {$/;"	P	implementation:Semaphore
add_permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn add_permit(&self);$/;"	P	interface:Semaphore
add_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn add_permits(&self, n: usize) {$/;"	P	implementation:Semaphore
add_permits_locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn add_permits_locked(&self, mut rem: usize, waiters: MutexGuard<'_, Waitlist>) {$/;"	P	implementation:Semaphore
add_source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(super) fn add_source($/;"	P	implementation:Handle
addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    addr: SocketAddr,$/;"	m	struct:TestClient
addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/mod.rs	/^mod addr;$/;"	n
addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn addr(&self, slot: usize) -> Address {$/;"	P	implementation:Page
addr_of	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod addr_of;$/;"	n
advance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn advance(&mut self, n: usize) {$/;"	P	implementation:ReadBuf
after_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    after_start: Option<Callback>,$/;"	m	struct:Inner
after_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) after_start: Option<Callback>,$/;"	m	struct:Builder
after_unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) after_unpark: Option<Callback>,$/;"	m	struct:Builder
after_unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) after_unpark: Option<Callback>,$/;"	m	struct:Config
alarm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn alarm() -> Self {$/;"	P	implementation:SignalKind
algorithm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^pub(crate) mod algorithm;$/;"	n
all	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn all(pool: E) -> TryCollectFut<'e, Self> {$/;"	P	interface:Crud
all_enqueued	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        pub(crate) all_enqueued: RefCell<Vec<W>>,$/;"	m	struct:test::MockQueue
all_entries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^            all_entries: LinkedList<T>,$/;"	m	struct:IdleNotifiedSet::drain::AllEntries
all_the_tuples	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/macros.rs	/^macro_rules! all_the_tuples {$/;"	M
all_the_uris	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn all_the_uris($/;"	f
allocate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn allocate(&self) -> io::Result<(slab::Address, slab::Ref<ScheduledIo>)> {$/;"	P	implementation:Handle
allocate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn allocate(me: &Arc<Page<T>>) -> Option<(Address, Ref<T>)> {$/;"	P	implementation:Page
allocate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn allocate(&self) -> Option<(Address, Ref<T>)> {$/;"	P	implementation:Allocator
allocated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    allocated: AtomicBool,$/;"	m	struct:Page
allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    allocator: slab::Allocator<ScheduledIo>,$/;"	m	struct:IoDispatcher
allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn allocator(&self) -> Allocator<T> {$/;"	P	implementation:Slab
allow_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    allow_header: AllowHeader,$/;"	m	struct:MethodRouter
allow_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    pub(crate) fn allow_header(mut self, allow_header: Bytes) -> Self {$/;"	P	implementation:RouteFuture
allow_header_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn allow_header_any() {$/;"	f	module:tests
allow_header_noop_middleware	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn allow_header_noop_middleware() {$/;"	f	module:tests
allow_header_when_merging	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn allow_header_when_merging() {$/;"	f	module:tests
allow_header_with_fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn allow_header_with_fallback() {$/;"	f	module:tests
allow_header_with_fallback_that_sets_allow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn allow_header_with_fallback_that_sets_allow() {$/;"	f	module:tests
also_inherits_default_layered_fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn also_inherits_default_layered_fallback() {$/;"	f
amt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    amt: u64,$/;"	m	struct:CopyBuffer
and_modify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn and_modify<F>(self, f: F) -> Self$/;"	P	implementation:Entry
any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^pub fn any<H, T, S, B>(handler: H) -> MethodRouter<S, B, Infallible>$/;"	f
any_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^pub fn any_service<T, S, B>(svc: T) -> MethodRouter<S, B, T::Error>$/;"	f
anyhow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/macros.rs	/^macro_rules! anyhow {$/;"	M
anyhow_kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^    fn anyhow_kind(&self) -> Adhoc {$/;"	P	interface:AdhocKind
anyhow_kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^    fn anyhow_kind(&self) -> Boxed {$/;"	P	interface:BoxedKind
anyhow_kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^    fn anyhow_kind(&self) -> Trait {$/;"	P	interface:TraitKind
append	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn append(&mut self, other: &mut Self) {$/;"	P	implementation:Map
append	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn append(&mut self, append: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
append_allow_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^fn append_allow_header(allow_header: &mut AllowHeader, method: &'static str) {$/;"	f
append_nested_matched_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^fn append_nested_matched_path(matched_path: &Arc<str>, extensions: &http::Extensions) -> Arc<str/;"	f
apply_read_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn apply_read_buf(&mut self, parts: ReadBufParts) {$/;"	f
arbitrary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^            fn arbitrary(g: &mut quickcheck::Gen) -> Self {$/;"	P	implementation:tests::ascii_alphanumeric::AsciiAlphanumeric
arbitrary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^        fn arbitrary(g: &mut quickcheck::Gen) -> Self {$/;"	P	implementation:tests::UriAndPrefix
arg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn arg<S: AsRef<OsStr>>(&mut self, arg: S) -> &mut Command {$/;"	P	implementation:Command
arg0	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn arg0<S>(&mut self, arg: S) -> &mut Command$/;"	P	implementation:Command
args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn args<I, S>(&mut self, args: I) -> &mut Command$/;"	P	implementation:Command
array_impls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! array_impls {$/;"	M
array_impls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	M
arrived	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    arrived: usize,$/;"	m	struct:BarrierState
as_array	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_array(&self) -> Option<&Vec<Value>> {$/;"	P	implementation:Value
as_array_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_array_mut(&mut self) -> Option<&mut Vec<Value>> {$/;"	P	implementation:Value
as_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_bool(&self) -> Option<bool> {$/;"	P	implementation:Value
as_cast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn as_cast<N: AsPrimitive>(n: N) -> Self;$/;"	P	interface:AsCast
as_cast_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^macro_rules! as_cast_impl {$/;"	M
as_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn as_f32(self) -> f32;$/;"	P	interface:AsPrimitive
as_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub(crate) fn as_f32(&self) -> Option<f32> {$/;"	P	implementation:Number
as_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn as_f64(self) -> f64;$/;"	P	interface:AsPrimitive
as_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	P	implementation:Number
as_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	P	implementation:Value
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn as_fd(&self) -> std::os::unix::io::BorrowedFd<'_> {$/;"	P	implementation:File
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn as_fd(&self) -> std::os::unix::io::BorrowedFd<'_> {$/;"	P	implementation:AsyncFd
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::Stderr
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::Stdin
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::Stdout
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::TcpListener
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:TcpSocket
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::TcpStream
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::UdpSocket
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:UnixDatagram
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:UnixListener
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:Receiver
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:Sender
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:UnixStream
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::ChildStderr
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::ChildStdin
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::ChildStdout
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:ChildStdio
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:Pipe
as_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn as_handle(&self) -> BorrowedHandle<'_>;$/;"	P	interface:windows::io::AsHandle
as_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn as_handle(&self) -> BorrowedHandle<'_> {$/;"	P	implementation:NamedPipeClient
as_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn as_handle(&self) -> BorrowedHandle<'_> {$/;"	P	implementation:NamedPipeServer
as_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	P	implementation:Number
as_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_i64(&self) -> Option<i64> {$/;"	P	implementation:Value
as_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub(super) fn as_inner(&self) -> &std::fs::DirEntry {$/;"	P	implementation:DirEntry
as_inner_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub(super) fn as_inner_mut(&mut self) -> &mut StdOpenOptions {$/;"	P	implementation:OpenOptions
as_limb	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^pub(crate) fn as_limb<T: Integer>(t: T) -> Limb {$/;"	f
as_null	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_null(&self) -> Option<()> {$/;"	P	implementation:Value
as_object	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_object(&self) -> Option<&Map<String, Value>> {$/;"	P	implementation:Value
as_object_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_object_mut(&mut self) -> Option<&mut Map<String, Value>> {$/;"	P	implementation:Value
as_pathname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^    pub fn as_pathname(&self) -> Option<&Path> {$/;"	P	implementation:SocketAddr
as_primitive_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^macro_rules! as_primitive_impl {$/;"	M
as_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn as_ptr(self) -> *const T {$/;"	f
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn as_raw(handle: &Task<S>) -> NonNull<Header> {$/;"	P	implementation:Task
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn as_raw(handle: &Self::Handle) -> NonNull<Self::Target> {$/;"	P	implementation:TimerShared
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn as_raw(handle: &Self::Handle) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn as_raw(handle: &NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn as_raw(handle: &NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    fn as_raw(handle: &Self::Handle) -> NonNull<ListEntry<T>> {$/;"	P	implementation:ListEntry
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        fn as_raw(handle: &Pin<&'_ Entry>) -> NonNull<Entry> {$/;"	P	implementation:tests::Entry
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn as_raw(handle: &Self::Handle) -> NonNull<Self::Target>;$/;"	P	interface:Link
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn as_raw_fd(&self) -> std::os::unix::io::RawFd {$/;"	P	implementation:File
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:AsyncFd
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::Stderr
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::Stdin
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::Stdout
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::TcpListener
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:TcpSocket
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::TcpStream
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::UdpSocket
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:UnixDatagram
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:UnixListener
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:Receiver
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:Sender
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:UnixStream
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::ChildStderr
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::ChildStdin
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::ChildStdout
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:ChildStdio
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:Pipe
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn as_raw_handle(&self) -> RawHandle;$/;"	P	interface:windows::io::AsRawHandle
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn as_raw_handle(&self) -> RawHandle {$/;"	P	implementation:NamedPipeClient
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn as_raw_handle(&self) -> RawHandle {$/;"	P	implementation:NamedPipeServer
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn as_raw_handle(&self) -> RawHandle {$/;"	P	implementation:Child
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn as_raw_handle(&self) -> RawHandle {$/;"	P	implementation:ChildStdio
as_raw_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn as_raw_socket(&self) -> RawSocket;$/;"	P	interface:windows::io::AsRawSocket
as_raw_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn as_raw_value(&self) -> std::os::raw::c_int {$/;"	P	implementation:SignalKind
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn as_ref(&self) -> &(dyn StdError + 'static) {$/;"	P	implementation:Error
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn as_ref(&self) -> &(dyn StdError + Send + Sync + 'static) {$/;"	P	implementation:Error
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn as_ref(&self) -> &TcpStream {$/;"	P	implementation:ReadHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn as_ref(&self) -> &TcpStream {$/;"	P	implementation:WriteHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn as_ref(&self) -> &TcpStream {$/;"	P	implementation:OwnedReadHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn as_ref(&self) -> &TcpStream {$/;"	P	implementation:OwnedWriteHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn as_ref(&self) -> &UnixStream {$/;"	P	implementation:ReadHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn as_ref(&self) -> &UnixStream {$/;"	P	implementation:WriteHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn as_ref(&self) -> &UnixStream {$/;"	P	implementation:OwnedReadHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn as_ref(&self) -> &UnixStream {$/;"	P	implementation:OwnedWriteHalf
as_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn as_socket(&self) -> BorrowedSocket<'_>;$/;"	P	interface:windows::io::AsSocket
as_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn as_socket(&self) -> socket2::SockRef<'_> {$/;"	P	implementation:UdpSocket
as_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn as_std(&self) -> &StdCommand {$/;"	P	implementation:Command
as_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    fn as_str(&self) -> &str {$/;"	P	implementation:Buf
as_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:MatchedPath
as_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^    pub(crate) fn as_str(&self) -> &str {$/;"	P	implementation:PercentDecodedStr
as_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/format.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Buf
as_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Encode
as_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:content::Content
as_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^fn as_str<'de, 's, R: Read<'de>>(read: &R, slice: &'s [u8]) -> Result<&'s str> {$/;"	f
as_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:Value
as_u128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn as_u128(self) -> u128;$/;"	P	interface:AsPrimitive
as_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn as_u32(self) -> u32;$/;"	P	interface:AsPrimitive
as_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn as_u64(self) -> u64;$/;"	P	interface:AsPrimitive
as_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	P	implementation:Number
as_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn as_u64(&self) -> Option<u64> {$/;"	P	implementation:Value
as_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^    pub(crate) fn as_u64(&self) -> u64 {$/;"	P	implementation:Id
as_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn as_usize(self) -> usize;$/;"	P	interface:AsPrimitive
as_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub(crate) fn as_usize(self) -> usize {$/;"	P	implementation:Ready
as_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn as_usize(self) -> usize {$/;"	P	implementation:State
as_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) const fn as_usize(self) -> usize {$/;"	P	implementation:Address
as_wide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^fn as_wide<T: Integer>(t: T) -> Wide {$/;"	f
ascii_alphanumeric	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    fn ascii_alphanumeric(g: &mut quickcheck::Gen) -> String {$/;"	f	module:tests
assert_at_most_num_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^fn assert_at_most_num_polls(rt: Arc<Runtime>, at_most_polls: usize) {$/;"	f
assert_called_from_owner_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn assert_called_from_owner_thread(&self) {$/;"	P	implementation:LocalState
assert_clean	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    macro_rules! assert_clean {$/;"	M	module:tests
assert_dropped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn assert_dropped(&self) {$/;"	P	implementation:AssertDropHandle
assert_matched_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^        async fn assert_matched_path<B>(req: Request<B>) -> Request<B> {$/;"	f	function:tests::can_extract_nested_matched_path_in_middleware_via_extension_using_nest
assert_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^macro_rules! assert_metrics {$/;"	M
assert_no_matched_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^        async fn assert_no_matched_path<B>(req: Request<B>) -> Request<B> {$/;"	f	function:tests::cannot_extract_nested_matched_path_in_middleware_via_extension
assert_no_stack_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^fn assert_no_stack_overflow() {$/;"	f
assert_no_unnecessary_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^fn assert_no_unnecessary_polls() {$/;"	f
assert_not_dropped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn assert_not_dropped(&self) {$/;"	P	implementation:AssertDropHandle
assert_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn assert_owner(&self, task: Notified<S>) -> LocalNotified<S> {$/;"	P	implementation:LocalOwnedTasks
assert_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn assert_owner(&self, task: Notified<S>) -> LocalNotified<S> {$/;"	P	implementation:OwnedTasks
assert_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn assert_owner($/;"	P	implementation:LocalState
assert_ptr_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    macro_rules! assert_ptr_eq {$/;"	M	module:tests
assert_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/mod.rs	/^pub(crate) fn assert_send<T: Send>() {}$/;"	f
assert_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn assert_send(&self, value: T) {$/;"	P	implementation:AtomicOneshot
assert_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/mod.rs	/^pub(crate) fn assert_sync<T: Sync>() {}$/;"	f
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/mod.rs	/^pub(crate) fn assert_unpin<T: Unpin>() {}$/;"	f
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/repeat.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assign_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn assign_permits(&self, n: &mut usize) -> bool {$/;"	P	implementation:Waiter
assume_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub unsafe fn assume_init(&mut self, n: usize) {$/;"	P	implementation:ReadBuf
async_buf_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod async_buf_read;$/;"	n
async_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    async_fd: &'a AsyncFd<T>,$/;"	m	struct:AsyncFdReadyGuard
async_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    async_fd: &'a mut AsyncFd<T>,$/;"	m	struct:AsyncFdReadyMutGuard
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn async_io<R>($/;"	P	implementation:TcpStream
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn async_io<R>($/;"	P	implementation:UdpSocket
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn async_io<R>($/;"	P	implementation:UnixDatagram
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn async_io<R>($/;"	P	implementation:UnixStream
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn async_io<R>($/;"	P	implementation:NamedPipeClient
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn async_io<R>($/;"	P	implementation:NamedPipeServer
async_op_poll_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    async_op_poll_span: tracing::Span,$/;"	m	struct:Receiver
async_op_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    async_op_span: tracing::Span,$/;"	m	struct:Receiver
async_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod async_read;$/;"	n
async_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod async_seek;$/;"	n
async_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod async_write;$/;"	n
asyncify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^pub(crate) async fn asyncify<F, T>(f: F) -> io::Result<T>$/;"	f
at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    fn at<'n, 'p>($/;"	P	implementation:Node
at_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn at_capacity() -> Error {$/;"	P	implementation:Error
atomic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    pub(crate) mod atomic {$/;"	n	module:sync
atomic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    pub(crate) mod atomic {$/;"	n	module:sync
atomic_cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod atomic_cell;$/;"	n
atomic_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! atomic_impl {$/;"	M
atomic_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! atomic_impl {$/;"	M
atomic_inc_num_notify_waiters_calls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn atomic_inc_num_notify_waiters_calls(data: &AtomicUsize) {$/;"	f
atomic_take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod atomic_take {$/;"	n
atomic_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod atomic_u16;$/;"	n
atomic_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod atomic_u32;$/;"	n
atomic_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod atomic_u64;$/;"	n
atomic_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod atomic_usize;$/;"	n
atomic_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/mod.rs	/^mod atomic_waker;$/;"	n
atomic_waker_panic_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^fn atomic_waker_panic_safe() {$/;"	f
available_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn available_permits(&self) -> usize {$/;"	P	implementation:Semaphore
available_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn available_permits(&self) -> usize {$/;"	P	implementation:Semaphore
avoid_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn avoid_overflow<F>(fp: &mut ExtendedFloat)$/;"	f
b	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^            b: u32,$/;"	m	struct:tests::test_parse_error_at_key_error_multiple::Params
b	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        b: bool,$/;"	m	struct:tests::Struct
b	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^            b: Date,$/;"	m	struct:tests::type_that_uses_deserialize_any::Params
b	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^        b: Vec<Bar>,$/;"	m	struct:tests::Foo
b_extended	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bhcomp.rs	/^pub(super) fn b_extended<F: Float>(f: F) -> ExtendedFloat {$/;"	f
backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^macro_rules! backtrace {$/;"	M
backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    backtrace: Option<Backtrace>,$/;"	m	struct:ErrorImpl
backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn backtrace(&self) -> &impl_backtrace!() {$/;"	P	implementation:Error
backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) unsafe fn backtrace(this: Ref<Self>) -> &Backtrace {$/;"	P	implementation:ErrorImpl
backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod backtrace;$/;"	n
backtrace_if_absent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^macro_rules! backtrace_if_absent {$/;"	M
bad_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
bad_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn bad_type(what: Unsupported) -> M::Error {$/;"	f
bail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/macros.rs	/^macro_rules! bail {$/;"	M
basic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    async fn basic() {$/;"	f	module:tests
basic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    async fn basic() {$/;"	f	module:tests
basic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn basic() {$/;"	f
basic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn basic() {$/;"	f
basic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^fn basic() {$/;"	f
basic_closing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn basic_closing() {$/;"	f
basic_notification	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^fn basic_notification() {$/;"	f
basic_usage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^fn basic_usage() {$/;"	f
basic_usage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn basic_usage() {$/;"	f
batch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn batch() {$/;"	f
before_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) before_park: Option<Callback>,$/;"	m	struct:Builder
before_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) before_park: Option<Callback>,$/;"	m	struct:Config
before_stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    before_stop: Option<Callback>,$/;"	m	struct:Inner
before_stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) before_stop: Option<Callback>,$/;"	m	struct:Builder
begin_raw_buffering	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	P	implementation:SliceRead
begin_raw_buffering	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	P	implementation:StrRead
begin_raw_buffering	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn begin_raw_buffering(&mut self) {$/;"	f
begin_raw_buffering	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn begin_raw_buffering(&mut self);$/;"	P	interface:Read
begin_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn begin_string<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	P	interface:Formatter
bh_extended	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bhcomp.rs	/^pub(super) fn bh_extended<F: Float>(f: F) -> ExtendedFloat {$/;"	f
bhcomp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bhcomp.rs	/^pub(crate) fn bhcomp<F>(b: F, integer: &[u8], mut fraction: &[u8], exponent: i32) -> F$/;"	f
bhcomp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod bhcomp;$/;"	n
bias	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub bias: i32,$/;"	m	struct:ModeratePathPowers
big_notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^mod big_notify {$/;"	n
bignum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod bignum;$/;"	n
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn bind(&self, addr: SocketAddr) -> io::Result<()> {$/;"	P	implementation:TcpSocket
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn bind<A: ToSocketAddrs>(addr: A) -> io::Result<UdpSocket> {$/;"	P	implementation:UdpSocket
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn bind<P>(path: P) -> io::Result<UnixDatagram>$/;"	P	implementation:UnixDatagram
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn bind<P>(path: P) -> io::Result<UnixListener>$/;"	P	implementation:UnixListener
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn bind<T>($/;"	P	implementation:LocalOwnedTasks
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn bind<T>($/;"	P	implementation:OwnedTasks
bind_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn bind_addr(addr: SocketAddr) -> io::Result<UdpSocket> {$/;"	P	implementation:UdpSocket
bind_device	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn bind_device(&self, interface: Option<&[u8]>) -> io::Result<()> {$/;"	P	implementation:TcpSocket
bind_device	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn bind_device(&self, interface: Option<&[u8]>) -> io::Result<()> {$/;"	P	implementation:UdpSocket
bind_new_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(super) fn bind_new_task<T>(me: &Arc<Self>, future: T, id: task::Id) -> JoinHandle<T::Out/;"	P	implementation:Handle
bit_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn bit_length(&self) -> usize {$/;"	P	interface:Math
bit_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn bit_length(x: &[Limb]) -> usize {$/;"	f	module:small
bitand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn bitand(self, other: Ready) -> Ready {$/;"	P	implementation:Ready
bitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    fn bitor(self, other: Self) -> Self {$/;"	P	implementation:Interest
bitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn bitor(self, other: Ready) -> Ready {$/;"	P	implementation:Ready
bitor_assign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    fn bitor_assign(&mut self, other: Self) {$/;"	P	implementation:Interest
bitor_assign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn bitor_assign(&mut self, other: Ready) {$/;"	P	implementation:Ready
block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^pub(super) mod block;$/;"	n
block_in_place	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(crate) fn block_in_place<F, R>(f: F) -> R$/;"	f
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn block_on<F: Future>(&self, future: F) -> F::Output {$/;"	P	implementation:Handle
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn block_on<F: Future>(&mut self, f: F) -> Result<F::Output, AccessError> {$/;"	P	implementation:CachedParkThread
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn block_on<F: Future>(&self, future: F) -> F::Output {$/;"	P	implementation:Runtime
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn block_on<F: Future>(self, future: F) -> F::Output {$/;"	P	implementation:CoreGuard
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn block_on<F: Future>(&self, handle: &scheduler::Handle, future: F) -> F::Output/;"	P	implementation:CurrentThread
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^    pub(crate) fn block_on<F>(&self, handle: &scheduler::Handle, future: F) -> F::Output$/;"	P	implementation:MultiThread
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn block_on<T>(&self, task: T) -> T::Output$/;"	P	implementation:test_combination::Rt
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn block_on<T>(f: impl std::future::Future<Output = T>) -> T {$/;"	f
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub fn block_on<F>(&self, rt: &crate::runtime::Runtime, future: F) -> F::Output$/;"	P	implementation:LocalSet
block_on_num_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^fn block_on_num_polls() {$/;"	f
block_tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    block_tail: AtomicPtr<Block<T>>,$/;"	m	struct:Tx
blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^mod blocking;$/;"	n
blocking_and_regular	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn blocking_and_regular() {$/;"	f	module:group_b
blocking_and_regular_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn blocking_and_regular_inner(first_pending: bool) {$/;"	f	module:group_b
blocking_and_regular_with_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn blocking_and_regular_with_pending() {$/;"	f	module:group_b
blocking_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn blocking_lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:Mutex
blocking_lock_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn blocking_lock_owned(self: Arc<Self>) -> OwnedMutexGuard<T> {$/;"	P	implementation:Mutex
blocking_pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    blocking_pool: BlockingPool,$/;"	m	struct:Runtime
blocking_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn blocking_queue_depth(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
blocking_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn blocking_read(&self) -> RwLockReadGuard<'_, T> {$/;"	P	implementation:RwLock
blocking_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn blocking_recv(&mut self) -> Option<T> {$/;"	P	implementation:Receiver
blocking_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn blocking_recv(&mut self) -> Option<T> {$/;"	P	implementation:UnboundedReceiver
blocking_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn blocking_recv(self) -> Result<T, RecvError> {$/;"	P	implementation:Receiver
blocking_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn blocking_send(&self, value: T) -> Result<(), SendError<T>> {$/;"	P	implementation:Sender
blocking_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn blocking_shutdown() {$/;"	f
blocking_spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) blocking_spawner: blocking::Spawner,$/;"	m	struct:Handle
blocking_spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) blocking_spawner: blocking::Spawner,$/;"	m	struct:Handle
blocking_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn blocking_write(&self) -> RwLockWriteGuard<'_, T> {$/;"	P	implementation:RwLock
body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^pub mod body;$/;"	n
body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        body: String,$/;"	m	struct:logging_rejections::RejectionEvent
body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn body(mut self, body: impl Into<reqwest::Body>) -> Self {$/;"	P	implementation:RequestBuilder
body_limited_by_default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn body_limited_by_default() {$/;"	f
body_stream_traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^fn body_stream_traits() {$/;"	f
body_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub fn body_text(&self) -> String {$/;"	P	implementation:MultipartError
body_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub fn body_text(&self) -> String {$/;"	P	implementation:FailedToDeserializePathParams
body_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub fn body_text(&self) -> String {$/;"	P	implementation:InvalidUtf8InPathParam
body_too_large	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    async fn body_too_large() {$/;"	f	module:tests
bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for bool {$/;"	c
borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn borrow(&self) -> Ref<'_, T> {$/;"	P	implementation:Receiver
borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn borrow(&self) -> Ref<'_, T> {$/;"	P	implementation:Sender
borrow_and_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn borrow_and_update(&mut self) -> Ref<'_, T> {$/;"	P	implementation:Receiver
borrow_cow_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrow_cow_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
both_mock_and_real_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    async fn both_mock_and_real_connect_info() {$/;"	f	module:tests
bound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub(crate) bound: usize,$/;"	m	struct:Semaphore
bounded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^mod bounded;$/;"	n
bounds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^fn bounds() {$/;"	f
bounds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^fn bounds() {$/;"	f
bounds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^fn bounds() {$/;"	f
box_forwarded_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	M
boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub unsafe fn boxed(self) -> Box<T> {$/;"	f
boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^mod boxed;$/;"	n
boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn boxed() {$/;"	f
boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    boxed: NonNull<dyn Future<Output = T> + Send>,$/;"	m	struct:ReusableBoxFuture
broadcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn broadcast(&self) -> io::Result<bool> {$/;"	P	implementation:UdpSocket
broadcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn broadcast(&self) -> bool {$/;"	P	implementation:Registry
broadcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pub(crate) fn broadcast(&self) -> bool {$/;"	P	implementation:Globals
broadcast_returns_if_at_least_one_event_fired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn broadcast_returns_if_at_least_one_event_fired() {$/;"	f	module:tests
broadcast_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn broadcast_send() {$/;"	f
broadcast_two	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn broadcast_two() {$/;"	f
broadcast_wrap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn broadcast_wrap() {$/;"	f
budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    budget: Cell<coop::Budget>,$/;"	m	struct:Context
budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^pub(super) fn budget<R>(f: impl FnOnce(&Cell<coop::Budget>) -> R) -> Result<R, AccessError> {$/;"	f
budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) fn budget<R>(f: impl FnOnce() -> R) -> R {$/;"	f
budget_forced_yield_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn budget_forced_yield_count(&self) -> u64 {$/;"	P	implementation:RuntimeMetrics
budget_forced_yield_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(super) budget_forced_yield_count: AtomicU64,$/;"	m	struct:SchedulerMetrics
budgeting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    fn budgeting() {$/;"	f	module:test
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/utf8.rs	/^    buf: [u8; 4],$/;"	m	struct:Encode
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    buf: Vec<u8>,$/;"	m	struct:Buf
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    buf: &'a mut [MaybeUninit<u8>],$/;"	m	struct:ReadBuf
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    buf: Box<[u8]>,$/;"	m	struct:CopyBuffer
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    buf: CopyBuffer,$/;"	m	struct:Copy
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    buffer: BytesMut,$/;"	m	struct:Event
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn buffer(&self) -> &[u8] {$/;"	P	implementation:BufReader
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn buffer(&self) -> &[u8] {$/;"	P	implementation:BufWriter
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    buffer: BytesMut,$/;"	m	struct:Pipe
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            buffer: &'a [UnsafeCell<MaybeUninit<task::Notified<T>>>; LOCAL_QUEUE_CAPACITY],$/;"	m	struct:Local::push_overflow::BatchTaskIter
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    buffer: Box<[UnsafeCell<MaybeUninit<task::Notified<T>>>; LOCAL_QUEUE_CAPACITY]>,$/;"	m	struct:Inner
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    buffer: Box<[RwLock<Slot<T>>]>,$/;"	m	struct:Shared
buiding_complex_router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn buiding_complex_router() {$/;"	f	module:tests
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn build(&mut self) -> io::Result<Runtime> {$/;"	P	implementation:Builder
build_current_thread_runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    fn build_current_thread_runtime(&mut self) -> io::Result<Runtime> {$/;"	P	implementation:Builder
build_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn build_task(&mut self) -> Builder<'_, T> {$/;"	P	implementation:JoinSet
builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    builder: reqwest::RequestBuilder,$/;"	m	struct:RequestBuilder
builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    builder: super::Builder<'a>,$/;"	m	struct:Builder
busy_duration_total	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    busy_duration_total: u64,$/;"	m	struct:MetricsBatch
busy_duration_total	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) busy_duration_total: AtomicU64,$/;"	m	struct:WorkerMetrics
busy_file_seek_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn busy_file_seek_error() {$/;"	f
by_id	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn by_id(pool: E, id: <Self as Schema>::Id) -> CrudFut<'e, Option<Self>> {$/;"	P	interface:Crud
by_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn by_mut(&mut self) -> Mut<T> {$/;"	f
by_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn by_mut(self) -> Mut<'a, T> {$/;"	f
by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn by_ref(&self) -> Ref<T> {$/;"	f
by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn by_ref(self) -> Ref<'a, T> {$/;"	f
byte_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    pub fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	P	implementation:SliceRead
byte_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	P	implementation:StrRead
byte_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn byte_offset(&self) -> usize {$/;"	f
byte_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn byte_offset(&self) -> usize;$/;"	P	interface:Read
bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    bytes: [MaybeUninit<u8>; 40],$/;"	m	struct:Buf
bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub async fn bytes(self) -> Result<Bytes, MultipartError> {$/;"	P	implementation:Field
bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) async fn bytes(self) -> Bytes {$/;"	P	implementation:TestResponse
bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/format.rs	/^    bytes: &'a mut [u8],$/;"	m	struct:Buf
bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn bytes(&self) -> &[u8] {$/;"	P	implementation:Buf
c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^        c: String,$/;"	m	struct:tests::Struct
c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^            c: Date,$/;"	m	struct:tests::type_that_uses_deserialize_any::Params
c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    c: UnsafeCell<T>,$/;"	m	struct:Mutex
c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    c: UnsafeCell<T>,$/;"	m	struct:RwLock
c_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl From<SignalKind> for std::os::raw::c_int {$/;"	c
cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod cached;$/;"	n
cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    cached: [CachedPage<T>; NUM_PAGES],$/;"	m	struct:Slab
cached_float80	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod cached_float80;$/;"	n
cached_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    cached_when: AtomicU64,$/;"	m	struct:TimerShared
cached_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn cached_when(&self) -> u64 {$/;"	P	implementation:TimerShared
cached_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn cached_when(&self) -> u64 {$/;"	P	implementation:TimerHandle
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    fn call(&mut self, req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    fn call(&mut self, mut req: Request<ResBody>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    fn call(&mut self, target: T) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn call(self, _error: Error) {}$/;"	P	implementation:DefaultOnFailedUpdgrade
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn call(self, error: Error) {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn call(self, error: Error);$/;"	P	interface:OnFailedUpdgrade
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    fn call(&mut self, mut req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn call(self, _req: Request<B>, _state: S) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn call(self, req: Request<B2>, state: S) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn call(self, req: Request<B>, state: S) -> Self::Future;$/;"	P	interface:Handler
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    fn call(&mut self, req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    fn call(&mut self, req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn call(&mut self, req: Request<B>) -> Self::Future {$/;"	P	implementation:Next
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^    fn call(&mut self, _target: T) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^        macro_rules! call {$/;"	M	function:call_with_state
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn call<S>(method: Method, svc: &mut S) -> (StatusCode, HeaderMap, String)$/;"	f	module:tests
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn call(&mut self, req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn call(mut self, req: Request<B>, state: S) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn call(&mut self, req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/not_found.rs	/^    fn call(&mut self, _req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    fn call(&mut self, req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    fn call(&mut self, mut req: Request<B>) -> Self::Future {$/;"	f
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^    fn call(&mut self, _req: R) -> Self::Future {$/;"	P	implementation:Svc
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        fn call(&mut self, _req: R) -> Self::Future {$/;"	P	implementation:wrong_method_service::Svc
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        fn call(&mut self, req: R) -> Self::Future {$/;"	f	function:middleware_still_run_for_unmatched_requests
call	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^        fn call(&mut self, mut req: Request<B>) -> Self::Future {$/;"	f	function:outer_middleware_still_see_whole_url
call_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn call_with_state($/;"	f
call_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn call_with_state(self: Box<Self>, request: Request<B2>, state: S) -> RouteFuture<B2, E2> {$/;"	f
call_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn call_with_state(self: Box<Self>, request: Request<B>, state: S) -> RouteFuture<B, E>;$/;"	P	interface:ErasedIntoRoute
call_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub(crate) fn call_with_state(&mut self, req: Request<B>, state: S) -> RouteFuture<B, E> {$/;"	f
call_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub(crate) fn call_with_state($/;"	f
call_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn call_with_state($/;"	f
callback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^unsafe extern "system" fn callback(ptr: *mut std::ffi::c_void, _timer_fired: BOOLEAN) {$/;"	f
can_extract_nested_matched_path_in_middleware_on_nested_router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn can_extract_nested_matched_path_in_middleware_on_nested_router() {$/;"	f	module:tests
can_extract_nested_matched_path_in_middleware_on_nested_router_via_extension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn can_extract_nested_matched_path_in_middleware_on_nested_router_via_extension() {$/;"	f	module:tests
can_extract_nested_matched_path_in_middleware_using_nest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn can_extract_nested_matched_path_in_middleware_using_nest() {$/;"	f	module:tests
can_extract_nested_matched_path_in_middleware_via_extension_using_nest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn can_extract_nested_matched_path_in_middleware_via_extension_using_nest() {$/;"	f	module:tests
can_push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    pub(crate) fn can_push(&self) -> bool {$/;"	P	implementation:WakeList
can_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^fn can_read_output(header: &Header, trailer: &Trailer, waker: &Waker) -> bool {$/;"	f
cancel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn cancel(self: Pin<&mut Self>) {$/;"	P	implementation:TimerEntry
cancel_acquire_releases_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn cancel_acquire_releases_permits() {$/;"	f
cancel_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^fn cancel_task<T: Future, S: Schedule>(core: &Core<T, S>) {$/;"	f
cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub(crate) fn cancelled(id: Id) -> JoinError {$/;"	P	implementation:JoinError
cannot_extract_nested_matched_path_in_middleware	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn cannot_extract_nested_matched_path_in_middleware() {$/;"	f	module:tests
cannot_extract_nested_matched_path_in_middleware_via_extension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn cannot_extract_nested_matched_path_in_middleware_via_extension() {$/;"	f	module:tests
canonicalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/canonicalize.rs	/^pub async fn canonicalize(path: impl AsRef<Path>) -> io::Result<PathBuf> {$/;"	f
canonicalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod canonicalize;$/;"	n
cap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    cap: usize,$/;"	m	struct:CopyBuffer
capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:ReadBuf
capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:Sender
capture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        capture: UnsafeCell<Capture>,$/;"	m	struct:capture::LazilyResolvedCapture
capture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        pub(crate) fn capture() -> Backtrace {$/;"	P	implementation:capture::Backtrace
capture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^mod capture {$/;"	n
capture_tracing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^pub(crate) async fn capture_tracing<T, F, Fut>(f: F) -> Vec<TracingEvent<T>>$/;"	f
captures_dont_match_empty_segments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn captures_dont_match_empty_segments() {$/;"	f	module:tests
cast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn cast<U: CastTo>(self) -> Mut<'a, U::Target> {$/;"	f
cast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn cast<U: CastTo>(self) -> Own<U::Target> {$/;"	f
cast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn cast<U: CastTo>(self) -> Ref<'a, U::Target> {$/;"	f
catch_unwind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^        fn catch_unwind<F: FnOnce() -> R, R>(f: F) -> std::thread::Result<R> {$/;"	f	method:AtomicWaker::do_register
cautious	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/size_hint.rs	/^pub fn cautious(hint: Option<usize>) -> usize {$/;"	f
cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    cell: OnceCell<Mutex<u64>>,$/;"	m	struct:StaticAtomicU64
cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod cell {$/;"	n
cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    cell: NonNull<Cell<T, S>>,$/;"	m	struct:Harness
cfg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod cfg;$/;"	n
cfg_aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_aio {$/;"	M
cfg_atomic_waker_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_atomic_waker_impl {$/;"	M
cfg_block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_block_on {$/;"	M
cfg_coop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_coop {$/;"	M
cfg_fs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_fs {$/;"	M
cfg_has_atomic_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_has_atomic_u64 {$/;"	M
cfg_has_const_mutex_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_has_const_mutex_new {$/;"	M
cfg_io_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_blocking {$/;"	M
cfg_io_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_driver {$/;"	M
cfg_io_driver_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_driver_impl {$/;"	M
cfg_io_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_readiness {$/;"	M
cfg_io_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_std {$/;"	M
cfg_io_util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_util {$/;"	M
cfg_is_wasm_not_wasi	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_is_wasm_not_wasi {$/;"	M
cfg_loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_loom {$/;"	M
cfg_macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_macros {$/;"	M
cfg_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_metrics {$/;"	M
cfg_net	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_net {$/;"	M
cfg_net_or_process	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_net_or_process {$/;"	M
cfg_net_unix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_net_unix {$/;"	M
cfg_net_windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_net_windows {$/;"	M
cfg_not_coop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_coop {$/;"	M
cfg_not_has_atomic_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_has_atomic_u64 {$/;"	M
cfg_not_has_const_mutex_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_has_const_mutex_new {$/;"	M
cfg_not_io_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_io_driver {$/;"	M
cfg_not_io_util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_io_util {$/;"	M
cfg_not_loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_loom {$/;"	M
cfg_not_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_metrics {$/;"	M
cfg_not_process_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_process_driver {$/;"	M
cfg_not_rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_rt {$/;"	M
cfg_not_rt_and_metrics_and_net	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_rt_and_metrics_and_net {$/;"	M
cfg_not_rt_multi_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_rt_multi_thread {$/;"	M
cfg_not_signal_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_signal_internal {$/;"	M
cfg_not_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_sync {$/;"	M
cfg_not_test_util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_test_util {$/;"	M
cfg_not_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_time {$/;"	M
cfg_not_trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_trace {$/;"	M
cfg_not_wasi	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_wasi {$/;"	M
cfg_process	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_process {$/;"	M
cfg_process_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_process_driver {$/;"	M
cfg_rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_rt {$/;"	M
cfg_rt_multi_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_rt_multi_thread {$/;"	M
cfg_signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_signal {$/;"	M
cfg_signal_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_signal_internal {$/;"	M
cfg_signal_internal_and_unix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_signal_internal_and_unix {$/;"	M
cfg_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_sync {$/;"	M
cfg_test_util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_test_util {$/;"	M
cfg_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_time {$/;"	M
cfg_trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_trace {$/;"	M
cfg_unstable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_unstable {$/;"	M
cfg_windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_windows {$/;"	M
ch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    ch: Option<u8>,$/;"	m	struct:IoRead
chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn chain(&self) -> Chain {$/;"	P	implementation:Error
chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) unsafe fn chain(this: Ref<Self>) -> Chain {$/;"	P	implementation:ErrorImpl
chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod chain;$/;"	n
chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^pub(super) fn chain<T, U>(first: T, second: U) -> Chain<T, U>$/;"	f
chained_handler_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^macro_rules! chained_handler_fn {$/;"	M
chained_service_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^macro_rules! chained_service_fn {$/;"	M
chained_steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^fn chained_steal() {$/;"	f
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: &'a chan::Tx<T, Semaphore>,$/;"	m	struct:Permit
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: Arc<chan::Chan<T, Semaphore>>,$/;"	m	struct:WeakSender
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: Option<chan::Tx<T, Semaphore>>,$/;"	m	struct:OwnedPermit
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: chan::Rx<T, Semaphore>,$/;"	m	struct:Receiver
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: chan::Tx<T, Semaphore>,$/;"	m	struct:Sender
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^mod chan;$/;"	n
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    chan: Arc<chan::Chan<T, Semaphore>>,$/;"	m	struct:WeakUnboundedSender
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    chan: chan::Rx<T, Semaphore>,$/;"	m	struct:UnboundedReceiver
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    chan: chan::Tx<T, Semaphore>,$/;"	m	struct:UnboundedSender
change_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn change_waker() {$/;"	f
changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub async fn changed(&mut self) -> Result<(), error::RecvError> {$/;"	P	implementation:Receiver
changing_rx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn changing_rx_task() {$/;"	f
changing_the_default_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn changing_the_default_limit() {$/;"	f
changing_tx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn changing_tx_task() {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^pub(super) fn channel() -> (Sender, Receiver) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^pub(crate) fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^pub fn channel<T: Clone>(mut capacity: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub fn channel<T>(buffer: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(crate) fn channel<T, S: Semaphore>(semaphore: S) -> (Tx<T, S>, Rx<T, S>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^pub(crate) fn channel<T>() -> (Tx<T>, Rx<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub fn channel<T>(init: T) -> (Sender<T>, Receiver<T>) {$/;"	f
char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de> Deserialize<'de> for char {$/;"	c
check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^    async fn check<T>(uri: impl AsRef<str>, value: T)$/;"	f	module:tests
check_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^    async fn check_body(body: &'static [u8]) {$/;"	f	module:tests
check_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    async fn check_body<T: Serialize + DeserializeOwned + PartialEq + Debug>(value: T) {$/;"	f	module:tests
check_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn check_inner(&self) -> std_io::Result<()> {$/;"	P	implementation:Handle
check_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        fn check_overflow<E>(secs: u64, nanos: u32) -> Result<(), E>$/;"	f	method:Duration::deserialize
check_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        fn check_overflow<E>(secs: u64, nanos: u32) -> Result<(), E>$/;"	f	method:SystemTime::deserialize
check_query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^    async fn check_query(uri: &str, value: &[u8]) {$/;"	f	module:tests
check_query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    async fn check_query<T: DeserializeOwned + PartialEq + Debug>(uri: impl AsRef<str>, value: T/;"	f	module:tests
check_recursion	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^macro_rules! check_recursion {$/;"	M
check_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_send<T: Send>() {}$/;"	f	function:bounds
check_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn check_send<T: Send>() {}$/;"	f	function:bounds
check_send_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_send_sync<T: Send + Sync>() {}$/;"	f	function:bounds
check_send_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn check_send_sync<T: Send + Sync>() {}$/;"	f	function:bounds
check_send_sync_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_send_sync_val<T: Send + Sync>(_t: T) {}$/;"	f	function:bounds
check_send_sync_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn check_send_sync_val<T: Send + Sync>(_t: T) {}$/;"	f	function:bounds
check_send_sync_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn check_send_sync_val<T: Send + Sync>(_t: T) {}$/;"	f	function:bounds
check_single_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    macro_rules! check_single_value {$/;"	M	module:tests
check_static	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_static<T: 'static>() {}$/;"	f	function:bounds
check_static_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_static_val<T: 'static>(_t: T) {}$/;"	f	function:bounds
check_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn check_sync<T: Sync>() {}$/;"	f	function:bounds
check_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_unpin<T: Unpin>() {}$/;"	f	function:bounds
check_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn check_unpin<T: Unpin>() {}$/;"	f	function:bounds
check_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn check_unpin<T: Unpin>() {}$/;"	f	function:bounds
checked_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn checked_add(&self, duration: Duration) -> Option<Instant> {$/;"	P	implementation:Instant
checked_duration_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn checked_duration_since(&self, earlier: Instant) -> Option<Duration> {$/;"	P	implementation:Instant
checked_sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn checked_sub(&self, duration: Duration) -> Option<Instant> {$/;"	P	implementation:Instant
child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    child: FusedChild,$/;"	m	struct:Child
child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    child: imp::Child,$/;"	m	struct:SpawnedChild
child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    child: StdChild,$/;"	m	struct:Child
child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn child() -> Self {$/;"	P	implementation:SignalKind
chunk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub async fn chunk(&mut self) -> Result<Option<Bytes>, MultipartError> {$/;"	P	implementation:Field
chunk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) async fn chunk(&mut self) -> Option<Bytes> {$/;"	P	implementation:TestResponse
chunk_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) async fn chunk_text(&mut self) -> Option<String> {$/;"	P	implementation:TestResponse
classify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub fn classify(&self) -> Category {$/;"	P	implementation:Error
clear	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:Map
clear	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:ReadBuf
clear_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(self) unsafe fn clear_entry(&self, entry: NonNull<TimerShared>) {$/;"	P	implementation:Handle
clear_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn clear_readiness(&self, event: ReadyEvent) {$/;"	P	implementation:Registration
clear_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(crate) fn clear_readiness(&self, event: ReadyEvent) {$/;"	P	implementation:ScheduledIo
clear_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn clear_ready(&mut self) {$/;"	P	implementation:AsyncFdReadyGuard
clear_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn clear_ready(&mut self) {$/;"	P	implementation:AsyncFdReadyMutGuard
clear_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn clear_ready(&self, ev: AioEvent) {$/;"	P	implementation:Aio
clear_wakers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(crate) fn clear_wakers(&self) {$/;"	P	implementation:ScheduledIo
client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    client: reqwest::Client,$/;"	m	struct:TestClient
clock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) clock: Clock,$/;"	m	struct:Handle
clock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn clock(&self) -> &super::Clock {$/;"	P	implementation:TimerEntry
clock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod clock;$/;"	n
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:BoxedIntoRoute
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Next
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:MethodEndpoint
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:MethodRouter
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Endpoint
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Fallback
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Router
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:PathRouter
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Route
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        fn clone(&self) -> Self {$/;"	P	implementation:state_isnt_cloned_too_much::AppState
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:CowStrDeserializer
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:StringDeserializer
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Map
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Box
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn clone(raw: *const ()) -> RawWaker {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn clone(&self) -> Parker {$/;"	P	implementation:Parker
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn clone(&self) -> Steal<T> {$/;"	P	implementation:Steal
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:RawTask
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn clone(&self) -> Sender<T> {$/;"	P	implementation:Sender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Sender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:WeakSender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn clone(&self) -> Tx<T, S> {$/;"	P	implementation:Tx
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:UnboundedSender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:WeakUnboundedSender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn clone(&self) -> OnceCell<T> {$/;"	P	implementation:OnceCell
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Receiver
clone_arc_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn clone_arc_raw<T: Wake>(data: *const ()) -> RawWaker {$/;"	f
clone_box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn clone_box(&self) -> Box<dyn ErasedIntoRoute<S, B, E>>;$/;"	P	interface:ErasedIntoRoute
clone_box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn clone_box(&self) -> Box<dyn ErasedIntoRoute<S, B, Infallible>> {$/;"	f
clone_box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn clone_box(&self) -> Box<dyn ErasedIntoRoute<S, B2, E2>> {$/;"	f
clone_box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn clone_box(&self) -> Box<dyn LayerFn<B, E, B2, E2>> {$/;"	f
clone_box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn clone_box(&self) -> Box<dyn LayerFn<B, E, B2, E2>>;$/;"	P	interface:LayerFn
clone_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn clone_from(&mut self, source: &Self) {$/;"	P	implementation:Map
clone_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn clone_value(&self) -> Option<T>$/;"	P	implementation:RecvGuard
clone_w	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    unsafe fn clone_w(data: *const ()) -> RawWaker {$/;"	f	function:notify_clones_waker_before_lock
clone_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^unsafe fn clone_waker(ptr: *const ()) -> RawWaker {$/;"	f
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub async fn close(mut self) -> Result<(), Error> {$/;"	P	implementation:WebSocket
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) fn close(&self) {$/;"	P	implementation:Handle
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn close(&self) -> bool {$/;"	P	implementation:Inject
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn close(&self) {$/;"	P	implementation:Semaphore
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn close(&mut self) {$/;"	P	implementation:Receiver
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn close(&self) {$/;"	P	implementation:Semaphore
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn close(&self);$/;"	P	interface:Semaphore
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn close(&mut self) {$/;"	P	implementation:Rx
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) fn close(&self) {$/;"	P	implementation:Tx
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn close(&mut self) {$/;"	P	implementation:UnboundedReceiver
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn close(&self) {$/;"	P	implementation:Inner
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn close(&mut self) {$/;"	P	implementation:Receiver
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn close(&self) {$/;"	P	implementation:Semaphore
close_and_shutdown_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn close_and_shutdown_all(&self)$/;"	P	implementation:LocalOwnedTasks
close_and_shutdown_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn close_and_shutdown_all(&self)$/;"	P	implementation:OwnedTasks
close_and_shutdown_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn close_and_shutdown_all(&self) {$/;"	P	implementation:LocalState
close_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn close_channel(&self) {$/;"	P	implementation:Sender
close_code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub mod close_code {$/;"	n
close_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn close_read(&mut self) {$/;"	P	implementation:Pipe
close_semaphore_notifies_permit1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn close_semaphore_notifies_permit1() {$/;"	f
close_semaphore_notifies_permit2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn close_semaphore_notifies_permit2() {$/;"	f
close_semaphore_prevents_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn close_semaphore_prevents_acquire() {$/;"	f
close_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn close_write(&mut self) {$/;"	P	implementation:Pipe
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    closed: bool,$/;"	m	struct:OwnedTasksInner
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    closed: bool,$/;"	m	struct:Waitlist
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn closed() -> AcquireError {$/;"	P	implementation:AcquireError
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    closed: bool,$/;"	m	struct:Tail
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn closed(&self) {$/;"	P	implementation:Sender
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) async fn closed(&self) {$/;"	P	implementation:Tx
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub async fn closed(&self) {$/;"	P	implementation:UnboundedSender
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub async fn closed(&mut self) {$/;"	P	implementation:Sender
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub async fn closed(&self) {$/;"	P	implementation:Sender
closing_and_sending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_and_sending() {$/;"	f
closing_bounded_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_bounded_rx() {$/;"	f
closing_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_tx() {$/;"	f
closing_unbounded_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_unbounded_rx() {$/;"	f
closing_unbounded_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_unbounded_tx() {$/;"	f
cnt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^        cnt: AtomicUsize,$/;"	m	struct:test::Foo
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub code: CloseCode,$/;"	m	struct:CloseFrame
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    code: ErrorCode,$/;"	m	struct:ErrorImpl
col	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    col: usize,$/;"	m	struct:LineColIterator
col	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    pub fn col(&self) -> usize {$/;"	f
collect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    async fn collect(mut rx: watch::Receiver<()>) -> Vec<()> {$/;"	f	module:tests
collect_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn collect_list(list: &mut LinkedList<&'_ Entry, <&'_ Entry as Link>::Target>) -> Vec<i32> {$/;"	f	module:tests
collect_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
collect_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn collect_str<T>(self, value: &T) -> Result<()>$/;"	f
collect_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn collect_str<T>(self, value: &T) -> Result<Self::Ok>$/;"	P	implementation:RawValueStrEmitter
collect_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn collect_str<T>(self, value: &T) -> Result<Self::Ok>$/;"	P	implementation:RawValueEmitter
collect_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn collect_str<T>(self, value: &T) -> Result<String>$/;"	P	implementation:MapKeySerializer
collect_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn collect_str<T>(self, value: &T) -> Result<Value>$/;"	P	implementation:Serializer
colno	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        colno: Option<u32>,$/;"	m	struct:capture::BacktraceSymbol
column	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    column: usize,$/;"	m	struct:ErrorImpl
column	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub fn column(&self) -> usize {$/;"	P	implementation:Error
column	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    pub column: usize,$/;"	m	struct:Position
columns	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub columns: [&'s str; C],$/;"	m	struct:Metadata
columns	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn columns() -> &'static [&'static str];$/;"	P	interface:Schema
comment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn comment<T>(mut self, comment: T) -> Event$/;"	P	implementation:Event
compact	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn compact(&mut self) {$/;"	P	implementation:Slab
compact_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn compact_all() {$/;"	f	module:test
compare	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn compare(&self, y: &Self) -> cmp::Ordering {$/;"	P	interface:Math
compare	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn compare(x: &[Limb], y: &[Limb]) -> cmp::Ordering {$/;"	f	module:large
compare_exchange	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn compare_exchange($/;"	P	implementation:AtomicU64
compare_exchange_weak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn compare_exchange_weak($/;"	P	implementation:AtomicU64
compare_exchange_weak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) fn compare_exchange_weak($/;"	P	implementation:StaticAtomicU64
complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn complete(self) {$/;"	f
complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn complete(&self) -> bool {$/;"	P	implementation:Inner
complete_block_on_under_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn complete_block_on_under_load() {$/;"	f	module:group_b
complete_inflight	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    async fn complete_inflight(&mut self) {$/;"	P	implementation:Inner
concurrent_cancel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn concurrent_cancel() {$/;"	f
concurrent_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn concurrent_close() {$/;"	f
concurrent_read_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_rwlock.rs	/^fn concurrent_read_write() {$/;"	f
concurrent_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_rwlock.rs	/^fn concurrent_write() {$/;"	f
condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    condvar: Condvar,$/;"	m	struct:Inner
condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    condvar: Condvar,$/;"	m	struct:Inner
condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    condvar: Condvar,$/;"	m	struct:Inner
config	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    config: WebSocketConfig,$/;"	m	struct:WebSocketUpgrade
config	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    config: Config,$/;"	m	struct:Shared
config	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    config: Config,$/;"	m	struct:Shared
conjure_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub fn conjure_value<T>() -> T {$/;"	f
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub async fn connect(self, addr: SocketAddr) -> io::Result<TcpStream> {$/;"	P	implementation:TcpSocket
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn connect<A: ToSocketAddrs>(&self, addr: A) -> io::Result<()> {$/;"	P	implementation:UdpSocket
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn connect<P: AsRef<Path>>(&self, path: P) -> io::Result<()> {$/;"	P	implementation:UnixDatagram
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn connect<P>(path: P) -> io::Result<UnixStream>$/;"	P	implementation:UnixStream
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn connect(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeServer
connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^            fn connect_info(_target: &AddrStream) -> Self {$/;"	P	implementation:tests::custom::MyConnectInfo
connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    fn connect_info(target: &AddrStream) -> Self {$/;"	P	implementation:SocketAddr
connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    fn connect_info(target: T) -> Self;$/;"	P	interface:Connected
connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^pub mod connect_info;$/;"	n
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^    pub(crate) const fn const_new(t: T) -> Mutex<T> {$/;"	P	implementation:Mutex
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) const fn const_new(t: T) -> Mutex<T> {$/;"	P	implementation:Mutex
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) const fn const_new(mut permits: usize) -> Self {$/;"	P	implementation:Semaphore
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub const fn const_new(t: T) -> Self$/;"	P	implementation:Mutex
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub const fn const_new() -> Notify {$/;"	P	implementation:Notify
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub const fn const_new() -> Self {$/;"	P	implementation:OnceCell
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub const fn const_new(value: T) -> RwLock<T>$/;"	P	implementation:RwLock
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub const fn const_new(permits: usize) -> Self {$/;"	P	implementation:Semaphore
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn const_new() {$/;"	f	module:tests
const_with_max_readers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub const fn const_with_max_readers(value: T, mut max_reads: u32) -> RwLock<T>$/;"	P	implementation:RwLock
constrain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
construct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    unsafe fn construct<E>($/;"	P	implementation:Error
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn consume(mut self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:u8
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:Cursor
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	f
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize);$/;"	P	interface:AsyncBufRead
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:BufReader
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:BufStream
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:BufWriter
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	f
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn consume(self: Pin<&mut Self>, _: usize) {}$/;"	P	implementation:Empty
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:Take
consume_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^    async fn consume_body() {$/;"	f	module:tests
consume_body_to_json_requires_json_content_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    async fn consume_body_to_json_requires_json_content_type() {$/;"	f	module:tests
consume_budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/consume_budget.rs	/^pub async fn consume_budget() {$/;"	f
consume_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn consume_value(&self) -> Option<T> {$/;"	P	implementation:Inner
contains	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub(crate) fn contains<T: Into<Self>>(self, other: T) -> bool {$/;"	P	implementation:Ready
contains_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn contains_key<Q>(&self, key: &Q) -> bool$/;"	P	implementation:Map
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        content: &'a Content<'de>,$/;"	m	struct:content::ContentRefDeserializer
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        content: Content<'de>,$/;"	m	struct:content::ContentDeserializer
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub content: Content<'de>,$/;"	m	struct:content::TaggedContent
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^mod content {$/;"	n
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^mod content {$/;"	n
content_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub fn content_type(&self) -> Option<&str> {$/;"	P	implementation:Field
content_type_with_encoding	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    async fn content_type_with_encoding() {$/;"	f	module:tests
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	P	implementation:Option
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	f
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub context: C,$/;"	m	struct:ContextError
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn context<C>(self, context: C) -> Self$/;"	P	implementation:Error
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	P	interface:Context
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod context;$/;"	n
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^pub(crate) mod context;$/;"	n
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    context: Context,$/;"	m	struct:CoreGuard
context_backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn context_backtrace<C>(e: Ref<ErrorImpl>) -> Option<&Backtrace>$/;"	f
context_chain_downcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn context_chain_downcast<C>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
context_chain_downcast_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn context_chain_downcast_mut<C>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
context_chain_drop_rest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn context_chain_drop_rest<C>(e: Own<ErrorImpl>, target: TypeId)$/;"	f
context_downcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn context_downcast<C, E>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
context_downcast_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn context_downcast_mut<C, E>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
context_drop_rest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn context_drop_rest<C, E>(e: Own<ErrorImpl>, target: TypeId)$/;"	f
convert_address	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^fn convert_address(address: socket2::SockAddr) -> io::Result<SocketAddr> {$/;"	f
convert_to_stdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) fn convert_to_stdio(io: ChildStdio) -> io::Result<Stdio> {$/;"	f
convert_to_stdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(crate) fn convert_to_stdio(child_stdio: ChildStdio) -> io::Result<Stdio> {$/;"	f
coop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^pub(crate) mod coop;$/;"	n
copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/copy.rs	/^pub async fn copy(from: impl AsRef<Path>, to: impl AsRef<Path>) -> Result<u64, std::io::Error> {$/;"	f
copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod copy;$/;"	n
copy_bidirectional	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^pub async fn copy_bidirectional<A, B>(a: &mut A, b: &mut B) -> Result<(u64, u64), std::io::Error/;"	f
copy_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn copy_from(&mut self, src: &[u8]) -> usize {$/;"	P	implementation:Buf
copy_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn copy_to(&mut self, dst: &mut ReadBuf<'_>) -> usize {$/;"	P	implementation:Buf
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^    mod core {$/;"	n	module:lib
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    core: AtomicCell<Core>,$/;"	m	struct:CurrentThread
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    core: RefCell<Option<Box<Core>>>,$/;"	m	struct:Context
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    core: AtomicCell<Core>,$/;"	m	struct:Worker
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    core: RefCell<Option<Box<Core>>>,$/;"	m	struct:Context
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) core: Core<T, S>,$/;"	m	struct:Cell
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^            core: &'a Core<T, S>,$/;"	m	struct:poll_future::Guard
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn core(&self) -> &Core<T, S> {$/;"	f
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod core;$/;"	n
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    core: TryLock<Core>,$/;"	m	struct:Inner
correct_rejection_status_code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^    async fn correct_rejection_status_code() {$/;"	f	module:tests
count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^            fn count() {$/;"	f	method:state_isnt_cloned_too_much::AppState::clone
count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    count: usize,$/;"	m	struct:MapDeserializer
count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    count: usize,$/;"	m	struct:SeqDeserializer
count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/select.rs	/^macro_rules! count {$/;"	M
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn create(ip: usize) -> Backtrace {$/;"	P	implementation:capture::Backtrace
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    pub async fn create(&self, path: impl AsRef<Path>) -> io::Result<()> {$/;"	P	implementation:DirBuilder
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn create(path: impl AsRef<Path>) -> io::Result<File> {$/;"	P	implementation:File
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn create(&mut self, create: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn create(&self, addr: impl AsRef<OsStr>) -> io::Result<NamedPipeServer> {$/;"	P	implementation:ServerOptions
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(super) fn create($/;"	f
create	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn create(self, pool: E) -> CrudFut<'e, Self> {$/;"	P	interface:Crud
create_blocking_pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^pub(crate) fn create_blocking_pool(builder: &Builder, thread_cap: usize) -> BlockingPool {$/;"	f
create_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/create_dir.rs	/^pub async fn create_dir(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
create_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod create_dir;$/;"	n
create_dir_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/create_dir_all.rs	/^pub async fn create_dir_all(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
create_dir_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod create_dir_all;$/;"	n
create_drop1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn create_drop1() {$/;"	f
create_drop2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn create_drop2() {$/;"	f
create_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn create_new(&mut self, create_new: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
create_shutdown1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn create_shutdown1() {$/;"	f
create_shutdown2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn create_shutdown2() {$/;"	f
create_url_params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn create_url_params<I, K, V>(values: I) -> Vec<(Arc<str>, PercentDecodedStr)>$/;"	f	module:tests
create_with_security_attributes_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub unsafe fn create_with_security_attributes_raw($/;"	P	implementation:ServerOptions
created	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn created() -> (StatusCode, &'static str) {$/;"	f	module:tests
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_break() -> io::Result<CtrlBreak> {$/;"	f
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_break() -> io::Result<RxFuture> {$/;"	f
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_break: EventInfo,$/;"	m	struct:OsStorage
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_break() {$/;"	f	module:tests
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_break() -> io::Result<RxFuture> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/ctrl_c.rs	/^pub async fn ctrl_c() -> io::Result<()> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^mod ctrl_c;$/;"	n
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) fn ctrl_c() -> io::Result<Signal> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_c() -> io::Result<CtrlC> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_c() -> io::Result<RxFuture> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_c: EventInfo,$/;"	m	struct:OsStorage
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_c() {$/;"	f	module:tests
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_c() -> io::Result<RxFuture> {$/;"	f
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_close() -> io::Result<CtrlClose> {$/;"	f
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_close() -> io::Result<RxFuture> {$/;"	f
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_close: EventInfo,$/;"	m	struct:OsStorage
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_close() {$/;"	f	module:tests
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_close() -> io::Result<RxFuture> {$/;"	f
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_logoff() -> io::Result<CtrlLogoff> {$/;"	f
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_logoff() -> io::Result<RxFuture> {$/;"	f
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_logoff: EventInfo,$/;"	m	struct:OsStorage
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_logoff() {$/;"	f	module:tests
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_logoff() -> io::Result<RxFuture> {$/;"	f
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_shutdown() -> io::Result<CtrlShutdown> {$/;"	f
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_shutdown() -> io::Result<RxFuture> {$/;"	f
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_shutdown: EventInfo,$/;"	m	struct:OsStorage
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_shutdown() {$/;"	f	module:tests
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_shutdown() -> io::Result<RxFuture> {$/;"	f
ctx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    ctx: trace::AsyncOpTracingCtx,$/;"	m	struct:Waiter
ctx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    ctx: RcCell<Context>,$/;"	m	struct:LocalData
ctx_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                ctx_ref: &'a RcCell<Context>,$/;"	m	struct:LocalSet::with::Reset
ctx_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                ctx_ref: &'a RcCell<Context>,$/;"	m	struct:LocalSet::with_if_possible::Reset
curr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    curr: usize,$/;"	m	struct:WakeList
current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn current() -> Self {$/;"	P	implementation:Handle
current_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn current_dir<P: AsRef<Path>>(&mut self, dir: P) -> &mut Command {$/;"	P	implementation:Command
current_task_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    current_task_id: Cell<Option<Id>>,$/;"	m	struct:Context
current_thread_park_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^pub(crate) fn current_thread_park_count() -> usize {$/;"	f
custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    async fn custom() {$/;"	f	module:tests
custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn custom<T>(msg: T) -> Self$/;"	P	implementation:PathDeserializationError
custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	P	implementation:Error
custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^    fn custom<T>(_: T) -> Self$/;"	P	implementation:Error
custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn custom<T: Display>(_msg: T) -> Self {$/;"	P	implementation:Error
custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    fn custom<T: Display>(msg: T) -> Error {$/;"	P	implementation:Error
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn data<T>(mut self, data: T) -> Event$/;"	P	implementation:Event
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bignum.rs	/^    fn data(&self) -> &Vec<Limb> {$/;"	P	implementation:Bigint
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bignum.rs	/^    pub(crate) data: Vec<Limb>,$/;"	m	struct:Bigint
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn data(&self) -> &Vec<Limb>;$/;"	P	interface:Math
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    data: &'a str,$/;"	m	struct:StrRead
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    data: *mut T,$/;"	m	struct:MappedMutexGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    data: *mut T,$/;"	m	struct:MappedMutexGuardInner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    data: *mut U,$/;"	m	struct:OwnedMappedMutexGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    data: *mut U,$/;"	m	struct:OwnedMappedMutexGuardInner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    data: *const U,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub(super) data: *const U,$/;"	m	struct:OwnedRwLockReadGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    data: *const T,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) data: *mut T,$/;"	m	struct:OwnedRwLockWriteGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    data: *const U,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) data: *mut U,$/;"	m	struct:OwnedRwLockMappedWriteGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    data: *const T,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub(super) data: *const T,$/;"	m	struct:RwLockReadGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    data: *mut T,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) data: *mut T,$/;"	m	struct:RwLockWriteGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    data: *mut T,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) data: *mut T,$/;"	m	struct:RwLockMappedWriteGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    data: AtomicPtr<T>,$/;"	m	struct:AtomicCell
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    data: UnsafeCell<T>,$/;"	m	struct:TryLock
data_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bignum.rs	/^    fn data_mut(&mut self) -> &mut Vec<Limb> {$/;"	P	implementation:Bigint
data_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn data_mut(&mut self) -> &mut Vec<Limb>;$/;"	P	interface:Math
datagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub mod datagram;$/;"	n
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^mod de;$/;"	n
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^pub mod de;$/;"	n
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/mod.rs	/^pub mod de;$/;"	n
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:MapAccess
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:MapKey
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:SeqAccess
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:UnitVariantAccess
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    de: &'a mut Deserializer<R>,$/;"	m	struct:VariantAccess
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    de: Deserializer<R>,$/;"	m	struct:StreamDeserializer
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^pub mod de;$/;"	n
de	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^mod de;$/;"	n
deadline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    deadline: Instant,$/;"	m	struct:TimerEntry
deadline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn deadline(&self) -> Instant {$/;"	P	implementation:TimerEntry
deadline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) deadline: u64,$/;"	m	struct:Expiration
deadline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub fn deadline(&self) -> Instant {$/;"	P	implementation:Sleep
deadline_to_tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn deadline_to_tick(&self, t: Instant) -> u64 {$/;"	P	implementation:TimeSource
dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn dealloc(self) {$/;"	f
dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) dealloc: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn dealloc(self) {$/;"	P	implementation:RawTask
dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn dealloc<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
debug	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    pub(crate) unsafe fn debug(this: Ref<Self>, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorImpl
debug	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^fn debug<T>(fmt: &mut fmt::Formatter<'_>, name: &str, pages: &[Arc<Page<T>>]) -> fmt::Result {$/;"	f
dec_fd_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(crate) fn dec_fd_count(&self) {$/;"	P	implementation:IoDriverMetrics
dec_num_idle_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn dec_num_idle_threads(&self) -> usize {$/;"	P	implementation:SpawnerMetrics
dec_num_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn dec_num_searching(cell: &AtomicUsize) -> bool {$/;"	P	implementation:State
dec_num_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn dec_num_threads(&self) {$/;"	P	implementation:SpawnerMetrics
dec_num_unparked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn dec_num_unparked(cell: &AtomicUsize, is_searching: bool) -> bool {$/;"	P	implementation:State
dec_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn dec_queue_depth(&self) {$/;"	P	implementation:SpawnerMetrics
declare_error_trait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
declare_error_trait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
decode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod decode {$/;"	n
decode_hex_escape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	P	implementation:SliceRead
decode_hex_escape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	P	implementation:StrRead
decode_hex_escape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16> {$/;"	f
decode_hex_escape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn decode_hex_escape(&mut self) -> Result<u16>;$/;"	P	interface:Read
decode_hex_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^fn decode_hex_val(val: u8) -> Option<u16> {$/;"	f
deeply_nested_inherit_from_middle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn deeply_nested_inherit_from_middle() {$/;"	f
deeply_nested_inherit_from_top	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn deeply_nested_inherit_from_top() {$/;"	f
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    fn default() -> Self {$/;"	P	implementation:Chain
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    fn default() -> Self {$/;"	P	implementation:StreamBody
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn default() -> Self {$/;"	P	implementation:KeepAlive
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn default() -> Self {$/;"	f
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn default() -> Self {$/;"	f
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    fn default() -> Self {$/;"	P	implementation:PathRouter
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bignum.rs	/^    fn default() -> Self {$/;"	P	implementation:Bigint
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn default() -> Self {$/;"	P	implementation:Map
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn default() -> Self {$/;"	P	implementation:Box
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    fn default() -> Value {$/;"	P	implementation:Value
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    fn default() -> Self {$/;"	P	implementation:OpenOptions
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    fn default() -> AtomicU64 {$/;"	P	implementation:AtomicU64
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn default() -> OpenOptions {$/;"	P	implementation:OpenOptions
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    fn default() -> ScheduledIo {$/;"	P	implementation:ScheduledIo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn default() -> Self {$/;"	P	implementation:ParkThread
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn default() -> Self {$/;"	P	implementation:StateCell
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn default() -> Self {$/;"	P	implementation:EventInfo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn default() -> SignalInfo {$/;"	P	implementation:SignalInfo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn default() -> Self {$/;"	f
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn default() -> Notify {$/;"	P	implementation:Notify
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn default() -> OnceCell<T> {$/;"	P	implementation:OnceCell
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn default() -> Self {$/;"	f
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn default() -> Self {$/;"	P	implementation:AtomicWaker
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn default() -> Self {$/;"	P	implementation:JoinSet
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn default() -> LocalSet {$/;"	P	implementation:LocalSet
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    fn default() -> Self {$/;"	P	implementation:MissedTickBehavior
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn default() -> Self {$/;"	P	implementation:LinkedList
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^        fn default() -> Foo {$/;"	P	implementation:test::Foo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn default() -> CachedPage<T> {$/;"	P	implementation:CachedPage
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn default() -> Page<T> {$/;"	P	implementation:Page
default_fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    default_fallback: bool,$/;"	m	struct:Router
default_on_failed_upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn default_on_failed_upgrade() {$/;"	f	module:tests
default_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    default_timeout: u32,$/;"	m	struct:ServerOptions
defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    defer: RefCell<Option<Defer>>,$/;"	m	struct:Context
defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    pub(crate) fn defer(&mut self, waker: Waker) {$/;"	P	implementation:Defer
deferred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    deferred: Vec<Waker>,$/;"	m	struct:Defer
delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    delay: Pin<Box<Sleep>>,$/;"	m	struct:Interval
delegate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    delegate: S,$/;"	m	struct:TaggedSerializer
delegate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    delegate: SliceRead<'a>,$/;"	m	struct:StrRead
delegate_iterator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^macro_rules! delegate_iterator {$/;"	M
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    delete: MethodEndpoint<S, B, E>,$/;"	m	struct:MethodRouter
delete	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn delete(self, pool: E) -> CrudFut<'e, ()> {$/;"	P	interface:Crud
delete_by_id_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub delete_by_id_sql: &'s str,$/;"	m	struct:Metadata
delete_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn delete_by_id_sql() -> &'static str;$/;"	P	interface:Schema
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Error
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub unsafe fn deref(self) -> &'a T {$/;"	f
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:State
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:PercentDecodedStr
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn deref(&self) -> &E {$/;"	P	implementation:Aio
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    fn deref(&self) -> &E {$/;"	P	implementation:PollEvented
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:AtomicU16
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:AtomicU32
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:AtomicUsize
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:MutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockReadGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^    fn deref(&self) -> &Waker {$/;"	P	implementation:WakerRef
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Globals
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:MappedMutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:MutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:OwnedMappedMutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:OwnedMutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    fn deref(&self) -> &U {$/;"	P	implementation:OwnedRwLockReadGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:OwnedRwLockWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn deref(&self) -> &U {$/;"	P	implementation:OwnedRwLockMappedWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockReadGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockMappedWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:Ref
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:Ref
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:LockGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    fn deref(&self) -> &Waker {$/;"	P	implementation:WakerRef
deref_async_buf_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^macro_rules! deref_async_buf_read {$/;"	M
deref_async_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^macro_rules! deref_async_read {$/;"	M
deref_async_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^macro_rules! deref_async_seek {$/;"	M
deref_async_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^macro_rules! deref_async_write {$/;"	M
deref_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	M
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:Error
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub unsafe fn deref_mut(self) -> &'a mut T {$/;"	f
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:State
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn deref_mut(&mut self) -> &mut E {$/;"	P	implementation:Aio
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:AtomicUsize
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:MutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:RwLockWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:MappedMutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:MutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:OwnedMappedMutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:OwnedMutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:OwnedRwLockWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn deref_mut(&mut self) -> &mut U {$/;"	P	implementation:OwnedRwLockMappedWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:RwLockWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:RwLockMappedWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:LockGuard
deregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn deregister(&mut self);$/;"	P	interface:AioSource
deregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn deregister(&mut self, _registry: &Registry) -> io::Result<()> {$/;"	P	implementation:MioSource
deregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn deregister(&mut self, registry: &mio::Registry) -> io::Result<()> {$/;"	P	implementation:Pipe
deregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn deregister(&mut self, io: &mut impl Source) -> io::Result<()> {$/;"	P	implementation:Registration
deregister_source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(super) fn deregister_source(&self, source: &mut impl mio::event::Source) -> io::Result<(/;"	P	implementation:Handle
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:tests::str_reference_deserialize::Param
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	P	implementation:IgnoredAny
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration::deserialize::Field
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime::deserialize::Field
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:deserialize::Field
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:range::Field
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:CString
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:IpAddr
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:OsString
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Path
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PathBuf
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PhantomData
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SocketAddr
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:String
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:T
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:bool
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:char
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:str
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:u8
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	interface:Deserialize
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:DeserializeSeed
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/seed.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:private
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:content::Content
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagContentOtherFieldVisitor
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentFieldVisitor
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:content
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Map
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Number, D::Error>$/;"	P	implementation:Number
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberFromString, D::Error>$/;"	P	implementation:NumberFromString
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn deserialize<D>(deserializer: D) -> Result<NumberKey, D::Error>$/;"	P	implementation:NumberKey
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<RawKey, D::Error>$/;"	P	implementation:RawKey
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Box
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:RawValue
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:BoxedFromString
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:ReferenceFromString
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Value, D::Error>$/;"	P	implementation:Value
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:KeyClassifier
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:KeyDeserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_any<V>(self, v: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:PathDeserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_any<V>(self, v: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:ValueDeserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:NumberFieldDeserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^macro_rules! deserialize_any {$/;"	M
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:RawKeyDeserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:BorrowedCowStrDeserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:MapKeyDeserializer
deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    async fn deserialize_body() {$/;"	f	module:tests
deserialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:ValueDeserializer
deserialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:PathDeserializer
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:ValueDeserializer
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	M
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	P	interface:Deserializer
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f	module:content
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:Deserializer
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:BorrowedCowStrDeserializer
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:MapKeyDeserializer
deserialize_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:Value
deserialize_error_status_codes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    async fn deserialize_error_status_codes() {$/;"	f	module:tests
deserialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_float<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_i128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_i128<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_identifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_identifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_ignored_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:ValueDeserializer
deserialize_ignored_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_ignored_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_ignored_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_ignored_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_in_place	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	implementation:String
deserialize_in_place	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	interface:Deserialize
deserialize_integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_integer_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^macro_rules! deserialize_integer_key {$/;"	M
deserialize_integer_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^macro_rules! deserialize_integer_key {$/;"	M
deserialize_into_vec_of_tuples	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn deserialize_into_vec_of_tuples() {$/;"	f	module:tests
deserialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:PathDeserializer
deserialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:PathDeserializer
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:ValueDeserializer
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	interface:Deserializer
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f	module:content
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Er/;"	f
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, name: &'static str, visitor: V) -> Result<V::Value>$/;"	f
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_newtype_struct<V>(self, name: &str, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:MapKeyDeserializer
deserialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:Value
deserialize_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_number<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^macro_rules! deserialize_number {$/;"	M
deserialize_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^macro_rules! deserialize_number {$/;"	M
deserialize_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^macro_rules! deserialize_number {$/;"	M
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:ValueDeserializer
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value>$/;"	f
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:MapKeyDeserializer
deserialize_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_other	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_raw_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_raw_value<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_seq<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:ValueDeserializer
deserialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:PathDeserializer
deserialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:PathDeserializer
deserialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:ValueDeserializer
deserialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:PathDeserializer
deserialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:ValueDeserializer
deserialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	P	interface:Deserializer
deserialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f	module:content
deserialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:Deserializer
deserialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:Value
deserialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:PathDeserializer
deserialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:ValueDeserializer
deserialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	implementation:PathDeserializer
deserialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	implementation:ValueDeserializer
deserialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	interface:Deserializer
deserialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f	module:content
deserialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	implementation:Deserializer
deserialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	implementation:Value
deserialize_u128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_u128<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:PathDeserializer
deserialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:ValueDeserializer
deserialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Value
deserialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_unit_struct<V>($/;"	P	implementation:PathDeserializer
deserialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn deserialize_unit_struct<V>($/;"	P	implementation:ValueDeserializer
deserialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	P	interface:Deserializer
deserialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f	module:content
deserialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value>$/;"	P	implementation:Deserializer
deserialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn deserialize_unit_struct<V>(self, _name: &'static str, visitor: V) -> Result<V::Value, Err/;"	P	implementation:Value
deserialize_value_ref_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^macro_rules! deserialize_value_ref_number {$/;"	M
detach_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn detach_all(&mut self) {$/;"	P	implementation:JoinSet
device	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn device(&self) -> io::Result<Option<Vec<u8>>> {$/;"	P	implementation:TcpSocket
device	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn device(&self) -> io::Result<Option<Vec<u8>>> {$/;"	P	implementation:UdpSocket
did_defer_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^fn did_defer_tasks() -> bool {$/;"	f
did_defer_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^fn did_defer_tasks() -> bool {$/;"	f
did_wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    did_wake: AtomicBool,$/;"	m	struct:Inner
different_methods_added_in_different_routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn different_methods_added_in_different_routes() {$/;"	f
digit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod digit;$/;"	n
dir_builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod dir_builder;$/;"	n
disable_lifo_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) disable_lifo_slot: bool,$/;"	m	struct:Builder
disable_lifo_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) disable_lifo_slot: bool,$/;"	m	struct:Config
disable_recursion_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    disable_recursion_limit: bool,$/;"	m	struct:Deserializer
disable_recursion_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    pub fn disable_recursion_limit(&mut self) {$/;"	P	implementation:Deserializer
disabling_the_default_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn disabling_the_default_limit() {$/;"	f
disarm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn disarm(&mut self) {$/;"	P	implementation:test_combination::Output
discard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn discard(&mut self) {$/;"	P	implementation:SliceRead
discard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn discard(&mut self) {$/;"	P	implementation:StrRead
discard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn discard(&mut self) {$/;"	f
discard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn discard(&mut self);$/;"	P	interface:Read
discard_buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn discard_buffer(self: Pin<&mut Self>) {$/;"	P	implementation:BufReader
disconnect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn disconnect(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeServer
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn dispatch(resources: &mut Slab<ScheduledIo>, tick: u8, token: mio::Token, ready: Ready) {$/;"	P	implementation:Driver
display	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    pub(crate) unsafe fn display(this: Ref<Self>, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorImpl
distance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn distance(&self, other_index: usize) -> usize {$/;"	P	implementation:Block
do_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    fn do_init(&self, init: impl FnOnce() -> T) {$/;"	P	implementation:OnceCell
do_register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn do_register<W>(&self, waker: W)$/;"	P	implementation:AtomicWaker
doc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/mod.rs	/^pub mod doc;$/;"	n
doc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod doc;$/;"	n
doc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^mod doc {$/;"	n
doctest_setup	/home/trey/code/sqlx-crud/src/lib.rs	/^macro_rules! doctest_setup {$/;"	M
does_not_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    fn does_not_panic(uri_and_prefix: UriAndPrefix) -> bool {$/;"	f	module:tests
does_not_register_signal_if_queue_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn does_not_register_signal_if_queue_empty() {$/;"	f	module:test
does_nothing_if_signal_could_not_be_registered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn does_nothing_if_signal_could_not_be_registered() {$/;"	f	module:test
doesnt_inherit_fallback_if_overriden	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn doesnt_inherit_fallback_if_overriden() {$/;"	f
downard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^fn downard(_: &mut ExtendedFloat, _: bool) {}$/;"	f
downcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn downcast<E>(mut self) -> Result<E, Self>$/;"	P	implementation:Error
downcast_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn downcast_mut<E>(&mut self) -> Option<&mut E>$/;"	P	implementation:Error
downcast_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn downcast_ref<E>(&self) -> Option<&E>$/;"	P	implementation:Error
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn downgrade(&self) -> WeakSender<T> {$/;"	P	implementation:Sender
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(super) fn downgrade(&self) -> Arc<Chan<T, S>> {$/;"	P	implementation:Tx
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn downgrade(&self) -> WeakUnboundedSender<T> {$/;"	P	implementation:UnboundedSender
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn downgrade(self) -> OwnedRwLockReadGuard<T> {$/;"	P	implementation:OwnedRwLockWriteGuard
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn downgrade(self) -> RwLockReadGuard<'a, T> {$/;"	P	implementation:RwLockWriteGuard
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_rwlock.rs	/^fn downgrade() {$/;"	f
downgrade_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn downgrade_map<F, U: ?Sized>(this: Self, f: F) -> OwnedRwLockReadGuard<T, U>$/;"	P	implementation:OwnedRwLockWriteGuard
downgrade_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn downgrade_map<F, U: ?Sized>(this: Self, f: F) -> RwLockReadGuard<'a, U>$/;"	P	implementation:RwLockWriteGuard
drain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn drain<F: FnMut(T)>(&mut self, func: F) {$/;"	P	implementation:IdleNotifiedSet
drain_attempts_a_single_reap_of_all_queued_orphans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn drain_attempts_a_single_reap_of_all_queued_orphans() {$/;"	f	module:test
drain_orphan_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^fn drain_orphan_queue<T>(mut queue: MutexGuard<'_, Vec<T>>)$/;"	f
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^mod driver;$/;"	n
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    driver: Option<Driver>,$/;"	m	struct:Core
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) driver: driver::Handle,$/;"	m	struct:Handle
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^    pub(crate) fn driver(&self) -> &driver::Handle {$/;"	P	implementation:Handle
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) driver: driver::Handle,$/;"	m	struct:Handle
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    driver: TryLock<Driver>,$/;"	m	struct:Shared
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    driver: scheduler::Handle,$/;"	m	struct:TimerEntry
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn driver(&self) -> &super::Handle {$/;"	P	implementation:TimerEntry
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Error
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AsyncFd
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    fn drop(&mut self) {$/;"	P	implementation:PollEvented
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Guard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn drop(&mut self) {$/;"	P	implementation:DuplexStream
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^            fn drop(&mut self) {$/;"	P	implementation:ScopedKey::set::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedWriteHalf
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedWriteHalf
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ChildDropGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Waiting
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn drop(&mut self) {$/;"	P	implementation:BlockingPool
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^        fn drop(&mut self) {$/;"	P	implementation:with_budget::ResetGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Registration
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ScheduledIo
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Runtime
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn drop(&mut self) {$/;"	P	implementation:CoreGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Local
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^        fn drop(&mut self) {$/;"	P	implementation:block_in_place::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^        fn drop(&mut self) {$/;"	P	implementation:run::AbortOnPanic
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AbortHandle
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TaskIdGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^            fn drop(&mut self) {$/;"	P	implementation:poll_future::Guard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Inject
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    fn drop(&mut self) {$/;"	P	implementation:JoinHandle
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Task
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:UnownedTask
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        fn drop(&mut self) {$/;"	P	implementation:atomic_take::AtomicTake
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^        fn drop(&mut self) {$/;"	P	implementation:spawn_during_shutdown::SpawnOnDrop
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^        fn drop(&mut self) {$/;"	P	implementation:with::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AssertDrop
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn drop(&mut self) {$/;"	P	implementation:test_combination::FutWrapper
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn drop(&mut self) {$/;"	P	implementation:test_combination::Output
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TimerEntry
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ReusableBoxFuture
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Acquire
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Receiver
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Recv
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RecvGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Sender
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedPermit
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Permit
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Chan
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Rx
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Tx
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MappedMutexGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MutexGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedMappedMutexGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedMutexGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Notified
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn drop(&mut self) {$/;"	P	implementation:NotifyWaitersList
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OnceCell
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Inner
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Receiver
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Sender
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedRwLockReadGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedRwLockWriteGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedRwLockMappedWriteGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RwLockReadGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RwLockWriteGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RwLockMappedWriteGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedSemaphorePermit
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn drop(&mut self) {$/;"	P	implementation:SemaphorePermit
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Receiver
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Sender
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn drop(&mut self) {$/;"	P	implementation:JoinSet
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                fn drop(&mut self) {$/;"	P	implementation:LocalSet::with::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                fn drop(&mut self) {$/;"	P	implementation:LocalSet::with_if_possible::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn drop(&mut self) {$/;"	P	implementation:LocalEnterGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn drop(&mut self) {$/;"	P	implementation:LocalSet
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            fn drop(&mut self) {$/;"	P	implementation:LocalKey::scope_inner::Guard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TaskLocalFuture
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AtomicCell
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^            fn drop(&mut self) {$/;"	P	implementation:IdleNotifiedSet::drain::AllEntries
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    fn drop(&mut self) {$/;"	P	implementation:IdleNotifiedSet
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OnceCell
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Ref
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    fn drop(&mut self) {$/;"	P	implementation:LockGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    fn drop(&mut self) {$/;"	P	implementation:WakeList
drop_abort_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) drop_abort_handle: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
drop_abort_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn drop_abort_handle(self) {$/;"	P	implementation:RawTask
drop_abort_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn drop_abort_handle<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
drop_abort_handle1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn drop_abort_handle1() {$/;"	f
drop_abort_handle2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn drop_abort_handle2() {$/;"	f
drop_arc_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn drop_arc_raw<T: Wake>(data: *const ()) {$/;"	f
drop_enqueues_orphan_if_wait_fails	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn drop_enqueues_orphan_if_wait_fails() {$/;"	f	module:test
drop_future_or_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn drop_future_or_output(&self) {$/;"	P	implementation:Core
drop_join_handle_fast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn drop_join_handle_fast(&self) -> Result<(), ()> {$/;"	P	implementation:State
drop_join_handle_slow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn drop_join_handle_slow(self) {$/;"	f
drop_join_handle_slow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) drop_join_handle_slow: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
drop_join_handle_slow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn drop_join_handle_slow(self) {$/;"	P	implementation:RawTask
drop_join_handle_slow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn drop_join_handle_slow<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
drop_multiple_rx_with_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn drop_multiple_rx_with_overflow() {$/;"	f
drop_reaps_if_possible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn drop_reaps_if_possible() {$/;"	f	module:test
drop_reference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn drop_reference(self) {$/;"	P	implementation:RawTask
drop_reference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn drop_reference(self) {$/;"	f
drop_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn drop_rx() {$/;"	f
drop_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn drop_task(&self) {$/;"	P	implementation:Task
drop_timer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn drop_timer() {$/;"	f
drop_w	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    unsafe fn drop_w(data: *const ()) {$/;"	f	function:notify_clones_waker_before_lock
drop_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn drop_waker(raw: *const ()) {$/;"	f
drop_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^unsafe fn drop_waker(ptr: *const ()) {$/;"	f
dropping_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn dropping_tx() {$/;"	f
dropping_unbounded_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn dropping_unbounded_tx() {$/;"	f
dupe_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub fn dupe_value<T>(_t: &T) -> T {$/;"	f
duplex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^pub fn duplex(max_buf_size: usize) -> (DuplexStream, DuplexStream) {$/;"	f
duplicate_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^fn duplicate_handle<T: AsRawHandle>(io: &T) -> io::Result<StdFile> {$/;"	f
duration_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn duration_since(&self, earlier: Instant) -> Duration {$/;"	P	implementation:Instant
eat_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn eat_char(&mut self) {$/;"	P	implementation:Deserializer
elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    elapsed: u64,$/;"	m	struct:InnerState
elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    elapsed: u64,$/;"	m	struct:Wheel
elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn elapsed(&self) -> u64 {$/;"	P	implementation:Wheel
elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn elapsed(&self) -> Duration {$/;"	P	implementation:Instant
elements	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeSeq
elements	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeTuple
empty_allow_header_by_default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn empty_allow_header_by_default() {$/;"	f	module:tests
empty_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn empty_route() {$/;"	f
enable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn enable(self: Pin<&mut Self>) -> bool {$/;"	P	implementation:Notified
enable_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn enable_all(&mut self) -> &mut Self {$/;"	P	implementation:Builder
enable_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    enable_io: bool,$/;"	m	struct:Builder
enable_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) enable_io: bool,$/;"	m	struct:Cfg
enable_pause_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) enable_pause_time: bool,$/;"	m	struct:Cfg
enable_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    enable_time: bool,$/;"	m	struct:Builder
enable_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) enable_time: bool,$/;"	m	struct:Cfg
enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn enabled() -> bool {$/;"	P	implementation:capture::Backtrace
encode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
encode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod encode {$/;"	n
encode_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^fn encode_addr(addr: impl AsRef<OsStr>) -> Box<[u16]> {$/;"	f
encode_surrogate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^            fn encode_surrogate(scratch: &mut Vec<u8>, n: u16) {$/;"	f	function:parse_escape
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f	module:content
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f	module:content
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeMap
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeSeq
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStruct
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStructVariant
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTuple
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleStruct
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleVariant
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    pub fn end(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn end(self) -> Result<()> {$/;"	f
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	P	implementation:SerializeMap
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	P	implementation:SerializeStructVariant
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	P	implementation:SerializeTupleVariant
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn end(self) -> Result<Value> {$/;"	P	implementation:SerializeVec
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub end: PipeEnd,$/;"	m	struct:PipeInfo
end_bound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^                fn end_bound(&self) -> Bound<&Q> {$/;"	P	implementation:Map::remove_entry::Key
end_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn end_map(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
end_raw_buffering	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	implementation:SliceRead
end_raw_buffering	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	implementation:StrRead
end_raw_buffering	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	P	interface:Read
end_raw_buffering	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn end_raw_buffering<V>(&mut self, visitor: V) -> Result<V::Value>$/;"	f
end_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn end_seq(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
end_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn end_string<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	P	interface:Formatter
ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod ensure;$/;"	n
ensure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/macros.rs	/^macro_rules! ensure {$/;"	M
ensure_capacity_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn ensure_capacity_for(&mut self, bytes: &ReadBuf<'_>) {$/;"	P	implementation:Buf
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn enter(&self) -> EnterGuard<'_> {$/;"	P	implementation:Handle
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn enter(&self) -> EnterGuard<'_> {$/;"	P	implementation:Runtime
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn enter<F, R>(self, f: F) -> R$/;"	P	implementation:CoreGuard
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn enter<R>(&self, core: Box<Core>, f: impl FnOnce() -> R) -> (Box<Core>, R) {$/;"	P	implementation:Context
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    fn enter(id: Id) -> Self {$/;"	P	implementation:TaskIdGuard
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub fn enter(&self) -> LocalEnterGuard {$/;"	P	implementation:LocalSet
entries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        entries: Vec<(Content, Content)>,$/;"	m	struct:content::SerializeMap
entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn entry<S>(&mut self, key: S) -> Entry$/;"	P	implementation:Map
entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod entry;$/;"	n
entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    entry: Arc<ListEntry<T>>,$/;"	m	struct:EntryInOneOfTheLists
entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn entry(val: i32) -> Pin<Box<Entry>> {$/;"	f	module:tests
env	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn env<K, V>(&mut self, key: K, val: V) -> &mut Command$/;"	P	implementation:Command
env_clear	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn env_clear(&mut self) -> &mut Command {$/;"	P	implementation:Command
env_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn env_remove<K: AsRef<OsStr>>(&mut self, key: K) -> &mut Command {$/;"	P	implementation:Command
envs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn envs<I, K, V>(&mut self, vars: I) -> &mut Command$/;"	P	implementation:Command
eof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^fn eof() -> io::Error {$/;"	f
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Map
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:N
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^    fn eq(&self, other: &&str) -> bool {$/;"	P	implementation:Value
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^    fn eq(&self, other: &String) -> bool {$/;"	P	implementation:Value
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^    fn eq(&self, other: &Value) -> bool {$/;"	P	implementation:String
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^    fn eq(&self, other: &Value) -> bool {$/;"	P	implementation:str
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^    fn eq(&self, other: &str) -> bool {$/;"	P	implementation:Value
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn eq(&self, other: &OnceCell<T>) -> bool {$/;"	P	implementation:OnceCell
eq_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^fn eq_bool(value: &Value, other: bool) -> bool {$/;"	f
eq_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^fn eq_f32(value: &Value, other: f32) -> bool {$/;"	f
eq_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^fn eq_f64(value: &Value, other: f64) -> bool {$/;"	f
eq_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^fn eq_i64(value: &Value, other: i64) -> bool {$/;"	f
eq_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^fn eq_str(value: &Value, other: &str) -> bool {$/;"	f
eq_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^fn eq_u64(value: &Value, other: u64) -> bool {$/;"	f
erase	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn erase(&self) -> Ref<ErrorImpl> {$/;"	P	implementation:ErrorImpl
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    err: ErrorImpl,$/;"	m	struct:Error
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentRefDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumRefDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapRefDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqRefDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantRefDeserializer
err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    err: Box<ErrorImpl>,$/;"	m	struct:Error
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub error: E,$/;"	m	struct:ContextError
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) unsafe fn error(this: Ref<Self>) -> &(dyn StdError + Send + Sync + 'static) {$/;"	P	implementation:ErrorImpl
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    error: PhantomData<E>,$/;"	m	struct:MapDeserializer
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::ContentSerializer
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeMap
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeSeq
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStruct
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStructVariant
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTuple
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleStruct
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleVariant
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    error: PhantomData<Error>,$/;"	m	struct:Impossible
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn error(&self, reason: ErrorCode) -> Error {$/;"	P	implementation:Deserializer
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^pub mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^fn error<'de, R, T>(read: &R, reason: ErrorCode) -> Result<T>$/;"	f
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^            error: Option<io::Error>,$/;"	m	struct:collect_str::Adapter
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn error() -> Ready {$/;"	f	module:sys
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^pub mod error {$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^pub mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^pub mod error {$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub mod error {$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^pub mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod error;$/;"	n
error_halfscale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^    fn error_halfscale() -> u32 {$/;"	P	implementation:u64
error_halfscale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^    fn error_halfscale() -> u32;$/;"	P	interface:FloatErrors
error_handling	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^pub mod error_handling;$/;"	n
error_is_accurate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^    fn error_is_accurate<F: Float>(count: u32, fp: &ExtendedFloat) -> bool {$/;"	P	implementation:u64
error_is_accurate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^    fn error_is_accurate<F: Float>(count: u32, fp: &ExtendedFloat) -> bool;$/;"	P	interface:FloatErrors
error_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) unsafe fn error_mut(this: Mut<Self>) -> &mut (dyn StdError + Send + Sync + 'stati/;"	P	implementation:ErrorImpl
error_scale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^    fn error_scale() -> u32 {$/;"	P	implementation:u64
error_scale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^    fn error_scale() -> u32;$/;"	P	interface:FloatErrors
errors	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod errors;$/;"	n
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    event: Bytes,$/;"	m	struct:KeepAlive
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn event(mut self, event: Event) -> Self {$/;"	P	implementation:KeepAlive
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn event<T>(mut self, event: T) -> Event$/;"	P	implementation:Event
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    event: Option<ReadyEvent>,$/;"	m	struct:AsyncFdReadyGuard
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    event: Option<ReadyEvent>,$/;"	m	struct:AsyncFdReadyMutGuard
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn event_info(&self, id: EventId) -> Option<&EventInfo> {$/;"	P	implementation:Vec
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn event_info(&self, id: EventId) -> Option<&EventInfo>;$/;"	P	interface:Storage
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    event_info: EventInfo,$/;"	m	struct:SignalInfo
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn event_info(&self, id: EventId) -> Option<&EventInfo> {$/;"	P	implementation:OsStorage
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn event_info(&self, id: EventId) -> Option<&EventInfo> {$/;"	P	implementation:OsStorage
event_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn event_interval(&mut self, val: u32) -> &mut Self {$/;"	P	implementation:Builder
event_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) event_interval: u32,$/;"	m	struct:Builder
event_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) event_interval: u32,$/;"	m	struct:Config
events	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    events: mio::Events,$/;"	m	struct:Driver
exhausted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^fn exhausted() -> ! {$/;"	f
exp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub exp: &'static [i32],$/;"	m	struct:ExtendedFloatArray
exp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub exp: i32,$/;"	m	struct:ExtendedFloat
expected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub(super) fn expected(self, expected: usize) -> PathDeserializationError {$/;"	P	implementation:WrongNumberOfParameters
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IgnoredAny
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:range::Field::deserialize::FieldVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::DurationVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_in_place
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:range
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        pub expecting: &'static str,$/;"	m	struct:range::RangeVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    expecting: &'static str,$/;"	m	struct:FromStrVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ArrayVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoolVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BytesVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CStringVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CharVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OsStringVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathBufVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PhantomDataVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringInPlaceVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Visitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        expecting: &'static str,$/;"	m	struct:content::TaggedContentVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::ContentVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:content
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_str::CowStrVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagContentOtherFieldVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentFieldVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::UntaggedUnitVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Map::deserialize::Visitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Number::deserialize::NumberVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NumberFromString::deserialize::Visitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NumberKey::deserialize::FieldVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Box::deserialize::BoxedVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RawKey::deserialize::FieldVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RawValue::deserialize::ReferenceVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoxedFromString
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ReferenceFromString
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Value::deserialize::ValueVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:KeyClassifier
explicitly_set_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn explicitly_set_state() {$/;"	f
exponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^pub(crate) mod exponent;$/;"	n
exponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn exponent(self) -> i32 {$/;"	P	interface:Float
exponent_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn exponent_limit() -> (i32, i32) {$/;"	P	implementation:f32
exponent_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn exponent_limit() -> (i32, i32) {$/;"	P	implementation:f64
exponent_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn exponent_limit() -> (i32, i32);$/;"	P	interface:Float
ext	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^mod ext {$/;"	n
ext_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	P	implementation:ext::Error
ext_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	P	interface:ext::StdError
ext_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	f	module:ext
extend	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn extend<'b>(self) -> Mut<'b, T> {$/;"	f
extend	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	P	implementation:Map
extend_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn extend_expiration(&self, new_timestamp: u64) -> Result<(), ()> {$/;"	P	implementation:StateCell
extend_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn extend_expiration(&self, t: u64) -> Result<(), ()> {$/;"	P	implementation:TimerShared
extension	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^mod extension;$/;"	n
extra	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    extra: OsExtraData,$/;"	m	struct:Globals
extract	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^pub mod extract;$/;"	n
extract_matched_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^        async fn extract_matched_path<B>($/;"	f	function:tests::can_extract_nested_matched_path_in_middleware_using_nest
extract_matched_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^        async fn extract_matched_path<B>($/;"	f	function:tests::cannot_extract_nested_matched_path_in_middleware
extract_matched_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^        async fn extract_matched_path<B>(matched_path: MatchedPath, req: Request<B>) -> Request</;"	f	function:tests::can_extract_nested_matched_path_in_middleware_on_nested_router
extract_matched_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^        async fn extract_matched_path<B>(req: Request<B>) -> Request<B> {$/;"	f	function:tests::can_extract_nested_matched_path_in_middleware_on_nested_router_via_extension
extract_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^    async fn extract_request_parts() {$/;"	f	module:tests
extract_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn extract_state() {$/;"	f
extracting_on_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn extracting_on_handler() {$/;"	f	module:tests
extracting_on_handler_in_deeply_nested_router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn extracting_on_handler_in_deeply_nested_router() {$/;"	f	module:tests
extracting_on_handler_in_nested_router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn extracting_on_handler_in_nested_router() {$/;"	f	module:tests
extracting_on_nested_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn extracting_on_nested_handler() {$/;"	f	module:tests
extracting_url_params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn extracting_url_params() {$/;"	f	module:tests
extracting_url_params_multiple_times	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn extracting_url_params_multiple_times() {$/;"	f	module:tests
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    f: F,$/;"	m	struct:HandleError
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    f: F,$/;"	m	struct:HandleErrorLayer
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    f: F,$/;"	m	struct:FromFn
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    f: F,$/;"	m	struct:FromFnLayer
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    f: F,$/;"	m	struct:MapRequest
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    f: F,$/;"	m	struct:MapRequestLayer
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    f: F,$/;"	m	struct:MapResponse
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    f: F,$/;"	m	struct:MapResponseLayer
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^    f: F,$/;"	m	struct:PollFn
f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^impl Float for f32 {$/;"	c
f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^impl Float for f64 {$/;"	c
f64_from_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn f64_from_parts($/;"	P	implementation:Deserializer
f64_from_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn f64_from_parts(&mut self, positive: bool, significand: u64, exponent: i32) -> Result<f64>/;"	P	implementation:Deserializer
f64_long_from_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn f64_long_from_parts($/;"	P	implementation:Deserializer
failed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    failed: bool,$/;"	m	struct:StreamDeserializer
fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^        async fn fallback(method: Method) -> Response {$/;"	f	function:tests::allow_header_with_fallback_that_sets_allow
fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fallback: Fallback<S, B, E>,$/;"	m	struct:MethodRouter
fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn fallback<H, T>(mut self, handler: H) -> Self$/;"	f
fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn fallback<H, T>(self, handler: H) -> Self$/;"	f
fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn fallback() {}$/;"	f	function:merging_routers_with_fallbacks_panics
fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn fallback(_: State<&'static str>) {}$/;"	f	function:method_router_fallback_with_state
fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^mod fallback;$/;"	n
fallback_accessing_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn fallback_accessing_state() {$/;"	f	module:tests
fallback_accessing_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn fallback_accessing_state() {$/;"	f
fallback_endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn fallback_endpoint(mut self, endpoint: Endpoint<S, B>) -> Self {$/;"	f
fallback_inherited_into_nested_opaque_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn fallback_inherited_into_nested_opaque_service() {$/;"	f
fallback_inherited_into_nested_router_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn fallback_inherited_into_nested_router_service() {$/;"	f
fallback_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/algorithm.rs	/^pub(crate) fn fallback_path<F>($/;"	f
fallback_router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fallback_router: PathRouter<S, B>,$/;"	m	struct:Router
fallback_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn fallback_service<T>(mut self, svc: T) -> Self$/;"	f
fallback_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn fallback_service<T>(self, service: T) -> Self$/;"	f
far_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub(crate) fn far_future() -> Instant {$/;"	P	implementation:Instant
far_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub(crate) fn far_future(location: Option<&'static Location<'static>>) -> Sleep {$/;"	P	implementation:Sleep
fast_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/algorithm.rs	/^pub(crate) fn fast_path<F>(mantissa: u64, exponent: i32) -> Option<F>$/;"	f
fastrand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    fn fastrand(&self) -> u32 {$/;"	P	implementation:FastRand
fastrand_n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    pub(crate) fn fastrand_n(&self, n: u32) -> u32 {$/;"	P	implementation:FastRand
fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fd: File,$/;"	m	struct:Pipe
fd_deregistered_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(super) fd_deregistered_count: AtomicU64,$/;"	m	struct:IoDriverMetrics
fd_registered_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(super) fd_registered_count: AtomicU64,$/;"	m	struct:IoDriverMetrics
feature	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! feature {$/;"	M
features_check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod features_check;$/;"	n
fetch_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn fetch_add(&self, val: u64, _: Ordering) -> u64 {$/;"	P	implementation:AtomicU64
fetch_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) fn fetch_add(&self, val: u64, order: Ordering) -> u64 {$/;"	P	implementation:StaticAtomicU64
fetch_or	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn fetch_or(&self, val: u64, _: Ordering) -> u64 {$/;"	P	implementation:AtomicU64
fetch_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn fetch_update<F>(&self, mut f: F) -> Result<Snapshot, Snapshot>$/;"	P	implementation:State
fetch_update_action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn fetch_update_action<F, T>(&self, mut f: F) -> T$/;"	P	implementation:State
field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn field(&mut self, name: &str, value: impl AsRef<[u8]>) {$/;"	P	implementation:Event
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    pub(crate) fields: T,$/;"	m	struct:TracingEvent
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fields: &'static [&'static str],$/;"	m	struct:FlatStructAccess
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStruct
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariant
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariantAsMapValue
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleStruct
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariant
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fields: Vec<(&'static str, Content)>,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod file;$/;"	n
file_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub fn file_name(&self) -> Option<&str> {$/;"	P	implementation:Field
file_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub fn file_name(&self) -> OsString {$/;"	P	implementation:DirEntry
file_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    file_type: Option<FileType>,$/;"	m	struct:DirEntry
file_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub async fn file_type(&self) -> io::Result<FileType> {$/;"	P	implementation:DirEntry
filename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        filename: Option<BytesOrWide>,$/;"	m	struct:capture::BacktraceSymbol
fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/fill_buf.rs	/^pub(crate) fn fill_buf<R>(reader: &mut R) -> FillBuf<'_, R>$/;"	f
filled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    filled: usize,$/;"	m	struct:ReadBuf
filled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn filled(&self) -> &[u8] {$/;"	P	implementation:ReadBuf
filled_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn filled_mut(&mut self) -> &mut [u8] {$/;"	P	implementation:ReadBuf
finalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn finalize(mut self) -> Bytes {$/;"	P	implementation:Event
find_block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn find_block(&self, slot_index: usize) -> NonNull<Block<T>> {$/;"	P	implementation:Tx
finish_string_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^pub(super) fn finish_string_read($/;"	f
fire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn fire(self, completed_state: TimerResult) -> Option<Waker> {$/;"	P	implementation:TimerHandle
fire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn fire(&self, result: TimerResult) -> Option<Waker> {$/;"	P	implementation:StateCell
first	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    first: bool,$/;"	m	struct:MapAccess
first	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    first: bool,$/;"	m	struct:SeqAccess
first_pipe_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    first_pipe_instance: bool,$/;"	m	struct:ServerOptions
first_pipe_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn first_pipe_instance(&mut self, first: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
fits_256	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn fits_256() {$/;"	f
fix_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn fix_position(&self, err: Error) -> Error {$/;"	P	implementation:Deserializer
fix_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub(crate) fn fix_position<F>(self, f: F) -> Self$/;"	P	implementation:Error
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    flags: EventFlags,$/;"	m	struct:Event
float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^pub(crate) mod float;$/;"	n
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Writer
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn flush(&mut self) -> Result<()> {$/;"	P	implementation:Vec
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn flush(&mut self) -> Result<()> {$/;"	P	implementation:W
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn flush(&mut self) -> Result<()>;$/;"	P	interface:Write
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^            fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Value::fmt::WriterFormatter
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:MockFile
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/flush.rs	/^pub(super) fn flush<A>(a: &mut A) -> Flush<'_, A>$/;"	f
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Pipe
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:ArcFile
flush_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn flush_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufWriter
flush_while_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn flush_while_idle() {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:capture::Backtrace
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:capture::BacktraceFrame
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:capture::BacktraceSymbol
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:capture::BytesOrWide
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod fmt;$/;"	n
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoxedError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:StreamBody
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BoxedIntoRoute
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:HandleErrorLayer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MultipartError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ErrorKind
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FailedToDeserializePathParams
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:InvalidUtf8InPathParam
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PathDeserializationError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BodyStream
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:WebSocketUpgrade
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:IntoServiceStateInExtension
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:HandlerService
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Next
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ResponseFuture
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ResponseFuture
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ResponseFuture
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Sse
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^    fn fmt(&self, f: &mut Formatter<'_>) -> fmt::Result {$/;"	P	implementation:NoMatchingMethodFilter
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MethodEndpoint
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MethodRouter
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Endpoint
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Fallback
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Router
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Node
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PathRouter
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Route
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:TypedHeaderRejection
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OneOf
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Unexpected
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:a
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:str
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Expected
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BorrowedBytesDeserializer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BorrowedStrDeserializer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BytesDeserializer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CowStrDeserializer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInMap
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInSeq
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrDeserializer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringDeserializer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:U32Deserializer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitDeserializer
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/doc.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Unsupported
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^mod fmt;$/;"	n
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorCode
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorImpl
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn fmt(&self, _formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Map
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Number
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RawValue
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RawValue
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Type
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Value
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Value
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:File
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PollFn
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:AsyncFd
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:AsyncFdReadyGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:AsyncFdReadyMutGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Aio
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Interest
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PollEvented
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReadBuf
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Ready
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReadHalf
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:WriteHalf
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BufReader
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BufWriter
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Empty
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Sink
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AtomicU16
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AtomicU32
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AtomicUsize
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RwLockReadGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RwLockWriteGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TcpListener
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TcpSocket
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReuniteError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TcpStream
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UdpSocket
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnixDatagram
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnixListener
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:SocketAddr
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReuniteError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnixStream
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Child
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ChildStdio
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:GlobalOrphanQueue
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Child
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BlockingPool
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Spawner
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Builder
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryCurrentError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryCurrentErrorKind
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Driver
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Handle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:CurrentThread
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Handle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Handle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:State
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MultiThread
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AbortHandle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:JoinError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Id
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Notified
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Task
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Snapshot
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:State
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:StateCell
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:TimerShared
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Handle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Inner
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Level
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReusableBoxFuture
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AcquireError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Semaphore
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryAcquireError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::RecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::SendError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::TryRecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Receiver
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Sender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OwnedPermit
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Permit
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Receiver
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Sender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:WeakSender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Rx
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RxFields
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Tx
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:SendError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryRecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TrySendError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Rx
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Tx
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnboundedReceiver
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnboundedSender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:WeakUnboundedSender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MappedMutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OwnedMappedMutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OwnedMutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryLockError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:SetError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OnceCell
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::RecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::TryRecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Inner
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:State
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AtomicWaker
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::RecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::SendError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Shared
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Builder
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:JoinSet
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:LocalEnterGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:LocalSet
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:fmt::TransparentOption
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AccessError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:LocalKey
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Elapsed
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Instant
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Pack
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:LinkedList
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Pointers
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Allocator
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Ref
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Slab
fmt_primitives	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^macro_rules! fmt_primitives {$/;"	M
foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^            foo: String,$/;"	m	struct:tests::consume_body_to_json_requires_json_content_type::Input
foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^            foo: String,$/;"	m	struct:tests::deserialize_body::Input
foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn foo(_: Request<Body>) -> &'static str {$/;"	f	function:hello_world
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn for_each<'a, F>(&'a self, f: F)$/;"	P	implementation:Vec
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn for_each<'a, F>(&'a self, f: F)$/;"	P	interface:Storage
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn for_each<'a, F>(&'a self, f: F)$/;"	P	implementation:OsStorage
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn for_each<'a, F>(&'a self, mut f: F)$/;"	P	implementation:OsStorage
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn for_each<F: FnMut(&mut T)>(&mut self, mut func: F) {$/;"	P	implementation:IdleNotifiedSet
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn for_each(&mut self, mut f: impl FnMut(&T)) {$/;"	P	implementation:Slab
for_handlers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/get_to_head.rs	/^mod for_handlers {$/;"	n
for_services	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/get_to_head.rs	/^mod for_services {$/;"	n
force	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn force(&self) -> &Capture {$/;"	P	implementation:capture::LazilyResolvedCapture
forever	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^async fn forever() {$/;"	f
forget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn forget(mut self) {$/;"	P	implementation:OwnedWriteHalf
forget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn forget(mut self) {$/;"	P	implementation:OwnedWriteHalf
forget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn forget(mut self) {$/;"	P	implementation:OwnedSemaphorePermit
forget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn forget(mut self) {$/;"	P	implementation:SemaphorePermit
form	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^mod form;$/;"	n
format	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^mod format;$/;"	n
format_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^    pub fn format_err(args: Arguments) -> Error {$/;"	f	module:__private
format_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^fn format_u8(mut n: u8, out: &mut [u8]) -> usize {$/;"	f
formatter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^            formatter: &'ser mut F,$/;"	m	struct:collect_str::Adapter
formatter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    formatter: F,$/;"	m	struct:Serializer
forward_to_deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	M
forward_to_deserialize_any_helper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	M
forward_to_deserialize_any_method	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	M
forward_to_deserialize_other	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	M
forwarded_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	M
forwarded_parsing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    fn forwarded_parsing() {$/;"	f	module:tests
frame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        frame: Frame,$/;"	m	struct:capture::BacktraceFrame
frames	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        frames: Vec<BacktraceFrame>,$/;"	m	struct:capture::Capture
free_blocks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(super) unsafe fn free_blocks(&mut self) {$/;"	P	implementation:Rx
free_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    free_head: NonNull<Block<T>>,$/;"	m	struct:Rx
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn from(error: E) -> Self {$/;"	f
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn from(error: Error) -> Self {$/;"	P	implementation:Box
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    fn from(stream: S) -> Self {$/;"	f
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn from(data: &'b [u8]) -> Self {$/;"	P	implementation:Message
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn from(data: Vec<u8>) -> Self {$/;"	P	implementation:Message
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn from(msg: Message) -> Self {$/;"	P	implementation:Vec
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn from(string: &'s str) -> Self {$/;"	P	implementation:Message
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn from(string: String) -> Self {$/;"	P	implementation:Message
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    fn from(inner: T) -> Self {$/;"	P	implementation:Json
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^    fn from(inner: T) -> Self {$/;"	P	implementation:Html
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	P	interface:IdentifierDeserializer
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    fn from(j: Error) -> Self {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn from(value: ParserNumber) -> Self {$/;"	P	implementation:Number
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn from(raw_value: Box<RawValue>) -> Self {$/;"	P	implementation:Box
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from((): ()) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: &'a [T]) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: &str) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: Cow<'a, str>) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: Map<String, Value>) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: Number) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: String) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: Vec<T>) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: bool) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: f32) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(f: f64) -> Self {$/;"	P	implementation:Value
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from(opt: Option<T>) -> Self {$/;"	f
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^mod from;$/;"	n
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn from(std: StdFile) -> Self {$/;"	P	implementation:File
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    fn from(options: StdOpenOptions) -> OpenOptions {$/;"	P	implementation:OpenOptions
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn from(b: BufReader<BufWriter<RW>>) -> Self {$/;"	P	implementation:BufStream
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn from(b: BufWriter<BufReader<RW>>) -> Self {$/;"	P	implementation:BufStream
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn from(std: StdCommand) -> Command {$/;"	P	implementation:Command
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn from(fd: T) -> Self {$/;"	P	implementation:Pipe
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn from(e: SpawnError) -> Self {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn from(src: State) -> usize {$/;"	P	implementation:usize
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn from(src: usize) -> State {$/;"	P	implementation:State
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    fn from(src: JoinError) -> io::Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn from(kind: SignalKind) -> Self {$/;"	P	implementation:c_int
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn from(signum: std::os::raw::c_int) -> Self {$/;"	P	implementation:SignalKind
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn from(src: SendError<T>) -> TrySendError<T> {$/;"	P	implementation:TrySendError
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn from(s: T) -> Self {$/;"	P	implementation:Mutex
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn from(value: T) -> Self {$/;"	P	implementation:OnceCell
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn from(s: T) -> Self {$/;"	P	implementation:RwLock
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn from(_: std::cell::BorrowMutError) -> Self {$/;"	P	implementation:ScopeInnerErr
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn from(_: std::thread::AccessError) -> Self {$/;"	P	implementation:ScopeInnerErr
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    fn from(_err: Elapsed) -> std::io::Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    fn from(k: Kind) -> Self {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn from(time: Instant) -> std::time::Instant {$/;"	P	implementation:Instant
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn from(time: std::time::Instant) -> Instant {$/;"	P	implementation:Instant
from_adhoc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) fn from_adhoc<M>(message: M, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_bits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn from_bits(u: Self::Unsigned) -> Self;$/;"	P	interface:Float
from_bits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn from_bits(u: u32) -> f32 {$/;"	P	implementation:f32
from_bits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn from_bits(u: u64) -> f64 {$/;"	P	implementation:f64
from_borrowed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn from_borrowed(json: &str) -> &Self {$/;"	P	implementation:RawValue
from_bounds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/size_hint.rs	/^pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f
from_boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) fn from_boxed($/;"	P	implementation:Error
from_c_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn from_c_int() {$/;"	f	module:tests
from_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) fn from_context<C, E>(context: C, error: E, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_display	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) fn from_display<M>(message: M, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_escape_table	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn from_escape_table(escape: u8, byte: u8) -> CharEscape {$/;"	P	implementation:CharEscape
from_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^pub fn from_extractor<E>() -> FromExtractorLayer<E, ()> {$/;"	f
from_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/mod.rs	/^mod from_extractor;$/;"	n
from_extractor_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^pub fn from_extractor_with_state<E, S>(state: S) -> FromExtractorLayer<E, S> {$/;"	f
from_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub(crate) fn from_f32(f: f32) -> Option<Number> {$/;"	P	implementation:Number
from_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub fn from_f64(f: f64) -> Option<Number> {$/;"	P	implementation:Number
from_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn from_file(mut file: File) -> io::Result<Receiver> {$/;"	P	implementation:Receiver
from_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn from_file(mut file: File) -> io::Result<Sender> {$/;"	P	implementation:Sender
from_file_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn from_file_unchecked(file: File) -> io::Result<Receiver> {$/;"	P	implementation:Receiver
from_file_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn from_file_unchecked(file: File) -> io::Result<Sender> {$/;"	P	implementation:Sender
from_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub fn from_float<F: Float>(f: F) -> ExtendedFloat {$/;"	P	implementation:ExtendedFloat
from_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^pub(crate) fn from_float<F>(f: F) -> ExtendedFloat$/;"	f
from_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^pub fn from_fn<F, T>(f: F) -> FromFnLayer<F, (), T> {$/;"	f
from_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/mod.rs	/^mod from_fn;$/;"	n
from_fn_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^pub fn from_fn_with_state<F, S, T>(state: S, f: F) -> FromFnLayer<F, S, T> {$/;"	f
from_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    pub(crate) fn from_future($/;"	P	implementation:RouteFuture
from_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) fn from_handler<H, T>(handler: H) -> Self$/;"	f
from_http_method	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^    fn from_http_method() {$/;"	f	module:tests
from_integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^macro_rules! from_integer {$/;"	M
from_iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn from_iter<T>(iter: T) -> Self$/;"	P	implementation:Map
from_iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from_iter<I: IntoIterator<Item = (K, V)>>(iter: I) -> Self {$/;"	P	implementation:Value
from_iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/from.rs	/^    fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> Self {$/;"	P	implementation:Value
from_mio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub(crate) fn from_mio(event: &mio::event::Event) -> Ready {$/;"	P	implementation:Ready
from_mio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn from_mio(mio_rx: mio_pipe::Receiver) -> io::Result<Receiver> {$/;"	P	implementation:Receiver
from_mio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn from_mio(mio_tx: mio_pipe::Sender) -> io::Result<Sender> {$/;"	P	implementation:Sender
from_multer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    fn from_multer(multer: multer::Error) -> Self {$/;"	P	implementation:MultipartError
from_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn from_owned(json: Box<str>) -> Box<Self> {$/;"	P	implementation:RawValue
from_pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    fn from_pair(s: u32, r: u32) -> Self {$/;"	P	implementation:RngSeed
from_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub(super) fn from_parts($/;"	P	implementation:Runtime
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn from_raw(ptr: NonNull<T>) -> Self {$/;"	f
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    unsafe fn from_raw(ptr: *const ()) -> Arc<Inner> {$/;"	P	implementation:Inner
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) unsafe fn from_raw(ptr: NonNull<Header>) -> Harness<T, S> {$/;"	f
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    unsafe fn from_raw(ptr: NonNull<Header>) -> Task<S> {$/;"	P	implementation:Task
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) unsafe fn from_raw(ptr: NonNull<Header>) -> RawTask {$/;"	P	implementation:RawTask
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn from_raw(ptr: NonNull<Self::Target>) -> Self::Handle {$/;"	P	implementation:TimerShared
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn from_raw(signum: std::os::raw::c_int) -> Self {$/;"	P	implementation:SignalKind
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    unsafe fn from_raw(ptr: NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    unsafe fn from_raw(ptr: NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    unsafe fn from_raw(ptr: NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^fn from_raw<T>(val: *mut T) -> Option<Box<T>> {$/;"	f
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    unsafe fn from_raw(ptr: NonNull<ListEntry<T>>) -> Arc<ListEntry<T>> {$/;"	P	implementation:ListEntry
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        unsafe fn from_raw(ptr: NonNull<Entry>) -> Pin<&'a Entry> {$/;"	P	implementation:tests::Entry
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    unsafe fn from_raw(ptr: NonNull<Self::Target>) -> Self::Handle;$/;"	P	interface:Link
from_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    unsafe fn from_raw_fd(fd: std::os::unix::io::RawFd) -> Self {$/;"	P	implementation:File
from_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> TcpSocket {$/;"	P	implementation:TcpSocket
from_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            unsafe fn from_raw_handle(handle: RawHandle) -> Self;$/;"	P	interface:windows::io::FromRawHandle
from_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub unsafe fn from_raw_handle(handle: RawHandle) -> io::Result<Self> {$/;"	P	implementation:NamedPipeClient
from_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub unsafe fn from_raw_handle(handle: RawHandle) -> io::Result<Self> {$/;"	P	implementation:NamedPipeServer
from_raw_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            unsafe fn from_raw_socket(sock: RawSocket) -> Self;$/;"	P	interface:windows::io::FromRawSocket
from_reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    pub fn from_reader(reader: R) -> Self {$/;"	f
from_reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^pub fn from_reader<R, T>(rdr: R) -> Result<T>$/;"	f
from_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        fn from_ref(state: &AppState) -> Self {$/;"	P	implementation:extract_state::InnerState
from_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    async fn from_request(req: Request<B>, state: &S) -> Result<Self, Self::Rejection> {$/;"	f
from_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^    async fn from_request(req: Request<B>, state: &S) -> Result<Self, Self::Rejection> {$/;"	f
from_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^    async fn from_request(req: Request<B>, _state: &S) -> Result<Self, Self::Rejection> {$/;"	f
from_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    async fn from_request(req: Request<B>, _state: &S) -> Result<Self, Self::Rejection> {$/;"	f
from_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    async fn from_request(req: Request<B>, state: &S) -> Result<Self, Self::Rejection> {$/;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    async fn from_request_parts(req: &mut Parts, _state: &S) -> Result<Self, Self::Rejection> {$/;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    async fn from_request_parts(parts: &mut Parts, state: &S) -> Result<Self, Self::Rejection> {$/;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    async fn from_request_parts(parts: &mut Parts, _state: &S) -> Result<Self, Self::Rejection> /;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^    async fn from_request_parts(parts: &mut Parts, _state: &S) -> Result<Self, Self::Rejection> /;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn from_request_parts(parts: &mut Parts, _state: &S) -> Result<Self, Self::Rejection> /;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^    async fn from_request_parts(parts: &mut Parts, _state: &S) -> Result<Self, Self::Rejection> /;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_query.rs	/^    async fn from_request_parts(parts: &mut Parts, _state: &S) -> Result<Self, Self::Rejection> /;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^    async fn from_request_parts(parts: &mut Parts, state: &S) -> Result<Self, Self::Rejection> {$/;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/state.rs	/^    async fn from_request_parts($/;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    async fn from_request_parts(parts: &mut Parts, _state: &S) -> Result<Self, Self::Rejection> /;"	f
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^            async fn from_request_parts($/;"	f	function:tests::test_from_extractor
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^            async fn from_request_parts($/;"	f	function:tests::works_with_request_body_limit
from_request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    async fn from_request_parts(parts: &mut Parts, _state: &S) -> Result<Self, Self::Rejection> /;"	f
from_shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn from_shared(version: Version, shared: Arc<Shared<T>>) -> Self {$/;"	P	implementation:Receiver
from_slice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    pub fn from_slice(bytes: &'a [u8]) -> Self {$/;"	P	implementation:Deserializer
from_slice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^pub fn from_slice<'a, T>(v: &'a [u8]) -> Result<T>$/;"	f
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub(crate) fn from_std<E>(error: E, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub fn from_std(std: StdFile) -> File {$/;"	P	implementation:File
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn from_std(listener: net::TcpListener) -> io::Result<TcpListener> {$/;"	P	implementation:TcpListener
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn from_std(stream: std::net::TcpStream) -> io::Result<TcpStream> {$/;"	P	implementation:TcpStream
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn from_std(socket: net::UdpSocket) -> io::Result<UdpSocket> {$/;"	P	implementation:UdpSocket
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn from_std(datagram: net::UnixDatagram) -> io::Result<UnixDatagram> {$/;"	P	implementation:UnixDatagram
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn from_std(listener: net::UnixListener) -> io::Result<UnixListener> {$/;"	P	implementation:UnixListener
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn from_std(stream: net::UnixStream) -> io::Result<UnixStream> {$/;"	P	implementation:UnixStream
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn from_std(inner: std::process::ChildStderr) -> io::Result<Self> {$/;"	P	implementation:ChildStderr
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn from_std(inner: std::process::ChildStdin) -> io::Result<Self> {$/;"	P	implementation:ChildStdin
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn from_std(inner: std::process::ChildStdout) -> io::Result<Self> {$/;"	P	implementation:ChildStdout
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn from_std(std: std::time::Instant) -> Instant {$/;"	P	implementation:Instant
from_std_stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn from_std_stream(std_stream: std::net::TcpStream) -> TcpSocket {$/;"	P	implementation:TcpSocket
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn from_str(s: &str) -> result::Result<Self, Self::Err> {$/;"	P	implementation:Number
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    pub fn from_str(s: &'a str) -> Self {$/;"	P	implementation:Deserializer
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^pub fn from_str<'a, T>(s: &'a str) -> Result<T>$/;"	f
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn from_str(s: &str) -> Result<Value, Error> {$/;"	P	implementation:Value
from_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    pub fn from_string(json: String) -> Result<Box<Self>, Error> {$/;"	P	implementation:RawValue
from_string_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub fn from_string_unchecked(n: String) -> Self {$/;"	P	implementation:Number
from_trait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^fn from_trait<'de, R, T>(read: R) -> Result<T>$/;"	f
from_tungstenite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn from_tungstenite(message: ts::Message) -> Option<Self> {$/;"	P	implementation:Message
from_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn from_u64(x: u64) -> Self {$/;"	P	interface:Math
from_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    fn from_u64(seed: u64) -> Self {$/;"	P	implementation:RngSeed
from_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub(crate) fn from_usize(val: usize) -> Ready {$/;"	P	implementation:Ready
from_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn from_usize(src: usize) -> Address {$/;"	P	implementation:Address
from_utf8_lossy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/mod.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f	module:string
from_utf8_lossy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/mod.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f	module:string
from_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^pub fn from_value<T>(value: Value) -> Result<T, Error>$/;"	f
func	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^    func: Option<T>,$/;"	m	struct:BlockingTask
func	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^            func: F,$/;"	m	struct:IdleNotifiedSet::drain::AllEntries
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^pub mod future {$/;"	n
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^pub mod future;$/;"	n
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/mod.rs	/^pub mod future {$/;"	n
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^pub mod future;$/;"	n
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^mod future;$/;"	n
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod future {$/;"	n
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    future: Option<F>,$/;"	m	struct:TaskLocalFuture
fuzz	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod fuzz;$/;"	n
fuzz_linked_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub fn fuzz_linked_list(ops: &[u8]) {$/;"	f	module:tests
gated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^fn gated() -> impl Future<Output = &'static str> {$/;"	f
gated2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^fn gated2(thread: bool) -> impl Future<Output = &'static str> {$/;"	f
gen_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn gen_ref(&self, idx: usize, page: &Arc<Page<T>>) -> Ref<T> {$/;"	P	implementation:Slots
generate_addr_of_methods	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/addr_of.rs	/^macro_rules! generate_addr_of_methods {$/;"	M
generation	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(crate) fn generation(&self) -> usize {$/;"	P	implementation:ScheduledIo
generation	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    generation: usize,$/;"	m	struct:BarrierState
generic_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    generic_read: bool,$/;"	m	struct:ClientOptions
generic_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    generic_write: bool,$/;"	m	struct:ClientOptions
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    get: MethodEndpoint<S, B, E>,$/;"	m	struct:MethodRouter
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn get(&self, url: &str) -> RequestBuilder {$/;"	P	implementation:TestClient
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn get(&self) -> &Value {$/;"	P	implementation:OccupiedEntry
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn get<Q>(&self, key: &Q) -> Option<&Value>$/;"	P	implementation:Map
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    pub fn get(&self) -> &str {$/;"	P	implementation:RawValue
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn get<I: Index>(&self, index: I) -> Option<&Value> {$/;"	P	implementation:Value
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    fn get() -> Budget {$/;"	f	module:test
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn get(&self) -> Option<&T> {$/;"	P	implementation:OnceCell
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn get(&'static self) -> T {$/;"	P	implementation:LocalKey
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    pub(crate) fn get(&self, init: impl FnOnce() -> T) -> &T {$/;"	P	implementation:OnceCell
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) fn get(&self) -> Option<Rc<T>> {$/;"	P	implementation:RcCell
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn get(&self, idx: usize) -> &T {$/;"	P	implementation:CachedPage
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn get(&mut self, addr: Address) -> Option<&T> {$/;"	P	implementation:Slab
get_accepts_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn get_accepts_head() {$/;"	f	module:tests
get_cfg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    fn get_cfg(&self) -> driver::Cfg {$/;"	P	implementation:Builder
get_core_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^const fn get_core_offset(header_size: usize, core_align: usize) -> usize {$/;"	f
get_extended_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub fn get_extended_float(&self, index: usize) -> ExtendedFloat {$/;"	P	implementation:ExtendedFloatArray
get_file_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn get_file_flags(file: &File) -> io::Result<libc::c_int> {$/;"	f
get_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn get_flags(&self) -> u32 {$/;"	P	implementation:ClientOptions
get_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn get_handler() {$/;"	f	module:tests
get_handles_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/get_to_head.rs	/^    async fn get_handles_head() {$/;"	f	module:for_handlers
get_handles_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/get_to_head.rs	/^    async fn get_handles_head() {$/;"	f	module:for_services
get_head_does_not_overlap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn get_head_does_not_overlap() {$/;"	f	module:tests
get_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_id(me: NonNull<Header>) -> Id {$/;"	P	implementation:Header
get_id_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^const fn get_id_offset($/;"	f
get_id_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_id_ptr(me: NonNull<Header>) -> NonNull<Id> {$/;"	P	implementation:Header
get_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_inner(&self) -> &'a Inner {$/;"	P	implementation:AsyncFdReadyGuard
get_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_inner(&self) -> &Inner {$/;"	P	implementation:AsyncFdReadyMutGuard
get_inner_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_inner_mut(&mut self) -> &mut Inner {$/;"	P	implementation:AsyncFdReadyMutGuard
get_key_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn get_key_value<Q>(&self, key: &Q) -> Option<(&String, &Value)>$/;"	P	implementation:Map
get_large	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub fn get_large(&self, index: usize) -> ExtendedFloat {$/;"	P	implementation:ModeratePathPowers
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut Value {$/;"	P	implementation:OccupiedEntry
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn get_mut<Q>(&mut self, key: &Q) -> Option<&mut Value>$/;"	P	implementation:Map
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn get_mut<I: Index>(&mut self, index: I) -> Option<&mut Value> {$/;"	P	implementation:Value
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_mut(&mut self) -> &mut AsyncFd<Inner> {$/;"	P	implementation:AsyncFdReadyMutGuard
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:AsyncFd
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	P	implementation:BufReader
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn get_mut(&mut self) -> &mut RW {$/;"	P	implementation:BufStream
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	P	implementation:BufWriter
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    pub fn get_mut(&mut self) -> (&mut T, &mut U) {$/;"	f
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	f
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	P	implementation:Take
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:Mutex
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:Mutex
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn get_mut(&mut self) -> Option<&mut T> {$/;"	P	implementation:OnceCell
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:RwLock
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:Timeout
get_new_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn get_new_task(&self) -> Task<S> {$/;"	f
get_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^fn get_next(header: NonNull<task::Header>) -> Option<NonNull<task::Header>> {$/;"	f
get_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn get_next(&self) -> Option<NonNull<T>> {$/;"	P	implementation:Pointers
get_num_notify_waiters_calls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn get_num_notify_waiters_calls(data: usize) -> usize {$/;"	f
get_or_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub async fn get_or_init<F, Fut>(&self, f: F) -> &T$/;"	P	implementation:OnceCell
get_or_try_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub async fn get_or_try_init<E, F, Fut>(&self, f: F) -> Result<&T, E>$/;"	P	implementation:OnceCell
get_owner_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn get_owner_id(&self) -> u64 {$/;"	P	implementation:Header
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_bsd
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_linux
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_macos
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_netbsd
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_solaris
get_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn get_pin(&mut self) -> Pin<&mut (dyn Future<Output = T> + Send)> {$/;"	P	implementation:ReusableBoxFuture
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut R> {$/;"	P	implementation:BufReader
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut RW> {$/;"	P	implementation:BufStream
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut W> {$/;"	P	implementation:BufWriter
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>) {$/;"	f
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut R> {$/;"	P	implementation:Take
get_powers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    fn get_powers() -> &'static ModeratePathPowers {$/;"	P	implementation:ExtendedFloat
get_powers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    fn get_powers() -> &'static ModeratePathPowers;$/;"	P	interface:ModeratePathCache
get_powers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached_float80.rs	/^pub(crate) fn get_powers() -> &'static ModeratePathPowers {$/;"	f
get_prev	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn get_prev(&self) -> Option<NonNull<T>> {$/;"	P	implementation:Pointers
get_ptrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^        fn get_ptrs<T>(list: &mut LinkedList<T>, ptrs: &mut Vec<*mut T>) {$/;"	f	method:IdleNotifiedSet::for_each
get_read_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn get_read_buf<'a>(&'a mut self) -> ReadBuf<'a> {$/;"	f
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_ref(&self) -> &'a AsyncFd<Inner> {$/;"	P	implementation:AsyncFdReadyGuard
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_ref(&self) -> &AsyncFd<Inner> {$/;"	P	implementation:AsyncFdReadyMutGuard
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_ref(&self) -> &T {$/;"	P	implementation:AsyncFd
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn get_ref(&self) -> &R {$/;"	P	implementation:BufReader
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn get_ref(&self) -> &RW {$/;"	P	implementation:BufStream
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn get_ref(&self) -> &W {$/;"	P	implementation:BufWriter
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    pub fn get_ref(&self) -> (&T, &U) {$/;"	f
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub fn get_ref(&mut self) -> &R {$/;"	f
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn get_ref(&self) -> &R {$/;"	P	implementation:Take
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    pub fn get_ref(&self) -> &T {$/;"	P	implementation:Timeout
get_scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_scheduler<S>(me: NonNull<Header>) -> NonNull<S> {$/;"	P	implementation:Header
get_service_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn get_service_fn() {$/;"	f	module:tests
get_small	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub fn get_small(&self, index: usize) -> ExtendedFloat {$/;"	P	implementation:ModeratePathPowers
get_small_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub fn get_small_int(&self, index: usize) -> u64 {$/;"	P	implementation:ModeratePathPowers
get_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn get_state(data: usize) -> usize {$/;"	f
get_to_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^mod get_to_head;$/;"	n
get_tracing_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_tracing_id(me: &NonNull<Header>) -> Option<&tracing::Id> {$/;"	P	implementation:Header
get_trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_trailer(me: NonNull<Header>) -> NonNull<Trailer> {$/;"	P	implementation:Header
get_trailer_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^const fn get_trailer_offset($/;"	f
get_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    unsafe fn get_unchecked(&self) -> &T {$/;"	P	implementation:OnceCell
get_unchecked_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    unsafe fn get_unchecked_mut(&mut self) -> &mut T {$/;"	P	implementation:OnceCell
gid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    gid: unix::gid_t,$/;"	m	struct:UCred
gid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub fn gid(&self) -> unix::gid_t {$/;"	P	implementation:UCred
gid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn gid(&mut self, id: u32) -> &mut Command {$/;"	P	implementation:Command
gid_t	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub type gid_t = u32;$/;"	t
global_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^fn global_init() -> io::Result<()> {$/;"	f
global_queue_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn global_queue_interval(&mut self, val: u32) -> &mut Self {$/;"	P	implementation:Builder
global_queue_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) global_queue_interval: u32,$/;"	m	struct:Builder
global_queue_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) global_queue_interval: u32,$/;"	m	struct:Config
globals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) fn globals() -> &'static Globals$/;"	f
globals_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^fn globals_init() -> Globals$/;"	f
gone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^fn gone() -> io::Error {$/;"	f
got	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    got: G,$/;"	m	struct:WrongNumberOfParameters
got	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub(super) fn got<G2>(self, got: G2) -> WrongNumberOfParameters<G2> {$/;"	P	implementation:WrongNumberOfParameters
greater_equal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn greater_equal(x: &[Limb], y: &[Limb]) -> bool {$/;"	f	module:large
group_a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod group_a {$/;"	n
group_b	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod group_b {$/;"	n
group_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod group_c {$/;"	n
group_d	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod group_d {$/;"	n
grow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn grow(&self) -> NonNull<Block<T>> {$/;"	P	implementation:Block
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^        async fn handle(mut multipart: Multipart) -> Result<(), MultipartError> {$/;"	f	function:tests::body_too_large
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^        async fn handle(mut multipart: Multipart) -> impl IntoResponse {$/;"	f	function:tests::content_type_with_encoding
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^        async fn handle(State(state): State<&'static str>) -> &'static str {$/;"	f	function:tests::with_layer_that_changes_request_body_and_state
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^        async fn handle(body: String) -> impl IntoResponse {$/;"	f	function:tests::handler_into_service
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^        async fn handle(headers: HeaderMap) -> String {$/;"	f	function:tests::basic
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^        async fn handle(_req: Request<Body>) -> Result<Response<Body>, Infallible> {$/;"	f	function:tests::get_service_fn
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn handle(_: Request<Body>) -> &'static str {$/;"	f	function:middleware_on_single_route
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn handle(_: Request<Body>) -> &'static str {$/;"	f	function:routing_between_services
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^        async fn handle($/;"	f	function:tests::typed_header
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^    handle: Handle,$/;"	m	struct:BlockingSchedule
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    handle: RefCell<Option<scheduler::Handle>>,$/;"	m	struct:Context
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    fn handle(&self) -> &Handle {$/;"	P	implementation:Registration
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    handle: Handle,$/;"	m	struct:RuntimeMetrics
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    handle: Handle,$/;"	m	struct:Runtime
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn handle(&self) -> &Handle {$/;"	P	implementation:Runtime
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    handle: Arc<Handle>,$/;"	m	struct:Context
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^mod handle;$/;"	n
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    handle: Arc<Handle>,$/;"	m	struct:Worker
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn handle(&self) -> Handle {$/;"	P	implementation:Driver
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn handle(&self) -> TimerHandle {$/;"	P	implementation:TimerShared
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod handle;$/;"	n
handle_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn handle_error<F, T>(self, f: F) -> MethodRouter<S, B, Infallible>$/;"	f
handle_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^mod handle_error;$/;"	n
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) handler: H,$/;"	m	struct:MakeErasedHandler
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^        async fn handler(ConnectInfo(addr): ConnectInfo<MyConnectInfo>) -> &'static str {$/;"	f	function:tests::custom
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^        async fn handler(ConnectInfo(addr): ConnectInfo<SocketAddr>) -> String {$/;"	f	function:tests::both_mock_and_real_connect_info
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^        async fn handler(ConnectInfo(addr): ConnectInfo<SocketAddr>) -> String {$/;"	f	function:tests::mock_connect_info
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^        async fn handler(ConnectInfo(addr): ConnectInfo<SocketAddr>) -> String {$/;"	f	function:tests::socket_addr
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^        async fn handler(path: Option<MatchedPath>) {$/;"	f	function:tests::extracting_on_nested_handler
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^        async fn handler(_: Multipart) {}$/;"	f	function:tests::_multipart_from_request_limited
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^        async fn handler(_: Query<Params>) {}$/;"	f	function:tests::correct_rejection_status_code
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^        async fn handler(parts: http::request::Parts) {$/;"	f	function:tests::extract_request_parts
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^        async fn handler(ws: WebSocketUpgrade) -> Response {$/;"	f	function:tests::default_on_failed_upgrade
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^        async fn handler(ws: WebSocketUpgrade) -> Response {$/;"	f	function:tests::on_failed_upgrade
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    handler: H,$/;"	m	struct:IntoServiceStateInExtension
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    handler: H,$/;"	m	struct:Layered
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    handler: H,$/;"	m	struct:HandlerService
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^pub mod handler;$/;"	n
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^        async fn handler() {}$/;"	f	function:tests::test_from_extractor
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^        async fn handler(_headers: HeaderMap) -> Response {$/;"	f	function:tests::works_for_short_circutting
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^        async fn handler(headers: HeaderMap) -> Response {$/;"	f	function:tests::works
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^async fn handler() {$/;"	f
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn handler() {}$/;"	f	function:merging_with_overlapping_method_routes
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn handler() {}$/;"	f	function:routes_with_overlapping_method_routes
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn handler(State(outer): State<AppState>, State(inner): State<InnerState>) {$/;"	f	function:extract_state
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn handler(_req: Request<Body>) -> Result<Response<Body>, Infallible> {$/;"	f	function:service_in_bottom
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^    async fn handler(Extension(Uri(middleware_uri)): Extension<Uri>) -> impl IntoResponse {$/;"	f	function:outer_middleware_still_see_whole_url
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^unsafe extern "system" fn handler(ty: u32) -> BOOL {$/;"	f
handler_into_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    async fn handler_into_service() {$/;"	f	module:tests
handler_multiple_methods_first	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^async fn handler_multiple_methods_first() {$/;"	f
handler_multiple_methods_last	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^async fn handler_multiple_methods_last() {$/;"	f
handler_multiple_methods_middle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^async fn handler_multiple_methods_middle() {$/;"	f
handler_overlaps	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn handler_overlaps() {$/;"	f	module:tests
hangup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn hangup() -> Self {$/;"	P	implementation:SignalKind
hard_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/hard_link.rs	/^pub async fn hard_link(src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()> {$/;"	f
hard_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod hard_link;$/;"	n
harness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod harness;$/;"	n
has_budget_remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) fn has_budget_remaining() -> bool {$/;"	f
has_changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    has_changed: bool,$/;"	m	struct:Ref
has_changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn has_changed(&self) -> Result<bool, error::RecvError> {$/;"	P	implementation:Receiver
has_changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn has_changed(&self) -> bool {$/;"	P	implementation:Ref
has_content_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^pub(super) fn has_content_type(headers: &HeaderMap, expected_content_type: &mime::Mime) -> bool /;"	f
has_read_access	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn has_read_access(flags: libc::c_int) -> bool {$/;"	f
has_remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    fn has_remaining(self) -> bool {$/;"	P	implementation:Budget
has_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn has_tasks(&self) -> bool {$/;"	P	implementation:Local
has_write_access	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn has_write_access(flags: libc::c_int) -> bool {$/;"	f
hash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn hash<H: Hasher>(&self, h: &mut H) {$/;"	P	implementation:N
haystack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    haystack: Option<&'a [u8]>,$/;"	m	struct:MemchrSplit
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    head: MethodEndpoint<S, B, E>,$/;"	m	struct:MethodRouter
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn head(&self, url: &str) -> RequestBuilder {$/;"	P	implementation:TestClient
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            head: UnsignedLong,$/;"	m	struct:Local::push_overflow::BatchTaskIter
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    head: AtomicUnsignedLong,$/;"	m	struct:Inner
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    head: Option<NonNull<task::Header>>,$/;"	m	struct:Pointers
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    head: NonNull<Block<T>>,$/;"	m	struct:Rx
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    head: Option<NonNull<T>>,$/;"	m	struct:LinkedList
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    head: usize,$/;"	m	struct:Slots
head_content_length_through_hyper_server	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn head_content_length_through_hyper_server() {$/;"	f
head_content_length_through_hyper_server_that_hits_fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn head_content_length_through_hyper_server_that_hits_fallback() {$/;"	f
head_get_does_not_overlap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn head_get_does_not_overlap() {$/;"	f	module:tests
head_takes_precedence_over_get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn head_takes_precedence_over_get() {$/;"	f	module:tests
head_with_middleware_applied	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn head_with_middleware_applied() {$/;"	f
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn header<K, V>(mut self, key: K, value: V) -> Self$/;"	P	implementation:RequestBuilder
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) header: Header,$/;"	m	struct:Cell
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn header(&self) -> &Header {$/;"	f
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn header(&self) -> &Header {$/;"	P	implementation:Notified
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn header(&self) -> &Header {$/;"	P	implementation:Task
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn header(&self) -> &Header {$/;"	P	implementation:RawTask
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    header: BlockHeader<T>,$/;"	m	struct:Block
header_array	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn header_array() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
header_array_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn header_array_body() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
header_array_extension_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn header_array_extension_body() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
header_array_extension_mixed_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn header_array_extension_mixed_body() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
header_array_impl_into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn header_array_impl_into_response() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
header_contains	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^fn header_contains(headers: &HeaderMap, key: HeaderName, value: &'static str) -> bool {$/;"	f
header_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^fn header_eq(headers: &HeaderMap, key: HeaderName, value: &'static str) -> bool {$/;"	f
header_lte_cache_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^fn header_lte_cache_line() {$/;"	f
header_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    fn header_map(values: &[(HeaderName, &str)]) -> HeaderMap {$/;"	f	module:tests
header_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn header_ptr(&self) -> NonNull<Header> {$/;"	f
header_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn header_ptr(&self) -> NonNull<Header> {$/;"	P	implementation:Task
header_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn header_ptr(&self) -> NonNull<Header> {$/;"	P	implementation:RawTask
headermap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn headermap() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
headermap_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn headermap_body() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
headermap_impl_into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn headermap_impl_into_response() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
headers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Field
headers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn headers(&self) -> &http::HeaderMap {$/;"	P	implementation:TestResponse
hello_world	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn hello_world() {$/;"	f
helper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/size_hint.rs	/^fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f
hi64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64(&self) -> (u64, bool) {$/;"	P	interface:Hi64
hi64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64(&self) -> (u64, bool) {$/;"	P	interface:Math
hi64_1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_1(&self) -> (u64, bool) {$/;"	P	implementation:u32
hi64_1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_1(&self) -> (u64, bool) {$/;"	P	implementation:u64
hi64_1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_1(&self) -> (u64, bool);$/;"	P	interface:Hi64
hi64_2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_2(&self) -> (u64, bool) {$/;"	P	implementation:u32
hi64_2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_2(&self) -> (u64, bool) {$/;"	P	implementation:u64
hi64_2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_2(&self) -> (u64, bool);$/;"	P	interface:Hi64
hi64_3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_3(&self) -> (u64, bool) {$/;"	P	implementation:u32
hi64_3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_3(&self) -> (u64, bool) {$/;"	P	implementation:u64
hi64_3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn hi64_3(&self) -> (u64, bool);$/;"	P	interface:Hi64
hide_from_rustfmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/features_check/mod.rs	/^macro_rules! hide_from_rustfmt {$/;"	M
hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod hint {$/;"	n
hit_zero	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    hit_zero: bool,$/;"	m	struct:BudgetDecrement
host	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^mod host;$/;"	n
host_as_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^        async fn host_as_body(Host(host): Host) -> String {$/;"	f	function:tests::test_client
host_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    async fn host_header() {$/;"	f	module:tests
hup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn hup() -> Ready {$/;"	f	module:sys
i	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            i: UnsignedLong,$/;"	m	struct:Local::push_overflow::BatchTaskIter
iadd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn iadd(x: &mut Limb, y: Limb) -> bool {$/;"	f	module:scalar
iadd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn iadd(x: &mut Vec<Limb>, y: &[Limb]) {$/;"	f	module:large
iadd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn iadd(x: &mut Vec<Limb>, y: Limb) {$/;"	f	module:small
iadd_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn iadd_impl(x: &mut Vec<Limb>, y: &[Limb], xstart: usize) {$/;"	f	module:large
iadd_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn iadd_impl(x: &mut Vec<Limb>, y: Limb, xstart: usize) {$/;"	f	module:small
iadd_small	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn iadd_small(&mut self, y: Limb) {$/;"	P	interface:Math
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn id<T>(mut self, id: T) -> Event$/;"	P	implementation:Event
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/trace.rs	/^    fn id(&self) -> Option<tracing::Id> {$/;"	P	implementation:Instrumented
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/trace.rs	/^    fn id(&self) -> Option<tracing::Id>;$/;"	P	interface:InstrumentedFuture
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn id(&self) -> Option<u32> {$/;"	P	implementation:Child
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn id(&self) -> u32 {$/;"	P	implementation:StdChild
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    pub(crate) fn id(&self) -> u32 {$/;"	P	implementation:Child
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn id(&self) -> u32 {$/;"	P	implementation:test::MockWait
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn id(&self) -> u32 {$/;"	P	implementation:T
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn id(&self) -> u32;$/;"	P	interface:Wait
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn id(&self) -> u32 {$/;"	P	implementation:test::MockWait
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    pub(crate) fn id(&self) -> u32 {$/;"	P	implementation:Child
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    pub fn id(&self) -> super::Id {$/;"	P	implementation:AbortHandle
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn id(&self) -> Id {$/;"	P	implementation:JoinError
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^pub fn id() -> Id {$/;"	f
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub fn id(&self) -> super::Id {$/;"	P	implementation:JoinHandle
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    id: u64,$/;"	m	struct:LocalOwnedTasks
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    id: u64,$/;"	m	struct:OwnedTasks
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod id;$/;"	n
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^        id: AtomicUsize,$/;"	m	struct:test::Foo
id	/home/trey/code/sqlx-crud/examples/axum/src/main.rs	/^    pub id: i64,$/;"	m	struct:Task
id	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn id(&self) -> Self::Id;$/;"	P	interface:Schema
id_column	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub id_column: &'s str,$/;"	m	struct:Metadata
id_column	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn id_column() -> &'static str;$/;"	P	interface:Schema
id_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) id_offset: usize,$/;"	m	struct:Vtable
idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^mod idle;$/;"	n
idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    idle: Idle,$/;"	m	struct:Shared
idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    idle: LinkedList<T>,$/;"	m	struct:ListsInner
idx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    idx: usize,$/;"	m	struct:SeqDeserializer
if_checking_recursion_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^macro_rules! if_checking_recursion_limit {$/;"	M
if_loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/loom.rs	/^macro_rules! if_loom {$/;"	M
ignore_decimal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn ignore_decimal(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
ignore_escape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^fn ignore_escape<'de, R>(read: &mut R) -> Result<()>$/;"	f
ignore_exponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn ignore_exponent(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
ignore_integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn ignore_integer(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
ignore_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	P	implementation:SliceRead
ignore_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	P	implementation:StrRead
ignore_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()> {$/;"	f
ignore_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn ignore_str(&mut self) -> Result<()>;$/;"	P	interface:Read
ignore_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn ignore_value(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
ignored_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^mod ignored_any;$/;"	n
imp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/mod.rs	/^mod imp;$/;"	n
imp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^mod imp;$/;"	n
imp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^mod imp;$/;"	n
impl_backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^macro_rules! impl_backtrace {$/;"	M
impl_bsd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_bsd {$/;"	n
impl_copy_clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	M
impl_deserialize_num	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	M
impl_from_signed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^macro_rules! impl_from_signed {$/;"	M
impl_from_unsigned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^macro_rules! impl_from_unsigned {$/;"	M
impl_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^macro_rules! impl_handler {$/;"	M
impl_into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        fn impl_into_response() -> impl IntoResponse {}$/;"	f	function:tests::tuple_responses
impl_linux	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_linux {$/;"	n
impl_macos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_macos {$/;"	n
impl_netbsd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_netbsd {$/;"	n
impl_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^macro_rules! impl_service {$/;"	M
impl_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^macro_rules! impl_service {$/;"	M
impl_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^macro_rules! impl_service {$/;"	M
impl_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^macro_rules! impl_service {$/;"	M
impl_solaris	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_solaris {$/;"	n
impl_trait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn impl_trait(uri: Uri) -> impl IntoResponse {$/;"	f	function:tests::impl_trait_result_works
impl_trait_both	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn impl_trait_both(uri: Uri) -> Result<impl IntoResponse, impl IntoResponse> {$/;"	f	function:tests::impl_trait_result_works
impl_trait_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn impl_trait_err() -> Result<(), impl IntoResponse> {$/;"	f	function:tests::impl_trait_result_works
impl_trait_ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn impl_trait_ok() -> Result<impl IntoResponse, ()> {$/;"	f	function:tests::impl_trait_result_works
impl_trait_result_works	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^    fn impl_trait_result_works() {$/;"	f	module:tests
impls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^mod impls;$/;"	n
impls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^mod impls;$/;"	n
impossible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^mod impossible;$/;"	n
imul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub(crate) fn imul(&mut self, b: &ExtendedFloat) {$/;"	P	implementation:ExtendedFloat
imul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn imul(x: &mut Limb, y: Limb, carry: Limb) -> Limb {$/;"	f	module:scalar
imul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn imul(x: &mut Vec<Limb>, y: &[Limb]) {$/;"	f	module:large
imul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn imul(x: &mut Vec<Limb>, y: Limb) {$/;"	f	module:small
imul_pow10	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn imul_pow10(&mut self, n: u32) {$/;"	P	interface:Math
imul_pow2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn imul_pow2(&mut self, n: u32) {$/;"	P	interface:Math
imul_pow5	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn imul_pow5(&mut self, n: u32) {$/;"	P	interface:Math
imul_pow5	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn imul_pow5(x: &mut Vec<Limb>, n: u32) {$/;"	f	module:small
imul_small	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn imul_small(&mut self, y: Limb) {$/;"	P	interface:Math
in_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    in_buffer_size: u32,$/;"	m	struct:ServerOptions
in_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn in_buffer_size(&mut self, buffer: u32) -> &mut Self {$/;"	P	implementation:ServerOptions
in_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub in_buffer_size: u32,$/;"	m	struct:PipeInfo
inc_budget_forced_yield_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(crate) fn inc_budget_forced_yield_count(&self) {$/;"	P	implementation:SchedulerMetrics
inc_local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn inc_local_schedule_count(&mut self) {$/;"	P	implementation:MetricsBatch
inc_local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn inc_local_schedule_count(&mut self) {}$/;"	P	implementation:MetricsBatch
inc_num_idle_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn inc_num_idle_threads(&self) {$/;"	P	implementation:SpawnerMetrics
inc_num_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn inc_num_messages(&self) -> bool {$/;"	P	implementation:UnboundedSender
inc_num_notify_waiters_calls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn inc_num_notify_waiters_calls(data: usize) -> usize {$/;"	f
inc_num_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn inc_num_searching(cell: &AtomicUsize, ordering: Ordering) {$/;"	P	implementation:State
inc_num_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn inc_num_threads(&self) {$/;"	P	implementation:SpawnerMetrics
inc_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn inc_queue_depth(&self) {$/;"	P	implementation:SpawnerMetrics
inc_ref_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn inc_ref_count<T: Wake>(data: *const ()) {$/;"	f
inc_remote_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn inc_remote_schedule_count(&self) {}$/;"	P	implementation:SchedulerMetrics
inc_remote_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(crate) fn inc_remote_schedule_count(&self) {$/;"	P	implementation:SchedulerMetrics
incomplete_flush_followed_by_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn incomplete_flush_followed_by_write() {$/;"	f
incomplete_partial_read_followed_by_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn incomplete_partial_read_followed_by_write() {$/;"	f
incomplete_read_followed_by_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn incomplete_read_followed_by_flush() {$/;"	f
incomplete_read_followed_by_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn incomplete_read_followed_by_write() {$/;"	f
incr_fd_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(crate) fn incr_fd_count(&self) {$/;"	P	implementation:IoDriverMetrics
incr_poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn incr_poll_count(&mut self) {$/;"	P	implementation:MetricsBatch
incr_poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn incr_poll_count(&mut self) {}$/;"	P	implementation:MetricsBatch
incr_ready_count_by	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(crate) fn incr_ready_count_by(&self, amt: u64) {$/;"	P	implementation:IoDriverMetrics
increment_version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn increment_version(&self) {$/;"	P	implementation:state::AtomicState
indent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^fn indent<W>(wr: &mut W, n: usize, s: &[u8]) -> io::Result<()>$/;"	f	method:Formatter::write_char_escape
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn index(&self, index: &Q) -> &Value {$/;"	f
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    index: usize,$/;"	m	struct:SliceRead
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index(&self, index: I) -> &Value {$/;"	f
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^mod index;$/;"	n
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    index: usize,$/;"	m	struct:Worker
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    fn index(&self, index: usize) -> &Self::Output {$/;"	P	implementation:Values
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    index: usize,$/;"	m	struct:Rx
index_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn index_for(&self, slot: *const Value<T>) -> usize {$/;"	P	implementation:Slots
index_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	P	implementation:String
index_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	P	implementation:str
index_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	P	implementation:usize
index_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value> {$/;"	f
index_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into<'v>(&self, v: &'v Value) -> Option<&'v Value>;$/;"	P	interface:Index
index_into_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	P	implementation:String
index_into_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	P	implementation:str
index_into_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	P	implementation:usize
index_into_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value> {$/;"	f
index_into_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_into_mut<'v>(&self, v: &'v mut Value) -> Option<&'v mut Value>;$/;"	P	interface:Index
index_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn index_mut(&mut self, index: &Q) -> &mut Value {$/;"	f
index_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_mut(&mut self, index: I) -> &mut Value {$/;"	f
index_or_insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	P	implementation:String
index_or_insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	P	implementation:str
index_or_insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	P	implementation:usize
index_or_insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value {$/;"	f
index_or_insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    fn index_or_insert<'v>(&self, v: &'v mut Value) -> &'v mut Value;$/;"	P	interface:Index
info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn info(&self) -> io::Result<PipeInfo> {$/;"	P	implementation:NamedPipeClient
info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn info(&self) -> io::Result<PipeInfo> {$/;"	P	implementation:NamedPipeServer
info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn info() -> Self {$/;"	P	implementation:SignalKind
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    init: u64,$/;"	m	struct:StaticAtomicU64
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn init() -> Self;$/;"	P	interface:Init
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn init() -> Self {$/;"	P	implementation:OsExtraData
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn init() -> Self {$/;"	P	implementation:OsStorage
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    init: Once,$/;"	m	struct:SignalInfo
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn init() -> Self {$/;"	P	implementation:OsExtraData
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn init() -> Self {$/;"	P	implementation:OsStorage
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    init: usize,$/;"	m	struct:CachedPage
initial	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    const fn initial() -> Budget {$/;"	P	implementation:Budget
initial	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn initial() -> Self {$/;"	P	implementation:state::Version
initialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    unsafe fn initialize(_value: NonNull<Values<T>>) {$/;"	P	implementation:Values
initialize_unfilled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn initialize_unfilled(&mut self) -> &mut [u8] {$/;"	P	implementation:ReadBuf
initialize_unfilled_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn initialize_unfilled_to(&mut self, n: usize) -> &mut [u8] {$/;"	P	implementation:ReadBuf
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    initialized: usize,$/;"	m	struct:ReadBuf
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn initialized(&self) -> &[u8] {$/;"	P	implementation:ReadBuf
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    initialized: usize,$/;"	m	struct:ReadBufParts
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    initialized: AtomicBool,$/;"	m	struct:SignalInfo
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn initialized(&self) -> bool {$/;"	P	implementation:OnceCell
initialized_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn initialized_mut(&mut self) -> &mut [u8] {$/;"	P	implementation:ReadBuf
initialized_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn initialized_mut(&mut self) -> bool {$/;"	P	implementation:OnceCell
inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn inject(&self) -> &Inject<Arc<Handle>> {$/;"	P	implementation:Worker
inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    inject: Inject<Arc<Handle>>,$/;"	m	struct:Shared
injection_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn injection_queue_depth(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        inner: Inner,$/;"	m	struct:capture::Backtrace
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    inner: &'a mut D,$/;"	m	struct:Indented
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^    inner: Own<ErrorImpl>,$/;"	m	struct:Error
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) inner: Box<dyn ErasedIntoRoute<S, B, E>>,$/;"	m	struct:Map
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    inner: S,$/;"	m	struct:HandleError
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    pub(crate) inner: S,$/;"	m	struct:AddExtension
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    inner: multer::Field<'static>,$/;"	m	struct:Field
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    inner: multer::Multipart<'static>,$/;"	m	struct:Multipart
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    inner: WebSocketStream<Upgraded>,$/;"	m	struct:WebSocket
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    inner: T,$/;"	m	struct:FromExtractor
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    inner: BoxCloneService<Request<B>, Response, Infallible>,$/;"	m	struct:Next
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    inner: BoxFuture<'static, Response>,$/;"	m	struct:ResponseFuture
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    inner: I,$/;"	m	struct:FromFn
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    inner: BoxFuture<'static, Response>,$/;"	m	struct:ResponseFuture
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    inner: I,$/;"	m	struct:MapRequest
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    inner: BoxFuture<'static, Response>,$/;"	m	struct:ResponseFuture
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    inner: I,$/;"	m	struct:MapResponse
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    inner: matchit::Router<RouteId>,$/;"	m	struct:Node
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    inner: S,$/;"	m	struct:StripPrefix
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        inner: InnerState,$/;"	m	struct:extract_state::AppState
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^            inner: &'a mut fmt::Formatter<'b>,$/;"	m	struct:Value::fmt::WriterFormatter
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    inner: Mutex<Inner>,$/;"	m	struct:File
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    inner: Option<T>,$/;"	m	struct:AsyncFd
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    inner: Option<T>,$/;"	m	struct:Blocking
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    inner: &'a Inner<T>,$/;"	m	struct:Guard
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    inner: W,$/;"	m	struct:SplitByUtf8BoundaryIfWindows
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    inner: UnsafeCell<std::sync::atomic::AtomicU16>,$/;"	m	struct:AtomicU16
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    inner: UnsafeCell<std::sync::atomic::AtomicU32>,$/;"	m	struct:AtomicU32
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    inner: Mutex<u64>,$/;"	m	struct:AtomicU64
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    fn inner(&self) -> &Mutex<u64> {$/;"	P	implementation:StaticAtomicU64
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    inner: UnsafeCell<std::sync::atomic::AtomicUsize>,$/;"	m	struct:AtomicUsize
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^    pub(crate) inner: &'static LocalKey<Cell<*const ()>>,$/;"	m	struct:ScopedKey
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    inner: Arc<TcpStream>,$/;"	m	struct:OwnedReadHalf
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    inner: Arc<TcpStream>,$/;"	m	struct:OwnedWriteHalf
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    inner: Arc<UnixStream>,$/;"	m	struct:OwnedReadHalf
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    inner: Arc<UnixStream>,$/;"	m	struct:OwnedWriteHalf
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    inner: T,$/;"	m	struct:ChildDropGuard
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    inner: imp::ChildStdio,$/;"	m	struct:ChildStderr
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    inner: imp::ChildStdio,$/;"	m	struct:ChildStdin
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    inner: imp::ChildStdio,$/;"	m	struct:ChildStdout
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    inner: PollEvented<Pipe>,$/;"	m	struct:ChildStdio
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    inner: Reaper<StdChild, GlobalOrphanQueue, Signal>,$/;"	m	struct:Child
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn inner(&self) -> &W {$/;"	f
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    inner: Option<W>,$/;"	m	struct:Reaper
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    inner: Arc<Inner>,$/;"	m	struct:Spawner
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    inner: TimeDriver,$/;"	m	struct:Driver
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub(crate) inner: scheduler::Handle,$/;"	m	struct:Handle
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    inner: Arc<Inner>,$/;"	m	struct:ParkThread
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    inner: Arc<Inner>,$/;"	m	struct:UnparkThread
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    inner: Arc<Inner>,$/;"	m	struct:Parker
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    inner: Arc<Inner>,$/;"	m	struct:Unparker
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    inner: Arc<Inner<T>>,$/;"	m	struct:Local
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    inner: Arc<()>,$/;"	m	struct:Driver
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    inner: Weak<()>,$/;"	m	struct:Handle
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    inner: Mutex<OwnedTasksInner<S>>,$/;"	m	struct:OwnedTasks
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    inner: UnsafeCell<OwnedTasksInner<S>>,$/;"	m	struct:LocalOwnedTasks
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    inner: Arc<Inner<T>>,$/;"	m	struct:Receiver
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    inner: Arc<Inner<T>>,$/;"	m	struct:Sender
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        inner: MaybeUninit<T>,$/;"	m	struct:atomic_take::AtomicTake
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        inner: F,$/;"	m	struct:test_combination::FutWrapper
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn inner(&self) -> &TimerShared {$/;"	P	implementation:TimerEntry
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    inner: NonNull<TimerShared>,$/;"	m	struct:TimerHandle
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    inner: StdUnsafeCell<TimerShared>,$/;"	m	struct:TimerEntry
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(super) inner: super::Inner,$/;"	m	struct:Handle
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^    inner: ReusableBoxFuture<Receiver<()>>,$/;"	m	struct:RxFuture
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    inner: RxFuture,$/;"	m	struct:Signal
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlBreak
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlC
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlClose
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlLogoff
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlShutdown
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    inner: Arc<Chan<T, S>>,$/;"	m	struct:Rx
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    inner: Arc<Chan<T, S>>,$/;"	m	struct:Tx
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    inner: Option<Arc<Inner<T>>>,$/;"	m	struct:Receiver
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    inner: Option<Arc<Inner<T>>>,$/;"	m	struct:Sender
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        inner: [Notify; 8],$/;"	m	struct:big_notify::BigNotify
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    inner: RwLockReadGuard<'a, T>,$/;"	m	struct:Ref
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    inner: IdleNotifiedSet<JoinHandle<T>>,$/;"	m	struct:JoinSet
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub inner: thread::LocalKey<RefCell<Option<T>>>,$/;"	m	struct:LocalKey
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    inner: UnsafeCell<PointersInner<T>>,$/;"	m	struct:Pointers
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    inner: UnsafeCell<Option<Rc<T>>>,$/;"	m	struct:RcCell
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    inner: [MaybeUninit<Waker>; NUM_WAKERS],$/;"	m	struct:WakeList
inner_fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn inner_fallback() -> impl IntoResponse {$/;"	f
inner_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub unsafe fn inner_mut(&mut self) -> &mut [MaybeUninit<u8>] {$/;"	P	implementation:ReadBuf
inner_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    pub(crate) fn inner_mut(&mut self) -> &mut W {$/;"	f
insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    fn insert($/;"	P	implementation:Node
insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn insert(&mut self, k: String, v: Value) -> Option<Value> {$/;"	P	implementation:Map
insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn insert(&mut self, value: Value) -> Value {$/;"	P	implementation:OccupiedEntry
insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn insert(self, value: Value) -> &'a mut Value {$/;"	P	implementation:VacantEntry
insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) unsafe fn insert($/;"	P	implementation:Wheel
insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn insert(&mut self, jh: JoinHandle<T>) -> AbortHandle {$/;"	P	implementation:JoinSet
insert_args	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn insert_args(self) -> <E::Database as HasArguments<'e>>::Arguments;$/;"	P	interface:Crud
insert_drop_reverse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn insert_drop_reverse() {$/;"	f	module:test
insert_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^        async fn insert_header<B>(mut req: Request<B>, next: Next<B>) -> impl IntoResponse {$/;"	f	function:tests::basic
insert_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn insert_idle(&mut self, value: T) -> EntryInOneOfTheLists<'_, T> {$/;"	P	implementation:IdleNotifiedSet
insert_many	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn insert_many() {$/;"	f	module:test
insert_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn insert_remove() {$/;"	f	module:test
insert_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub insert_sql: &'s str,$/;"	m	struct:Metadata
insert_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn insert_sql() -> &'static str;$/;"	P	interface:Schema
insert_url_params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/url_params.rs	/^pub(super) fn insert_url_params(extensions: &mut Extensions, params: Params) {$/;"	f
instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod instant;$/;"	n
instant_to_tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn instant_to_tick(&self, t: Instant) -> u64 {$/;"	P	implementation:TimeSource
int_to_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! int_to_int {$/;"	M
int_to_uint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! int_to_uint {$/;"	M
integer128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^mod integer128;$/;"	n
integer_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^macro_rules! integer_impl {$/;"	M
internal_interval_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^fn internal_interval_at($/;"	f
internal_n_mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn internal_n_mask(bit: u64, n: u64) -> u64 {$/;"	f
interrupt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn interrupt() -> Self {$/;"	P	implementation:SignalKind
interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn interval(mut self, time: Duration) -> Self {$/;"	P	implementation:KeepAlive
interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^pub fn interval(period: Duration) -> Interval {$/;"	f
interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod interval;$/;"	n
interval_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^pub fn interval_at(start: Instant, period: Duration) -> Interval {$/;"	f
into_c_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn into_c_int() {$/;"	f	module:tests
into_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn into_data(self) -> Vec<u8> {$/;"	P	implementation:Message
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	P	interface:IntoDeserializer
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn into_deserializer(self) -> BytesDeserializer<'a, E> {$/;"	f
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f	module:content
into_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	P	implementation:Value
into_downward_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub(crate) fn into_downward_float<F: Float>(mut self) -> F {$/;"	P	implementation:ExtendedFloat
into_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub(crate) fn into_float<F: Float>(mut self) -> F {$/;"	P	implementation:ExtendedFloat
into_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^pub(crate) fn into_float<F>(fp: ExtendedFloat) -> F$/;"	f
into_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/exponent.rs	/^fn into_i32(value: usize) -> i32 {$/;"	f
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^    pub(crate) fn into_inner(self) -> Arc<str> {$/;"	P	implementation:PercentDecodedStr
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    pub fn into_inner(self) -> W {$/;"	f
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn into_inner(mut self) -> T {$/;"	P	implementation:AsyncFd
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn into_inner(self) -> E {$/;"	P	implementation:Aio
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn into_inner(mut self) -> io::Result<E> {$/;"	P	implementation:PollEvented
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:BufReader
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn into_inner(self) -> RW {$/;"	P	implementation:BufStream
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn into_inner(self) -> W {$/;"	P	implementation:BufWriter
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    pub fn into_inner(self) -> (T, U) {$/;"	f
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub fn into_inner(self) -> R {$/;"	f
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:Take
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn into_inner(self) -> T {$/;"	P	implementation:Track
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn into_inner(self) -> T$/;"	P	implementation:Mutex
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn into_inner(mut self) -> Option<T> {$/;"	P	implementation:OnceCell
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn into_inner(self) -> T$/;"	P	implementation:RwLock
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Timeout
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^    pub(crate) fn into_inner(self) -> T {$/;"	P	implementation:SyncWrapper
into_iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:RawPathParams
into_iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    pub fn into_iter<T>(self) -> StreamDeserializer<'de, R, T>$/;"	P	implementation:Deserializer
into_iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Map
into_kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub fn into_kind(self) -> ErrorKind {$/;"	P	implementation:FailedToDeserializePathParams
into_make_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn into_make_service(self) -> IntoMakeService<HandlerService<Self, T, (), B>> {$/;"	f
into_make_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn into_make_service(self) -> IntoMakeService<HandlerService<Self, T, (), B>>;$/;"	P	interface:HandlerWithoutStateExt
into_make_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    pub fn into_make_service(self) -> IntoMakeService<HandlerService<H, T, S, B>> {$/;"	P	implementation:HandlerService
into_make_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn into_make_service(self) -> IntoMakeService<Self> {$/;"	f
into_make_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn into_make_service(self) -> IntoMakeService<Self> {$/;"	f
into_make_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^mod into_make_service;$/;"	n
into_make_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/service_ext.rs	/^    fn into_make_service(self) -> IntoMakeService<Self> {$/;"	f
into_make_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/service_ext.rs	/^    fn into_make_service(self) -> IntoMakeService<Self>;$/;"	P	interface:ServiceExt
into_make_service_with_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn into_make_service_with_connect_info<C>($/;"	P	interface:HandlerWithoutStateExt
into_make_service_with_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn into_make_service_with_connect_info<C>($/;"	f
into_make_service_with_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    pub fn into_make_service_with_connect_info<C>($/;"	P	implementation:HandlerService
into_make_service_with_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn into_make_service_with_connect_info<C>(self) -> IntoMakeServiceWithConnectInfo<Self, /;"	f
into_make_service_with_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn into_make_service_with_connect_info<C>(self) -> IntoMakeServiceWithConnectInfo<Self, /;"	f
into_make_service_with_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/service_ext.rs	/^    fn into_make_service_with_connect_info<C>(self) -> IntoMakeServiceWithConnectInfo<Self, C> {$/;"	f
into_make_service_with_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/service_ext.rs	/^    fn into_make_service_with_connect_info<C>(self) -> IntoMakeServiceWithConnectInfo<Self, C>;$/;"	P	interface:ServiceExt
into_map_request_result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    fn into_map_request_result(self) -> Result<Request<B>, Response> {$/;"	P	implementation:Request
into_map_request_result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    fn into_map_request_result(self) -> Result<Request<B>, Response> {$/;"	f
into_map_request_result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    fn into_map_request_result(self) -> Result<Request<B>, Response>;$/;"	P	interface:IntoMapRequestResult
into_mapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn into_mapped(this: Self) -> OwnedRwLockMappedWriteGuard<T> {$/;"	P	implementation:OwnedRwLockWriteGuard
into_mapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn into_mapped(this: Self) -> RwLockMappedWriteGuard<'a, T> {$/;"	P	implementation:RwLockWriteGuard
into_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn into_mut(self) -> &'a mut Value {$/;"	P	implementation:OccupiedEntry
into_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(super) fn into_notified(self) -> Notified<S> {$/;"	P	implementation:UnownedTask
into_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn into_owned(raw_value: Box<Self>) -> Box<str> {$/;"	P	implementation:RawValue
into_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn into_panic(self) -> Box<dyn Any + Send + 'static> {$/;"	P	implementation:JoinError
into_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn into_raw(this: Arc<Inner>) -> *const () {$/;"	P	implementation:Inner
into_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	P	implementation:TcpSocket
into_raw_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn into_raw_socket(self) -> RawSocket;$/;"	P	interface:windows::io::IntoRawSocket
into_read_buf_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^pub(crate) fn into_read_buf_parts(rb: ReadBuf<'_>) -> ReadBufParts {$/;"	f
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    fn into_response(self) -> Response {$/;"	f
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    fn into_response(self) -> Response {$/;"	f
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    fn into_response(self) -> Response {$/;"	P	implementation:MultipartError
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn into_response(self) -> Response {$/;"	P	implementation:FailedToDeserializePathParams
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn into_response(self) -> Response {$/;"	P	implementation:InvalidUtf8InPathParam
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    fn into_response(self) -> Response {$/;"	f
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    fn into_response(self) -> Response {$/;"	f
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^    fn into_response(self) -> Response {$/;"	f
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^    fn into_response(self) -> Response {$/;"	P	implementation:Redirect
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn into_response(self) -> Response {$/;"	f
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    fn into_response(self) -> Response {$/;"	P	implementation:TypedHeaderRejection
into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    fn into_response(self) -> Response {$/;"	f
into_response_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    fn into_response_parts(self, mut res: ResponseParts) -> Result<ResponseParts, Self::Error> {$/;"	f
into_response_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    fn into_response_parts(self, mut res: ResponseParts) -> Result<ResponseParts, Self::Error> {$/;"	f
into_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn into_route(self: Box<Self>, state: S) -> Route<B, E>;$/;"	P	interface:ErasedIntoRoute
into_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn into_route(self: Box<Self>, state: S) -> Route<B2, E2> {$/;"	f
into_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    fn into_route(self: Box<Self>, state: S) -> Route<B> {$/;"	f
into_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) fn into_route(self, state: S) -> Route<B, E> {$/;"	P	implementation:BoxedIntoRoute
into_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) into_route: fn(H, S) -> Route<B>,$/;"	m	struct:MakeErasedHandler
into_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) into_route: fn(Router<S, B>, S) -> Route<B>,$/;"	m	struct:MakeErasedRouter
into_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn into_service(self) -> HandlerService<Self, T, (), B> {$/;"	f
into_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn into_service(self) -> HandlerService<Self, T, (), B>;$/;"	P	interface:HandlerWithoutStateExt
into_split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn into_split(self) -> (OwnedReadHalf, OwnedWriteHalf) {$/;"	P	implementation:TcpStream
into_split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn into_split(self) -> (OwnedReadHalf, OwnedWriteHalf) {$/;"	P	implementation:UnixStream
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn into_std(mut self) -> StdFile {$/;"	P	implementation:File
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn into_std(self) -> io::Result<std::net::TcpListener> {$/;"	P	implementation:TcpListener
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn into_std(self) -> io::Result<std::net::TcpStream> {$/;"	P	implementation:TcpStream
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn into_std(self) -> io::Result<std::net::UdpSocket> {$/;"	P	implementation:UdpSocket
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn into_std(self) -> io::Result<std::os::unix::net::UnixDatagram> {$/;"	P	implementation:UnixDatagram
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn into_std(self) -> io::Result<std::os::unix::net::UnixListener> {$/;"	P	implementation:UnixListener
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn into_std(self) -> io::Result<std::os::unix::net::UnixStream> {$/;"	P	implementation:UnixStream
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn into_std(self) -> std::time::Instant {$/;"	P	implementation:Instant
into_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn into_task(self) -> Task<S> {$/;"	P	implementation:UnownedTask
into_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn into_text(self) -> Result<String, Error> {$/;"	P	implementation:Message
into_tungstenite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn into_tungstenite(self) -> ts::Message {$/;"	P	implementation:Message
into_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn into_waker(self) -> Waker {$/;"	P	implementation:UnparkThread
into_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn into_waker(self) -> Waker {$/;"	P	implementation:Waker
into_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn into_waker(self) -> Waker;$/;"	P	interface:WakerRef
invalid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn invalid() -> Error {$/;"	P	implementation:Error
invalid_json_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    async fn invalid_json_data() {$/;"	f	module:tests
invalid_json_syntax	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    async fn invalid_json_syntax() {$/;"	f	module:tests
invalid_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^fn invalid_number() -> Error {$/;"	f
invalid_raw_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_raw_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^fn invalid_raw_value() -> Error {$/;"	f
invalid_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f	module:content
invalid_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn invalid_type(self, exp: &dyn Expected) -> Error {$/;"	P	implementation:ParserNumber
invalid_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    fn invalid_type(unexp: de::Unexpected, exp: &dyn de::Expected) -> Self {$/;"	P	implementation:Error
invalid_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn invalid_type<E>(&self, exp: &dyn Expected) -> E$/;"	P	implementation:Value
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub fn io(error: io::Error) -> Self {$/;"	P	implementation:Error
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod io;$/;"	n
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^    pub mod io {$/;"	n	module:windows
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    io: MioSource<E>,$/;"	m	struct:Aio
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod io;$/;"	n
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    io: PollEvented<mio_pipe::Receiver>,$/;"	m	struct:Receiver
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    io: PollEvented<mio_pipe::Sender>,$/;"	m	struct:Sender
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    io: PollEvented<mio_windows::NamedPipe>,$/;"	m	struct:NamedPipeClient
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    io: PollEvented<mio_windows::NamedPipe>,$/;"	m	struct:NamedPipeServer
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    io: Blocking<ArcFile>,$/;"	m	struct:ChildStdio
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) io: IoHandle,$/;"	m	struct:Handle
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    io: io::Driver,$/;"	m	struct:Driver
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn io() -> Self {$/;"	P	implementation:SignalKind
io_dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    io_dispatch: RwLock<IoDispatcher>,$/;"	m	struct:Handle
io_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^        fn io_error(_: fmt::Error) -> io::Error {$/;"	f	method:Value::fmt
is	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn is<E>(&self) -> bool$/;"	P	implementation:Error
is_already_init_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn is_already_init_err(&self) -> bool {$/;"	P	implementation:SetError
is_array	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_array(&self) -> bool {$/;"	P	implementation:Value
is_at_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn is_at_capacity(&self) -> bool {$/;"	P	implementation:Error
is_at_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn is_at_index(&self, index: usize) -> bool {$/;"	P	implementation:Block
is_boolean	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_boolean(&self) -> bool {$/;"	P	implementation:Value
is_cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn is_cancelled(&self) -> bool {$/;"	P	implementation:JoinError
is_cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_cancelled(self) -> bool {$/;"	P	implementation:Snapshot
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    is_closed: bool,$/;"	m	struct:Pipe
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    is_closed: bool,$/;"	m	struct:Pointers
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:Inject
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:LocalOwnedTasks
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:Semaphore
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:TryAcquireError
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Sender
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn is_closed(&self) -> bool {$/;"	P	implementation:Semaphore
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn is_closed(&self) -> bool;$/;"	P	interface:Semaphore
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:Tx
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:UnboundedSender
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn is_closed(self) -> bool {$/;"	P	implementation:State
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Sender
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Semaphore
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn is_closed(self) -> bool {$/;"	P	implementation:state::StateSnapshot
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Sender
is_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_complete(self) -> bool {$/;"	P	implementation:Snapshot
is_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn is_complete(self) -> bool {$/;"	P	implementation:State
is_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub fn is_data(&self) -> bool {$/;"	P	implementation:Error
is_debug	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^fn is_debug<T: fmt::Debug>(_: &T) {}$/;"	f
is_denormal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_denormal(self) -> bool {$/;"	P	interface:Float
is_dropped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    is_dropped: Arc<AtomicBool>,$/;"	m	struct:AssertDrop
is_dropped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    is_dropped: Arc<AtomicBool>,$/;"	m	struct:AssertDropHandle
is_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn is_elapsed(&self) -> bool {$/;"	P	implementation:TimerEntry
is_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub fn is_elapsed(&self) -> bool {$/;"	P	implementation:Sleep
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Map
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Buf
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_empty(self) -> bool {$/;"	P	implementation:Ready
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Defer
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:Inner
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Steal
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Inject
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:LocalOwnedTasks
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:OwnedTasks
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:Runtime
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Receiver
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Sender
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    is_empty: bool,$/;"	m	struct:NotifyWaitersList
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:JoinSet
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:IdleNotifiedSet
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:LinkedList
is_eof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub fn is_eof(&self) -> bool {$/;"	P	implementation:Error
is_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn is_error(_: Ready) -> bool {$/;"	f	module:sys
is_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn is_error(ready: Ready) -> bool {$/;"	f	module:sys
is_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub fn is_f64(&self) -> bool {$/;"	P	implementation:Number
is_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_f64(&self) -> bool {$/;"	P	implementation:Value
is_fifo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn is_fifo(file: &File) -> io::Result<bool> {$/;"	f
is_final	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn is_final(&self) -> bool {$/;"	P	implementation:Block
is_finished	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    pub fn is_finished(&self) -> bool {$/;"	P	implementation:AbortHandle
is_finished	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub fn is_finished(&self) -> bool {$/;"	P	implementation:JoinHandle
is_human_readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Deserializer
is_human_readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Serializer
is_hup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn is_hup(_: Ready) -> bool {$/;"	f	module:sys
is_hup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn is_hup(ready: Ready) -> bool {$/;"	f	module:sys
is_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub fn is_i64(&self) -> bool {$/;"	P	implementation:Number
is_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_i64(&self) -> bool {$/;"	P	implementation:Value
is_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_idle(self) -> bool {$/;"	P	implementation:Snapshot
is_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn is_idle(&self) -> bool {$/;"	P	implementation:Semaphore
is_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn is_idle(&self) -> bool;$/;"	P	interface:Semaphore
is_inf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_inf(self) -> bool {$/;"	P	interface:Float
is_initializing_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn is_initializing_err(&self) -> bool {$/;"	P	implementation:SetError
is_invalid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn is_invalid(&self) -> bool {$/;"	P	implementation:Error
is_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub fn is_io(&self) -> bool {$/;"	P	implementation:Error
is_join_interested	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_join_interested(self) -> bool {$/;"	P	implementation:Snapshot
is_join_waker_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_join_waker_set(self) -> bool {$/;"	P	implementation:Snapshot
is_leader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    pub fn is_leader(&self) -> bool {$/;"	P	implementation:BarrierWaitResult
is_missing_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn is_missing_context(&self) -> bool {$/;"	P	implementation:TryCurrentError
is_no_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn is_no_permits(&self) -> bool {$/;"	P	implementation:TryAcquireError
is_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn is_none(&self) -> bool {$/;"	f
is_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_notified(self) -> bool {$/;"	P	implementation:Snapshot
is_null	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_null(&self) -> bool {$/;"	P	implementation:Value
is_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_number(&self) -> bool {$/;"	P	implementation:Value
is_object	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_object(&self) -> bool {$/;"	P	implementation:Value
is_pair_of	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    pub fn is_pair_of(&self, other: &ReadHalf<T>) -> bool {$/;"	P	implementation:WriteHalf
is_pair_of	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    pub fn is_pair_of(&self, other: &WriteHalf<T>) -> bool {$/;"	P	implementation:ReadHalf
is_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn is_panic(&self) -> bool {$/;"	P	implementation:JoinError
is_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn is_parked(&self, worker_id: usize) -> bool {$/;"	P	implementation:Idle
is_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn is_pending(&self) -> bool {$/;"	P	implementation:StateCell
is_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn is_pending(&self) -> bool {$/;"	P	implementation:TimerHandle
is_read_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_read_closed(self) -> bool {$/;"	P	implementation:Ready
is_readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub const fn is_readable(self) -> bool {$/;"	P	implementation:Interest
is_readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_readable(self) -> bool {$/;"	P	implementation:Ready
is_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^fn is_ready(bits: usize, slot: usize) -> bool {$/;"	f
is_running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_running(self) -> bool {$/;"	P	implementation:Snapshot
is_rx_task_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn is_rx_task_set(self) -> bool {$/;"	P	implementation:State
is_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    is_searching: bool,$/;"	m	struct:Core
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    is_shutdown: bool,$/;"	m	struct:IoDispatcher
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    is_shutdown: bool,$/;"	m	struct:ReadyEvent
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    is_shutdown: bool,$/;"	m	struct:Core
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(super) fn is_shutdown(&self) -> bool {$/;"	P	implementation:Handle
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(super) fn is_shutdown(&self) -> bool {$/;"	P	implementation:Inner
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(super) is_shutdown: AtomicBool,$/;"	m	struct:Inner
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn is_shutdown(&self) -> bool {$/;"	P	implementation:Error
is_sign_negative	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_sign_negative(self) -> bool {$/;"	P	implementation:f32
is_sign_negative	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_sign_negative(self) -> bool {$/;"	P	implementation:f64
is_sign_negative	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_sign_negative(self) -> bool;$/;"	P	interface:Float
is_sign_positive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_sign_positive(self) -> bool {$/;"	P	implementation:f32
is_sign_positive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_sign_positive(self) -> bool {$/;"	P	implementation:f64
is_sign_positive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_sign_positive(self) -> bool;$/;"	P	interface:Float
is_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn is_some(&self) -> bool {$/;"	f
is_special	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn is_special(self) -> bool {$/;"	P	interface:Float
is_stealable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn is_stealable(&self) -> bool {$/;"	P	implementation:Local
is_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_string(&self) -> bool {$/;"	P	implementation:Value
is_syntax	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub fn is_syntax(&self) -> bool {$/;"	P	implementation:Error
is_temporary_os_thread_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^fn is_temporary_os_thread_error(error: &std::io::Error) -> bool {$/;"	f
is_thread_local_destroyed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn is_thread_local_destroyed(&self) -> bool {$/;"	P	implementation:TryCurrentError
is_tx_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^fn is_tx_closed(bits: usize) -> bool {$/;"	f
is_tx_task_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn is_tx_task_set(self) -> bool {$/;"	P	implementation:State
is_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub fn is_u64(&self) -> bool {$/;"	P	implementation:Number
is_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn is_u64(&self) -> bool {$/;"	P	implementation:Value
is_unnamed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^    pub fn is_unnamed(&self) -> bool {$/;"	P	implementation:SocketAddr
is_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^fn is_unpin<T: Unpin>() {}$/;"	f
is_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^        fn is_unpin<T: Unpin>() {}$/;"	f	method:Acquire::project
is_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^fn is_unpin<T: Unpin>() {}$/;"	f
is_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn is_unpin<T: Unpin>() {}$/;"	f
is_writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub const fn is_writable(self) -> bool {$/;"	P	implementation:Interest
is_writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_writable(self) -> bool {$/;"	P	implementation:Ready
is_write_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_write_closed(self) -> bool {$/;"	P	implementation:Ready
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:Cursor
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:Vec
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	interface:AsyncWrite
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	f
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:BufReader
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:BufStream
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:BufWriter
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:WriteHalf
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:OwnedWriteHalf
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:TcpStream
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:Sender
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:WriteHalf
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:OwnedWriteHalf
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:UnixStream
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:ChildStdin
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:ChildStdio
ishl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn ishl(&mut self, n: usize) {$/;"	P	interface:Math
ishl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn ishl(x: &mut Vec<Limb>, n: usize) {$/;"	f	module:small
ishl_bits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn ishl_bits(x: &mut Vec<Limb>, n: usize) {$/;"	f	module:small
ishl_limbs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn ishl_limbs(x: &mut Vec<Limb>, n: usize) {$/;"	f	module:small
issue_3014	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn issue_3014() {$/;"	f	module:test
isub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn isub(x: &mut Limb, y: Limb) -> bool {$/;"	f	module:scalar
isub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn isub(x: &mut Vec<Limb>, y: &[Limb]) {$/;"	f	module:large
isub_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn isub_impl(x: &mut Vec<Limb>, y: Limb, xstart: usize) {$/;"	f	module:small
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub fn iter(&self) -> RawPathParamsIter<'_> {$/;"	P	implementation:RawPathParams
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:MapDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:SeqDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        iter: <&'a [(Content<'de>, Content<'de>)] as IntoIterator>::IntoIter,$/;"	m	struct:content::MapRefDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        iter: <&'a [Content<'de>] as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqRefDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        iter: <Vec<(Content<'de>, Content<'de>)> as IntoIterator>::IntoIter,$/;"	m	struct:content::MapDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        iter: <Vec<Content<'de>> as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    iter: slice::Iter<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatMapAccess
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatInternallyTaggedAccess
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatStructAccess
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    iter: I,$/;"	m	struct:LineColIterator
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod iter;$/;"	n
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    iter: IntoIterImpl,$/;"	m	struct:IntoIter
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    iter: IterImpl<'a>,$/;"	m	struct:Iter
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    iter: IterMutImpl<'a>,$/;"	m	struct:IterMut
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    iter: KeysImpl<'a>,$/;"	m	struct:Keys
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    iter: ValuesImpl<'a>,$/;"	m	struct:Values
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    iter: ValuesMutImpl<'a>,$/;"	m	struct:ValuesMut
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn iter(&self) -> Iter {$/;"	P	implementation:Map
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    iter: LineColIterator<io::Bytes<R>>,$/;"	m	struct:IoRead
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    iter: <&'de Map<String, Value> as IntoIterator>::IntoIter,$/;"	m	struct:MapRefDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    iter: <Map<String, Value> as IntoIterator>::IntoIter,$/;"	m	struct:MapDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    iter: slice::Iter<'de, Value>,$/;"	m	struct:SeqRefDeserializer
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    iter: vec::IntoIter<Value>,$/;"	m	struct:SeqDeserializer
iter_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut {$/;"	P	implementation:Map
iterator_len_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/join.rs	/^macro_rules! join {$/;"	M
join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod join;$/;"	n
join_handle_cancel_on_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_shutdown_join.rs	/^fn join_handle_cancel_on_shutdown() {$/;"	f
join_multicast_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn join_multicast_v4(&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()> /;"	P	implementation:UdpSocket
join_multicast_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn join_multicast_v6(&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
join_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub async fn join_next(&mut self) -> Option<Result<T, JoinError>> {$/;"	P	implementation:JoinSet
join_next_with_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub async fn join_next_with_id(&mut self) -> Option<Result<(Id, T), JoinError>> {$/;"	P	implementation:JoinSet
join_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn join_output() {$/;"	f	module:group_b
joinset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    joinset: &'a mut JoinSet<T>,$/;"	m	struct:Builder
json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^mod json;$/;"	n
json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) async fn json<T>(self) -> T$/;"	P	implementation:TestResponse
json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn json<T>(mut self, json: &T) -> Self$/;"	P	implementation:RequestBuilder
json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/macros.rs	/^macro_rules! json {$/;"	M
json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    json: str,$/;"	m	struct:RawValue
json_content_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^fn json_content_type(headers: &HeaderMap) -> bool {$/;"	f
json_content_types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^    async fn json_content_types() {$/;"	f	module:tests
json_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn json_data<T>(mut self, data: T) -> serde_json::Result<Event>$/;"	P	implementation:Event
json_expect_expr_comma	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/macros.rs	/^macro_rules! json_expect_expr_comma {$/;"	M
json_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/macros.rs	/^macro_rules! json_internal {$/;"	M
json_internal_vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/macros.rs	/^macro_rules! json_internal_vec {$/;"	M
json_unexpected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/macros.rs	/^macro_rules! json_unexpected {$/;"	M
karatsuba_mul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn karatsuba_mul(x: &[Limb], y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
karatsuba_mul_fwd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn karatsuba_mul_fwd(x: &[Limb], y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
karatsuba_split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn karatsuba_split(z: &[Limb], m: usize) -> (&[Limb], &[Limb]) {$/;"	f	module:large
karatsuba_uneven_mul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn karatsuba_uneven_mul(x: &[Limb], mut y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    async fn keep_alive() {$/;"	f	module:tests
keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    keep_alive: Option<KeepAlive>,$/;"	m	struct:Sse
keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn keep_alive(mut self, keep_alive: KeepAlive) -> Self {$/;"	P	implementation:Sse
keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    keep_alive: Duration,$/;"	m	struct:Inner
keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) keep_alive: Option<Duration>,$/;"	m	struct:Builder
keep_alive_ends_when_the_stream_ends	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    async fn keep_alive_ends_when_the_stream_ends() {$/;"	f	module:tests
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^            key: Option<KeyOrIdx>,$/;"	m	struct:ValueDeserializer::deserialize_tuple::PairDeserializer
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    key: Arc<str>,$/;"	m	struct:KeyDeserializer
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    key: Option<KeyOrIdx>,$/;"	m	struct:MapDeserializer
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    key: Option<KeyOrIdx>,$/;"	m	struct:ValueDeserializer
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    key: Arc<str>,$/;"	m	struct:InvalidUtf8InPathParam
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        key: Option<Content>,$/;"	m	struct:content::SerializeMap
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:Entry
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:OccupiedEntry
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:VacantEntry
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    key: Cow<'de, str>,$/;"	m	struct:MapKeyDeserializer
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^            key: &'static LocalKey<Cell<*const ()>>,$/;"	m	struct:ScopedKey::set::Reset
key_must_be_a_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
key_must_be_a_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^fn key_must_be_a_string() -> Error {$/;"	f
keys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn keys(&self) -> Keys {$/;"	P	implementation:Map
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/kill.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:T
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/kill.rs	/^    fn kill(&mut self) -> io::Result<()>;$/;"	P	interface:Kill
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:test::Mock
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:ChildDropGuard
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub async fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:Child
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^mod kill;$/;"	n
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:Child
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:StdChild
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:test::MockWait
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	f
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn kill() {$/;"	f	module:test
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:Child
kill_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    kill_on_drop: bool,$/;"	m	struct:ChildDropGuard
kill_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    kill_on_drop: bool,$/;"	m	struct:Command
kill_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn kill_on_drop(&mut self, kill_on_drop: bool) -> &mut Command {$/;"	P	implementation:Command
kills_on_drop_if_specified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn kills_on_drop_if_specified() {$/;"	f	module:test
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^    pub mod kind {$/;"	n	module:__private
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod kind;$/;"	n
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub fn kind(&self) -> &ErrorKind {$/;"	P	implementation:FailedToDeserializePathParams
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub(super) kind: ErrorKind,$/;"	m	struct:PathDeserializationError
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    kind: Kind,$/;"	m	struct:Builder
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    kind: TryCurrentErrorKind,$/;"	m	struct:TryCurrentError
large	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub large: ExtendedFloatArray,$/;"	m	struct:ModeratePathPowers
large	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^mod large {$/;"	n
large_atof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bhcomp.rs	/^fn large_atof<F>(mantissa: Bigint, exponent: i32) -> F$/;"	f
large_powers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod large_powers;$/;"	n
large_powers32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod large_powers32;$/;"	n
large_powers64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod large_powers64;$/;"	n
last	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn last(&self) -> Option<&L::Target> {$/;"	P	implementation:LinkedList
last_exiting_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    last_exiting_thread: Option<thread::JoinHandle<()>>,$/;"	m	struct:Shared
last_resume_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    last_resume_time: Instant,$/;"	m	struct:MetricsBatch
last_write_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    last_write_err: Option<io::ErrorKind>,$/;"	m	struct:Inner
launch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(crate) fn launch(mut self) {$/;"	P	implementation:Launch
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) layer: Box<dyn LayerFn<B, E, B2, E2>>,$/;"	m	struct:Map
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    fn layer(&self, inner: S) -> Self::Service {$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    fn layer(&self, inner: S) -> Self::Service {$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    fn layer(&self, inner: S) -> Self::Service {$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn layer<L, NewReqBody>(self, layer: L) -> Layered<L, Self, T, S, B, NewReqBody>$/;"	P	interface:Handler
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    layer: L,$/;"	m	struct:Layered
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    fn layer(&self, inner: T) -> Self::Service {$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn layer(&self, inner: I) -> Self::Service {$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    fn layer(&self, inner: I) -> Self::Service {$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    fn layer(&self, inner: I) -> Self::Service {$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn layer() {$/;"	f	module:tests
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn layer<L, NewReqBody, NewError>(self, layer: L) -> MethodRouter<S, NewReqBody, NewErro/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn layer<L, NewReqBody>(self, layer: L) -> Endpoint<S, NewReqBody>$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn layer<L, NewReqBody>(self, layer: L) -> Router<S, NewReqBody>$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn layer<L, NewReqBody>(self, layer: L) -> PathRouter<S, NewReqBody>$/;"	f
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    pub(crate) fn layer<L, NewReqBody, NewError>(self, layer: L) -> Route<NewReqBody, NewError>$/;"	P	implementation:Route
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    pub(super) fn layer(prefix: &str) -> impl Layer<S, Service = Self> + Clone {$/;"	P	implementation:StripPrefix
layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn layer() {$/;"	f
layer_and_handle_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn layer_and_handle_error() {$/;"	f
layer_response_into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn layer_response_into_response() {$/;"	f
leading_space_is_not_stripped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn leading_space_is_not_stripped() {$/;"	f	module:tests
leading_zeros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn leading_zeros(x: &[Limb]) -> usize {$/;"	f	module:small
least_significant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) const fn least_significant(width: u32) -> Pack {$/;"	P	implementation:Pack
leave_multicast_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn leave_multicast_v4(&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>/;"	P	implementation:UdpSocket
leave_multicast_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn leave_multicast_v6(&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Chain
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        len: usize,$/;"	m	struct:private::SeedTupleVariant
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:ExtendedFloatArray
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Map
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    pub(in super::super) fn len() -> usize {$/;"	f	module:pool
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn len(&self) -> usize {$/;"	P	implementation:Buf
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    len: usize,$/;"	m	struct:ReadBufParts
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:OrphanQueueImpl
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn len(&self) -> UnsignedShort {$/;"	P	implementation:Inner
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    len: AtomicUsize,$/;"	m	struct:Inject
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn len(&self) -> usize {$/;"	P	implementation:Inject
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Receiver
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Sender
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:JoinSet
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn len(&self) -> usize {$/;"	P	implementation:IdleNotifiedSet
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    len: usize,$/;"	m	struct:Page
length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    length: usize,$/;"	m	struct:IdleNotifiedSet
less	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn less(x: &[Limb], y: &[Limb]) -> bool {$/;"	f	module:large
level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    pub(crate) level: String,$/;"	m	struct:TracingEvent
level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    level: usize,$/;"	m	struct:Level
level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) level: usize,$/;"	m	struct:Expiration
level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^mod level;$/;"	n
level_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn level_for(&self, when: u64) -> usize {$/;"	P	implementation:Wheel
level_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^fn level_for(elapsed: u64, when: u64) -> usize {$/;"	f
level_range	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^fn level_range(level: usize) -> u64 {$/;"	f
levels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    levels: Vec<Level>,$/;"	m	struct:Wheel
lexical	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod lexical;$/;"	n
lib	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^mod lib {$/;"	n
lifetime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    lifetime: PhantomData<&'a T>,$/;"	m	struct:Ref
lifetime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    lifetime: PhantomData<&'a mut T>,$/;"	m	struct:Mut
lifetime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    lifetime: PhantomData<&'de ()>,$/;"	m	struct:MapDeserializer
lifetime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    lifetime: PhantomData<&'de ()>,$/;"	m	struct:StreamDeserializer
lifo_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    lifo_slot: Option<Notified>,$/;"	m	struct:Core
limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn limit(&self) -> u64 {$/;"	P	implementation:Take
limited_body_with_content_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn limited_body_with_content_length() {$/;"	f
limited_body_with_streaming_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn limited_body_with_streaming_body() {$/;"	f
line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    line: usize,$/;"	m	struct:ErrorImpl
line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub fn line(&self) -> usize {$/;"	P	implementation:Error
line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    line: usize,$/;"	m	struct:LineColIterator
line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    pub fn line(&self) -> usize {$/;"	f
line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    pub line: usize,$/;"	m	struct:Position
lineno	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        lineno: Option<u32>,$/;"	m	struct:capture::BacktraceSymbol
lines	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^pub(crate) fn lines<R>(reader: R) -> Lines<R>$/;"	f
linger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn linger(&self) -> io::Result<Option<Duration>> {$/;"	P	implementation:TcpSocket
linked_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod linked_list;$/;"	n
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    list: WaitList,$/;"	m	struct:Waiters
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    list: LinkedList<Task<S>, <Task<S> as Link>::Target>,$/;"	m	struct:OwnedTasksInner
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod list;$/;"	n
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    list: list::Rx<T>,$/;"	m	struct:RxFields
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^pub(super) mod list;$/;"	n
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    list: GuardedWaitList,$/;"	m	struct:NotifyWaitersList
listen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn listen(self, backlog: u32) -> io::Result<TcpListener> {$/;"	P	implementation:TcpSocket
listener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/mod.rs	/^pub(crate) mod listener;$/;"	n
listener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub(crate) mod listener;$/;"	n
lists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    lists: Arc<Lists<T>>,$/;"	m	struct:IdleNotifiedSet
ll_sem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    ll_sem: ll::Semaphore,$/;"	m	struct:Semaphore
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn load(&self, _: Ordering) -> u64 {$/;"	P	implementation:AtomicU64
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) fn load(&self, order: Ordering) -> u64 {$/;"	P	implementation:StaticAtomicU64
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn load(cell: &AtomicUsize, ordering: Ordering) -> State {$/;"	P	implementation:State
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn load(&self) -> Snapshot {$/;"	P	implementation:State
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn load(cell: &AtomicUsize, order: Ordering) -> State {$/;"	P	implementation:State
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn load(&self) -> StateSnapshot {$/;"	P	implementation:state::AtomicState
load_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn load_next(&self, ordering: Ordering) -> Option<NonNull<Block<T>>> {$/;"	P	implementation:Block
local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^pub(crate) fn local<T: 'static>() -> (Steal<T>, Local<T>) {$/;"	f
local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            local: &'static LocalKey<T>,$/;"	m	struct:LocalKey::scope_inner::Guard
local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    local: &'static LocalKey<T>,$/;"	m	struct:TaskLocalFuture
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:TcpListener
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:TcpSocket
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:ReadHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:WriteHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedReadHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedWriteHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:TcpStream
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixDatagram
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixListener
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:ReadHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:WriteHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedReadHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedWriteHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixStream
local_current_thread_scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn local_current_thread_scheduler() {$/;"	f	module:tests
local_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    local_queue: UnsafeCell<VecDeque<task::Notified<Arc<Shared>>>>,$/;"	m	struct:LocalState
local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    local_schedule_count: u64,$/;"	m	struct:MetricsBatch
local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) local_schedule_count: AtomicU64,$/;"	m	struct:WorkerMetrics
local_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    local_state: LocalState,$/;"	m	struct:Shared
location	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^    location: HeaderValue,$/;"	m	struct:Redirect
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^        pub(crate) fn lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:sync::Mutex
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^    pub(crate) fn lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:Mutex
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:Mutex
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(super) fn lock(&self) -> crate::loom::sync::MutexGuard<'_, InnerState> {$/;"	P	implementation:Inner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: &'a Mutex<T>,$/;"	m	struct:MutexGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: &'a Mutex<T>,$/;"	m	struct:MutexGuardInner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: Arc<Mutex<T>>,$/;"	m	struct:OwnedMappedMutexGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: Arc<Mutex<T>>,$/;"	m	struct:OwnedMappedMutexGuardInner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: Arc<Mutex<T>>,$/;"	m	struct:OwnedMutexGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: Arc<Mutex<T>>,$/;"	m	struct:OwnedMutexGuardInner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub async fn lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:Mutex
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    lock: Arc<RwLock<T>>,$/;"	m	struct:Inner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub(super) lock: Arc<RwLock<T>>,$/;"	m	struct:OwnedRwLockReadGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    lock: Arc<RwLock<T>>,$/;"	m	struct:Inner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) lock: Arc<RwLock<T>>,$/;"	m	struct:OwnedRwLockWriteGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    lock: Arc<RwLock<T>>,$/;"	m	struct:Inner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) lock: Arc<RwLock<T>>,$/;"	m	struct:OwnedRwLockMappedWriteGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    lock: &'a TryLock<T>,$/;"	m	struct:LockGuard
lock_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub async fn lock_owned(self: Arc<Self>) -> OwnedMutexGuard<T> {$/;"	P	implementation:Mutex
locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    locked: AtomicBool,$/;"	m	struct:Inner
locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    locked: AtomicBool,$/;"	m	struct:TryLock
logging_rejections	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn logging_rejections() {$/;"	f
long_mul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn long_mul(x: &[Limb], y: &[Limb]) -> Vec<Limb> {$/;"	f	module:large
loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^mod loom;$/;"	n
loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod loom;$/;"	n
lower_n_halfway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn lower_n_halfway(n: u64) -> u64 {$/;"	f
lower_n_mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn lower_n_mask(n: u64) -> u64 {$/;"	f
ls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        ls: Option<crate::task::LocalSet>,$/;"	m	struct:test_combination::Rt
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod macros;$/;"	n
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^pub(crate) mod macros;$/;"	n
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^mod macros;$/;"	n
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod macros;$/;"	n
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^mod macros;$/;"	n
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod macros;$/;"	n
main	/home/trey/code/sqlx-crud/examples/axum/src/main.rs	/^async fn main() -> anyhow::Result<()> {$/;"	f
maintenance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn maintenance(&mut self, worker: &Worker) {$/;"	P	implementation:Core
maintenance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn maintenance(&self, mut core: Box<Core>) -> Box<Core> {$/;"	P	implementation:Context
make_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^fn make_error(mut msg: String) -> Error {$/;"	f
make_fixed_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^fn make_fixed_size<T>(buffer: Box<[T]>) -> Box<[T; LOCAL_QUEUE_CAPACITY]> {$/;"	f
make_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^async fn make_future(mut rx: Receiver<()>) -> Receiver<()> {$/;"	f
make_writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    fn make_writer(&'a self) -> Self::Writer {$/;"	P	implementation:TestMakeWriter
mandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    mandatory: Mandatory,$/;"	m	struct:Task
mant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub mant: &'static [u64],$/;"	m	struct:ExtendedFloatArray
mant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub mant: u64,$/;"	m	struct:ExtendedFloat
mantissa	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn mantissa(self) -> Self::Unsigned {$/;"	P	interface:Float
mantissa_exponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/exponent.rs	/^pub(crate) fn mantissa_exponent(exponent: i32, fraction_digits: usize, truncated: usize) -> i32 /;"	f
mantissa_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn mantissa_limit() -> i32 {$/;"	P	implementation:f32
mantissa_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn mantissa_limit() -> i32 {$/;"	P	implementation:f64
mantissa_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn mantissa_limit() -> i32;$/;"	P	interface:Float
many_ors	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn many_ors() {$/;"	f
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) fn map<F, B2, E2>(self, f: F) -> BoxedIntoRoute<S, B2, E2>$/;"	P	implementation:BoxedIntoRoute
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn map<F, B2, E2>(self, f: F) -> MethodEndpoint<S, B2, E2>$/;"	f
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn map<F, B2, E2>(self, f: F) -> Fallback<S, B2, E2>$/;"	f
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        map: A,$/;"	m	struct:private::MapAsEnum
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    map: A,$/;"	m	struct:MapAccessDeserializer
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeStructVariantAsMapValue
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    map: &'a mut M,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^pub mod map;$/;"	n
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    map: MapImpl<K, V>,$/;"	m	struct:Map
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    map: Map<String, Value>,$/;"	m	struct:SerializeStructVariant
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn map<S, F>(mut this: Self, f: F) -> OwnedMappedMutexGuard<T, S>$/;"	P	implementation:OwnedMappedMutexGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn map<U, F>(mut this: Self, f: F) -> MappedMutexGuard<'a, U>$/;"	P	implementation:MappedMutexGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn map<U, F>(mut this: Self, f: F) -> MappedMutexGuard<'a, U>$/;"	P	implementation:MutexGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn map<U, F>(mut this: Self, f: F) -> OwnedMappedMutexGuard<T, U>$/;"	P	implementation:OwnedMutexGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub fn map<F, V: ?Sized>(this: Self, f: F) -> OwnedRwLockReadGuard<T, V>$/;"	P	implementation:OwnedRwLockReadGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn map<F, U: ?Sized>(mut this: Self, f: F) -> OwnedRwLockMappedWriteGuard<T, U>$/;"	P	implementation:OwnedRwLockWriteGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub fn map<F, V: ?Sized>(mut this: Self, f: F) -> OwnedRwLockMappedWriteGuard<T, V>$/;"	P	implementation:OwnedRwLockMappedWriteGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub fn map<F, U: ?Sized>(this: Self, f: F) -> RwLockReadGuard<'a, U>$/;"	P	implementation:RwLockReadGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn map<F, U: ?Sized>(mut this: Self, f: F) -> RwLockMappedWriteGuard<'a, U>$/;"	P	implementation:RwLockWriteGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub fn map<F, U: ?Sized>(mut this: Self, f: F) -> RwLockMappedWriteGuard<'a, U>$/;"	P	implementation:RwLockMappedWriteGuard
map_as_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f	module:private
map_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! map_impl {$/;"	M
map_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	M
map_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^pub fn map_request<F, T>(f: F) -> MapRequestLayer<F, (), T> {$/;"	f
map_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/mod.rs	/^mod map_request;$/;"	n
map_request_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^pub fn map_request_with_state<F, S, T>(state: S, f: F) -> MapRequestLayer<F, S, T> {$/;"	f
map_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^pub fn map_response<F, T>(f: F) -> MapResponseLayer<F, (), T> {$/;"	f
map_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/mod.rs	/^mod map_response;$/;"	n
map_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    fn map_response<B>(_res: Response<B>) -> Result<Response<B>, impl IntoResponse> {$/;"	f	function:layer_response_into_response
map_response_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^pub fn map_response_with_state<F, S, T>(state: S, f: F) -> MapResponseLayer<F, S, T> {$/;"	f
mark_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn mark_pending(&self, not_after: u64) -> Result<(), u64> {$/;"	P	implementation:TimerHandle
mark_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn mark_pending(&self, not_after: u64) -> Result<(), u64> {$/;"	P	implementation:StateCell
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            marker: PhantomData<T>,$/;"	m	struct:deserialize::VecVisitor
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    marker: PhantomData<A>,$/;"	m	struct:ArrayVisitor
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:OptionVisitor
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:PhantomDataVisitor
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        marker: PhantomData<E>,$/;"	m	struct:private::UnitOnly
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedBytesDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedStrDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BytesDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:CowStrDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:NeverDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:SeqDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StringDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:U32Deserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:UnitDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedStrDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    marker: PhantomData<&'a mut T>,$/;"	m	struct:MappedMutexGuard
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub(super) marker: PhantomData<&'a T>,$/;"	m	struct:RwLockReadGuard
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) marker: PhantomData<&'a mut T>,$/;"	m	struct:RwLockWriteGuard
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) marker: PhantomData<&'a mut T>,$/;"	m	struct:RwLockMappedWriteGuard
mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub(crate) fn mask(self) -> Ready {$/;"	P	implementation:Interest
mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(super) fn mask(self) -> Ready {$/;"	P	implementation:Direction
mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    mask: usize,$/;"	m	struct:Shared
mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    mask: usize,$/;"	m	struct:Pack
mask_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^pub(crate) const fn mask_for(n: u32) -> usize {$/;"	f
match_borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    fn match_borrow(self) -> Self::Matched {$/;"	P	interface:MatchBorrowExt
matched_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^pub(crate) mod matched_path;$/;"	n
math	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^pub(crate) mod math;$/;"	n
max_blocking_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    max_blocking_threads: usize,$/;"	m	struct:Builder
max_blocking_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn max_blocking_threads(&mut self, val: usize) -> &mut Self {$/;"	P	implementation:Builder
max_buf_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    max_buf_size: usize,$/;"	m	struct:Pipe
max_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn max_capacity(&self) -> usize {$/;"	P	implementation:Sender
max_frame_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn max_frame_size(mut self, max: usize) -> Self {$/;"	P	implementation:WebSocketUpgrade
max_instances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    max_instances: u32,$/;"	m	struct:ServerOptions
max_instances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn max_instances(&mut self, instances: usize) -> &mut Self {$/;"	P	implementation:ServerOptions
max_instances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub max_instances: u32,$/;"	m	struct:PipeInfo
max_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    max_interval: Duration,$/;"	m	struct:KeepAlive
max_message_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn max_message_size(mut self, max: usize) -> Self {$/;"	P	implementation:WebSocketUpgrade
max_permits_doesnt_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn max_permits_doesnt_panic() {$/;"	f
max_send_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn max_send_queue(mut self, max: usize) -> Self {$/;"	P	implementation:WebSocketUpgrade
max_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) const fn max_value(&self) -> usize {$/;"	P	implementation:Pack
maybe_changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^fn maybe_changed<T>($/;"	f
maybe_done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^pub fn maybe_done<Fut: Future>(future: Fut) -> MaybeDone<Fut> {$/;"	f
maybe_done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/mod.rs	/^pub(crate) mod maybe_done;$/;"	n
memchr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^pub(crate) fn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
memchr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod memchr;$/;"	n
memchr_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^    fn memchr_all() {$/;"	f	module:tests
memchr_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^    fn memchr_empty() {$/;"	f	module:tests
memchr_split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^fn memchr_split(needle: u8, haystack: &[u8]) -> MemchrSplit<'_> {$/;"	f
memchr_spliting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn memchr_spliting() {$/;"	f	module:tests
memchr_test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^    fn memchr_test() {$/;"	f	module:tests
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn merge() {$/;"	f	module:tests
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn merge(self, other: Self) -> Self {$/;"	P	implementation:AllowHeader
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn merge(self, other: MethodRouter<S, B, E>) -> Self {$/;"	f
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn merge(self, other: Self) -> Option<Self> {$/;"	f
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn merge<R>(mut self, other: R) -> Self$/;"	f
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn merge(&mut self, other: PathRouter<S, B>) -> Result<(), Cow<'static, str>> {$/;"	f
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^mod merge;$/;"	n
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn merge(&mut self, mut other: Self) {$/;"	P	implementation:OwnedSemaphorePermit
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn merge(&mut self, mut other: Self) {$/;"	P	implementation:SemaphorePermit
merge_accessing_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn merge_accessing_state() {$/;"	f	module:tests
merge_for_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub(crate) fn merge_for_path($/;"	f
merge_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^        fn merge_inner<S, B, E>($/;"	f	function:merge_for_path
merging_routers_with_fallbacks_panics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn merging_routers_with_fallbacks_panics() {$/;"	f
merging_routers_with_same_paths_but_different_methods	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn merging_routers_with_same_paths_but_different_methods() {$/;"	f
merging_with_overlapping_method_routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^fn merging_with_overlapping_method_routes() {$/;"	f
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        message: String,$/;"	m	struct:logging_rejections::RejectionEvent
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn metadata(&self) -> io::Result<Metadata> {$/;"	P	implementation:File
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/metadata.rs	/^pub async fn metadata(path: impl AsRef<Path>) -> io::Result<Metadata> {$/;"	f
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod metadata;$/;"	n
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub async fn metadata(&self) -> io::Result<Metadata> {$/;"	P	implementation:DirEntry
method	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^    method: Method,$/;"	m	struct:NoMatchingMethodFilter
method	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^    pub fn method(&self) -> &Method {$/;"	P	implementation:NoMatchingMethodFilter
method_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^mod method_filter;$/;"	n
method_not_allowed_by_default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn method_not_allowed_by_default() {$/;"	f	module:tests
method_router_fallback_with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^fn method_router_fallback_with_state() {$/;"	f
method_routing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^pub mod method_routing;$/;"	n
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    metrics: SpawnerMetrics,$/;"	m	struct:Inner
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) metrics: IoDriverMetrics,$/;"	m	struct:Handle
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^mod metrics;$/;"	n
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    metrics: MetricsBatch,$/;"	m	struct:Core
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    metrics: MetricsBatch,$/;"	m	struct:Core
middleware	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^pub mod middleware;$/;"	n
middleware_applies_to_routes_above	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn middleware_applies_to_routes_above() {$/;"	f
middleware_on_single_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn middleware_on_single_route() {$/;"	f
middleware_still_run_for_unmatched_requests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn middleware_still_run_for_unmatched_requests() {$/;"	f
middleware_that_return_early	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn middleware_that_return_early() {$/;"	f
might_be_registered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn might_be_registered(&self) -> bool {$/;"	P	implementation:StateCell
might_be_registered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn might_be_registered(&self) -> bool {$/;"	P	implementation:TimerShared
migrate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! migrate {$/;"	M
mio_windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub(super) mod mio_windows {$/;"	n	module:doc
missed_tick_behavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    missed_tick_behavior: MissedTickBehavior,$/;"	m	struct:Interval
missed_tick_behavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn missed_tick_behavior(&self) -> MissedTickBehavior {$/;"	P	implementation:Interval
missing_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
mk_pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^fn mk_pool(num_threads: usize) -> Runtime {$/;"	f
mk_runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn mk_runtime(num_threads: usize) -> Runtime {$/;"	f
mk_runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_yield.rs	/^fn mk_runtime(num_threads: usize) -> Runtime {$/;"	f
mock_connect_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    async fn mock_connect_info() {$/;"	f	module:tests
mock_open_options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^mod mock_open_options;$/;"	n
mocked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mod.rs	/^mod mocked;$/;"	n
mocks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod mocks;$/;"	n
mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    pub(super) mode: Option<u32>,$/;"	m	struct:DirBuilder
mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub mode: PipeMode,$/;"	m	struct:PipeInfo
model	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn model(f: impl Fn() + Send + Sync + 'static) {$/;"	f
moderate_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/algorithm.rs	/^pub(crate) fn moderate_path<F>($/;"	f
move_to_new_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe fn move_to_new_list<T>(from: &mut LinkedList<T>, to: &mut LinkedList<T>) {$/;"	f
mr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    mr: u32,$/;"	m	struct:RwLock
msg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn msg<M>(message: M) -> Self$/;"	P	implementation:Error
mul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub(crate) fn mul(&self, b: &ExtendedFloat) -> ExtendedFloat {$/;"	P	implementation:ExtendedFloat
mul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn mul(x: &[Limb], y: Limb) -> Vec<Limb> {$/;"	f	module:small
mul	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn mul(x: Limb, y: Limb, carry: Limb) -> (Limb, Limb) {$/;"	f	module:scalar
multi_stealer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^fn multi_stealer() {$/;"	f
multicast_loop_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn multicast_loop_v4(&self) -> io::Result<bool> {$/;"	P	implementation:UdpSocket
multicast_loop_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn multicast_loop_v6(&self) -> io::Result<bool> {$/;"	P	implementation:UdpSocket
multicast_ttl_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn multicast_ttl_v4(&self) -> io::Result<u32> {$/;"	P	implementation:UdpSocket
multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^pub mod multipart;$/;"	n
multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn multipart(mut self, form: reqwest::multipart::Form) -> Self {$/;"	P	implementation:RequestBuilder
multiple_methods_for_one_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn multiple_methods_for_one_handler() {$/;"	f
multiple_ors_balanced_differently	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn multiple_ors_balanced_differently() {$/;"	f
multiple_top_level_nests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn multiple_top_level_nests() {$/;"	f
multiply_exponent_extended	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/algorithm.rs	/^fn multiply_exponent_extended<F>(fp: &mut ExtendedFloat, exponent: i32, truncated: bool) -> bool$/;"	f
must_use	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^    pub fn must_use(error: Error) -> Error {$/;"	f	module:__private
mut_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^fn mut_load(this: &mut AtomicUsize) -> usize {$/;"	f
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod mutex;$/;"	n
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    mutex: Mutex<()>,$/;"	m	struct:Inner
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    mutex: Mutex<()>,$/;"	m	struct:Inner
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn mutex(this: &Self) -> &'a Mutex<T> {$/;"	P	implementation:MutexGuard
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn mutex(this: &Self) -> &Arc<Mutex<T>> {$/;"	P	implementation:OwnedMutexGuard
my_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    my_list: UnsafeCell<List>,$/;"	m	struct:ListEntry
my_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    async fn my_task(mut signal: Signals, task: CombiTask, out: CombiOutput) -> Output {$/;"	f	function:test_combination
n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^            n: i32,$/;"	m	struct:tests::correct_rejection_status_code::Params
n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    n: N,$/;"	m	struct:Number
n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    n: usize,$/;"	m	struct:Barrier
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        name: Option<Vec<u8>>,$/;"	m	struct:capture::BacktraceSymbol
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:Field
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    name: &'static http::header::HeaderName,$/;"	m	struct:TypedHeaderRejection
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    pub fn name(&self) -> &http::header::HeaderName {$/;"	P	implementation:TypedHeaderRejection
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        name: &'static str,$/;"	m	struct:content::TagOrContentVisitor
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStruct
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariant
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariantAsMapValue
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleStruct
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariant
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    name: &'static str,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    name: String,$/;"	m	struct:SerializeStructVariant
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    name: String,$/;"	m	struct:SerializeTupleVariant
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    name: Option<&'a str>,$/;"	m	struct:Builder
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn name(&self, name: &'a str) -> Self {$/;"	P	implementation:Builder
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn name(self, name: &'a str) -> Self {$/;"	P	implementation:Builder
named_pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/mod.rs	/^pub mod named_pipe;$/;"	n
named_pipe_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^unsafe fn named_pipe_info(handle: RawHandle) -> io::Result<PipeInfo> {$/;"	f
names	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    names: &'static [&'static str],$/;"	m	struct:OneOf
nearest_error_is_accurate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^fn nearest_error_is_accurate(errors: u64, fp: &ExtendedFloat, extrabits: u64) -> bool {$/;"	f
need_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    need_flush: bool,$/;"	m	struct:Blocking
need_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    need_flush: bool,$/;"	m	struct:CopyBuffer
needle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    needle: u8,$/;"	m	struct:MemchrSplit
nest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn nest(mut self, path: &str, router: Router<S, B>) -> Self {$/;"	f
nest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn nest($/;"	f
nest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn nest() {$/;"	f
nest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^mod nest;$/;"	n
nest_at_capture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nest_at_capture() {$/;"	f
nest_cannot_contain_wildcards	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nest_cannot_contain_wildcards() {$/;"	f
nest_fallback_on_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn nest_fallback_on_inner() {$/;"	f
nest_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn nest_service<T>(mut self, path: &str, service: T) -> Self$/;"	f
nest_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn nest_service<T>(&mut self, path: &str, svc: T) -> Result<(), Cow<'static, str>/;"	f
nest_static_file_server	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nest_static_file_server() {$/;"	f
nest_with_and_without_trailing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nest_with_and_without_trailing() {$/;"	f
nested_at_root_with_other_routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^fn nested_at_root_with_other_routes() {$/;"	f
nested_multiple_routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nested_multiple_routes() {$/;"	f
nested_or	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn nested_or() {$/;"	f
nested_route_test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^macro_rules! nested_route_test {$/;"	M
nested_router_inherits_fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn nested_router_inherits_fallback() {$/;"	f
nested_service_at_root_with_other_routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^fn nested_service_at_root_with_other_routes() {$/;"	f
nested_service_sees_stripped_uri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nested_service_sees_stripped_uri() {$/;"	f
nested_url_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nested_url_extractor() {$/;"	f
nested_url_original_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nested_url_original_extractor() {$/;"	f
nesting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn nesting() {$/;"	f
nesting_and_seeing_the_right_uri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn nesting_and_seeing_the_right_uri() {$/;"	f
nesting_and_seeing_the_right_uri_at_more_levels_of_nesting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn nesting_and_seeing_the_right_uri_at_more_levels_of_nesting() {$/;"	f
nesting_and_seeing_the_right_uri_ors_with_multi_segment_uris	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn nesting_and_seeing_the_right_uri_ors_with_multi_segment_uris() {$/;"	f
nesting_and_seeing_the_right_uri_ors_with_nesting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn nesting_and_seeing_the_right_uri_ors_with_nesting() {$/;"	f
nesting_apps	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nesting_apps() {$/;"	f
nesting_handler_at_root	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nesting_handler_at_root() {$/;"	f
nesting_router_at_empty_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nesting_router_at_empty_path() {$/;"	f
nesting_router_at_root	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nesting_router_at_root() {$/;"	f
nesting_with_root_inner_router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn nesting_with_root_inner_router() {$/;"	f
net	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod net;$/;"	n
nevents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    nevents: usize,$/;"	m	struct:Builder
nevents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) nevents: usize,$/;"	m	struct:Cfg
never	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    never: !,$/;"	m	struct:NeverDeserializer
never_called	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^    async fn never_called<B>(_: Request<B>) -> Request<B> {$/;"	f	function:with_middleware_on_inner_fallback
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn new(capture: Capture) -> Self {$/;"	P	implementation:capture::LazilyResolvedCapture
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    pub fn new(head: &'a (dyn StdError + 'static)) -> Self {$/;"	P	implementation:Chain
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    fn new() -> Self {$/;"	P	implementation:Buf
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn new<E>(error: E) -> Self$/;"	P	implementation:Error
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^    pub fn new(self, error: Box<dyn StdError + Send + Sync>) -> Error {$/;"	P	implementation:Boxed
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^    pub fn new<E>(self, error: E) -> Error$/;"	P	implementation:Trait
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/kind.rs	/^    pub fn new<M>(self, message: M) -> Error$/;"	P	implementation:Adhoc
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn new(ptr: &'a T) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn new(ptr: &'a mut T) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub fn new(ptr: Box<T>) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    pub fn new(stream: S) -> Self$/;"	P	implementation:StreamBody
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    pub fn new(f: F) -> Self {$/;"	P	implementation:HandleErrorLayer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    pub fn new(inner: S, f: F) -> Self {$/;"	P	implementation:HandleError
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    pub(crate) fn new(svc: S) -> Self {$/;"	P	implementation:IntoMakeServiceWithConnectInfo
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    pub(crate) fn new(url_params: &'de [(Arc<str>, PercentDecodedStr)]) -> Self {$/;"	P	implementation:PathDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub(super) fn new(kind: ErrorKind) -> Self {$/;"	P	implementation:PathDeserializationError
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/future.rs	/^    pub(super) fn new($/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    pub(crate) fn new(handler: H) -> Self {$/;"	P	implementation:IntoServiceStateInExtension
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    pub(super) fn new(handler: H, state: S) -> Self {$/;"	P	implementation:HandlerService
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn new(keep_alive: KeepAlive) -> Self {$/;"	P	implementation:KeepAliveStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn new() -> Self {$/;"	P	implementation:KeepAlive
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn new(stream: S) -> Self$/;"	P	implementation:Sse
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^    pub(crate) fn new(svc: S) -> Self {$/;"	P	implementation:IntoMakeService
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    pub(crate) fn new(future: RouteFuture<B, Infallible>) -> Self {$/;"	P	implementation:InfallibleRouteFuture
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    pub(crate) fn new<T>(svc: T) -> Self$/;"	P	implementation:Route
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    pub(super) fn new(inner: S, prefix: &str) -> Self {$/;"	P	implementation:StripPrefix
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn new<S, ResBody>(svc: S) -> Self$/;"	P	implementation:TestClient
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    fn new() -> (Self, Handle) {$/;"	P	implementation:TestMakeWriter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^    pub(crate) fn new<S>(s: S) -> Option<Self>$/;"	P	implementation:PercentDecodedStr
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/format.rs	/^    pub fn new(bytes: &'a mut [u8]) -> Self {$/;"	P	implementation:Buf
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn new() -> Self {$/;"	P	implementation:ArrayVisitor
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn new(expecting: &'static str) -> Self {$/;"	P	implementation:FromStrVisitor
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new() -> Self {$/;"	P	implementation:UnitDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(access: A) -> Self {$/;"	P	implementation:EnumAccessDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	P	implementation:MapAccessDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	P	implementation:SeqAccessDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(value: &'a [u8]) -> Self {$/;"	P	implementation:BytesDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(value: &'a str) -> Self {$/;"	P	implementation:StrDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> Self {$/;"	P	implementation:BorrowedBytesDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	P	implementation:BorrowedStrDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(value: Cow<'a, str>) -> Self {$/;"	P	implementation:CowStrDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(value: String) -> Self {$/;"	P	implementation:StringDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn new(value: u32) -> Self {$/;"	P	implementation:U32Deserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn new() -> Self {$/;"	P	implementation:content::ContentVisitor
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f	module:content
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f	module:content
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	P	implementation:content::TagOrContentVisitor
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f	module:content
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f	module:content
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	P	implementation:content::ContentRefDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	P	implementation:content::ContentDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub fn new(name: &'static str, expecting: &'static str) -> Self {$/;"	P	implementation:content::TaggedContentVisitor
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::UntaggedUnitVisitor
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, /;"	f	module:content
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatMapAccess
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatStructAccess
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	P	implementation:content::ContentSerializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeStructVariantAsMapValue
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeTupleVariantAsMapValue
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M>/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	P	implementation:MapAccess
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	P	implementation:SeqAccess
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	P	implementation:UnitVariantAccess
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn new(de: &'a mut Deserializer<R>) -> Self {$/;"	P	implementation:VariantAccess
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    pub fn new(read: R) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    pub(crate) fn new(_kind: ErrorKind, _error: &'static str) -> Error {$/;"	P	implementation:Error
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    pub fn new(iter: I) -> LineColIterator<I> {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Map
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    pub fn new(reader: R) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    pub fn new(s: &'a str) -> Self {$/;"	P	implementation:StrRead
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    pub fn new(slice: &'a [u8]) -> Self {$/;"	P	implementation:SliceRead
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    pub fn new(writer: W) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn new(map: &'de Map<String, Value>) -> Self {$/;"	P	implementation:MapRefDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn new(map: Map<String, Value>) -> Self {$/;"	P	implementation:MapDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn new(slice: &'de [Value]) -> Self {$/;"	P	implementation:SeqRefDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn new(value: Cow<'de, str>) -> Self {$/;"	P	implementation:BorrowedCowStrDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn new(vec: Vec<Value>) -> Self {$/;"	P	implementation:SeqDeserializer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    pub fn new(_arg: &U) -> Self {$/;"	P	implementation:WrapSame
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    pub fn new(t: T, _u: &U) -> (T, Self) {$/;"	P	implementation:MatchBorrow
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    pub fn new() -> Self {$/;"	P	implementation:DirBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn new() -> OpenOptions {$/;"	P	implementation:OpenOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn new(inner: T) -> io::Result<Self>$/;"	P	implementation:AsyncFd
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn new(io: E) -> io::Result<Self> {$/;"	P	implementation:PollEvented
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn new(buf: &'a mut [u8]) -> ReadBuf<'a> {$/;"	P	implementation:ReadBuf
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn new() -> Self {$/;"	P	implementation:tests::LoggingMockWriter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    pub(crate) fn new(inner: W) -> Self {$/;"	P	implementation:SplitByUtf8BoundaryIfWindows
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn new(inner: R) -> Self {$/;"	P	implementation:BufReader
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn new(stream: RW) -> BufStream<RW> {$/;"	P	implementation:BufStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn new(inner: W) -> Self {$/;"	P	implementation:BufWriter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    pub(super) fn new() -> Self {$/;"	P	implementation:CopyBuffer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn new(max_buf_size: usize) -> Self {$/;"	P	implementation:Pipe
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn new(mut vec: V) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^        pub(crate) fn new(t: T) -> Mutex<T> {$/;"	P	implementation:sync::Mutex
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    pub(crate) const fn new(val: u16) -> AtomicU16 {$/;"	P	implementation:AtomicU16
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    pub(crate) const fn new(val: u32) -> AtomicU32 {$/;"	P	implementation:AtomicU32
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_const_new.rs	/^    pub(crate) const fn new(val: u64) -> Self {$/;"	P	implementation:AtomicU64
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) const fn new(val: u64) -> StaticAtomicU64 {$/;"	P	implementation:StaticAtomicU64
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) fn new(val: u64) -> Self {$/;"	P	implementation:AtomicU64
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    pub(crate) const fn new(val: usize) -> AtomicUsize {$/;"	P	implementation:AtomicUsize
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^    pub(crate) fn new(t: T) -> Mutex<T> {$/;"	P	implementation:Mutex
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn new() -> Condvar {$/;"	P	implementation:Condvar
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn new(t: T) -> Mutex<T> {$/;"	P	implementation:Mutex
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn new(t: T) -> RwLock<T> {$/;"	P	implementation:RwLock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^    pub(crate) const fn new(data: T) -> UnsafeCell<T> {$/;"	P	implementation:UnsafeCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn new(domain: socket2::Domain) -> io::Result<TcpSocket> {$/;"	P	implementation:TcpSocket
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(crate) fn new(connected: mio::net::TcpStream) -> io::Result<TcpStream> {$/;"	P	implementation:TcpStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn new(socket: mio::net::UdpSocket) -> io::Result<UdpSocket> {$/;"	P	implementation:UdpSocket
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn new(socket: mio::net::UnixDatagram) -> io::Result<UnixDatagram> {$/;"	P	implementation:UnixDatagram
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn new() -> OpenOptions {$/;"	P	implementation:OpenOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(crate) fn new(stream: mio::net::UnixStream) -> io::Result<UnixStream> {$/;"	P	implementation:UnixStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ClientOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn new() -> ServerOptions {$/;"	P	implementation:ServerOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn new() -> Self {$/;"	P	implementation:test::Mock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn new<S: AsRef<OsStr>>(program: S) -> Command {$/;"	P	implementation:Command
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn new(num_wait_until_status: usize) -> Self {$/;"	P	implementation:test::MockWait
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        pub(crate) fn new() -> Self {$/;"	P	implementation:test::MockQueue
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn new(status: ExitStatus, num_wait_until_status: usize) -> Self {$/;"	P	implementation:test::MockWait
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn new(values: Vec<Option<()>>) -> Self {$/;"	P	implementation:test::MockStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    pub(crate) fn new(inner: W, orphan_queue: Q, signal: S) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn new(builder: &Builder, thread_cap: usize) -> BlockingPool {$/;"	P	implementation:BlockingPool
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn new(task: task::UnownedTask<BlockingSchedule>, mandatory: Mandatory) -> Task {$/;"	P	implementation:Task
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^    pub(crate) fn new(handle: &Handle) -> Self {$/;"	P	implementation:BlockingSchedule
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^    pub(crate) fn new(func: T) -> BlockingTask<T> {$/;"	P	implementation:BlockingTask
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(crate) fn new(kind: Kind, global_queue_interval: u32, event_interval: u32) -> Builder {$/;"	P	implementation:Builder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    pub(crate) fn new() -> Defer {$/;"	P	implementation:Defer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn new(cfg: Cfg) -> io::Result<(Self, Handle)> {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn new(allocator: slab::Allocator<ScheduledIo>) -> Self {$/;"	P	implementation:IoDispatcher
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn new(nevents: usize) -> io::Result<(Driver, Handle)> {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn new() -> MetricsBatch {$/;"	P	implementation:MetricsBatch
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:MetricsBatch
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:SchedulerMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:WorkerMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub(crate) fn new(handle: Handle) -> RuntimeMetrics {$/;"	P	implementation:RuntimeMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(crate) fn new() -> SchedulerMetrics {$/;"	P	implementation:SchedulerMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) fn new() -> WorkerMetrics {$/;"	P	implementation:WorkerMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn new() -> CachedParkThread {$/;"	P	implementation:CachedParkThread
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:ParkThread
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    pub(crate) fn new(park: SignalDriver) -> Self {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn new($/;"	P	implementation:CurrentThread
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn new(num_workers: usize) -> State {$/;"	P	implementation:State
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn new(num_workers: usize) -> Idle {$/;"	P	implementation:Idle
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^    pub(crate) fn new($/;"	P	implementation:MultiThread
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn new(driver: Driver) -> Parker {$/;"	P	implementation:Parker
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn new(io: io::Driver, io_handle: &io::Handle) -> std_io::Result<Self> {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    pub(super) fn new(raw: RawTask) -> Self {$/;"	P	implementation:AbortHandle
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn new(future: T, scheduler: S, state: State, task_id: Id) -> Box<Cell<T, S>> {$/;"	P	implementation:Cell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn new() -> Inject<T> {$/;"	P	implementation:Inject
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub(super) fn new(raw: RawTask) -> JoinHandle<T> {$/;"	P	implementation:JoinHandle
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:LocalOwnedTasks
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:OwnedTasks
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn new<T, S>(task: T, scheduler: S, id: Id) -> RawTask$/;"	P	implementation:RawTask
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn new() -> State {$/;"	P	implementation:State
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        pub(super) fn new(value: T) -> Self {$/;"	P	implementation:atomic_take::AtomicTake
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn new(sender: oneshot::Sender<T>) -> Self {$/;"	P	implementation:AtomicOneshot
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn new() -> (Self, AssertDropHandle) {$/;"	P	implementation:AssertDrop
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn new(rt: CombiRuntime, ls: CombiLocalSet) -> Self {$/;"	P	implementation:test_combination::Rt
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn new() -> Self {$/;"	P	implementation:StateCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn new(handle: &scheduler::Handle, deadline: Instant) -> Self {$/;"	P	implementation:TimerEntry
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn new() -> Self {$/;"	P	implementation:TimerShared
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(crate) fn new(park: IoStack, clock: &Clock) -> (Driver, Handle) {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn new(clock: &Clock) -> Self {$/;"	P	implementation:TimeSource
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) fn new(level: usize) -> Level {$/;"	P	implementation:Level
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn new() -> Wheel {$/;"	P	implementation:Wheel
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^    fn new(rx: Receiver<()>) -> Self {$/;"	P	implementation:RxFuture
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn new(storage: S) -> Self {$/;"	P	implementation:Registry
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn new<F>(future: F) -> Self$/;"	P	implementation:ReusableBoxFuture
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^fn new(signum: u32) -> io::Result<RxFuture> {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    pub fn new(mut n: usize) -> Barrier {$/;"	P	implementation:Barrier
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn new($/;"	P	implementation:Waiter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn new(semaphore: &'a Semaphore, num_permits: u32) -> Self {$/;"	P	implementation:Acquire
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn new(permits: usize) -> Self {$/;"	P	implementation:Semaphore
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn new(receiver: &'a mut Receiver<T>) -> Recv<'a, T> {$/;"	P	implementation:Recv
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn new(start_index: usize) -> Box<Block<T>> {$/;"	P	implementation:Block
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub(crate) fn new(chan: chan::Rx<T, Semaphore>) -> Receiver<T> {$/;"	P	implementation:Receiver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub(crate) fn new(chan: chan::Tx<T, Semaphore>) -> Sender<T> {$/;"	P	implementation:Sender
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn new(chan: Arc<Chan<T, S>>) -> Rx<T, S> {$/;"	P	implementation:Rx
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn new(chan: Arc<Chan<T, S>>) -> Tx<T, S> {$/;"	P	implementation:Tx
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub(crate) fn new(chan: chan::Rx<T, Semaphore>) -> UnboundedReceiver<T> {$/;"	P	implementation:UnboundedReceiver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub(crate) fn new(chan: chan::Tx<T, Semaphore>) -> UnboundedSender<T> {$/;"	P	implementation:UnboundedSender
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn new(t: T) -> Self$/;"	P	implementation:Mutex
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn new($/;"	P	implementation:NotifyWaitersList
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn new() -> Waiter {$/;"	P	implementation:Waiter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn new() -> Notify {$/;"	P	implementation:Notify
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn new() -> Self {$/;"	P	implementation:OnceCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn new() -> State {$/;"	P	implementation:State
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn new(value: T) -> RwLock<T>$/;"	P	implementation:RwLock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn new(permits: usize) -> Self {$/;"	P	implementation:Semaphore
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    pub(crate) fn new() -> AtomicWaker {$/;"	P	implementation:AtomicWaker
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^    fn new(tx: &'a mut oneshot::Sender<i32>) -> Self {$/;"	P	implementation:OnClose
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn new() -> Self {$/;"	P	implementation:big_notify::BigNotify
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn new() -> Self {$/;"	P	implementation:state::AtomicState
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Builder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn new() -> Self {$/;"	P	implementation:JoinSet
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub fn new() -> LocalSet {$/;"	P	implementation:LocalSet
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:Elapsed
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    pub(crate) fn new(data: Option<Box<T>>) -> AtomicCell<T> {$/;"	P	implementation:AtomicCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:IdleNotifiedSet
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) const fn new() -> LinkedList<L, T> {$/;"	P	implementation:LinkedList
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn new() -> Pointers<T> {$/;"	P	implementation:Pointers
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    pub(crate) const fn new() -> Self {$/;"	P	implementation:OnceCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:RngSeed
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    pub(crate) fn new(seed: RngSeed) -> FastRand {$/;"	P	implementation:FastRand
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) const fn new() -> Self {$/;"	P	implementation:RcCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:RcCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn new() -> Slab<T> {$/;"	P	implementation:Slab
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^    pub(crate) fn new(value: T) -> Self {$/;"	P	implementation:SyncWrapper
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    pub(crate) const fn new(data: T) -> TryLock<T> {$/;"	P	implementation:TryLock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    pub(crate) fn new(data: T) -> TryLock<T> {$/;"	P	implementation:TryLock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^macro_rules! new {$/;"	M
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:WakeList
new_current_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn new_current_thread() -> Builder {$/;"	P	implementation:Builder
new_for_aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn new_for_aio(io: E) -> io::Result<Self> {$/;"	P	implementation:Aio
new_for_lio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn new_for_lio(io: E) -> io::Result<Self> {$/;"	P	implementation:Aio
new_no_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub(crate) fn new_no_context() -> Self {$/;"	P	implementation:TryCurrentError
new_receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^fn new_receiver<T>(shared: Arc<Shared<T>>) -> Receiver<T> {$/;"	f
new_task	/home/trey/code/sqlx-crud/examples/axum/src/main.rs	/^async fn new_task(Extension(pool): Extension<SqlitePool>, Json(new_task): Json<Task>) -> Respons/;"	f
new_thread_local_destroyed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub(crate) fn new_thread_local_destroyed() -> Self {$/;"	P	implementation:TryCurrentError
new_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub(crate) fn new_timeout($/;"	P	implementation:Sleep
new_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn new_v4() -> io::Result<TcpSocket> {$/;"	P	implementation:TcpSocket
new_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn new_v6() -> io::Result<TcpSocket> {$/;"	P	implementation:TcpSocket
new_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn new_with(value: Option<T>) -> Self {$/;"	P	implementation:OnceCell
new_with_delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    pub(crate) fn new_with_delay(value: T, delay: Sleep) -> Timeout<T> {$/;"	P	implementation:Timeout
new_with_handle_and_interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub(crate) fn new_with_handle_and_interest($/;"	P	implementation:AsyncFd
new_with_interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn new_with_interest(io: E, interest: Interest) -> io::Result<Self> {$/;"	P	implementation:Aio
new_with_interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn new_with_interest(io: E, interest: Interest) -> io::Result<Self> {$/;"	P	implementation:PollEvented
new_with_interest_and_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn new_with_interest_and_handle($/;"	P	implementation:PollEvented
new_with_interest_and_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn new_with_interest_and_handle($/;"	P	implementation:Registration
newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	P	implementation:UnitVariant
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f	module:content
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value>$/;"	P	implementation:UnitVariantAccess
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value>$/;"	P	implementation:VariantAccess
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Error>$/;"	P	implementation:UnitOnly
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Error>$/;"	P	implementation:VariantDeserializer
newtype_variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Error>$/;"	P	implementation:VariantRefDeserializer
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Chain
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:RawPathParamsIter
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:MemchrSplit
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn next(&mut self) -> Option<Result<T>> {$/;"	f
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    fn next(&mut self) -> Option<io::Result<u8>> {$/;"	f
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:SliceRead
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:StrRead
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>> {$/;"	f
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn next(&mut self) -> Result<Option<u8>>;$/;"	P	interface:Read
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            fn next(&mut self) -> Option<task::Notified<T>> {$/;"	P	implementation:Local::push_overflow::BatchTaskIter
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^    pub(crate) fn next() -> Self {$/;"	P	implementation:Id
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^    pub(crate) fn next() -> Self {$/;"	P	implementation:ThreadId
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    next: u64,$/;"	m	struct:Receiver
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    next: AtomicPtr<Block<T>>,$/;"	m	struct:BlockHeader
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        next: AtomicUsize,$/;"	m	struct:big_notify::BigNotify
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    next: Option<NonNull<T>>,$/;"	m	struct:PointersInner
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    next: u32,$/;"	m	struct:Slot
next_back	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Chain
next_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn next_char(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:Deserializer
next_char_or_null	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn next_char_or_null(&mut self) -> Result<u8> {$/;"	P	implementation:Deserializer
next_chunk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    fn next_chunk(buf: &mut VecDeque<io::Result<DirEntry>>, std: &mut StdReadDir) {$/;"	P	implementation:ReadDir
next_element	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	P	interface:SeqAccess
next_element	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^            fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	P	implementation:ValueDeserializer::deserialize_tuple::PairDeserializer
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	P	implementation:SeqDeserializer
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	P	interface:SeqAccess
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>>$/;"	P	implementation:SeqAccess
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	P	implementation:SeqDeserializer
next_element_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	P	implementation:SeqRefDeserializer
next_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	P	interface:MapAccess
next_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub async fn next_entry(&mut self) -> io::Result<Option<DirEntry>> {$/;"	P	implementation:ReadDir
next_entry_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	P	interface:MapAccess
next_entry_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) fn next_expiration(&self, now: u64) -> Option<Expiration> {$/;"	P	implementation:Level
next_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn next_expiration(&self) -> Option<Expiration> {$/;"	P	implementation:Wheel
next_expiration_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(super) fn next_expiration_time(&self) -> Option<u64> {$/;"	P	implementation:Wheel
next_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub async fn next_field(&mut self) -> Result<Option<Field<'_>>, MultipartError> {$/;"	P	implementation:Multipart
next_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	P	interface:MapAccess
next_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	P	implementation:MapDeserializer
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	P	interface:MapAccess
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>>$/;"	P	implementation:MapAccess
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:NumberDeserializer
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:BorrowedRawDeserializer
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:OwnedRawDeserializer
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	P	implementation:MapDeserializer
next_key_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Error>$/;"	P	implementation:MapRefDeserializer
next_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub async fn next_line(&mut self) -> io::Result<Option<String>> {$/;"	f
next_local_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn next_local_task(&mut self) -> Option<Notified> {$/;"	P	implementation:Core
next_occupied_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    fn next_occupied_slot(&self, now: u64) -> Option<usize> {$/;"	P	implementation:Level
next_or_eof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^fn next_or_eof<'de, R>(read: &mut R) -> Result<u8>$/;"	f
next_pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_positive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn next_positive(self) -> Self {$/;"	P	interface:Float
next_route_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    fn next_route_id(&mut self) -> RouteId {$/;"	f
next_segment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^    pub async fn next_segment(&mut self) -> io::Result<Option<Vec<u8>>> {$/;"	f
next_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn next_task(&mut self, worker: &Worker) -> Option<Notified> {$/;"	P	implementation:Core
next_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn next_task(&self) -> task::Notified<Runtime> {$/;"	P	implementation:Runtime
next_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn next_task(&self) -> Option<task::LocalNotified<Arc<Shared>>> {$/;"	P	implementation:LocalSet
next_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    fn next_timeout(&self, timeout: Instant, now: Instant, period: Duration) -> Instant {$/;"	P	implementation:MissedTickBehavior
next_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	P	interface:MapAccess
next_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:MapDeserializer
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	P	interface:MapAccess
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:content
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value>$/;"	P	implementation:MapAccess
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:NumberDeserializer
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:BorrowedRawDeserializer
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:OwnedRawDeserializer
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Error>$/;"	P	implementation:MapDeserializer
next_value_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Error>$/;"	P	implementation:MapRefDeserializer
next_wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    next_wake: Option<NonZeroU64>,$/;"	m	struct:InnerState
no_backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^fn no_backtrace(e: Ref<ErrorImpl>) -> Option<&Backtrace> {$/;"	f
no_compaction_if_page_still_in_use	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn no_compaction_if_page_still_in_use() {$/;"	f	module:test
no_digits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    fn no_digits() {$/;"	f	module:tests
no_expirations_before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn no_expirations_before(&self, start_level: usize, before: u64) -> bool {$/;"	P	implementation:Wheel
no_kill_if_already_killed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn no_kill_if_already_killed() {$/;"	f	module:test
no_kill_if_reaped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn no_kill_if_reaped() {$/;"	f	module:test
no_kill_on_drop_by_default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn no_kill_on_drop_by_default() {$/;"	f	module:test
no_reap_if_no_signal_received	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn no_reap_if_no_signal_received() {$/;"	f	module:test
no_reap_if_signal_lock_held	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn no_reap_if_signal_lock_held() {$/;"	f	module:test
node	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    node: Arc<Node>,$/;"	m	struct:PathRouter
node	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    node: Waiter,$/;"	m	struct:Acquire
nodelay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn nodelay(&self) -> io::Result<bool> {$/;"	P	implementation:TcpStream
nonzero	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^pub fn nonzero<T: Integer>(x: &[T], rindex: usize) -> bool {$/;"	f
nonzero_integers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	M
noop_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    noop_count: u64,$/;"	m	struct:MetricsBatch
noop_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) noop_count: AtomicU64,$/;"	m	struct:WorkerMetrics
noop_scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^mod noop_scheduler {$/;"	n
nop_reserve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
normal_or_miri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^const fn normal_or_miri(normal: usize, miri: usize) -> usize {$/;"	f
normal_or_miri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn normal_or_miri<T>(normal: T, miri: T) -> T {$/;"	f
normal_or_miri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    const fn normal_or_miri(normal: usize, miri: usize) -> usize {$/;"	f	module:test
normalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub(crate) fn normalize(&mut self) -> u32 {$/;"	P	implementation:ExtendedFloat
normalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    fn normalize(&mut self) {$/;"	P	interface:Math
normalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn normalize(x: &mut Vec<Limb>) {$/;"	f	module:small
not_found	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^mod not_found;$/;"	n
not_found	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn not_found(_: State<&'static str>) {}$/;"	f	function:method_router_fallback_with_state
not_found_for_extra_trailing_slash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn not_found_for_extra_trailing_slash() {$/;"	f
not_found_for_missing_trailing_slash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn not_found_for_missing_trailing_slash() {$/;"	f
notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    notified: Option<NotificationType>,$/;"	m	struct:Waiter
notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn notified(&self) -> Notified<'_> {$/;"	P	implementation:Notify
notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn notified(&self) -> Notified<'_> {$/;"	P	implementation:big_notify::BigNotify
notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    notified: LinkedList<T>,$/;"	m	struct:ListsInner
notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    notify: Notify,$/;"	m	struct:CurrentThread
notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    notify: Notify,$/;"	m	struct:Inner
notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    notify: &'a Notify,$/;"	m	struct:Notified
notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    notify: &'a Notify,$/;"	m	struct:NotifyWaitersList
notify_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn notify_all(&self) {$/;"	P	implementation:Condvar
notify_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn notify_all(&self) {$/;"	P	implementation:Handle
notify_clones_waker_before_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^fn notify_clones_waker_before_lock() {$/;"	f
notify_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_drop() {$/;"	f
notify_if_work_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn notify_if_work_pending(&self) {$/;"	P	implementation:Handle
notify_locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn notify_locked(waiters: &mut WaitList, state: &AtomicUsize, curr: usize) -> Option<Waker> {$/;"	f
notify_multi	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_multi() {$/;"	f
notify_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn notify_one(&self) {$/;"	P	implementation:Condvar
notify_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn notify_one(&self) {$/;"	P	implementation:Notify
notify_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_one() {$/;"	f
notify_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn notify_parked(&self) {$/;"	P	implementation:Handle
notify_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn notify_rx(&mut self) {$/;"	P	implementation:Tail
notify_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    notify_rx: big_notify::BigNotify,$/;"	m	struct:Shared
notify_rx_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    notify_rx_closed: Notify,$/;"	m	struct:Chan
notify_should_wakeup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn notify_should_wakeup(&self) -> bool {$/;"	P	implementation:Idle
notify_simple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^fn notify_simple() {$/;"	f
notify_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    notify_tx: Notify,$/;"	m	struct:Shared
notify_waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn notify_waiters(&self) {$/;"	P	implementation:Notify
notify_waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters() {$/;"	f
notify_waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn notify_waiters(&self) {$/;"	P	implementation:big_notify::BigNotify
notify_waiters_and_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_and_one() {$/;"	f
notify_waiters_calls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    notify_waiters_calls: usize,$/;"	m	struct:Notified
notify_waiters_handles_panicking_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^fn notify_waiters_handles_panicking_waker() {$/;"	f
notify_waiters_is_atomic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_is_atomic() {$/;"	f
notify_waiters_is_atomic_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^    fn notify_waiters_is_atomic_variant(tested_fut_index: usize) {$/;"	f	function:notify_waiters_is_atomic
notify_waiters_poll_consistency	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_poll_consistency() {$/;"	f
notify_waiters_poll_consistency_many	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_poll_consistency_many() {$/;"	f
notify_waiters_poll_consistency_many_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^    fn notify_waiters_poll_consistency_many_variant(order: [usize; 2]) {$/;"	f	function:notify_waiters_poll_consistency_many
notify_waiters_poll_consistency_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^    fn notify_waiters_poll_consistency_variant(poll_setting: [bool; 2]) {$/;"	f	function:notify_waiters_poll_consistency
notify_waiters_sequential_notified_await	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_sequential_notified_await() {$/;"	f
now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn now(&self, clock: &Clock) -> u64 {$/;"	P	implementation:TimeSource
now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn now() -> Instant {$/;"	P	implementation:Instant
now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub(super) fn now() -> Instant {$/;"	f	module:variant
nth_bit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn nth_bit(n: u64) -> u64 {$/;"	f
num	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^pub(crate) mod num;$/;"	n
num	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^    num: AtomicUsize,$/;"	m	struct:Chan
num_as_self	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! num_as_self {$/;"	M
num_blocking_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn num_blocking_threads(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
num_cpus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    pub(crate) fn num_cpus() -> usize {$/;"	f	module:sys
num_cpus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    pub(crate) fn num_cpus() -> usize {$/;"	f	module:sys
num_idle_blocking_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn num_idle_blocking_threads(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
num_idle_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn num_idle_threads(&self) -> usize {$/;"	P	implementation:SpawnerMetrics
num_idle_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    num_idle_threads: AtomicUsize,$/;"	m	struct:SpawnerMetrics
num_initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    num_initialized: usize,$/;"	m	struct:VecWithInitialized
num_kills	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        num_kills: usize,$/;"	m	struct:test::Mock
num_notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    num_notify: u32,$/;"	m	struct:Shared
num_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    num_permits: u32,$/;"	m	struct:Acquire
num_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        num_polls: usize,$/;"	m	struct:test::Mock
num_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    num_polls: Arc<AtomicUsize>,$/;"	m	struct:BlockedFuture
num_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn num_searching(self) -> usize {$/;"	P	implementation:State
num_self	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! num_self {$/;"	M
num_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn num_threads(&self) -> usize {$/;"	P	implementation:SpawnerMetrics
num_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    num_threads: AtomicUsize,$/;"	m	struct:SpawnerMetrics
num_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    num_tx: AtomicUsize,$/;"	m	struct:Shared
num_unparked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn num_unparked(self) -> usize {$/;"	P	implementation:State
num_wait_until_status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        num_wait_until_status: usize,$/;"	m	struct:test::MockWait
num_wait_until_status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        num_wait_until_status: usize,$/;"	m	struct:test::MockWait
num_workers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn num_workers(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
num_workers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    num_workers: usize,$/;"	m	struct:Idle
number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    number: Option<usize>,$/;"	m	struct:Indented
number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod number;$/;"	n
number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub number: Option<String>,$/;"	m	struct:NumberDeserializer
number_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^macro_rules! number_impl {$/;"	M
object_backtrace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    object_backtrace: unsafe fn(Ref<ErrorImpl>) -> Option<&Backtrace>,$/;"	m	struct:ErrorVTable
object_boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    object_boxed: unsafe fn(Own<ErrorImpl>) -> Box<dyn StdError + Send + Sync + 'static>,$/;"	m	struct:ErrorVTable
object_boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn object_boxed<E>(e: Own<ErrorImpl>) -> Box<dyn StdError + Send + Sync + 'static>$/;"	f
object_downcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    object_downcast: unsafe fn(Ref<ErrorImpl>, TypeId) -> Option<Ref<()>>,$/;"	m	struct:ErrorVTable
object_downcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn object_downcast<E>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
object_downcast_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    object_downcast_mut: unsafe fn(Mut<ErrorImpl>, TypeId) -> Option<Mut<()>>,$/;"	m	struct:ErrorVTable
object_downcast_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn object_downcast_mut<E>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
object_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    object_drop: unsafe fn(Own<ErrorImpl>),$/;"	m	struct:ErrorVTable
object_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn object_drop<E>(e: Own<ErrorImpl>) {$/;"	f
object_drop_front	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn object_drop_front<E>(e: Own<ErrorImpl>, target: TypeId) {$/;"	f
object_drop_rest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    object_drop_rest: unsafe fn(Own<ErrorImpl>, TypeId),$/;"	m	struct:ErrorVTable
object_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    object_mut: unsafe fn(Mut<ErrorImpl>) -> &mut (dyn StdError + Send + Sync + 'static),$/;"	m	struct:ErrorVTable
object_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn object_mut<E>(e: Mut<ErrorImpl>) -> &mut (dyn StdError + Send + Sync + 'static)$/;"	f
object_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    object_ref: unsafe fn(Ref<ErrorImpl>) -> Ref<dyn StdError + Send + Sync + 'static>,$/;"	m	struct:ErrorVTable
object_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn object_ref<E>(e: Ref<ErrorImpl>) -> Ref<dyn StdError + Send + Sync + 'static>$/;"	f
observed_tail_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    observed_tail_position: UnsafeCell<usize>,$/;"	m	struct:BlockHeader
observed_tail_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn observed_tail_position(&self) -> Option<usize> {$/;"	P	implementation:Block
occupied	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    occupied: OccupiedEntryImpl<'a>,$/;"	m	struct:OccupiedEntry
occupied	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    occupied: u64,$/;"	m	struct:Level
occupied_bit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^fn occupied_bit(slot: usize) -> u64 {$/;"	f
offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/format.rs	/^    offset: usize,$/;"	m	struct:Buf
offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    offset: usize,$/;"	m	struct:StreamDeserializer
offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^pub(crate) fn offset(slot_index: usize) -> usize {$/;"	f
ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn ok() -> (StatusCode, &'static str) {$/;"	f	module:tests
ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    ok: PhantomData<Ok>,$/;"	m	struct:Impossible
on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn on<H, T>(self, filter: MethodFilter, handler: H) -> Self$/;"	f
on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^pub fn on<H, T, S, B>(filter: MethodFilter, handler: H) -> MethodRouter<S, B, Infallible>$/;"	f
on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        on_drop: Option<oneshot::Sender<()>>,$/;"	m	struct:test_combination::FutWrapper
on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        on_drop: Option<oneshot::Sender<()>>,$/;"	m	struct:test_combination::Output
on_endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn on_endpoint(mut self, filter: MethodFilter, endpoint: MethodEndpoint<S, B, E>) -> Self {$/;"	f
on_failed_upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn on_failed_upgrade() {$/;"	f	module:tests
on_failed_upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    on_failed_upgrade: F,$/;"	m	struct:WebSocketUpgrade
on_failed_upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn on_failed_upgrade<C>(self, callback: C) -> WebSocketUpgrade<C>$/;"	P	implementation:WebSocketUpgrade
on_first_poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        on_first_poll: Option<oneshot::Sender<()>>,$/;"	m	struct:test_combination::Signals
on_output_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        on_output_drop: Option<oneshot::Sender<()>>,$/;"	m	struct:test_combination::Signals
on_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn on_service<T>(self, filter: MethodFilter, svc: T) -> Self$/;"	f
on_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^pub fn on_service<T, S, B>(filter: MethodFilter, svc: T) -> MethodRouter<S, B, T::Error>$/;"	f
on_thread_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn on_thread_park<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
on_thread_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn on_thread_start<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
on_thread_stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn on_thread_stop<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
on_thread_unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn on_thread_unpark<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
on_upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    on_upgrade: OnUpgrade,$/;"	m	struct:WebSocketUpgrade
on_upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn on_upgrade<C, Fut>(self, callback: C) -> Response$/;"	P	implementation:WebSocketUpgrade
once	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    once: Once,$/;"	m	struct:OnceCell
once_cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod once_cell;$/;"	n
one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    one: Cell<u32>,$/;"	m	struct:FastRand
one_digit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    fn one_digit() {$/;"	f	module:tests
oneshot_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    pub(crate) fn oneshot_inner($/;"	P	implementation:Route
only_blocking_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn only_blocking_inner(first_pending: bool) {$/;"	f	module:group_a
only_blocking_with_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn only_blocking_with_pending() {$/;"	f	module:group_a
only_blocking_without_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn only_blocking_without_pending() {$/;"	f	module:group_a
opaque_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/macros.rs	/^macro_rules! opaque_future {$/;"	M
open	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn open(path: impl AsRef<Path>) -> io::Result<File> {$/;"	P	implementation:File
open	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub async fn open(&self, path: impl AsRef<Path>) -> io::Result<File> {$/;"	P	implementation:OpenOptions
open	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn open(&self, path: &Path, pipe_end: PipeEnd) -> io::Result<File> {$/;"	P	implementation:OpenOptions
open	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn open(&self, addr: impl AsRef<OsStr>) -> io::Result<NamedPipeClient> {$/;"	P	implementation:ClientOptions
open_options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod open_options;$/;"	n
open_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn open_read() {$/;"	f
open_receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn open_receiver<P: AsRef<Path>>(&self, path: P) -> io::Result<Receiver> {$/;"	P	implementation:OpenOptions
open_sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn open_sender<P: AsRef<Path>>(&self, path: P) -> io::Result<Sender> {$/;"	P	implementation:OpenOptions
open_set_len_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn open_set_len_err() {$/;"	f
open_set_len_ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn open_set_len_ok() {$/;"	f
open_with_security_attributes_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub unsafe fn open_with_security_attributes_raw($/;"	P	implementation:ClientOptions
open_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn open_write() {$/;"	f
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    options: MethodEndpoint<S, B, E>,$/;"	m	struct:MethodRouter
or	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn or() {$/;"	f
or_insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn or_insert(self, default: Value) -> &'a mut Value {$/;"	P	implementation:Entry
or_insert_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn or_insert_with<F>(self, default: F) -> &'a mut Value$/;"	P	implementation:Entry
or_with_route_following	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn or_with_route_following() {$/;"	f
orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) mod orphan;$/;"	n
orphan_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    orphan_queue: Q,$/;"	m	struct:Reaper
os	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/mod.rs	/^pub mod os;$/;"	n
os	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^mod os {$/;"	n
out_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    out_buffer_size: u32,$/;"	m	struct:ServerOptions
out_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn out_buffer_size(&mut self, buffer: u32) -> &mut Self {$/;"	P	implementation:ServerOptions
out_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub out_buffer_size: u32,$/;"	m	struct:PipeInfo
outer_fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn outer_fallback() -> impl IntoResponse {$/;"	f
outer_middleware_still_see_whole_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn outer_middleware_still_see_whole_url() {$/;"	f
output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    output: PhantomData<T>,$/;"	m	struct:StreamDeserializer
output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn output(&mut self) -> impl Future<Output = io::Result<Output>> {$/;"	P	implementation:Command
output_filename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^    fn output_filename($/;"	f	module:capture
output_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    pub fn output_mut(self: Pin<&mut Self>) -> Option<&mut Fut::Output> {$/;"	P	implementation:MaybeDone
overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^macro_rules! overflow {$/;"	M
overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn overflow() {$/;"	f
overflow_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    overflow_count: u64,$/;"	m	struct:MetricsBatch
overflow_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) overflow_count: AtomicU64,$/;"	m	struct:WorkerMetrics
overflowing_shr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/shift.rs	/^pub(crate) fn overflowing_shr(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    owned: OwnedTasks<Arc<Handle>>,$/;"	m	struct:Shared
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) owned: OwnedTasks<Arc<Handle>>,$/;"	m	struct:Shared
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) owned: linked_list::Pointers<Header>,$/;"	m	struct:Trailer
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    owned: OwnedTasks<Runtime>,$/;"	m	struct:Inner
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    owned: LocalOwnedTasks<Arc<Shared>>,$/;"	m	struct:LocalState
owned_is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn owned_is_empty(&self) -> bool {$/;"	P	implementation:LocalState
owned_read_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod owned_read_guard;$/;"	n
owned_write_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod owned_write_guard;$/;"	n
owned_write_guard_mapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod owned_write_guard_mapped;$/;"	n
owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    owner: ThreadId,$/;"	m	struct:LocalState
owner_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) owner_id: UnsafeCell<u64>,$/;"	m	struct:Header
pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^fn pack(steal: UnsignedShort, real: UnsignedShort) -> UnsignedLong {$/;"	f
pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) fn pack(&self, value: usize, base: usize) -> usize {$/;"	P	implementation:Pack
pack_lossy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) fn pack_lossy(&self, value: usize, base: usize) -> usize {$/;"	P	implementation:Pack
page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^            page: Option<u64>,$/;"	m	struct:tests::test_query::Pagination
page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^        page: Option<u64>,$/;"	m	struct:tests::Pagination
page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn page(self) -> usize {$/;"	P	implementation:Address
page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    page: *const Page<T>,$/;"	m	struct:Value
paged	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn paged(_pool: E) -> TryCollectFut<'e, Self> {$/;"	P	interface:Crud
pages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pages: [Arc<Page<T>>; NUM_PAGES],$/;"	m	struct:Allocator
pages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pages: [Arc<Page<T>>; NUM_PAGES],$/;"	m	struct:Slab
pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)> {$/;"	P	implementation:UnixDatagram
pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn pair() -> io::Result<(UnixStream, UnixStream)> {$/;"	P	implementation:UnixStream
panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub(crate) fn panic(id: Id, err: Box<dyn Any + Send + 'static>) -> JoinError {$/;"	P	implementation:JoinError
panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn panic(&self) -> ! {$/;"	P	implementation:ScopeInnerErr
panic_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        panic_on_drop: bool,$/;"	m	struct:test_combination::FutWrapper
panic_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        panic_on_drop: bool,$/;"	m	struct:test_combination::Output
panic_on_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^macro_rules! panic_on_err {$/;"	M
params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    params: &'de [(Arc<str>, PercentDecodedStr)],$/;"	m	struct:MapDeserializer
params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    params: &'de [(Arc<str>, PercentDecodedStr)],$/;"	m	struct:SeqDeserializer
parent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    parent: Arc<Lists<T>>,$/;"	m	struct:ListEntry
parent_task_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    parent_task_id: Option<Id>,$/;"	m	struct:TaskIdGuard
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn park(&mut self, handle: &Handle) {$/;"	P	implementation:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn park(&mut self, rt_handle: &driver::Handle) {$/;"	P	implementation:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^pub(crate) mod park;$/;"	n
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn park(&self) {$/;"	P	implementation:Inner
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn park(&mut self) {$/;"	P	implementation:CachedParkThread
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn park(&mut self) {$/;"	P	implementation:ParkThread
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    park: SignalDriver,$/;"	m	struct:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    pub(crate) fn park(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn park(&self, mut core: Box<Core>, handle: &Handle) -> Box<Core> {$/;"	P	implementation:Context
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^mod park;$/;"	n
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn park(&self, handle: &driver::Handle) {$/;"	P	implementation:Inner
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn park(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Parker
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn park(&self, mut core: Box<Core>) -> Box<Core> {$/;"	P	implementation:Context
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    park: Option<Parker>,$/;"	m	struct:Core
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn park(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    park: IoStack,$/;"	m	struct:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(crate) fn park(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
park_condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn park_condvar(&self) {$/;"	P	implementation:Inner
park_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    park_count: u64,$/;"	m	struct:MetricsBatch
park_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) park_count: AtomicU64,$/;"	m	struct:WorkerMetrics
park_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn park_driver(&self, driver: &mut Driver, handle: &driver::Handle) {$/;"	P	implementation:Inner
park_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    fn park_internal(&mut self, rt_handle: &driver::Handle, limit: Option<Duration>) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &Handle, duration: Duration) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn park_timeout(&mut self, rt_handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn park_timeout(&self, dur: Duration) {$/;"	P	implementation:Inner
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn park_timeout(&mut self, duration: Duration) {$/;"	P	implementation:CachedParkThread
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn park_timeout(&mut self, duration: Duration) {$/;"	P	implementation:ParkThread
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Parker
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn park_timeout(&self, mut core: Box<Core>, duration: Option<Duration>) -> Box<Core> {$/;"	P	implementation:Context
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Driver
park_yield	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn park_yield(&self, mut core: Box<Core>, handle: &Handle) -> Box<Core> {$/;"	P	implementation:Context
parking_lot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod parking_lot;$/;"	n
parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^pub(crate) mod parse;$/;"	n
parse_any_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_any_number(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	P	implementation:Deserializer
parse_any_signed_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_any_signed_number(&mut self) -> Result<ParserNumber> {$/;"	P	implementation:Deserializer
parse_boundary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^fn parse_boundary(headers: &HeaderMap) -> Option<String> {$/;"	f
parse_concise_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/parse.rs	/^pub fn parse_concise_float<F>(mantissa: u64, mant_exp: i32) -> F$/;"	f
parse_decimal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_decimal($/;"	P	implementation:Deserializer
parse_decimal_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_decimal_overflow($/;"	P	implementation:Deserializer
parse_escape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^fn parse_escape<'de, R: Read<'de>>($/;"	f
parse_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn parse_event(payload: &str) -> HashMap<String, String> {$/;"	f	module:tests
parse_exponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_exponent($/;"	P	implementation:Deserializer
parse_exponent_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_exponent_overflow($/;"	P	implementation:Deserializer
parse_forwarded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^fn parse_forwarded(headers: &HeaderMap) -> Option<&str> {$/;"	f
parse_ident	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_ident(&mut self, ident: &[u8]) -> Result<()> {$/;"	P	implementation:Deserializer
parse_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^fn parse_index(s: &str) -> Option<usize> {$/;"	f
parse_integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_integer(&mut self, positive: bool) -> Result<ParserNumber> {$/;"	P	implementation:Deserializer
parse_ip_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	M
parse_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^macro_rules! parse_key {$/;"	M
parse_line_col	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^fn parse_line_col(msg: &mut String) -> Option<(usize, usize)> {$/;"	f
parse_long_decimal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_long_decimal(&mut self, positive: bool, integer_end: usize) -> Result<f64> {$/;"	P	implementation:Deserializer
parse_long_exponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_long_exponent(&mut self, positive: bool, integer_end: usize) -> Result<f64> {$/;"	P	implementation:Deserializer
parse_long_integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_long_integer(&mut self, positive: bool, partial_significand: u64) -> Result<f64> {$/;"	P	implementation:Deserializer
parse_long_integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_long_integer(&mut self, positive: bool, significand: u64) -> Result<f64> {$/;"	P	implementation:Deserializer
parse_mantissa	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bhcomp.rs	/^fn parse_mantissa<F>(integer: &[u8], fraction: &[u8]) -> Bigint$/;"	f
parse_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_number(&mut self, positive: bool, significand: u64) -> Result<ParserNumber> {$/;"	P	implementation:Deserializer
parse_object_colon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_object_colon(&mut self) -> Result<()> {$/;"	P	implementation:Deserializer
parse_single_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^macro_rules! parse_single_value {$/;"	M
parse_socket_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	M
parse_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'a, 's, str>> {$/;"	P	implementation:SliceRead
parse_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'a, 's, str>> {$/;"	P	implementation:StrRead
parse_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>> /;"	f
parse_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str<'s>(&'s mut self, scratch: &'s mut Vec<u8>) -> Result<Reference<'de, 's, str>>;$/;"	P	interface:Read
parse_str_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str_bytes<'s, T, F>($/;"	P	implementation:SliceRead
parse_str_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str_bytes<'s, T, F>($/;"	f
parse_str_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str_raw<'s>($/;"	P	implementation:SliceRead
parse_str_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str_raw<'s>($/;"	P	implementation:StrRead
parse_str_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str_raw<'s>($/;"	P	interface:Read
parse_str_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn parse_str_raw<'s>($/;"	f
parse_truncated_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/parse.rs	/^pub fn parse_truncated_float<F>(integer: &[u8], mut fraction: &[u8], exponent: i32) -> F$/;"	f
parse_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^macro_rules! parse_value {$/;"	M
parse_whitespace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn parse_whitespace(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:Deserializer
partial_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^mod partial_eq;$/;"	n
partial_read_set_len_ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn partial_read_set_len_ok() {$/;"	f
partialeq_numeric	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^macro_rules! partialeq_numeric {$/;"	M
patch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    patch: MethodEndpoint<S, B, E>,$/;"	m	struct:MethodRouter
patch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn patch(&self, url: &str) -> RequestBuilder {$/;"	P	implementation:TestClient
path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^pub mod path;$/;"	n
path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub fn path(&self) -> PathBuf {$/;"	P	implementation:DirEntry
path_for_nested_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^pub(crate) fn path_for_nested_route<'a>(prefix: &'a str, path: &'a str) -> Cow<'a, str> {$/;"	f
path_router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    path_router: PathRouter<S, B>,$/;"	m	struct:Router
path_router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^pub(crate) mod path_router;$/;"	n
path_to_route_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    path_to_route_id: HashMap<Arc<str>, RouteId>,$/;"	m	struct:Node
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:Deserializer
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:SliceRead
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	P	implementation:StrRead
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>> {$/;"	f
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn peek(&mut self) -> Result<Option<u8>>;$/;"	P	interface:Read
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn peek(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn peek(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn peek(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
peek_end_of_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn peek_end_of_value(&mut self) -> Result<()> {$/;"	f
peek_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn peek_error(&self, reason: ErrorCode) -> Error {$/;"	P	implementation:Deserializer
peek_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn peek_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UdpSocket
peek_invalid_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn peek_invalid_type(&mut self, exp: &dyn Expected) -> Error {$/;"	P	implementation:Deserializer
peek_or_eof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^fn peek_or_eof<'de, R>(read: &mut R) -> Result<u8>$/;"	f
peek_or_null	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn peek_or_null(&mut self) -> Result<u8> {$/;"	P	implementation:Deserializer
peek_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	P	implementation:SliceRead
peek_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	P	implementation:StrRead
peek_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn peek_position(&self) -> Position {$/;"	f
peek_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn peek_position(&self) -> Position;$/;"	P	interface:Read
peek_sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn peek_sender(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
peek_sender_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn peek_sender_inner(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:ReadHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:WriteHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedReadHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedWriteHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:TcpStream
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixDatagram
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:ReadHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:WriteHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedReadHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedWriteHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixStream
peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn peer_cred(&self) -> io::Result<UCred> {$/;"	P	implementation:UnixStream
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pending: Option<&'a Content<'de>>,$/;"	m	struct:FlatInternallyTaggedAccess
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pending: EntryList,$/;"	m	struct:Wheel
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pending: AtomicBool,$/;"	m	struct:EventInfo
pending_cnt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    pending_cnt: Arc<AtomicUsize>,$/;"	m	struct:ResetFuture
pending_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pending_content: Option<&'a Content<'de>>,$/;"	m	struct:FlatMapAccess
pending_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    pending_content: Option<Content<'de>>,$/;"	m	struct:FlatStructAccess
percent_decoding	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn percent_decoding() {$/;"	f	module:tests
period	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    period: Duration,$/;"	m	struct:Interval
period	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn period(&self) -> Duration {$/;"	P	implementation:Interval
permanent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^    pub fn permanent(uri: &str) -> Self {$/;"	P	implementation:Redirect
permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    permits: AtomicUsize,$/;"	m	struct:Semaphore
permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    permits: u32,$/;"	m	struct:OwnedSemaphorePermit
permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    permits: u32,$/;"	m	struct:SemaphorePermit
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    permits_acquired: u32,$/;"	m	struct:Inner
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) permits_acquired: u32,$/;"	m	struct:OwnedRwLockWriteGuard
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    permits_acquired: u32,$/;"	m	struct:Inner
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) permits_acquired: u32,$/;"	m	struct:OwnedRwLockMappedWriteGuard
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    permits_acquired: u32,$/;"	m	struct:Inner
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) permits_acquired: u32,$/;"	m	struct:RwLockWriteGuard
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    permits_acquired: u32,$/;"	m	struct:Inner
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) permits_acquired: u32,$/;"	m	struct:RwLockMappedWriteGuard
phantom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        pub phantom: PhantomData<Idx>,$/;"	m	struct:range::RangeVisitor
pid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pid: Option<unix::pid_t>,$/;"	m	struct:UCred
pid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub fn pid(&self) -> Option<unix::pid_t> {$/;"	P	implementation:UCred
pid_t	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub type pid_t = i32;$/;"	t
pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod pin;$/;"	n
pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/pin.rs	/^macro_rules! pin {$/;"	M
pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub mod pipe;$/;"	n
pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn pipe() -> Self {$/;"	P	implementation:SignalKind
pipe_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pipe_mode: PipeMode,$/;"	m	struct:ClientOptions
pipe_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pipe_mode: PipeMode,$/;"	m	struct:ServerOptions
pipe_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn pipe_mode(&mut self, pipe_mode: PipeMode) -> &mut Self {$/;"	P	implementation:ClientOptions
pipe_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn pipe_mode(&mut self, pipe_mode: PipeMode) -> &mut Self {$/;"	P	implementation:ServerOptions
pointer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn pointer(&self, pointer: &str) -> Option<&Value> {$/;"	P	implementation:Value
pointer_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn pointer_mut(&mut self, pointer: &str) -> Option<&mut Value> {$/;"	P	implementation:Value
pointer_width	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^pub(crate) const fn pointer_width() -> u32 {$/;"	f
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pointers: Mutex<Pointers>,$/;"	m	struct:Inject
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    unsafe fn pointers(target: NonNull<Header>) -> NonNull<linked_list::Pointers<Header>> {$/;"	P	implementation:Task
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pointers: linked_list::Pointers<TimerShared>,$/;"	m	struct:TimerShared
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn pointers($/;"	P	implementation:TimerShared
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pointers: linked_list::Pointers<Waiter>,$/;"	m	struct:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    unsafe fn pointers(target: NonNull<Waiter>) -> NonNull<linked_list::Pointers<Waiter>> {$/;"	P	implementation:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pointers: linked_list::Pointers<Waiter>,$/;"	m	struct:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    unsafe fn pointers(target: NonNull<Waiter>) -> NonNull<linked_list::Pointers<Waiter>> {$/;"	P	implementation:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pointers: linked_list::Pointers<Waiter>,$/;"	m	struct:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    unsafe fn pointers(target: NonNull<Waiter>) -> NonNull<linked_list::Pointers<Waiter>> {$/;"	P	implementation:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pointers: linked_list::Pointers<ListEntry<T>>,$/;"	m	struct:ListEntry
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    unsafe fn pointers($/;"	P	implementation:ListEntry
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        pointers: Pointers<Entry>,$/;"	m	struct:tests::Entry
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        unsafe fn pointers(target: NonNull<Entry>) -> NonNull<Pointers<Entry>> {$/;"	P	implementation:tests::Entry
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    unsafe fn pointers(target: NonNull<Self::Target>) -> NonNull<Pointers<Self::Target>>;$/;"	P	interface:Link
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^        fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:future::HandleErrorFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/future.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> std::task::Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ResponseFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ResponseFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ResponseFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:JoinHandle
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:MaybeDone
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<T> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/try_join.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/seek.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/fill_buf.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:FillBuf
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/flush.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_buf.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ReadLine
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ReadUntil
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/shutdown.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all_buf.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_buf.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_vectored.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn poll(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:test::Mock
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Child
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Child
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^    fn poll(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<R> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    poll: mio::Poll,$/;"	m	struct:Driver
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn poll(&self, mut cx: Context<'_>) -> Poll<T::Output> {$/;"	P	implementation:Core
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn poll(self) {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:JoinHandle
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn poll(self) {$/;"	P	implementation:RawTask
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) poll: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn poll<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:BlockedFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ResetFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Track
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<F::Output> {$/;"	P	implementation:test_combination::FutWrapper
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn poll(&self, waker: &Waker) -> Poll<TimerResult> {$/;"	P	implementation:StateCell
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn poll(&mut self, now: u64) -> Option<TimerHandle> {$/;"	P	implementation:Wheel
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^        fn poll(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<u32> {$/;"	P	implementation:test::ZeroSizedFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<T> {$/;"	P	implementation:ReusableBoxFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn poll(&mut self, cx: &mut Context<'_>) -> Poll<T> {$/;"	P	implementation:ReusableBoxFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Acquire
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<T, RecvError>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {$/;"	P	implementation:Notified
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Receiver
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<bool> {$/;"	P	implementation:OnClose
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut std::task::Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:LocalSet
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut std::task::Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:RunUntil
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:TaskLocalFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^        fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {$/;"	P	implementation:yield_now::YieldNow
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut task::Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Sleep
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut task::Context<'_>) -> Poll<Self::Output> {$/;"	f
poll_accept	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn poll_accept(&self, cx: &mut Context<'_>) -> Poll<io::Result<(TcpStream, SocketAddr)>>/;"	P	implementation:TcpListener
poll_accept	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn poll_accept(&self, cx: &mut Context<'_>) -> Poll<io::Result<(UnixStream, SocketAddr)>/;"	P	implementation:UnixListener
poll_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn poll_acquire($/;"	P	implementation:Semaphore
poll_acquire_many_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_many_available() {$/;"	f
poll_acquire_many_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_many_unavailable() {$/;"	f
poll_acquire_one_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_one_available() {$/;"	f
poll_acquire_one_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_one_unavailable() {$/;"	f
poll_acquire_one_zero_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_one_zero_permits() {$/;"	f
poll_and_cancel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^    async fn poll_and_cancel(semaphore: Arc<Semaphore>) {$/;"	f	function:concurrent_cancel
poll_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn poll_at(&self) -> Option<u64> {$/;"	P	implementation:Wheel
poll_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn poll_close(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error/;"	P	implementation:WebSocket
poll_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn poll_closed(&mut self, cx: &mut Context<'_>) -> Poll<()> {$/;"	P	implementation:Sender
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_complete(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:File
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn poll_complete(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:Cursor
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn poll_complete(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	f
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn poll_complete(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>;$/;"	P	interface:AsyncSeek
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_complete(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:BufReader
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_complete(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:BufStream
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_complete(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:BufWriter
poll_copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    pub(super) fn poll_copy<R, W>($/;"	P	implementation:CopyBuffer
poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    poll_count: u64,$/;"	m	struct:MetricsBatch
poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) poll_count: AtomicU64,$/;"	m	struct:WorkerMetrics
poll_count_on_last_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    poll_count_on_last_park: u64,$/;"	m	struct:MetricsBatch
poll_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    fn poll_data($/;"	f
poll_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn poll_data($/;"	f
poll_drop_handle_then_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn poll_drop_handle_then_drop() {$/;"	f	module:group_b
poll_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn poll_elapsed($/;"	P	implementation:TimerEntry
poll_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    fn poll_elapsed(self: Pin<&mut Self>, cx: &mut task::Context<'_>) -> Poll<Result<(), Error>>/;"	P	implementation:Sleep
poll_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn poll_event(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Bytes> {$/;"	P	implementation:KeepAliveStream
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:Cursor
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:u8
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	f
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>;$/;"	P	interface:AsyncBufRead
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:BufReader
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:BufStream
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:BufWriter
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	f
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    fn poll_fill_buf<R>($/;"	P	implementation:CopyBuffer
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:Empty
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:Take
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error/;"	P	implementation:WebSocket
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_flush(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:Inner
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	P	implementation:File
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Cursor
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Vec
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>;$/;"	P	interface:AsyncWrite
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	f
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:WriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	P	implementation:Stderr
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Result<(), io::Error>/;"	P	implementation:tests::LoggingMockWriter
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Result<(), io::Error>/;"	P	implementation:tests::TextMockWriter
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn poll_flush($/;"	f
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	P	implementation:Stdout
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufReader
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufStream
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufWriter
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_flush($/;"	P	implementation:DuplexStream
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut task::Context<'_>) -> Poll<std::io::Result<()>> /;"	P	implementation:Pipe
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:Sink
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:WriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:OwnedWriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:TcpStream
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Sender
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:WriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:OwnedWriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixStream
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeClient
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeServer
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdin
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdio
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdio
poll_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/mod.rs	/^mod poll_fn;$/;"	n
poll_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^pub fn poll_fn<T, F>(f: F) -> PollFn<F>$/;"	f
poll_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^fn poll_future<T: Future, S: Schedule>(core: &Core<T, S>, cx: Context<'_>) -> Poll<()> {$/;"	f
poll_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn poll_inner(&self) -> PollFuture {$/;"	f
poll_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    fn poll_io<R>($/;"	P	implementation:Registration
poll_join_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn poll_join_next(&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<T, JoinError>>> {$/;"	P	implementation:JoinSet
poll_join_next_with_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn poll_join_next_with_id($/;"	P	implementation:JoinSet
poll_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_lock(&self, cx: &mut Context<'_>) -> Poll<Guard<'_, T>> {$/;"	P	implementation:Inner
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {$/;"	P	implementation:Field
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^    fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {$/;"	P	implementation:BodyStream
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {$/;"	P	implementation:WebSocket
poll_next_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub fn poll_next_entry(&mut self, cx: &mut Context<'_>) -> Poll<io::Result<Option<DirEntry>>/;"	P	implementation:ReadDir
poll_next_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub fn poll_next_line($/;"	f
poll_next_segment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^    pub fn poll_next_segment($/;"	f
poll_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn poll_notified(self: Pin<&mut Self>, waker: Option<&Waker>) -> Poll<()> {$/;"	P	implementation:Notified
poll_peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn poll_peek($/;"	P	implementation:ReadHalf
poll_peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn poll_peek($/;"	P	implementation:OwnedReadHalf
poll_peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn poll_peek($/;"	P	implementation:TcpStream
poll_peek_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_peek_from($/;"	P	implementation:UdpSocket
poll_peek_sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_peek_sender(&self, cx: &mut Context<'_>) -> Poll<io::Result<SocketAddr>> {$/;"	P	implementation:UdpSocket
poll_process_levels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn poll_process_levels() {$/;"	f
poll_process_levels_targeted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn poll_process_levels_targeted() {$/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_read($/;"	P	implementation:File
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^    fn poll_read($/;"	P	implementation:Cursor
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^    fn poll_read($/;"	P	implementation:u8
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^    fn poll_read($/;"	P	interface:AsyncRead
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^    fn poll_read($/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    fn poll_read($/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_read($/;"	P	implementation:ReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^    fn poll_read($/;"	P	implementation:Stdin
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_read($/;"	P	implementation:BufReader
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_read($/;"	P	implementation:BufStream
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_read($/;"	P	implementation:BufWriter
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn poll_read($/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn poll_read($/;"	P	implementation:Empty
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_read($/;"	P	implementation:DuplexStream
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/repeat.rs	/^    fn poll_read($/;"	P	implementation:Repeat
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    fn poll_read($/;"	P	implementation:Take
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_read($/;"	P	implementation:ReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_read($/;"	P	implementation:OwnedReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_read($/;"	P	implementation:TcpStream
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_read($/;"	P	implementation:Receiver
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_read($/;"	P	implementation:ReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_read($/;"	P	implementation:OwnedReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_read($/;"	P	implementation:UnixStream
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_read($/;"	P	implementation:NamedPipeClient
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_read($/;"	P	implementation:NamedPipeServer
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_read($/;"	P	implementation:ChildStderr
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_read($/;"	P	implementation:ChildStdout
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_read($/;"	P	implementation:ChildStdio
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll_read($/;"	P	implementation:ChildStdio
poll_read_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_read_internal($/;"	P	implementation:Pipe
poll_read_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn poll_read_io<R>($/;"	P	implementation:Registration
poll_read_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(crate) fn poll_read_priv($/;"	P	implementation:TcpStream
poll_read_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(crate) fn poll_read_priv($/;"	P	implementation:UnixStream
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn poll_read_ready<'a>($/;"	P	implementation:AsyncFd
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:TcpStream
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Receiver
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixStream
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeClient
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeServer
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<ReadyEvent>> {$/;"	P	implementation:Registration
poll_read_ready_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn poll_read_ready_mut<'a>($/;"	P	implementation:AsyncFd
poll_read_to_end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^fn poll_read_to_end<V: VecU8, R: AsyncRead + ?Sized>($/;"	f
poll_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn poll_readiness($/;"	P	implementation:ScheduledIo
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^    fn poll_ready(&mut self, _: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn poll_ready(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error/;"	P	implementation:WebSocket
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	P	implementation:Next
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn poll_ready(&mut self, _: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/not_found.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	P	implementation:Svc
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	P	implementation:wrong_method_service::Svc
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f	function:middleware_still_run_for_unmatched_requests
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^        fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f	function:outer_middleware_still_see_whole_url
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn poll_ready<'a>(&'a self, cx: &mut Context<'_>) -> Poll<io::Result<AioEvent>> {$/;"	P	implementation:Aio
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    fn poll_ready($/;"	P	implementation:Registration
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_recv(&self, cx: &mut Context<'_>, buf: &mut ReadBuf<'_>) -> Poll<io::Result<()>>/;"	P	implementation:UdpSocket
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_recv(&self, cx: &mut Context<'_>, buf: &mut ReadBuf<'_>) -> Poll<io::Result<()>>/;"	P	implementation:UnixDatagram
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn poll_recv(&mut self, _cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:test::MockStream
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^    fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:RxFuture
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:Signal
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>>;$/;"	P	interface:InternalStream
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:Signal
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlBreak
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlC
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlClose
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlLogoff
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlShutdown
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<T>> {$/;"	P	implementation:Receiver
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<T>> {$/;"	P	implementation:UnboundedReceiver
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn poll_recv(&self, cx: &mut Context<'_>) -> Poll<Result<T, RecvError>> {$/;"	P	implementation:Inner
poll_recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_recv_from($/;"	P	implementation:UdpSocket
poll_recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_recv_from($/;"	P	implementation:UnixDatagram
poll_recv_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_recv_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UdpSocket
poll_recv_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_recv_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixDatagram
poll_result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        poll_result: Poll<Result<(), ()>>,$/;"	m	struct:test::Mock
poll_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_send(&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>> {$/;"	P	implementation:UdpSocket
poll_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_send(&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>> {$/;"	P	implementation:UnixDatagram
poll_send_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_send_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UdpSocket
poll_send_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_send_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixDatagram
poll_send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_send_to($/;"	P	implementation:UdpSocket
poll_send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_send_to<P>($/;"	P	implementation:UnixDatagram
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>> /;"	P	implementation:File
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Vec
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>;$/;"	P	interface:AsyncWrite
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Cursor
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	f
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>> /;"	P	implementation:WriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    fn poll_shutdown($/;"	P	implementation:Stderr
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_shutdown($/;"	P	implementation:tests::LoggingMockWriter
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_shutdown($/;"	P	implementation:tests::TextMockWriter
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn poll_shutdown($/;"	f
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    fn poll_shutdown($/;"	P	implementation:Stdout
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufReader
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufStream
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_shutdown(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufWriter
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_shutdown($/;"	P	implementation:DuplexStream
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_shutdown($/;"	P	implementation:Pipe
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:Sink
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:WriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:OwnedWriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:TcpStream
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Sender
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:WriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:OwnedWriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixStream
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeClient
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeServer
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_shutdown(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdin
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdio
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll_shutdown(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdio
poll_tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn poll_tick(&mut self, cx: &mut Context<'_>) -> Poll<Instant> {$/;"	P	implementation:Interval
poll_trailers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^    fn poll_trailers($/;"	f
poll_trailers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn poll_trailers($/;"	f
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_write($/;"	P	implementation:File
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write($/;"	P	implementation:Cursor
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write($/;"	P	implementation:Vec
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write($/;"	P	interface:AsyncWrite
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write($/;"	f
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    fn poll_write($/;"	f
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_write($/;"	P	implementation:WriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    fn poll_write($/;"	P	implementation:Stderr
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_write($/;"	P	implementation:tests::LoggingMockWriter
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_write($/;"	P	implementation:tests::TextMockWriter
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn poll_write($/;"	f
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    fn poll_write($/;"	P	implementation:Stdout
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_write($/;"	P	implementation:BufReader
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_write($/;"	P	implementation:BufStream
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_write($/;"	P	implementation:BufWriter
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_write($/;"	P	implementation:DuplexStream
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn poll_write($/;"	P	implementation:Sink
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_write($/;"	P	implementation:WriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_write($/;"	P	implementation:OwnedWriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_write($/;"	P	implementation:TcpStream
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_write($/;"	P	implementation:Sender
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_write($/;"	P	implementation:WriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_write($/;"	P	implementation:OwnedWriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_write($/;"	P	implementation:UnixStream
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_write($/;"	P	implementation:NamedPipeClient
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_write($/;"	P	implementation:NamedPipeServer
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_write($/;"	P	implementation:ChildStdin
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_write($/;"	P	implementation:ChildStdio
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll_write($/;"	P	implementation:ChildStdio
poll_write_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    fn poll_write_buf<R, W>($/;"	P	implementation:CopyBuffer
poll_write_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_write_internal($/;"	P	implementation:Pipe
poll_write_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn poll_write_io<R>($/;"	P	implementation:Registration
poll_write_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(super) fn poll_write_priv($/;"	P	implementation:TcpStream
poll_write_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(crate) fn poll_write_priv($/;"	P	implementation:UnixStream
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn poll_write_ready<'a>($/;"	P	implementation:AsyncFd
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:TcpStream
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Sender
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixStream
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeClient
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeServer
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<ReadyEvent>> /;"	P	implementation:Registration
poll_write_ready_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn poll_write_ready_mut<'a>($/;"	P	implementation:AsyncFd
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write_vectored($/;"	P	implementation:Cursor
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write_vectored($/;"	P	implementation:Vec
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write_vectored($/;"	P	interface:AsyncWrite
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write_vectored($/;"	f
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_write_vectored($/;"	P	implementation:BufReader
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_write_vectored($/;"	P	implementation:BufStream
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_write_vectored($/;"	P	implementation:BufWriter
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_write_vectored($/;"	P	implementation:WriteHalf
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_write_vectored($/;"	P	implementation:OwnedWriteHalf
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_write_vectored($/;"	P	implementation:TcpStream
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_write_vectored($/;"	P	implementation:Sender
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_write_vectored($/;"	P	implementation:WriteHalf
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_write_vectored($/;"	P	implementation:OwnedWriteHalf
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_write_vectored($/;"	P	implementation:UnixStream
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_write_vectored($/;"	P	implementation:NamedPipeClient
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_write_vectored($/;"	P	implementation:NamedPipeServer
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_write_vectored($/;"	P	implementation:ChildStdin
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_write_vectored($/;"	P	implementation:ChildStdio
poll_write_vectored_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(super) fn poll_write_vectored_priv($/;"	P	implementation:TcpStream
poll_write_vectored_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(super) fn poll_write_vectored_priv($/;"	P	implementation:UnixStream
pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^pub(super) mod pool {$/;"	n
pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^mod pool;$/;"	n
pool_multi_notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn pool_multi_notify() {$/;"	f	module:group_d
pool_multi_spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn pool_multi_spawn() {$/;"	f	module:group_a
pool_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn pool_shutdown() {$/;"	f	module:group_c
pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn pop(&self) -> Option<task::Notified<Arc<Handle>>> {$/;"	P	implementation:Handle
pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn pop(&mut self) -> Option<task::Notified<T>> {$/;"	P	implementation:Local
pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn pop(&self) -> Option<task::Notified<T>> {$/;"	P	implementation:Inject
pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) fn pop(&mut self, tx: &Tx<T>) -> Option<block::Read<T>> {$/;"	P	implementation:Rx
pop_back	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn pop_back(&mut self) -> Option<L::Handle> {$/;"	P	implementation:LinkedList
pop_back_locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn pop_back_locked(&mut self, _waiters: &mut WaitList) -> Option<NonNull<Waiter>> {$/;"	P	implementation:NotifyWaitersList
pop_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn pop_local(&self) -> Option<task::Notified<Arc<Shared>>> {$/;"	P	implementation:LocalSet
pop_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^            fn pop_next(&mut self) -> bool {$/;"	P	implementation:IdleNotifiedSet::drain::AllEntries
pop_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn pop_notified(&mut self, waker: &Waker) -> Option<EntryInOneOfTheLists<'_, T>> /;"	P	implementation:IdleNotifiedSet
pop_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn pop_task(&mut self, handle: &Handle) -> Option<task::Notified<Arc<Handle>>> {$/;"	P	implementation:Core
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/utf8.rs	/^    pos: usize,$/;"	m	struct:Encode
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pos: u64,$/;"	m	struct:Inner
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pos: usize,$/;"	m	struct:Buf
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    pos: usize,$/;"	m	struct:CopyBuffer
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pos: u64,$/;"	m	struct:Slot
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pos: u64,$/;"	m	struct:Tail
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn position(&self) -> Position {$/;"	P	implementation:SliceRead
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn position(&self) -> Position {$/;"	P	implementation:StrRead
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn position(&self) -> Position {$/;"	f
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn position(&self) -> Position;$/;"	P	interface:Read
position_of_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn position_of_index(&self, i: usize) -> Position {$/;"	P	implementation:SliceRead
post	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    post: MethodEndpoint<S, B, E>,$/;"	m	struct:MethodRouter
post	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn post(&self, url: &str) -> RequestBuilder {$/;"	P	implementation:TestClient
pow10	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn pow10(self, n: i32) -> Self;$/;"	P	interface:Float
pow10	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn pow10(self, n: i32) -> f32 {$/;"	P	implementation:f32
pow10	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn pow10(self, n: i32) -> f64 {$/;"	P	implementation:f64
pre_exec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub unsafe fn pre_exec<F>(&mut self, f: F) -> &mut Command$/;"	P	implementation:Command
pre_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn pre_shutdown(&mut self, worker: &Worker) {$/;"	P	implementation:Core
prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^        prefix: String,$/;"	m	struct:tests::UriAndPrefix
prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    prefix: Arc<str>,$/;"	m	struct:StripPrefix
prelude	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod prelude {$/;"	n
pretty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    pub fn pretty(writer: W) -> Self {$/;"	f
prev	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^        prev: Budget,$/;"	m	struct:with_budget::ResetGuard
prev	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    prev: Option<NonNull<T>>,$/;"	m	struct:PointersInner
prev_len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    prev_len: usize,$/;"	m	struct:Page
prev_route_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    prev_route_id: RouteId,$/;"	m	struct:PathRouter
primitive_deserializer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	M
primitive_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	M
private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^pub(crate) mod private {$/;"	n
private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^mod private {$/;"	n
private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^mod private {$/;"	n
private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^mod private {$/;"	n
private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^mod private {$/;"	n
process	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    fn process(&mut self) {$/;"	P	implementation:Driver
process	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(self) fn process(&self, clock: &Clock) {$/;"	P	implementation:Handle
process_at_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(self) fn process_at_time(&self, mut now: u64) {$/;"	P	implementation:Handle
process_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn process_expiration(&mut self, expiration: &Expiration) {$/;"	P	implementation:Wheel
process_group	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn process_group(&mut self, pgroup: i32) -> &mut Command {$/;"	P	implementation:Command
project	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn project(self: Pin<&mut Self>) -> (Pin<&mut Waiter>, &Semaphore, u32, &mut bool) {$/;"	P	implementation:Acquire
project	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn project(self: Pin<&mut Self>) -> (&mut Receiver<T>, &UnsafeCell<Waiter>) {$/;"	P	implementation:Recv
project	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn project(self: Pin<&mut Self>) -> (&Notify, &mut State, &usize, &UnsafeCell<Waiter>) {$/;"	P	implementation:Notified
protocol	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    protocol: Option<HeaderValue>,$/;"	m	struct:WebSocket
protocol	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    protocol: Option<HeaderValue>,$/;"	m	struct:WebSocketUpgrade
protocol	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn protocol(&self) -> Option<&HeaderValue> {$/;"	P	implementation:WebSocket
protocols	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn protocols<I>(mut self, protocols: I) -> Self$/;"	P	implementation:WebSocketUpgrade
provide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {$/;"	f
provide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {$/;"	P	implementation:Error
provide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {$/;"	f
provide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    unsafe fn provide<'a>(this: Ref<'a, Self>, demand: &mut Demand<'a>) {$/;"	P	implementation:ErrorImpl
provide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^    fn provide<'a>(&'a self, demand: &mut Demand<'a>) {$/;"	P	implementation:BoxedError
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod ptr;$/;"	n
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Mut
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Own
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Ref
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    ptr: *const u8,$/;"	m	struct:ReadBufParts
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    ptr: NonNull<Header>,$/;"	m	struct:RawTask
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn ptr(r: &Pin<Box<Entry>>) -> NonNull<Entry> {$/;"	f	module:tests
ptr_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn ptr_eq(&self, other: &Handle) -> bool {$/;"	P	implementation:Handle
ptr_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn ptr_eq(&self, other: &Shared) -> bool {$/;"	P	implementation:Shared
push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn push(&self, task: task::Notified<T>) {$/;"	P	implementation:Inject
push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) fn push(&self, value: T) {$/;"	P	implementation:Tx
push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    pub(crate) fn push(&mut self, val: Waker) {$/;"	P	implementation:WakeList
push_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn push_all<'a>($/;"	f	module:tests
push_and_drain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn push_and_drain() {$/;"	f	module:tests
push_back	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn push_back($/;"	P	implementation:Local
push_batch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn push_batch<I>(&self, mut iter: I)$/;"	P	implementation:Inject
push_batch_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    fn push_batch_inner($/;"	P	implementation:Inject
push_front	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn push_front(&mut self, val: L::Handle) {$/;"	P	implementation:LinkedList
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn push_orphan(&self, orphan: StdChild) {$/;"	P	implementation:GlobalOrphanQueue
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn push_orphan(&self, orphan: W) {$/;"	P	implementation:test::MockQueue
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn push_orphan(&self, orphan: T) {$/;"	P	implementation:O
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn push_orphan(&self, orphan: T);$/;"	P	interface:OrphanQueue
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    pub(crate) fn push_orphan(&self, orphan: T)$/;"	P	implementation:OrphanQueueImpl
push_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn push_overflow($/;"	P	implementation:Local
push_pop_push_pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn push_pop_push_pop() {$/;"	f	module:tests
push_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn push_task(&mut self, handle: &Handle, task: task::Notified<Arc<Handle>>) {$/;"	P	implementation:Core
put	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    put: MethodEndpoint<S, B, E>,$/;"	m	struct:MethodRouter
put	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn put(&self, url: &str) -> RequestBuilder {$/;"	P	implementation:TestClient
put_back_original_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^fn put_back_original_data(output: &mut String, mut vector: Vec<u8>, num_bytes_read: usize) {$/;"	f
put_slice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn put_slice(&mut self, buf: &[u8]) {$/;"	P	implementation:ReadBuf
query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^mod query;$/;"	n
query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod query {$/;"	n
query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query ($/;"	M
query_as	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_as ($/;"	M
query_as_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_as_unchecked ($/;"	M
query_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file ($/;"	M
query_file_as	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_as ($/;"	M
query_file_as_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_as_unchecked ($/;"	M
query_file_scalar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_scalar ($/;"	M
query_file_scalar_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_scalar_unchecked ($/;"	M
query_file_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_unchecked ($/;"	M
query_scalar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_scalar ($/;"	M
query_scalar_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_scalar_unchecked ($/;"	M
query_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_unchecked ($/;"	M
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    queue: Mutex<Vec<T>>,$/;"	m	struct:OrphanQueueImpl
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    queue: VecDeque<Task>,$/;"	m	struct:Shared
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    queue: Mutex<Option<VecDeque<task::Notified<Arc<Handle>>>>>,$/;"	m	struct:Shared
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^pub(crate) mod queue;$/;"	n
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    queue: VecDeque<task::Notified<Runtime>>,$/;"	m	struct:Core
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    queue: LinkedList<Waiter, <Waiter as linked_list::Link>::Target>,$/;"	m	struct:Waitlist
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    queue: Mutex<Option<VecDeque<task::Notified<Arc<Shared>>>>>,$/;"	m	struct:Shared
queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    queue_depth: AtomicUsize,$/;"	m	struct:SpawnerMetrics
queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) fn queue_depth(&self) -> usize {$/;"	P	implementation:WorkerMetrics
queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) queue_depth: AtomicUsize,$/;"	m	struct:WorkerMetrics
queue_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) queue_next: UnsafeCell<Option<NonNull<Header>>>,$/;"	m	struct:Header
queued	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    queued: bool,$/;"	m	struct:Acquire
queued	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    queued: bool,$/;"	m	struct:Waiter
quit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn quit() -> Self {$/;"	P	implementation:SignalKind
r	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    r: u32,$/;"	m	struct:RngSeed
racy_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn racy_shutdown() {$/;"	f	module:group_a
rand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^pub(crate) mod rand {$/;"	n
rand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod rand {$/;"	n
rand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    rand: FastRand,$/;"	m	struct:Core
rand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod rand;$/;"	n
range	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^mod range {$/;"	n
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod raw;$/;"	n
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    raw: Arc<StdFile>,$/;"	m	struct:ChildStdio
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    raw: RawTask,$/;"	m	struct:AbortHandle
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    raw: RawTask,$/;"	m	struct:Task
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    raw: RawTask,$/;"	m	struct:UnownedTask
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod raw;$/;"	n
raw_buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    raw_buffer: Option<Vec<u8>>,$/;"	m	struct:IoRead
raw_buffering_start_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    raw_buffering_start_index: usize,$/;"	m	struct:SliceRead
raw_form	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^mod raw_form;$/;"	n
raw_path_params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn raw_path_params() {$/;"	f	module:tests
raw_query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^mod raw_query;$/;"	n
raw_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    pub raw_value: Option<&'de str>,$/;"	m	struct:BorrowedRawDeserializer
raw_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    pub raw_value: Option<String>,$/;"	m	struct:OwnedRawDeserializer
raw_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^fn raw_waker(header: NonNull<Header>) -> RawWaker {$/;"	f
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ptr.rs	/^    pub unsafe fn read(self) -> T {$/;"	P	implementation:Mut
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    read: R,$/;"	m	struct:Deserializer
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod read;$/;"	n
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:MockFile
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod read;$/;"	n
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn read(&mut self, read: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read.rs	/^pub async fn read(path: impl AsRef<Path>) -> io::Result<Vec<u8>> {$/;"	f
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    read: Arc<Mutex<Pipe>>,$/;"	m	struct:DuplexStream
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read.rs	/^pub(crate) fn read<'a, R>(reader: &'a mut R, buf: &'a mut [u8]) -> Read<'a, R>$/;"	f
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn read(&self) -> LockResult<RwLockReadGuard<'_, T>> {$/;"	P	implementation:RwLock
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn read(&mut self, allowed: bool) -> &mut Self {$/;"	P	implementation:ClientOptions
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn read(&mut self, bytes: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Pipe
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn read(&mut self, bytes: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ArcFile
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn read(&self, slot_index: usize) -> Option<Read<T>> {$/;"	P	implementation:Block
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub async fn read(&self) -> RwLockReadGuard<'_, T> {$/;"	P	implementation:RwLock
read_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod read_buf;$/;"	n
read_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_buf.rs	/^pub(crate) fn read_buf<'a, R, B>(reader: &'a mut R, buf: &'a mut B) -> ReadBuf<'a, R, B>$/;"	f
read_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod read_dir;$/;"	n
read_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^pub async fn read_dir(path: impl AsRef<Path>) -> io::Result<ReadDir> {$/;"	f
read_done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    read_done: bool,$/;"	m	struct:CopyBuffer
read_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_err() {$/;"	f
read_err_then_read_success	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_err_then_read_success() {$/;"	f
read_exact	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^pub(crate) fn read_exact<'a, A>(reader: &'a mut A, buf: &'a mut [u8]) -> ReadExact<'a, A>$/;"	f
read_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn read_from<T: Read>(&mut self, rd: &mut T) -> io::Result<usize> {$/;"	P	implementation:Buf
read_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod read_guard;$/;"	n
read_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^pub(crate) fn read_line<'a, R>(reader: &'a mut R, string: &'a mut String) -> ReadLine<'a, R>$/;"	f
read_line_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^pub(super) fn read_line_internal<R: AsyncBufRead + ?Sized>($/;"	f
read_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod read_link;$/;"	n
read_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_link.rs	/^pub async fn read_link(path: impl AsRef<Path>) -> io::Result<PathBuf> {$/;"	f
read_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub async fn read_owned(self: Arc<Self>) -> OwnedRwLockReadGuard<T> {$/;"	P	implementation:RwLock
read_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn read_state(&self) -> Poll<TimerResult> {$/;"	P	implementation:StateCell
read_to_end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^pub(crate) fn read_to_end<'a, R>(reader: &'a mut R, buffer: &'a mut Vec<u8>) -> ReadToEnd<'a, R>$/;"	f
read_to_end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        async fn read_to_end<A: AsyncRead + Unpin>(io: &mut Option<A>) -> io::Result<Vec<u8>> {$/;"	f	method:Child::wait_with_output
read_to_end_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^pub(super) fn read_to_end_internal<V: VecU8, R: AsyncRead + ?Sized>($/;"	f
read_to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod read_to_string;$/;"	n
read_to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_to_string.rs	/^pub async fn read_to_string(path: impl AsRef<Path>) -> io::Result<String> {$/;"	f
read_to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^pub(crate) fn read_to_string<'a, R>($/;"	f
read_to_string_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^fn read_to_string_internal<R: AsyncRead + ?Sized>($/;"	f
read_twice_before_dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_twice_before_dispatch() {$/;"	f
read_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^pub(crate) fn read_until<'a, R>($/;"	f
read_until_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^pub(super) fn read_until_internal<R: AsyncBufRead + ?Sized>($/;"	f
read_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    read_waker: Option<Waker>,$/;"	m	struct:Pipe
read_with_bigger_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_with_bigger_buf() {$/;"	f
read_with_buffer_larger_than_max	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_with_buffer_larger_than_max() {$/;"	f
read_with_smaller_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_with_smaller_buf() {$/;"	f
read_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn read_write(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:OpenOptions
read_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    read_write: bool,$/;"	m	struct:OpenOptions
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub async fn readable<'a>(&'a self) -> io::Result<AsyncFdReadyGuard<'a, T>> {$/;"	P	implementation:AsyncFd
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:ReadHalf
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:OwnedReadHalf
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:TcpStream
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:UdpSocket
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:UnixDatagram
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:Receiver
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:ReadHalf
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:OwnedReadHalf
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:UnixStream
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeClient
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeServer
readable_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub async fn readable_mut<'a>(&'a mut self) -> io::Result<AsyncFdReadyMutGuard<'a, T>> {$/;"	P	implementation:AsyncFd
reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    reader: &'a mut R,$/;"	m	struct:Copy
reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_int.rs	/^macro_rules! reader {$/;"	M
reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    reader: Option<Waker>,$/;"	m	struct:Waiters
reader8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_int.rs	/^macro_rules! reader8 {$/;"	M
readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    async fn readiness(&self, interest: Interest) -> io::Result<AsyncFdReadyGuard<'_, T>> {$/;"	P	implementation:AsyncFd
readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    readiness: AtomicUsize,$/;"	m	struct:ScheduledIo
readiness_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    async fn readiness_mut($/;"	P	implementation:AsyncFd
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod ready;$/;"	n
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/ready.rs	/^macro_rules! ready {$/;"	M
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:ReadHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:WriteHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:OwnedReadHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:OwnedWriteHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:TcpStream
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:UdpSocket
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:UnixDatagram
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:Receiver
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:Sender
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:ReadHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:WriteHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:OwnedReadHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:OwnedWriteHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:UnixStream
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:NamedPipeClient
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:NamedPipeServer
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) ready: Ready,$/;"	m	struct:ReadyEvent
ready_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(super) ready_count: AtomicU64,$/;"	m	struct:IoDriverMetrics
ready_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn ready_event(&self, interest: Interest) -> ReadyEvent {$/;"	P	implementation:ScheduledIo
ready_slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    ready_slots: AtomicUsize,$/;"	m	struct:BlockHeader
reap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^mod reap;$/;"	n
reap_orphans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    pub(crate) fn reap_orphans(handle: &SignalHandle) {$/;"	P	implementation:GlobalOrphanQueue
reap_orphans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    pub(crate) fn reap_orphans(&self, handle: &SignalHandle)$/;"	P	implementation:OrphanQueueImpl
reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn reaper() {$/;"	f	module:test
reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub reason: Cow<'t, str>,$/;"	m	struct:CloseFrame
reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    pub fn reason(&self) -> &TypedHeaderRejectionReason {$/;"	P	implementation:TypedHeaderRejection
reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    reason: TypedHeaderRejectionReason,$/;"	m	struct:TypedHeaderRejection
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    receiver: UnixStream,$/;"	m	struct:Driver
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub(crate) receiver: UnixStream,$/;"	m	struct:OsExtraData
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    receiver: &'a mut Receiver<T>,$/;"	m	struct:Recv
receiver_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn receiver_count(&self) -> usize {$/;"	P	implementation:Sender
receiver_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn receiver_count(&self) -> usize {$/;"	P	implementation:Sender
reclaim	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn reclaim(&mut self) {$/;"	P	implementation:Block
reclaim_block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) unsafe fn reclaim_block(&self, mut block: NonNull<Block<T>>) {$/;"	P	implementation:Tx
reclaim_blocks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn reclaim_blocks(&mut self, tx: &Tx<T>) {$/;"	P	implementation:Rx
record_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn record_event(&self, event_id: EventId) {$/;"	P	implementation:Registry
record_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pub(crate) fn record_event(&self, event_id: EventId) {$/;"	P	implementation:Globals
record_invalid_event_does_nothing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn record_invalid_event_does_nothing() {$/;"	f	module:tests
recursive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    pub fn recursive(&mut self, recursive: bool) -> &mut Self {$/;"	P	implementation:DirBuilder
recursive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    recursive: bool,$/;"	m	struct:DirBuilder
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub async fn recv(&mut self) -> Option<Result<Message, Error>> {$/;"	P	implementation:WebSocket
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UnixDatagram
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    pub(crate) fn recv(self) -> T {$/;"	P	implementation:Receiver
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^    async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:RxFuture
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:Signal
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlBreak
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlC
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlClose
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlLogoff
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlShutdown
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub async fn recv(&mut self) -> Result<T, RecvError> {$/;"	P	implementation:Receiver
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn recv(&mut self) -> Option<T> {$/;"	P	implementation:Receiver
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<T>> {$/;"	P	implementation:Rx
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub async fn recv(&mut self) -> Option<T> {$/;"	P	implementation:UnboundedReceiver
recv_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn recv_buffer_size(&self) -> io::Result<u32> {$/;"	P	implementation:TcpSocket
recv_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn recv_closed() {$/;"	f
recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UdpSocket
recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UnixDatagram
recv_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn recv_ref($/;"	P	implementation:Receiver
redirect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^mod redirect;$/;"	n
ref_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_count(self) -> usize {$/;"	P	implementation:Snapshot
ref_count_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    ref_count_rx: AtomicUsize,$/;"	m	struct:Shared
ref_dec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_dec(&mut self) {$/;"	P	implementation:Snapshot
ref_dec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_dec(&self) -> bool {$/;"	P	implementation:State
ref_dec_twice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_dec_twice(&self) -> bool {$/;"	P	implementation:State
ref_inc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn ref_inc(self) {$/;"	P	implementation:RawTask
ref_inc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn ref_inc(&mut self) {$/;"	P	implementation:Snapshot
ref_inc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_inc(&self) {$/;"	P	implementation:State
refresh	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn refresh(&mut self, page: &Page<T>) {$/;"	P	implementation:CachedPage
register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn register($/;"	P	implementation:MioSource
register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn register(&mut self, kq: RawFd, token: usize);$/;"	P	interface:AioSource
register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn register($/;"	P	implementation:Pipe
register_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    pub(crate) fn register_by_ref(&self, waker: &Waker) {$/;"	P	implementation:AtomicWaker
register_listener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn register_listener(&self, event_id: EventId) -> watch::Receiver<()> {$/;"	P	implementation:Registry
register_listener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pub(crate) fn register_listener(&self, event_id: EventId) -> watch::Receiver<()> {$/;"	P	implementation:Globals
register_panics_on_invalid_input	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn register_panics_on_invalid_input() {$/;"	f	module:tests
registered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    registered: bool,$/;"	m	struct:TimerEntry
registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    registration: Registration,$/;"	m	struct:AsyncFd
registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    registration: Registration,$/;"	m	struct:Aio
registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn registration(&self) -> &Registration {$/;"	P	implementation:PollEvented
registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^mod registration;$/;"	n
registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    registry: mio::Registry,$/;"	m	struct:Handle
registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^pub(crate) mod registry;$/;"	n
registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    registry: Registry<OsStorage>,$/;"	m	struct:Globals
reject_remote_clients	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn reject_remote_clients(&mut self, reject: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
reject_remote_clients	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    reject_remote_clients: bool,$/;"	m	struct:ServerOptions
rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^pub mod rejection;$/;"	n
rejection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^pub mod rejection {$/;"	n
rejection_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        rejection_type: String,$/;"	m	struct:logging_rejections::RejectionEvent
rejects_http_1_0_requests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    async fn rejects_http_1_0_requests() {$/;"	f	module:tests
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^    fn release(&self, _task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:BlockingSchedule
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn release(&self, task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:Arc
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn release(&self, task: &Task) -> Option<Task> {$/;"	P	implementation:Arc
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn release(&self) -> usize {$/;"	f
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn release(&self, task: &Task<Self>) -> Option<Task<Self>>;$/;"	P	interface:Schedule
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^        fn release(&self, _task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:noop_scheduler::NoopSchedule
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^    fn release(&self, _task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:Runtime
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn release(&self, task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:Runtime
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn release(&self, added: usize) {$/;"	P	implementation:Semaphore
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn release(mut self) -> Sender<T> {$/;"	P	implementation:OwnedPermit
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn release() {$/;"	f
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn release(&self, task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:Arc
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn release(&self) -> Arc<Page<T>> {$/;"	P	implementation:Value
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn release(&self, value: *const Value<T>) {$/;"	P	implementation:Page
release_during_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn release_during_acquire() {$/;"	f
release_permits_at_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn release_permits_at_drop() {$/;"	f
rem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    rem: AtomicUsize,$/;"	m	struct:Slot
remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn remaining(&self) -> usize {$/;"	P	implementation:ReadBuf
remaining_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    remaining_depth: u8,$/;"	m	struct:Deserializer
remote_abort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn remote_abort(&self) {$/;"	P	implementation:RawTask
remote_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn remote_schedule_count(&self) -> u64 {$/;"	P	implementation:RuntimeMetrics
remote_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(super) remote_schedule_count: AtomicU64,$/;"	m	struct:SchedulerMetrics
remotes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    remotes: Box<[Remote]>,$/;"	m	struct:Shared
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn remove(self) -> Value {$/;"	P	implementation:OccupiedEntry
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn remove<Q>(&mut self, key: &Q) -> Option<Value>$/;"	P	implementation:Map
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn remove(&self, task: &Task<S>) -> Option<Task<S>> {$/;"	P	implementation:LocalOwnedTasks
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn remove(&self, task: &Task<S>) -> Option<Task<S>> {$/;"	P	implementation:OwnedTasks
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) unsafe fn remove(&mut self, item: NonNull<TimerShared>) {$/;"	P	implementation:Wheel
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn remove(self) -> T {$/;"	P	implementation:EntryInOneOfTheLists
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) unsafe fn remove(&mut self, node: NonNull<L::Target>) -> Option<L::Handle> {$/;"	P	implementation:LinkedList
remove_by_address	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn remove_by_address() {$/;"	f	module:tests
remove_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod remove_dir;$/;"	n
remove_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/remove_dir.rs	/^pub async fn remove_dir(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
remove_dir_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod remove_dir_all;$/;"	n
remove_dir_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/remove_dir_all.rs	/^pub async fn remove_dir_all(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
remove_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn remove_entry<Q>(&mut self, key: &Q) -> Option<(String, Value)>$/;"	P	implementation:Map
remove_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) unsafe fn remove_entry(&mut self, item: NonNull<TimerShared>) {$/;"	P	implementation:Level
remove_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod remove_file;$/;"	n
remove_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/remove_file.rs	/^pub async fn remove_file(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
rename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod rename;$/;"	n
rename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/rename.rs	/^pub async fn rename(from: impl AsRef<Path>, to: impl AsRef<Path>) -> io::Result<()> {$/;"	f
render	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^fn render(msg: &'static str, lhs: &dyn Debug, rhs: &dyn Debug) -> Error {$/;"	f
replace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) fn replace(&self, val: Option<Rc<T>>) -> Option<Rc<T>> {$/;"	P	implementation:RcCell
replace_endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn replace_endpoint(&mut self, path: &str, endpoint: Endpoint<S, B>) {$/;"	f
replace_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    pub(crate) fn replace_seed(&self, seed: RngSeed) -> RngSeed {$/;"	P	implementation:FastRand
request_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^mod request_parts;$/;"	n
reregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn reregister($/;"	P	implementation:MioSource
reregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn reregister($/;"	P	implementation:Pipe
reregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(self) unsafe fn reregister($/;"	P	implementation:Handle
reserve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn reserve(&mut self, num_bytes: usize) {$/;"	f
reserve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn reserve(&self) -> Result<Permit<'_, T>, SendError<()>> {$/;"	P	implementation:Sender
reserve_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    async fn reserve_inner(&self) -> Result<(), SendError<()>> {$/;"	P	implementation:Sender
reserve_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn reserve_owned(self) -> Result<OwnedPermit<T>, SendError<()>> {$/;"	P	implementation:Sender
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    fn reset(self: Pin<&mut Self>) {$/;"	P	implementation:KeepAliveStream
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    fn reset(&self) {$/;"	P	implementation:ScheduledIo
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn reset(mut self: Pin<&mut Self>, new_time: Instant, reregister: bool) {$/;"	P	implementation:TimerEntry
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn reset(&mut self) {$/;"	P	implementation:Interval
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub fn reset(self: Pin<&mut Self>, deadline: Instant) {$/;"	P	implementation:Sleep
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^        fn reset(&self) {$/;"	P	implementation:test::Foo
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn reset(&self);$/;"	P	interface:Entry
reset_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn reset_future() {$/;"	f
reset_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    fn reset_inner(self: Pin<&mut Self>, deadline: Instant) {$/;"	P	implementation:Sleep
reset_without_reregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub(crate) fn reset_without_reregister(self: Pin<&mut Self>, deadline: Instant) {$/;"	P	implementation:Sleep
reset_woken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn reset_woken(&self) -> bool {$/;"	P	implementation:Handle
resolve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        fn resolve(&mut self) {$/;"	P	implementation:capture::Capture
resolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        resolved: bool,$/;"	m	struct:capture::Capture
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Barrier
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Semaphore
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:MappedMutexGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:MappedMutexGuardInner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Mutex
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:MutexGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:MutexGuardInner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:OwnedMappedMutexGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:OwnedMappedMutexGuardInner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:OwnedMutexGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:OwnedMutexGuardInner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Receiver
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Sender
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    resource_span: tracing::Span,$/;"	m	struct:RwLock
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:OwnedRwLockReadGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:OwnedRwLockWriteGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:OwnedRwLockMappedWriteGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:RwLockReadGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:RwLockWriteGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:RwLockMappedWriteGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Semaphore
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Interval
resources	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    resources: Slab<ScheduledIo>,$/;"	m	struct:Driver
response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^pub mod response;$/;"	n
response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    response: reqwest::Response,$/;"	m	struct:TestResponse
resubscribe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn resubscribe(&self) -> Self {$/;"	P	implementation:Receiver
result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    result: UnsafeCell<TimerResult>,$/;"	m	struct:StateCell
retain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn retain<F>(&mut self, f: F)$/;"	P	implementation:Map
retain_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn retain_ready(&mut self) {$/;"	P	implementation:AsyncFdReadyGuard
retain_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn retain_ready(&mut self) {$/;"	P	implementation:AsyncFdReadyMutGuard
retry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn retry(mut self, duration: Duration) -> Event {$/;"	P	implementation:Event
return_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        return_err: bool,$/;"	m	struct:test::MockWait
returned_from_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn returned_from_park(&mut self) {$/;"	P	implementation:MetricsBatch
returned_from_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn returned_from_park(&mut self) {}$/;"	P	implementation:MetricsBatch
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn reunite(self, other: OwnedReadHalf) -> Result<TcpStream, ReuniteError> {$/;"	P	implementation:OwnedWriteHalf
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn reunite(self, other: OwnedWriteHalf) -> Result<TcpStream, ReuniteError> {$/;"	P	implementation:OwnedReadHalf
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub(crate) fn reunite($/;"	f
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn reunite(self, other: OwnedReadHalf) -> Result<UnixStream, ReuniteError> {$/;"	P	implementation:OwnedWriteHalf
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn reunite(self, other: OwnedWriteHalf) -> Result<UnixStream, ReuniteError> {$/;"	P	implementation:OwnedReadHalf
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub(crate) fn reunite($/;"	f
reusable_box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^mod reusable_box;$/;"	n
reuseaddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn reuseaddr(&self) -> io::Result<bool> {$/;"	P	implementation:TcpSocket
reuseport	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn reuseport(&self) -> io::Result<bool> {$/;"	P	implementation:TcpSocket
rng	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    rng: FastRand,$/;"	m	struct:Context
root	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn root(_: Request<Body>) -> &'static str {$/;"	f	function:hello_world
root	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn root(_: Request<Body>) -> &'static str {$/;"	f	function:multiple_methods_for_one_handler
root_cause	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    pub fn root_cause(&self) -> &(dyn StdError + 'static) {$/;"	P	implementation:Error
round_downward	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn round_downward(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
round_nearest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn round_nearest(fp: &mut ExtendedFloat, shift: i32) -> (bool, bool) {$/;"	f
round_nearest_tie_even	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bhcomp.rs	/^fn round_nearest_tie_even(fp: &mut ExtendedFloat, shift: i32, is_truncated: bool) {$/;"	f
round_nearest_tie_even	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn round_nearest_tie_even(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
round_positive_even	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn round_positive_even(self) -> Self {$/;"	P	interface:Float
round_to_float	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn round_to_float<F, Algorithm>(fp: &mut ExtendedFloat, algorithm: Algorithm)$/;"	f
round_to_native	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/float.rs	/^    pub(crate) fn round_to_native<F, Algorithm>(&mut self, algorithm: Algorithm)$/;"	P	implementation:ExtendedFloat
round_to_native	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn round_to_native<F, Algorithm>(fp: &mut ExtendedFloat, algorithm: Algorithm)$/;"	f
round_toward	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^fn round_toward(fp: &mut ExtendedFloat, shift: i32) -> bool {$/;"	f
rounding	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^pub(crate) mod rounding;$/;"	n
route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn route(mut self, path: &str, method_router: MethodRouter<S, B>) -> Self {$/;"	f
route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^mod route;$/;"	n
route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn route($/;"	f
route_endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn route_endpoint($/;"	f
route_id_to_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    route_id_to_path: HashMap<RouteId, Arc<str>>,$/;"	m	struct:Node
route_layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn route_layer() {$/;"	f	module:tests
route_layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn route_layer<L>(mut self, layer: L) -> MethodRouter<S, B, E>$/;"	f
route_layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn route_layer<L>(self, layer: L) -> Self$/;"	f
route_layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn route_layer<L>(self, layer: L) -> Self$/;"	f
route_layer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn route_layer() {$/;"	f
route_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn route_service<T>(mut self, path: &str, service: T) -> Self$/;"	f
route_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn route_service<T>($/;"	f
router	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/boxed.rs	/^    pub(crate) router: Router<S, B>,$/;"	m	struct:MakeErasedRouter
router_type_doesnt_change	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn router_type_doesnt_change() {$/;"	f
routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    routes: HashMap<RouteId, Endpoint<S, B>>,$/;"	m	struct:PathRouter
routes_must_start_with_slash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn routes_must_start_with_slash() {$/;"	f
routes_with_overlapping_method_routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^fn routes_with_overlapping_method_routes() {$/;"	f
routing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^pub mod routing;$/;"	n
routing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn routing() {$/;"	f
routing_between_services	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn routing_between_services() {$/;"	f
routing_to_router_panics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn routing_to_router_panics() {$/;"	f
rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        rt: crate::runtime::Runtime,$/;"	m	struct:test_combination::Rt
rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn rt(start_paused: bool) -> crate::runtime::Runtime {$/;"	f
rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn rt() -> Runtime {$/;"	f	module:tests
rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn rt() -> Runtime {$/;"	f	module:tests
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    pub async fn run(mut self, req: Request<B>) -> Response {$/;"	P	implementation:Next
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn run(&self, worker_thread_id: usize) {$/;"	P	implementation:Inner
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn run(self) {$/;"	P	implementation:Task
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn run(&self, mut core: Box<Core>) -> RunResult {$/;"	P	implementation:Context
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^fn run(worker: Arc<Worker>) {$/;"	f
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(crate) fn run(self) {$/;"	P	implementation:LocalNotified
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(crate) fn run(self) {$/;"	P	implementation:UnownedTask
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^        fn run(ctx: &Context) {$/;"	f	function:try_recv
run_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    pub(in super::super) fn run_one() {$/;"	f	module:pool
run_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    run_queue: queue::Local<Arc<Handle>>,$/;"	m	struct:Core
run_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn run_task<R>(&self, mut core: Box<Core>, f: impl FnOnce() -> R) -> (Box<Core>, R) {$/;"	P	implementation:Context
run_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn run_task(&self, task: Notified, mut core: Box<Core>) -> RunResult {$/;"	P	implementation:Context
run_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub async fn run_until<F>(&self, future: F) -> F::Output$/;"	P	implementation:LocalSet
runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    runtime: Cell<EnterRuntime>,$/;"	m	struct:Context
runtime_flavor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn runtime_flavor(&self) -> RuntimeFlavor {$/;"	P	implementation:Handle
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    rx: oneshot::Receiver<T>,$/;"	m	struct:JoinHandle
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    rx: oneshot::Receiver<()>,$/;"	m	struct:Waiting
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^    rx: oneshot::Receiver<()>,$/;"	m	struct:Receiver
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    rx: Receiver<()>,$/;"	m	struct:BlockedFuture
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    rx: Receiver<()>,$/;"	m	struct:ResetFuture
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^            rx: Mutex<mpsc::Receiver<()>>,$/;"	m	struct:try_recv::Context
rx_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    rx_closed: bool,$/;"	m	struct:RxFields
rx_cnt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    rx_cnt: usize,$/;"	m	struct:Tail
rx_fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    rx_fields: UnsafeCell<RxFields<T>>,$/;"	m	struct:Chan
rx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    rx_task: Task,$/;"	m	struct:Inner
rx_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    rx_waker: AtomicWaker,$/;"	m	struct:Chan
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    s: &'a semaphore::Semaphore,$/;"	m	struct:MappedMutexGuard
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    s: &'a semaphore::Semaphore,$/;"	m	struct:MappedMutexGuardInner
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    s: semaphore::Semaphore,$/;"	m	struct:Mutex
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    s: Semaphore,$/;"	m	struct:RwLock
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub(super) s: &'a Semaphore,$/;"	m	struct:RwLockReadGuard
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    s: &'a Semaphore,$/;"	m	struct:Inner
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) s: &'a Semaphore,$/;"	m	struct:RwLockWriteGuard
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    s: &'a Semaphore,$/;"	m	struct:Inner
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) s: &'a Semaphore,$/;"	m	struct:RwLockMappedWriteGuard
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    s: &'a Semaphore,$/;"	m	struct:Inner
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    s: u32,$/;"	m	struct:RngSeed
same_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn same_channel(&self, other: &Self) -> bool {$/;"	P	implementation:Sender
same_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn same_channel(&self, other: &Self) -> bool {$/;"	P	implementation:Tx
same_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn same_channel(&self, other: &Self) -> bool {$/;"	P	implementation:UnboundedSender
same_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn same_channel(&self, other: &Self) -> bool {$/;"	P	implementation:Receiver
same_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub fn same_type<T>(_1: &T, _2: &T) {}$/;"	f
saturating_duration_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn saturating_duration_since(&self, earlier: Instant) -> Duration {$/;"	P	implementation:Instant
scalar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^mod scalar {$/;"	n
scan_decimal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn scan_decimal(&mut self, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_exponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn scan_exponent(&mut self, e: char, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn scan_integer(&mut self, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_integer128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn scan_integer128(&mut self, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn scan_number(&mut self, buf: &mut String) -> Result<()> {$/;"	P	implementation:Deserializer
scan_or_eof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn scan_or_eof(&mut self, buf: &mut String) -> Result<u8> {$/;"	P	implementation:Deserializer
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^mod schedule;$/;"	n
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^    fn schedule(&self, _task: task::Notified<Self>) {$/;"	P	implementation:BlockingSchedule
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn schedule(&self, task: task::Notified<Self>) {$/;"	P	implementation:Arc
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn schedule(&self, task: Notified) {$/;"	P	implementation:Arc
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn schedule(&self, task: Notified<Self>);$/;"	P	interface:Schedule
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn schedule(self) {$/;"	P	implementation:RawTask
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) schedule: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn schedule<S: Schedule>(ptr: NonNull<Header>) {$/;"	f
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^        fn schedule(&self, _task: task::Notified<Self>) {$/;"	P	implementation:noop_scheduler::NoopSchedule
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^    fn schedule(&self, _task: task::Notified<Self>) {$/;"	P	implementation:Runtime
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn schedule(&self, task: task::Notified<Self>) {$/;"	P	implementation:Runtime
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn schedule() {$/;"	f
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn schedule(&self, task: task::Notified<Arc<Self>>) {$/;"	P	implementation:Shared
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn schedule(&self, task: task::Notified<Self>) {$/;"	P	implementation:Arc
schedule_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn schedule_local(&self, core: &mut Core, task: Notified, is_yield: bool) {$/;"	P	implementation:Handle
schedule_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) fn schedule_task(&self, task: Notified, is_yield: bool) {$/;"	P	implementation:Handle
scheduled_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^mod scheduled_io;$/;"	n
scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^pub(crate) mod scheduler;$/;"	n
scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    scheduler: Scheduler,$/;"	m	struct:Runtime
scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    scheduler: &'a CurrentThread,$/;"	m	struct:CoreGuard
scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) scheduler: S,$/;"	m	struct:Core
scheduler_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    scheduler_metrics: SchedulerMetrics,$/;"	m	struct:Shared
scheduler_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) scheduler_metrics: SchedulerMetrics,$/;"	m	struct:Shared
scheduler_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) scheduler_offset: usize,$/;"	m	struct:Vtable
schema	/home/trey/code/sqlx-crud/src/lib.rs	/^pub mod schema;$/;"	n
scientific_exponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/exponent.rs	/^pub(crate) fn scientific_exponent($/;"	f
scope	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn scope<F>(&'static self, value: T, f: F) -> TaskLocalFuture<T, F>$/;"	P	implementation:LocalKey
scope_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn scope_inner<F, R>(&'static self, slot: &mut Option<T>, f: F) -> Result<R, ScopeInnerErr>$/;"	P	implementation:LocalKey
scoped_thread_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^macro_rules! scoped_thread_local {$/;"	M
scoped_tls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^pub(crate) mod scoped_tls;$/;"	n
scratch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    scratch: Vec<u8>,$/;"	m	struct:Deserializer
sealed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^pub(crate) mod sealed {$/;"	n
sec_websocket_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    sec_websocket_key: HeaderValue,$/;"	m	struct:WebSocketUpgrade
sec_websocket_protocol	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    sec_websocket_protocol: Option<HeaderValue>,$/;"	m	struct:WebSocketUpgrade
security_qos_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn security_qos_flags(&mut self, flags: u32) -> &mut Self {$/;"	P	implementation:ClientOptions
security_qos_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    security_qos_flags: u32,$/;"	m	struct:ClientOptions
seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^mod seed;$/;"	n
seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    pub(crate) fn seed() -> u64 {$/;"	f	module:rand
seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    pub(crate) fn seed() -> u64 {$/;"	f	module:rand
seed_generator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) seed_generator: RngSeedGenerator,$/;"	m	struct:Builder
seed_generator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) seed_generator: RngSeedGenerator,$/;"	m	struct:Config
seed_generator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) seed_generator: RngSeedGenerator,$/;"	m	struct:Handle
seed_generator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) seed_generator: RngSeedGenerator,$/;"	m	struct:Handle
seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn seek(&mut self, pos: SeekFrom) -> io::Result<u64> {$/;"	P	implementation:MockFile
seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/seek.rs	/^pub(crate) fn seek<S>(seek: &mut S, pos: SeekFrom) -> Seek<'_, S>$/;"	f
segments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^fn segments(s: &str) -> impl Iterator<Item = &str> {$/;"	f
select	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/select.rs	/^macro_rules! select {$/;"	M
select_by_id_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub select_by_id_sql: &'s str,$/;"	m	struct:Metadata
select_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn select_by_id_sql() -> &'static str;$/;"	P	interface:Schema
select_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub select_sql: &'s str,$/;"	m	struct:Metadata
select_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn select_sql() -> &'static str;$/;"	P	interface:Schema
select_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/select.rs	/^macro_rules! select_variant {$/;"	M
sem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    sem: &'a Semaphore,$/;"	m	struct:SemaphorePermit
sem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    sem: Arc<Semaphore>,$/;"	m	struct:OwnedSemaphorePermit
sem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^            sem: Arc<Semaphore>,$/;"	m	struct:try_recv::Context
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    semaphore: &'a Semaphore,$/;"	m	struct:Acquire
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub(crate) semaphore: semaphore::Semaphore,$/;"	m	struct:Semaphore
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(super) fn semaphore(&self) -> &S {$/;"	P	implementation:Tx
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    semaphore: S,$/;"	m	struct:Chan
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    semaphore: Semaphore,$/;"	m	struct:OnceCell
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^        semaphore: Semaphore,$/;"	m	struct:basic_usage::Shared
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub async fn send(&mut self, msg: Message) -> Result<(), Error> {$/;"	P	implementation:WebSocket
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) async fn send(self) -> TestResponse {$/;"	P	implementation:RequestBuilder
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UnixDatagram
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    pub(crate) fn send(self, value: T) {$/;"	P	implementation:Sender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn send(&self, value: T) -> Result<usize, SendError<T>> {$/;"	P	implementation:Sender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn send(&self, value: T) -> Result<(), SendError<T>> {$/;"	P	implementation:Sender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn send(mut self, value: T) -> Sender<T> {$/;"	P	implementation:OwnedPermit
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn send(self, value: T) {$/;"	P	implementation:Permit
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn send(&self, value: T) {$/;"	P	implementation:Chan
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn send(&self, value: T) {$/;"	P	implementation:Tx
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn send(&self, message: T) -> Result<(), SendError<T>> {$/;"	P	implementation:UnboundedSender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn send(mut self, t: T) -> Result<(), T> {$/;"	P	implementation:Sender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn send(&self, value: T) -> Result<(), error::SendError<T>> {$/;"	P	implementation:Sender
send_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn send_buffer_size(&self) -> io::Result<u32> {$/;"	P	implementation:TcpSocket
send_if_modified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn send_if_modified<F>(&self, modify: F) -> bool$/;"	P	implementation:Sender
send_modify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn send_modify<F>(&self, modify: F)$/;"	P	implementation:Sender
send_replace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn send_replace(&self, mut value: T) -> T {$/;"	P	implementation:Sender
send_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn send_timeout($/;"	P	implementation:Sender
send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn send_to<A: ToSocketAddrs>(&self, buf: &[u8], target: A) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn send_to<P>(&self, buf: &[u8], target: P) -> io::Result<usize>$/;"	P	implementation:UnixDatagram
send_to_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    async fn send_to_addr(&self, buf: &[u8], target: SocketAddr) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    sender: UnixStream,$/;"	m	struct:OsExtraData
seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    seq: A,$/;"	m	struct:SeqAccessDeserializer
seq_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	M
seq_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	M
ser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^pub mod ser;$/;"	n
ser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/mod.rs	/^pub mod ser;$/;"	n
ser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^mod ser;$/;"	n
ser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^pub mod ser;$/;"	n
ser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    ser: &'a mut Serializer<W, F>,$/;"	m	struct:MapKeySerializer
ser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^mod ser;$/;"	n
serde_if_integer128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	M
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:content::Content
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Arguments
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CStr
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CString
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Duration
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:IpAddr
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv4Addr
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv6Addr
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsStr
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsString
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Path
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PathBuf
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PhantomData
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddr
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV4
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV6
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:String
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SystemTime
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:T
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:str
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	interface:Serialize
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Map
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Number
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:RawValue
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize<S>(&self, serializer: S) -> result::Result<S::Ok, S::Error>$/;"	P	implementation:Value
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f	module:content
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<()> {$/;"	f
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<()> {$/;"	f
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_bool(self, _value: bool) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_bool(self, value: bool) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f	module:content
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_bytes(self, _v: &[u8]) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<()> {$/;"	f
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f	module:content
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_char(self, value: char) -> Result<()> {$/;"	f
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_char(self, value: char) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_display_bounded_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	M
serialize_element	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_element	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeSeq
serialize_element	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTuple
serialize_element	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_element	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_element<T>(&mut self, value: &T) -> Result<()>$/;"	P	implementation:SerializeVec
serialize_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f	module:content
serialize_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	P	interface:SerializeMap
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f	module:content
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<()> {$/;"	f
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_f32(self, value: f32) -> Result<()> {$/;"	f
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_f32(self, _value: f32) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_f32(self, float: f32) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f	module:content
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<()> {$/;"	f
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_f64(self, value: f64) -> Result<()> {$/;"	f
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_f64(self, _value: f64) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_f64(self, float: f64) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f	module:content
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f	module:content
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStruct
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStructVariant
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleStruct
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleVariant
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	f
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	P	implementation:SerializeMap
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>$/;"	P	implementation:SerializeStructVariant
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	P	implementation:SerializeTupleVariant
serialize_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_field<T>(&mut self, value: &T) -> Result<()>$/;"	P	implementation:SerializeVec
serialize_i128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i128(self, _v: i128) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i128(self, _v: i128) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i128(self, value: i128) -> Result<()> {$/;"	f
serialize_i128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i128(self, value: i128) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f	module:content
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<()> {$/;"	f
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i16(self, value: i16) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f	module:content
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<()> {$/;"	f
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i32(self, value: i32) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f	module:content
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<()> {$/;"	f
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i64(self, value: i64) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f	module:content
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<()> {$/;"	f
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_i8(self, value: i8) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f	module:content
serialize_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	f
serialize_key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_key<T>(&mut self, key: &T) -> Result<()>$/;"	P	implementation:SerializeMap
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f	module:content
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, fmt::Error> {$/;"	P	implementation:Formatter
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	P	interface:Serializer
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:NumberStrEmitter
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:RawValueStrEmitter
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	f
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:MapKeySerializer
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:NumberValueEmitter
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:RawValueEmitter
serialize_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap> {$/;"	P	implementation:Serializer
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f	module:content
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	interface:Serializer
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<()>$/;"	P	implementation:NumberStrEmitter
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<()>$/;"	P	implementation:RawValueStrEmitter
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<()>$/;"	f
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<Value>$/;"	P	implementation:NumberValueEmitter
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, _value: &T) -> Result<Value>$/;"	P	implementation:RawValueEmitter
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<String>$/;"	P	implementation:MapKeySerializer
serialize_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_newtype_struct<T>(self, _name: &'static str, value: &T) -> Result<Value>$/;"	P	implementation:Serializer
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f	module:content
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Formatter
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	interface:Serializer
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:NumberStrEmitter
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:RawValueStrEmitter
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	f
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:MapKeySerializer
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:NumberValueEmitter
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:RawValueEmitter
serialize_newtype_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_newtype_variant<T>($/;"	P	implementation:Serializer
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f	module:content
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_none(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_none(self) -> Result<()> {$/;"	f
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_none(self) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_none(self) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f	module:content
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, fmt::Error> {$/;"	P	implementation:Formatter
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	P	interface:Serializer
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:NumberStrEmitter
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:RawValueStrEmitter
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	f
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:MapKeySerializer
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:NumberValueEmitter
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:RawValueEmitter
serialize_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq> {$/;"	P	implementation:Serializer
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f	module:content
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<()>$/;"	P	implementation:NumberStrEmitter
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<()>$/;"	P	implementation:RawValueStrEmitter
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<()>$/;"	f
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<()>$/;"	f
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<String>$/;"	P	implementation:MapKeySerializer
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<Value>$/;"	P	implementation:NumberValueEmitter
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_some<T>(self, _value: &T) -> Result<Value>$/;"	P	implementation:RawValueEmitter
serialize_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_some<T>(self, value: &T) -> Result<Value>$/;"	P	implementation:Serializer
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f	module:content
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<()> {$/;"	f
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_struct($/;"	f	module:content
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_struct($/;"	P	implementation:Formatter
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_struct($/;"	P	interface:Serializer
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:NumberStrEmitter
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:RawValueStrEmitter
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	f
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	f
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:MapKeySerializer
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:NumberValueEmitter
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_struct(self, _name: &'static str, _len: usize) -> Result<Self::SerializeStruct>/;"	P	implementation:RawValueEmitter
serialize_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {$/;"	P	implementation:Serializer
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f	module:content
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Formatter
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	P	interface:Serializer
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:NumberStrEmitter
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:RawValueStrEmitter
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:MapKeySerializer
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:NumberValueEmitter
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:RawValueEmitter
serialize_struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Serializer
serialize_tagged_newtype	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f	module:content
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, fmt::Error> {$/;"	P	implementation:Formatter
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	P	interface:Serializer
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:NumberStrEmitter
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:RawValueStrEmitter
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	f
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:MapKeySerializer
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:NumberValueEmitter
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:RawValueEmitter
serialize_tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple> {$/;"	P	implementation:Serializer
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f	module:content
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Formatter
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	P	interface:Serializer
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:NumberStrEmitter
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:RawValueStrEmitter
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:MapKeySerializer
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:NumberValueEmitter
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:RawValueEmitter
serialize_tuple_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Serializer
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f	module:content
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Formatter
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	P	interface:Serializer
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:NumberStrEmitter
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:RawValueStrEmitter
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:MapKeySerializer
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:NumberValueEmitter
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:RawValueEmitter
serialize_tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Serializer
serialize_u128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u128(self, _v: u128) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u128(self, _v: u128) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u128(self, value: u128) -> Result<()> {$/;"	f
serialize_u128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u128(self, value: u128) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f	module:content
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<()> {$/;"	f
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u16(self, value: u16) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f	module:content
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<()> {$/;"	f
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u32(self, value: u32) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f	module:content
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<()> {$/;"	f
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u64(self, value: u64) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f	module:content
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<()> {$/;"	f
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_u8(self, value: u8) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f	module:content
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_unit(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit(self) -> Result<()> {$/;"	f
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit(self) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f	module:content
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	P	implementation:NumberStrEmitter
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	P	implementation:RawValueStrEmitter
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<()> {$/;"	f
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<String> {$/;"	P	implementation:MapKeySerializer
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value> {$/;"	P	implementation:NumberValueEmitter
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value> {$/;"	P	implementation:RawValueEmitter
serialize_unit_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value> {$/;"	P	implementation:Serializer
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f	module:content
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/fmt.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Formatter
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	P	interface:Serializer
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:NumberStrEmitter
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:RawValueStrEmitter
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:MapKeySerializer
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:NumberValueEmitter
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:RawValueEmitter
serialize_unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Serializer
serialize_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	f
serialize_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    fn serialize_value<T>(&mut self, value: &T) -> Result<()>$/;"	P	implementation:SerializeMap
service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^mod service;$/;"	n
service_ext	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^mod service_ext;$/;"	n
service_in_bottom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn service_in_bottom() {$/;"	f
service_overlaps	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn service_overlaps() {$/;"	f	module:tests
services	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^async fn services() {$/;"	f
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^    pub(crate) fn set<F, R>(&'static self, t: &T, f: F) -> R$/;"	P	implementation:ScopedKey
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn set<F>(&mut self, future: F)$/;"	P	implementation:ReusableBoxFuture
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn set(&self, value: T) -> Result<(), SetError<T>> {$/;"	P	implementation:OnceCell
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    pub(crate) fn set(&self, val: Box<T>) {$/;"	P	implementation:AtomicCell
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    set: &'a mut IdleNotifiedSet<T>,$/;"	m	struct:EntryInOneOfTheLists
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) fn set(&self, val: Option<Rc<T>>) {$/;"	P	implementation:RcCell
set_allow_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^fn set_allow_header(headers: &mut HeaderMap, allow_header: &mut Option<Bytes>) {$/;"	f
set_broadcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_broadcast(&self, on: bool) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_cached_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn set_cached_when(&self, when: u64) {$/;"	P	implementation:TimerShared
set_cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn set_cancelled(&mut self) {$/;"	P	implementation:Snapshot
set_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn set_closed(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
set_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn set_closed(&self) {$/;"	P	implementation:state::AtomicState
set_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn set_complete(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
set_content_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^fn set_content_length(size_hint: http_body::SizeHint, headers: &mut HeaderMap) {$/;"	f
set_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn set_elapsed(&mut self, when: u64) {$/;"	P	implementation:Wheel
set_endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^        fn set_endpoint<S, B, E>($/;"	f	function:on_endpoint
set_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn set_expiration(&self, timestamp: u64) {$/;"	P	implementation:StateCell
set_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn set_expiration(&self, t: u64) {$/;"	P	implementation:TimerShared
set_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn set_expiration(&self, tick: u64) {$/;"	P	implementation:TimerHandle
set_failed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn set_failed(&mut self, _failed: &mut bool) {$/;"	P	implementation:SliceRead
set_failed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool) {$/;"	P	implementation:StrRead
set_failed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool) {$/;"	f
set_failed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    fn set_failed(&mut self, failed: &mut bool);$/;"	P	interface:Read
set_filled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn set_filled(&mut self, n: usize) {$/;"	P	implementation:ReadBuf
set_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^    async fn set_header<B>(mut res: Response<B>) -> Response<B> {$/;"	f	function:also_inherits_default_layered_fallback
set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^fn set_join_waker($/;"	f
set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub(crate) fn set_join_waker(&mut self, waker: &Waker) {$/;"	P	implementation:JoinHandle
set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn set_join_waker(&mut self) {$/;"	P	implementation:Snapshot
set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn set_join_waker(&self) -> UpdateResult {$/;"	P	implementation:State
set_len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn set_len(&self, size: u64) -> io::Result<()> {$/;"	P	implementation:File
set_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn set_limit(&mut self, limit: u64) {$/;"	P	implementation:Take
set_linger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_linger(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_matched_path_for_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^pub(crate) fn set_matched_path_for_request($/;"	f
set_missed_tick_behavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn set_missed_tick_behavior(&mut self, behavior: MissedTickBehavior) {$/;"	P	implementation:Interval
set_multicast_loop_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_multicast_loop_v4(&self, on: bool) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_multicast_loop_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_multicast_loop_v6(&self, on: bool) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_multicast_ttl_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_multicast_ttl_v4(&self, ttl: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^fn set_next(header: NonNull<task::Header>, val: Option<NonNull<task::Header>>) {$/;"	f
set_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn set_next(&mut self, value: Option<NonNull<T>>) {$/;"	P	implementation:Pointers
set_node	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    fn set_node(&mut self, path: &str, id: RouteId) -> Result<(), String> {$/;"	f
set_nodelay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn set_nodelay(&self, nodelay: bool) -> io::Result<()> {$/;"	P	implementation:TcpStream
set_nonblocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn set_nonblocking(file: &mut File, current_flags: libc::c_int) -> io::Result<()> {$/;"	f
set_nonblocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^fn set_nonblocking<T: AsRawFd>(fd: &mut T, nonblocking: bool) -> io::Result<()> {$/;"	f
set_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn set_notified(&mut self) {$/;"	P	implementation:Snapshot
set_owner_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn set_owner_id(&self, owner: u64) {$/;"	P	implementation:Header
set_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn set_permissions(&self, perm: Permissions) -> io::Result<()> {$/;"	P	implementation:File
set_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod set_permissions;$/;"	n
set_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/set_permissions.rs	/^pub async fn set_permissions(path: impl AsRef<Path>, perm: Permissions) -> io::Result<()> {$/;"	f
set_prev	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn set_prev(&mut self, value: Option<NonNull<T>>) {$/;"	P	implementation:Pointers
set_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn set_queue_depth(&self, _len: usize) {}$/;"	P	implementation:WorkerMetrics
set_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) fn set_queue_depth(&self, len: usize) {$/;"	P	implementation:WorkerMetrics
set_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn set_readiness($/;"	P	implementation:ScheduledIo
set_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    fn set_ready(&self, slot: usize) {$/;"	P	implementation:Block
set_recv_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_recv_buffer_size(&self, size: u32) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_reuseaddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_reuseaddr(&self, reuseaddr: bool) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_reuseport	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_reuseport(&self, reuseport: bool) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn set_running(&mut self) {$/;"	P	implementation:Snapshot
set_rx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn set_rx_task(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
set_same_layout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    unsafe fn set_same_layout<F>(&mut self, future: F)$/;"	P	implementation:ReusableBoxFuture
set_send_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_send_buffer_size(&self, size: u32) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    unsafe fn set_stage(&self, stage: Stage<T>) {$/;"	P	implementation:Core
set_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn set_state(data: usize, state: usize) -> usize {$/;"	f
set_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn set_task(&self, cx: &mut Context<'_>) {$/;"	P	implementation:Task
set_tos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_tos(&self, tos: u32) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_tos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_tos(&self, tos: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	P	implementation:TcpListener
set_ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	P	implementation:TcpStream
set_ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_tx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn set_tx_task(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
set_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn set_value(&self, value: T, permit: SemaphorePermit<'_>) -> &T {$/;"	P	implementation:OnceCell
set_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn set_waker(&self, waker: Option<Waker>) {$/;"	P	implementation:Trailer
sets_allow_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn sets_allow_header() {$/;"	f	module:tests
sets_allow_header_get_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    async fn sets_allow_header_get_head() {$/;"	f	module:tests
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    shared: Mutex<Shared>,$/;"	m	struct:Inner
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    shared: Shared,$/;"	m	struct:Handle
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(super) shared: worker::Shared,$/;"	m	struct:Handle
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    shared: Arc<Shared>,$/;"	m	struct:Inner
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    shared: Arc<Shared<T>>,$/;"	m	struct:Receiver
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    shared: Arc<Shared<T>>,$/;"	m	struct:Sender
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    shared: Arc<Shared<T>>,$/;"	m	struct:Receiver
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    shared: Arc<Shared<T>>,$/;"	m	struct:Sender
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    shared: Arc<Shared>,$/;"	m	struct:Context
shift	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod shift;$/;"	n
shift	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    shift: u32,$/;"	m	struct:Pack
shl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/shift.rs	/^pub(crate) fn shl(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
shr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/shift.rs	/^pub(crate) fn shr(fp: &mut ExtendedFloat, shift: i32) {$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/shutdown.rs	/^pub(super) fn shutdown<A>(a: &mut A) -> Shutdown<'_, A>$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:UnixDatagram
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^mod shutdown;$/;"	n
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn shutdown(&mut self, timeout: Option<Duration>) {$/;"	P	implementation:BlockingPool
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    shutdown: bool,$/;"	m	struct:Shared
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn shutdown(&mut self, handle: &Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn shutdown(&self) -> bool {$/;"	P	implementation:Handle
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn shutdown(&mut self, rt_handle: &driver::Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn shutdown(&self) {$/;"	P	implementation:ScheduledIo
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn shutdown(&self) {$/;"	P	implementation:Inner
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn shutdown(&mut self) {$/;"	P	implementation:ParkThread
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    pub(crate) fn shutdown(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn shutdown(&mut self, handle: &scheduler::Handle) {$/;"	P	implementation:CurrentThread
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) fn shutdown(&self) {$/;"	P	implementation:Handle
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^    pub(crate) fn shutdown(&mut self, handle: &scheduler::Handle) {$/;"	P	implementation:MultiThread
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn shutdown(&self, handle: &driver::Handle) {$/;"	P	implementation:Inner
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn shutdown(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Parker
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn shutdown(&mut self, handle: &Handle) {$/;"	P	implementation:Core
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn shutdown(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn shutdown(self) {$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(crate) fn shutdown(self) {$/;"	P	implementation:Task
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(crate) fn shutdown(self) {$/;"	P	implementation:UnownedTask
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn shutdown(self) {$/;"	P	implementation:RawTask
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) shutdown: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn shutdown<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn shutdown(&self) {$/;"	P	implementation:Runtime
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn shutdown() {$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(crate) fn shutdown(&mut self, rt_handle: &driver::Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub async fn shutdown(&mut self) {$/;"	P	implementation:JoinSet
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn shutdown() -> Error {$/;"	P	implementation:Error
shutdown_background	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn shutdown_background(self) {$/;"	P	implementation:Runtime
shutdown_core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn shutdown_core(&self, core: Box<Core>) {$/;"	P	implementation:Handle
shutdown_cores	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    shutdown_cores: Mutex<Vec<Box<Core>>>,$/;"	m	struct:Shared
shutdown_immediately	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn shutdown_immediately() {$/;"	f
shutdown_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    shutdown_on_drop: bool,$/;"	m	struct:OwnedWriteHalf
shutdown_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    shutdown_on_drop: bool,$/;"	m	struct:OwnedWriteHalf
shutdown_or_run_if_mandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn shutdown_or_run_if_mandatory(self) {$/;"	P	implementation:Task
shutdown_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    shutdown_rx: shutdown::Receiver,$/;"	m	struct:BlockingPool
shutdown_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(super) fn shutdown_std(&self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:TcpStream
shutdown_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(super) fn shutdown_std(&self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:UnixStream
shutdown_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn shutdown_timeout(mut self, duration: Duration) {$/;"	P	implementation:Runtime
shutdown_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    shutdown_tx: Option<shutdown::Sender>,$/;"	m	struct:Shared
shutdown_with_notification	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn shutdown_with_notification() {$/;"	f	module:group_b
sigchild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    sigchild: Mutex<Option<watch::Receiver<()>>>,$/;"	m	struct:OrphanQueueImpl
sign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^fn sign(key: &[u8]) -> HeaderValue {$/;"	f
signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    signal: S,$/;"	m	struct:Reaper
signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) signal: SignalHandle,$/;"	m	struct:Handle
signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub fn signal(kind: SignalKind) -> io::Result<Signal> {$/;"	f
signal_enable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^fn signal_enable(signal: SignalKind, handle: &Handle) -> io::Result<()> {$/;"	f
signal_enable_error_on_forbidden_input	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn signal_enable_error_on_forbidden_input() {$/;"	f	module:tests
signal_enable_error_on_invalid_input	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn signal_enable_error_on_invalid_input() {$/;"	f	module:tests
signal_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    signal_handle: SignalHandle,$/;"	m	struct:Driver
signal_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    signal_ready: bool,$/;"	m	struct:Driver
signal_with_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) fn signal_with_handle($/;"	f
single_precision	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    single_precision: bool,$/;"	m	struct:Deserializer
single_timer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn single_timer() {$/;"	f
size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^            size: Option<u64>,$/;"	m	struct:tests::test_query::Pagination
size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^        size: Option<u64>,$/;"	m	struct:tests::Pagination
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Chain
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:MapAccess
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:SeqAccess
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f	module:content
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/mod.rs	/^pub mod size_hint;$/;"	n
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:MapDeserializer
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:MapRefDeserializer
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:SeqDeserializer
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:SeqRefDeserializer
skip_allow_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn skip_allow_header(mut self) -> Self {$/;"	f
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn skip_drop(self) -> MappedMutexGuardInner<'a, T> {$/;"	P	implementation:MappedMutexGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn skip_drop(self) -> MutexGuardInner<'a, T> {$/;"	P	implementation:MutexGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn skip_drop(self) -> OwnedMappedMutexGuardInner<T, U> {$/;"	P	implementation:OwnedMappedMutexGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn skip_drop(self) -> OwnedMutexGuardInner<T> {$/;"	P	implementation:OwnedMutexGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    fn skip_drop(self) -> Inner<T, U> {$/;"	P	implementation:OwnedRwLockReadGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn skip_drop(self) -> Inner<T> {$/;"	P	implementation:OwnedRwLockWriteGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn skip_drop(self) -> Inner<T, U> {$/;"	P	implementation:OwnedRwLockMappedWriteGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    fn skip_drop(self) -> Inner<'a, T> {$/;"	P	implementation:RwLockReadGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn skip_drop(self) -> Inner<'a, T> {$/;"	P	implementation:RwLockWriteGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn skip_drop(self) -> Inner<'a, T> {$/;"	P	implementation:RwLockMappedWriteGuard
skip_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStruct
skip_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStructVariant
sleep	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod sleep;$/;"	n
sleep	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^pub fn sleep(duration: Duration) -> Sleep {$/;"	f
sleep_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^pub fn sleep_until(deadline: Instant) -> Sleep {$/;"	f
sleepers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    sleepers: Mutex<Vec<usize>>,$/;"	m	struct:Idle
slice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/read.rs	/^    slice: &'a [u8],$/;"	m	struct:SliceRead
slice_assume_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^unsafe fn slice_assume_init(slice: &[MaybeUninit<u8>]) -> &[u8] {$/;"	f
slice_assume_init_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^unsafe fn slice_assume_init_mut(slice: &mut [MaybeUninit<u8>]) -> &mut [u8] {$/;"	f
slice_to_uninit_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^unsafe fn slice_to_uninit_mut(slice: &mut [u8]) -> &mut [MaybeUninit<u8>] {$/;"	f
slice_to_vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^        fn slice_to_vec(addrs: &[SocketAddr]) -> Vec<SocketAddr> {$/;"	f	method:SocketAddr::to_socket_addrs
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) slot: usize,$/;"	m	struct:Expiration
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    slot: [EntryList; LEVEL_MULT],$/;"	m	struct:Level
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    slot: RwLockReadGuard<'a, Slot<T>>,$/;"	m	struct:RecvGuard
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            slot: &'a mut Option<T>,$/;"	m	struct:LocalKey::scope_inner::Guard
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    slot: Option<T>,$/;"	m	struct:TaskLocalFuture
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn slot(&self, addr: Address) -> usize {$/;"	P	implementation:Page
slot_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^fn slot_for(duration: u64, level: usize) -> usize {$/;"	f
slot_range	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^fn slot_range(level: usize) -> u64 {$/;"	f
slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    slots: *const Slot<T>,$/;"	m	struct:CachedPage
slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    slots: Mutex<Slots<T>>,$/;"	m	struct:Page
slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    slots: Vec<Slot<T>>,$/;"	m	struct:Slots
small	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub small: ExtendedFloatArray,$/;"	m	struct:ModeratePathPowers
small	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^mod small {$/;"	n
small_atof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/bhcomp.rs	/^fn small_atof<F>(mantissa: Bigint, exponent: i32, f: F) -> F$/;"	f
small_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub small_int: &'static [u64],$/;"	m	struct:ModeratePathPowers
small_powers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/mod.rs	/^mod small_powers;$/;"	n
smoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_list.rs	/^fn smoke() {$/;"	f
smoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn smoke() {$/;"	f
smoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_watch.rs	/^fn smoke() {$/;"	f
socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/mod.rs	/^pub(crate) mod socket;$/;"	n
socket_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    async fn socket_addr() {$/;"	f	module:tests
socketaddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^mod socketaddr;$/;"	n
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	f
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	f
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	interface:StdError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/wrapper.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:BoxedError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:MultipartError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    source: multer::Error,$/;"	m	struct:MultipartError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:TypedHeaderRejection
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/std_error.rs	/^    fn source(&self) -> Option<&(Error + 'static)> {$/;"	P	interface:Error
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:Error
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod source;$/;"	n
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn spawn(&mut self) -> io::Result<Child> {$/;"	P	implementation:Command
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn spawn<F>(&self, future: F) -> JoinHandle<F::Output>$/;"	P	implementation:Handle
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn spawn<F>(&self, future: F) -> JoinHandle<F::Output>$/;"	P	implementation:Runtime
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn spawn<F>($/;"	P	implementation:Handle
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) fn spawn<F>(me: &Arc<Self>, future: F, id: task::Id) -> JoinHandle<F::Output>$/;"	P	implementation:Handle
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn spawn<T>(&self, future: T) -> JoinHandle<T::Output>$/;"	P	implementation:Runtime
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn spawn<T>(&self, task: T) -> JoinHandle<T::Output>$/;"	P	implementation:test_combination::Rt
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn<Fut>(self, future: Fut) -> io::Result<JoinHandle<Fut::Output>>$/;"	P	implementation:Builder
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn<F>(&mut self, task: F) -> AbortHandle$/;"	P	implementation:JoinSet
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn<F>(self, future: F) -> std::io::Result<AbortHandle>$/;"	P	implementation:Builder
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn spawn<F>(&self, future: F, name: Option<&str>) -> JoinHandle<F::Output>$/;"	P	implementation:Context
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^pub(super) fn spawn_blocking<F, R>(f: F) -> JoinHandle<R>$/;"	f
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn spawn_blocking<F, R>(&self, rt: &Handle, func: F) -> JoinHandle<R>$/;"	P	implementation:Spawner
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) fn spawn_blocking<F, R>(func: F) -> JoinHandle<R>$/;"	f
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn spawn_blocking<F, R>(&self, func: F) -> JoinHandle<R>$/;"	P	implementation:Handle
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn spawn_blocking<F, R>(&self, func: F) -> JoinHandle<R>$/;"	P	implementation:Runtime
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_blocking<Function, Output>($/;"	P	implementation:Builder
spawn_blocking_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn spawn_blocking_inner<F, R>($/;"	P	implementation:Spawner
spawn_blocking_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_blocking_on<Function, Output>($/;"	P	implementation:Builder
spawn_blocking_when_paused	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn spawn_blocking_when_paused() {$/;"	f
spawn_child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) fn spawn_child(cmd: &mut std::process::Command) -> io::Result<SpawnedChild> {$/;"	f
spawn_child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(crate) fn spawn_child(cmd: &mut StdCommand) -> io::Result<SpawnedChild> {$/;"	f
spawn_during_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn spawn_during_shutdown() {$/;"	f
spawn_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_local<Fut>(self, future: Fut) -> io::Result<JoinHandle<Fut::Output>>$/;"	P	implementation:Builder
spawn_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_local<F>(&mut self, task: F) -> AbortHandle$/;"	P	implementation:JoinSet
spawn_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_local<F>(self, future: F) -> std::io::Result<AbortHandle>$/;"	P	implementation:Builder
spawn_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub fn spawn_local<F>(&self, future: F) -> JoinHandle<F::Output>$/;"	P	implementation:LocalSet
spawn_local_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_local_on<Fut>($/;"	P	implementation:Builder
spawn_local_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_local_on<F>(&mut self, task: F, local_set: &LocalSet) -> AbortHandle$/;"	P	implementation:JoinSet
spawn_local_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_local_on<F>(self, future: F, local_set: &LocalSet) -> std::io::Result<AbortHand/;"	P	implementation:Builder
spawn_mandatory_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^pub(super) fn spawn_mandatory_blocking<F, R>(f: F) -> Option<JoinHandle<R>>$/;"	f
spawn_mandatory_blocking_should_always_run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn spawn_mandatory_blocking_should_always_run() {$/;"	f
spawn_mandatory_blocking_should_run_even_when_shutting_down_from_other_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn spawn_mandatory_blocking_should_run_even_when_shutting_down_from_other_thread() {$/;"	f
spawn_named	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub(crate) fn spawn_named<F>(&self, future: F, _name: Option<&str>) -> JoinHandle<F::Output>$/;"	P	implementation:Handle
spawn_named	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub(in crate::task) fn spawn_named<F>($/;"	P	implementation:LocalSet
spawn_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_on<Fut>(self, future: Fut, handle: &Handle) -> io::Result<JoinHandle<Fut::Outpu/;"	P	implementation:Builder
spawn_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_on<F>(&mut self, task: F, handle: &Handle) -> AbortHandle$/;"	P	implementation:JoinSet
spawn_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_on<F>(self, future: F, handle: &Handle) -> std::io::Result<AbortHandle>$/;"	P	implementation:Builder
spawn_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn spawn_task(&self, task: Task, rt: &Handle) -> Result<(), SpawnError> {$/;"	P	implementation:Spawner
spawn_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn spawn_thread($/;"	P	implementation:Spawner
spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn spawner(&self) -> &Spawner {$/;"	P	implementation:BlockingPool
spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    spawner: Spawner,$/;"	m	struct:BlockingPool
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	P	implementation:private::B
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	P	interface:private::Pair
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^pub(crate) fn split<R>(reader: R, delim: u8) -> Split<R>$/;"	f
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/mod.rs	/^mod split;$/;"	n
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^pub(crate) fn split(stream: &mut TcpStream) -> (ReadHalf<'_>, WriteHalf<'_>) {$/;"	f
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn split<'a>(&'a mut self) -> (ReadHalf<'a>, WriteHalf<'a>) {$/;"	P	implementation:TcpStream
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^mod split;$/;"	n
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^pub(crate) fn split(stream: &mut UnixStream) -> (ReadHalf<'_>, WriteHalf<'_>) {$/;"	f
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn split<'a>(&'a mut self) -> (ReadHalf<'a>, WriteHalf<'a>) {$/;"	P	implementation:UnixStream
split_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/mod.rs	/^mod split_owned;$/;"	n
split_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub(crate) fn split_owned(stream: TcpStream) -> (OwnedReadHalf, OwnedWriteHalf) {$/;"	f
split_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^mod split_owned;$/;"	n
split_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub(crate) fn split_owned(stream: UnixStream) -> (OwnedReadHalf, OwnedWriteHalf) {$/;"	f
split_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^fn split_u64(x: u64) -> [Limb; 1] {$/;"	f
split_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^fn split_u64(x: u64) -> [Limb; 2] {$/;"	f
sse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^pub mod sse;$/;"	n
stack_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    stack_size: Option<usize>,$/;"	m	struct:Inner
stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) stage: CoreStage<T>,$/;"	m	struct:Core
stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    stage: UnsafeCell<Stage<T>>,$/;"	m	struct:CoreStage
start_bound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^                fn start_bound(&self) -> Bound<&Q> {$/;"	P	implementation:Map::remove_entry::Key
start_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    start_index: usize,$/;"	m	struct:BlockHeader
start_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^pub(crate) fn start_index(slot_index: usize) -> usize {$/;"	f
start_kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn start_kill(&mut self) -> io::Result<()> {$/;"	P	implementation:Child
start_of_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/iter.rs	/^    start_of_line: usize,$/;"	m	struct:LineColIterator
start_paused	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    start_paused: bool,$/;"	m	struct:Builder
start_paused	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) start_paused: bool,$/;"	m	struct:Cfg
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn start_seek(self: Pin<&mut Self>, mut pos: SeekFrom) -> io::Result<()> {$/;"	P	implementation:File
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn start_seek(mut self: Pin<&mut Self>, pos: SeekFrom) -> io::Result<()> {$/;"	P	implementation:Cursor
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn start_seek(self: Pin<&mut Self>, pos: SeekFrom) -> io::Result<()> {$/;"	f
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn start_seek(self: Pin<&mut Self>, position: SeekFrom) -> io::Result<()>;$/;"	P	interface:AsyncSeek
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn start_seek(self: Pin<&mut Self>, pos: SeekFrom) -> io::Result<()> {$/;"	P	implementation:BufReader
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn start_seek(self: Pin<&mut Self>, position: SeekFrom) -> io::Result<()> {$/;"	P	implementation:BufStream
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn start_seek(self: Pin<&mut Self>, pos: SeekFrom) -> io::Result<()> {$/;"	P	implementation:BufWriter
start_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    fn start_send(mut self: Pin<&mut Self>, item: Message) -> Result<(), Self::Error> {$/;"	P	implementation:WebSocket
start_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    start_time: Instant,$/;"	m	struct:TimeSource
started	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    started: bool,$/;"	m	struct:Indented
starts_with_digit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^fn starts_with_digit(slice: &str) -> bool {$/;"	f
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/chain.rs	/^    state: ChainState<'a>,$/;"	m	struct:Chain
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^    state: crate::chain::ChainState<'a>,$/;"	m	struct:Chain
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^mod state;$/;"	n
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    pub fn state(&self) -> &S {$/;"	P	implementation:HandlerService
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^    state: S,$/;"	m	struct:HandlerService
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    state: S,$/;"	m	struct:FromExtractor
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    state: S,$/;"	m	struct:FromExtractorLayer
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    state: S,$/;"	m	struct:FromFn
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^    state: S,$/;"	m	struct:FromFnLayer
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    state: S,$/;"	m	struct:MapRequest
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    state: S,$/;"	m	struct:MapRequestLayer
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    state: S,$/;"	m	struct:MapResponse
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    state: S,$/;"	m	struct:MapResponseLayer
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    state: State,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    state: State<T>,$/;"	m	struct:Blocking
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    state: AtomicUsize,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    state: AtomicUsize,$/;"	m	struct:Idle
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    state: AtomicUsize,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) state: State,$/;"	m	struct:Header
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn state(&self) -> &State {$/;"	f
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod state;$/;"	n
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn state(&self) -> &State {$/;"	P	implementation:RawTask
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    state: AtomicU64,$/;"	m	struct:StateCell
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    state: StateCell,$/;"	m	struct:TimerShared
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(super) state: Mutex<InnerState>,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    state: Mutex<BarrierState>,$/;"	m	struct:Barrier
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    state: AtomicUsize,$/;"	m	struct:Waiter
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    state: AtomicUsize,$/;"	m	struct:Notify
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    state: State,$/;"	m	struct:Notified
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    state: AtomicUsize,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    state: AtomicUsize,$/;"	m	struct:AtomicWaker
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    state: AtomicState,$/;"	m	struct:Shared
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^mod state {$/;"	n
state_isnt_cloned_too_much	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn state_isnt_cloned_too_much() {$/;"	f
static_and_dynamic_paths	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn static_and_dynamic_paths() {$/;"	f
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        pub(crate) fn status(&self) -> BacktraceStatus {$/;"	P	implementation:capture::Backtrace
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub fn status(&self) -> http::StatusCode {$/;"	P	implementation:MultipartError
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:FailedToDeserializePathParams
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:InvalidUtf8InPathParam
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        status: u16,$/;"	m	struct:logging_rejections::RejectionEvent
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) fn status(&self) -> StatusCode {$/;"	P	implementation:TestResponse
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn status(&mut self) -> impl Future<Output = io::Result<ExitStatus>> {$/;"	P	implementation:Command
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        status: ExitStatus,$/;"	m	struct:test::MockWait
status_code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^    status_code: StatusCode,$/;"	m	struct:Redirect
status_code_from_multer_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^fn status_code_from_multer_error(err: &multer::Error) -> StatusCode {$/;"	f
status_header_array	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status_header_array() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
status_header_array_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status_header_array_body() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
status_header_array_extension_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status_header_array_extension_body() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
status_header_array_extension_mixed_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status_header_array_extension_mixed_body() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
status_header_array_impl_into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status_header_array_impl_into_response() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
status_headermap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status_headermap() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
status_headermap_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status_headermap_body() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
status_headermap_impl_into_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^        async fn status_headermap_impl_into_response() -> impl IntoResponse {$/;"	f	function:tests::tuple_responses
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    std: Arc<StdFile>,$/;"	m	struct:File
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    std: Arc<std::fs::DirEntry>,$/;"	m	struct:DirEntry
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mod.rs	/^mod std;$/;"	n
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    std: StdCommand,$/;"	m	struct:Command
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    std: std::time::Instant,$/;"	m	struct:Instant
std_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^mod std_error;$/;"	n
stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn stderr<T: Into<Stdio>>(&mut self, cfg: T) -> &mut Command {$/;"	P	implementation:Command
stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub stderr: Option<ChildStderr>,$/;"	m	struct:Child
stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    stderr: Option<imp::ChildStdio>,$/;"	m	struct:SpawnedChild
stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn stdin<T: Into<Stdio>>(&mut self, cfg: T) -> &mut Command {$/;"	P	implementation:Command
stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub stdin: Option<ChildStdin>,$/;"	m	struct:Child
stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    stdin: Option<imp::ChildStdio>,$/;"	m	struct:SpawnedChild
stdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(super) fn stdio<T>(io: T) -> io::Result<ChildStdio>$/;"	f
stdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(super) fn stdio<T>(io: T) -> io::Result<ChildStdio>$/;"	f
stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn stdout<T: Into<Stdio>>(&mut self, cfg: T) -> &mut Command {$/;"	P	implementation:Command
stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub stdout: Option<ChildStdout>,$/;"	m	struct:Child
stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    stdout: Option<imp::ChildStdio>,$/;"	m	struct:SpawnedChild
steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    steal: queue::Steal<Arc<Handle>>,$/;"	m	struct:Remote
steal_batch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn steal_batch() {$/;"	f
steal_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    steal_count: u64,$/;"	m	struct:MetricsBatch
steal_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) steal_count: AtomicU64,$/;"	m	struct:WorkerMetrics
steal_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn steal_into($/;"	P	implementation:Steal
steal_into2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn steal_into2(&self, dst: &mut Local<T>, dst_tail: UnsignedShort) -> UnsignedShort {$/;"	P	implementation:Steal
steal_operations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    steal_operations: u64,$/;"	m	struct:MetricsBatch
steal_operations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) steal_operations: AtomicU64,$/;"	m	struct:WorkerMetrics
steal_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^fn steal_overflow() {$/;"	f
steal_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^    fn steal_tasks(steal: queue::Steal<NoopSchedule>) -> usize {$/;"	f	function:multi_stealer
steal_work	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn steal_work(&mut self, worker: &Worker) -> Option<Notified> {$/;"	P	implementation:Core
step	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/cached.rs	/^    pub step: i32,$/;"	m	struct:ModeratePathPowers
storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pub(crate) fn storage(&self) -> &OsStorage {$/;"	P	implementation:Globals
storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    storage: S,$/;"	m	struct:Registry
store	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn store(&self, val: u64, _: Ordering) {$/;"	P	implementation:AtomicU64
store_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn store_output(&self, output: super::Result<T::Output>) {$/;"	P	implementation:Core
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^            .fallback(|State(state): State<&'static str>| async move { state })$/;"	v	function:tests::fallback_accessing_state
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^            .get(|State(state): State<&'static str>| async move { state })$/;"	v	function:tests::accessing_state
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^        let one = get(|State(state): State<&'static str>| async move { state });$/;"	v	function:tests::merge_accessing_state
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^        let two = post(|State(state): State<&'static str>| async move { state });$/;"	v	function:tests::merge_accessing_state
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^            get(|State(state): State<&'static str>| async move { state }),$/;"	v	function:fallback_inherited_into_nested_opaque_service
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^            get(|State(state): State<&'static str>| async move { state }),$/;"	v	function:fallback_inherited_into_nested_router_service
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^        .fallback(|State(state): State<&'static str>| async move { state })$/;"	v	function:fallback_accessing_state
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^            get(|State(state): State<&'static str>| async move { state }).with_state("foo"),$/;"	v	function:explicitly_set_state
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	v	method:Duration::deserialize
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	v	method:SystemTime::deserialize
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	v	function:deserialize
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	v	function:deserialize
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	v	module:range
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a str {$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^impl<'a> Expected for &'a str {$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for &'a str$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a str$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^impl Serialize for str {$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    impl Sealed for str {}$/;"	c	module:private
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^impl Index for str {$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^impl PartialEq<Value> for str {$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/partial_eq.rs	/^impl<'a> PartialEq<Value> for &'a str {$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^        let (tx, mut rx1) = broadcast::channel::<Arc<&'static str>>(16);$/;"	v	function:broadcast_two
str_reference_deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn str_reference_deserialize() {$/;"	f	module:tests
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    stream: S,$/;"	m	struct:Sse
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    stream: UnsafeCell<T>,$/;"	m	struct:Inner
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod stream {}$/;"	n
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/mod.rs	/^pub(crate) mod stream;$/;"	n
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub(crate) mod stream;$/;"	n
stream_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/mod.rs	/^mod stream_body;$/;"	n
stream_body_traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/body/stream_body.rs	/^fn stream_body_traits() {$/;"	f
stream_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn stream_pin(&mut self) -> Pin<&mut T> {$/;"	P	implementation:Guard
stress1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn stress1() {$/;"	f
stress2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn stress2() {$/;"	f
string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/mod.rs	/^mod string {$/;"	n
strip_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    pub(crate) fn strip_body(mut self, strip_body: bool) -> Self {$/;"	P	implementation:RouteFuture
strip_prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^mod strip_prefix;$/;"	n
strip_prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^fn strip_prefix(uri: &Uri, prefix: &str) -> Option<Uri> {$/;"	f
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn struct_variant<V>($/;"	P	implementation:UnitVariant
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn struct_variant<V>($/;"	P	interface:VariantAccess
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn struct_variant<V>($/;"	f	module:private
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn struct_variant<V>($/;"	f	module:content
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn struct_variant<V>(self, _fields: &'static [&'static str], _visitor: V) -> Result<V::Value/;"	P	implementation:UnitVariantAccess
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn struct_variant<V>(self, fields: &'static [&'static str], visitor: V) -> Result<V::Value>$/;"	P	implementation:VariantAccess
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn struct_variant<V>($/;"	P	implementation:UnitOnly
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn struct_variant<V>($/;"	P	implementation:VariantDeserializer
struct_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn struct_variant<V>($/;"	P	implementation:VariantRefDeserializer
sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^    pub fn sub(x: Limb, y: Limb) -> (Limb, bool) {$/;"	f	module:scalar
sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn sub(self, other: Ready) -> Ready {$/;"	P	implementation:Ready
sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn sub(self, rhs: Duration) -> Instant {$/;"	P	implementation:Instant
sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn sub(self, rhs: Instant) -> Duration {$/;"	P	implementation:Instant
sub_assign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn sub_assign(&mut self, rhs: Duration) {$/;"	P	implementation:Instant
submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn submit(&mut self, worker: &WorkerMetrics) {$/;"	P	implementation:MetricsBatch
submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn submit(&mut self, _to: &WorkerMetrics) {}$/;"	P	implementation:MetricsBatch
subscribe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn subscribe(&self) -> Receiver<T> {$/;"	P	implementation:Sender
subscribe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn subscribe(&self) -> Receiver<T> {$/;"	P	implementation:Sender
success	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    success: bool,$/;"	m	struct:BudgetDecrement
support	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^pub mod support;$/;"	n
supports_128_bit_numbers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn supports_128_bit_numbers() {$/;"	f	module:tests
svc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^    svc: S,$/;"	m	struct:IntoMakeServiceWithConnectInfo
svc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^    svc: S,$/;"	m	struct:IntoMakeService
swap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    pub(crate) fn swap(&self, val: Option<Box<T>>) -> Option<Box<T>> {$/;"	P	implementation:AtomicCell
symbols	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        symbols: Vec<BacktraceSymbol>,$/;"	m	struct:capture::BacktraceFrame
symlink	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/symlink.rs	/^pub async fn symlink(src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()> {$/;"	f
symlink_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/symlink_dir.rs	/^pub async fn symlink_dir(src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()> {$/;"	f
symlink_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/symlink_file.rs	/^pub async fn symlink_file(src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()> {$/;"	f
symlink_metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod symlink_metadata;$/;"	n
symlink_metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/symlink_metadata.rs	/^pub async fn symlink_metadata(path: impl AsRef<Path>) -> io::Result<Metadata> {$/;"	f
sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/backtrace.rs	/^        sync: Once,$/;"	m	struct:capture::LazilyResolvedCapture
sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^pub(crate) mod sync {$/;"	n
sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod sync {$/;"	n
sync_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn sync_all(&self) -> io::Result<()> {$/;"	P	implementation:File
sync_all_err_ordered_after_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn sync_all_err_ordered_after_write() {$/;"	f
sync_all_ordered_after_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn sync_all_ordered_after_write() {$/;"	f
sync_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn sync_data(&self) -> io::Result<()> {$/;"	P	implementation:File
sync_data_err_ordered_after_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn sync_data_err_ordered_after_write() {$/;"	f
sync_data_ordered_after_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn sync_data_ordered_after_write() {$/;"	f
sync_scope	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn sync_scope<F, R>(&'static self, value: T, f: F) -> R$/;"	P	implementation:LocalKey
sync_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn sync_when(&self) -> u64 {$/;"	P	implementation:TimerHandle
sync_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn sync_when(&self) -> u64 {$/;"	P	implementation:TimerShared
syntax	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/error.rs	/^    pub(crate) fn syntax(code: ErrorCode, line: usize, column: usize) -> Self {$/;"	P	implementation:Error
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^pub(crate) mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^mod sys {$/;"	n
table_name	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub table_name: &'s str,$/;"	m	struct:Metadata
table_name	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn table_name() -> &'static str;$/;"	P	interface:Schema
tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        pub tag: T,$/;"	m	struct:content::TaggedContent
tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    tag: &'static str,$/;"	m	struct:TaggedSerializer
tag_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        tag_name: &'static str,$/;"	m	struct:content::TaggedContentVisitor
tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    tail: AtomicUnsignedShort,$/;"	m	struct:Inner
tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    tail: Option<NonNull<task::Header>>,$/;"	m	struct:Pointers
tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    tail: Mutex<Tail>,$/;"	m	struct:Shared
tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    tail: Option<NonNull<T>>,$/;"	m	struct:LinkedList
tail_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    tail_position: AtomicUsize,$/;"	m	struct:Tx
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    fn take(self) -> String {$/;"	P	implementation:Handle
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^    pub fn take(&mut self) -> Value {$/;"	P	implementation:Value
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn take(&mut self, n: usize) -> ReadBuf<'_> {$/;"	P	implementation:ReadBuf
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^pub(super) fn take<R: AsyncRead>(inner: R, limit: u64) -> Take<R> {$/;"	f
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn take(&mut self) -> Vec<u8> {$/;"	P	implementation:VecWithInitialized
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        pub(super) fn take(&self) -> Option<T> {$/;"	P	implementation:atomic_take::AtomicTake
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn take(&mut self) -> Option<T> {$/;"	P	implementation:OnceCell
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    pub(crate) fn take(&self) -> Option<Box<T>> {$/;"	P	implementation:AtomicCell
take_core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn take_core(&self, handle: &Arc<Handle>) -> Option<CoreGuard<'_>> {$/;"	P	implementation:CurrentThread
take_entries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn take_entries(&mut self, expiration: &Expiration) -> EntryList {$/;"	P	implementation:Wheel
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:TcpSocket
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:TcpStream
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:UdpSocket
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:UnixDatagram
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:UnixListener
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:UnixStream
take_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn take_inner(&mut self) -> Option<T> {$/;"	P	implementation:AsyncFd
take_local_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn take_local_queue(&self) -> VecDeque<task::Notified<Arc<Shared>>> {$/;"	P	implementation:LocalState
take_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    pub fn take_output(self: Pin<&mut Self>) -> Option<Fut::Output> {$/;"	P	implementation:MaybeDone
take_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn take_output(&self) -> super::Result<T::Output> {$/;"	P	implementation:Core
take_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) fn take_slot(&mut self, slot: usize) -> EntryList {$/;"	P	implementation:Level
take_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    pub(crate) fn take_waker(&self) -> Option<Waker> {$/;"	P	implementation:AtomicWaker
taken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        taken: AtomicBool,$/;"	m	struct:atomic_take::AtomicTake
target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    pub(crate) target: String,$/;"	m	struct:TracingEvent
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod task;$/;"	n
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^mod task;$/;"	n
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    task: task::UnownedTask<BlockingSchedule>,$/;"	m	struct:Task
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    task: Task<S>,$/;"	m	struct:LocalNotified
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^    task: AtomicWaker,$/;"	m	struct:Chan
task	/home/trey/code/sqlx-crud/examples/axum/src/main.rs	/^    pub task: String,$/;"	m	struct:Task
task	/home/trey/code/sqlx-crud/examples/axum/src/main.rs	/^async fn task(Path(task_id): Path<i64>, Extension(pool): Extension<SqlitePool>) -> Response {$/;"	f
task_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) task_id: Id,$/;"	m	struct:Core
task_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^macro_rules! task_local {$/;"	M
task_pop_front	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn task_pop_front(&self) -> Option<task::Notified<Arc<Shared>>> {$/;"	P	implementation:LocalState
task_push_back	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn task_push_back(&self, task: task::Notified<Arc<Shared>>) {$/;"	P	implementation:LocalState
task_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn task_remove(&self, task: &Task<Arc<Shared>>) -> Option<Task<Arc<Shared>>> {$/;"	P	implementation:LocalState
tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    tasks: VecDeque<task::Notified<Arc<Handle>>>,$/;"	m	struct:Core
tasks	/home/trey/code/sqlx-crud/examples/axum/src/main.rs	/^async fn tasks(Extension(pool): Extension<SqlitePool>) -> Response {$/;"	f
temporary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^    pub fn temporary(uri: &str) -> Self {$/;"	P	implementation:Redirect
terminate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn terminate() -> Self {$/;"	P	implementation:SignalKind
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    macro_rules! test {$/;"	M	module:tests
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/merge.rs	/^    async fn test(name: &str, app: Router) {$/;"	f	function:multiple_ors_balanced_differently
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^pub(crate) mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^mod test {$/;"	n
test_client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    fn test_client() -> TestClient {$/;"	f	module:tests
test_client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/mod.rs	/^mod test_client;$/;"	n
test_combination	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^fn test_combination($/;"	f
test_combinations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^fn test_combinations() {$/;"	f
test_different_futures	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn test_different_futures() {$/;"	f	module:test
test_different_sizes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn test_different_sizes() {$/;"	f	module:test
test_dupe_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^fn test_dupe_value() {$/;"	f
test_form_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    async fn test_form_body() {$/;"	f	module:tests
test_form_query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    async fn test_form_query() {$/;"	f	module:tests
test_format_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^fn test_format_u8() {$/;"	f
test_from_body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^    async fn test_from_body() {$/;"	f	module:tests
test_from_extractor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    async fn test_from_extractor() {$/;"	f	module:tests
test_from_query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^    async fn test_from_query() {$/;"	f	module:tests
test_generations_assert_same	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^fn test_generations_assert_same() {$/;"	f
test_helpers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^mod test_helpers;$/;"	n
test_id_not_broken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    fn test_id_not_broken() {$/;"	f	module:tests
test_incorrect_content_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^    async fn test_incorrect_content_type() {$/;"	f	module:tests
test_incorrect_content_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^    async fn test_incorrect_content_type() {$/;"	f	module:tests
test_join_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_join_set.rs	/^fn test_join_set() {$/;"	f
test_level_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn test_level_for() {$/;"	f	module:test
test_local_queue_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^fn test_local_queue_capacity() {$/;"	f
test_match_borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^fn test_match_borrow() {$/;"	f
test_panicky_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^fn test_panicky_waker() {$/;"	f
test_parse_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    macro_rules! test_parse_error {$/;"	M	module:tests
test_parse_error_at_index_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_error_at_index_error() {$/;"	f	module:tests
test_parse_error_at_key_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_error_at_key_error() {$/;"	f	module:tests
test_parse_error_at_key_error_multiple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_error_at_key_error_multiple() {$/;"	f	module:tests
test_parse_error_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_error_error() {$/;"	f	module:tests
test_parse_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_map() {$/;"	f	module:tests
test_parse_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_seq() {$/;"	f	module:tests
test_parse_seq_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_seq_seq() {$/;"	f	module:tests
test_parse_seq_tuple_string_parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_seq_tuple_string_parse() {$/;"	f	module:tests
test_parse_seq_tuple_string_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_seq_tuple_string_string() {$/;"	f	module:tests
test_parse_seq_tuple_unsupported_key_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_seq_tuple_unsupported_key_type() {$/;"	f	module:tests
test_parse_seq_wrong_tuple_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_seq_wrong_tuple_length() {$/;"	f	module:tests
test_parse_single_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_single_value() {$/;"	f	module:tests
test_parse_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_struct() {$/;"	f	module:tests
test_parse_struct_ignoring_additional_fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_struct_ignoring_additional_fields() {$/;"	f	module:tests
test_parse_tuple_ignoring_additional_fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_parse_tuple_ignoring_additional_fields() {$/;"	f	module:tests
test_path_for_nested_route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^fn test_path_for_nested_route() {$/;"	f
test_pseudo_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn test_pseudo_text() {$/;"	f	module:tests
test_query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^    async fn test_query() {$/;"	f	module:tests
test_slot_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    fn test_slot_for() {$/;"	f	module:test
test_splitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn test_splitter() {$/;"	f	module:tests
test_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^fn test_state() {$/;"	f
test_try_downcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^fn test_try_downcast() {$/;"	f
test_unsupported_type_error_nested_data_structure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_unsupported_type_error_nested_data_structure() {$/;"	f	module:tests
test_wrap_same	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^fn test_wrap_same() {$/;"	f
test_wrong_number_of_parameters_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn test_wrong_number_of_parameters_error() {$/;"	f	module:tests
test_zero_sized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn test_zero_sized() {$/;"	f	module:test
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/matched_path.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/query.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/raw_form.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/request_parts.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/form.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_fn.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/repeat.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mod.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^pub(crate) mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^mod tests {$/;"	n
text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/multipart.rs	/^    pub async fn text(self) -> Result<String, MultipartError> {$/;"	P	implementation:Field
text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/sse.rs	/^    pub fn text<I>(self, text: I) -> Self$/;"	P	implementation:KeepAlive
text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/test_client.rs	/^    pub(crate) async fn text(self) -> String {$/;"	P	implementation:TestResponse
then	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) const fn then(&self, width: u32) -> Pack {$/;"	P	implementation:Pack
thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^pub(crate) mod thread {$/;"	n
thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod thread {$/;"	n
thread_cap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    thread_cap: usize,$/;"	m	struct:Inner
thread_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    thread_id: Cell<Option<ThreadId>>,$/;"	m	struct:Context
thread_keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn thread_keep_alive(&mut self, duration: Duration) -> &mut Self {$/;"	P	implementation:Builder
thread_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod thread_local;$/;"	n
thread_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    thread_name: ThreadNameFn,$/;"	m	struct:Inner
thread_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn thread_name(&mut self, val: impl Into<String>) -> &mut Self {$/;"	P	implementation:Builder
thread_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) thread_name: ThreadNameFn,$/;"	m	struct:Builder
thread_name_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn thread_name_fn<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
thread_rng_n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^pub(crate) fn thread_rng_n(n: u32) -> u32 {$/;"	f
thread_stack_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn thread_stack_size(&mut self, val: usize) -> &mut Self {$/;"	P	implementation:Builder
thread_stack_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) thread_stack_size: Option<usize>,$/;"	m	struct:Builder
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    tick: u8,$/;"	m	struct:Driver
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    tick: u8,$/;"	m	struct:ReadyEvent
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    tick: u32,$/;"	m	struct:Core
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn tick(&mut self) {$/;"	P	implementation:Core
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    tick: u32,$/;"	m	struct:Core
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn tick(&self) -> usize {$/;"	P	implementation:Runtime
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn tick(&self) -> bool {$/;"	P	implementation:LocalSet
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub async fn tick(&mut self) -> Instant {$/;"	P	implementation:Interval
tick_max	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn tick_max(&self, max: usize) -> usize {$/;"	P	implementation:Runtime
tick_to_duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn tick_to_duration(&self, t: u64) -> Duration {$/;"	P	implementation:TimeSource
tie_even	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/rounding.rs	/^pub(crate) fn tie_even(fp: &mut ExtendedFloat, is_above: bool, is_halfway: bool) {$/;"	f
time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) time: TimeHandle,$/;"	m	struct:Handle
time_source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(crate) fn time_source(&self) -> &TimeSource {$/;"	P	implementation:Handle
time_source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(super) time_source: TimeSource,$/;"	m	struct:Handle
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^fn timeout() -> TimeoutLayer {$/;"	f
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod timeout;$/;"	n
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^pub fn timeout<F>(duration: Duration, future: F) -> Timeout<F>$/;"	f
timeout_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^pub fn timeout_at<F>(deadline: Instant, future: F) -> Timeout<F>$/;"	f
to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^    pub fn to(uri: &str) -> Self {$/;"	P	implementation:Redirect
to_bits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn to_bits(self) -> Self::Unsigned;$/;"	P	interface:Float
to_bits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn to_bits(self) -> u32 {$/;"	P	implementation:f32
to_bits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^    fn to_bits(self) -> u64 {$/;"	P	implementation:f64
to_digit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/digit.rs	/^pub(crate) fn to_digit(c: u8) -> Option<u32> {$/;"	f
to_mio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub(crate) const fn to_mio(self) -> mio::Interest {$/;"	P	implementation:Interest
to_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn to_owned(&self) -> Self::Owned {$/;"	P	implementation:RawValue
to_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^fn to_raw<T>(data: Option<Box<T>>) -> *mut T {$/;"	f
to_raw_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^pub fn to_raw_value<T>(value: &T) -> Result<Box<RawValue>, Error>$/;"	f
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^        fn to_socket_addrs(&self, internal: Internal) -> Self::Future;$/;"	P	interface:sealed::ToSocketAddrsPriv
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	P	implementation:SocketAddr
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	P	implementation:SocketAddrV4
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	P	implementation:SocketAddrV6
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	P	implementation:u16
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	f
to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub fn to_string<T>(value: &T) -> Result<String>$/;"	f	method:Formatter::write_char_escape
to_string_pretty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub fn to_string_pretty<T>(value: &T) -> Result<String>$/;"	f	method:Formatter::write_char_escape
to_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/ws.rs	/^    pub fn to_text(&self) -> Result<&str, Error> {$/;"	P	implementation:Message
to_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^pub fn to_value<T>(value: T) -> Result<Value, Error>$/;"	f
to_vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub fn to_vec<T>(value: &T) -> Result<Vec<u8>>$/;"	f	method:Formatter::write_char_escape
to_vec_pretty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub fn to_vec_pretty<T>(value: &T) -> Result<Vec<u8>>$/;"	f	method:Formatter::write_char_escape
to_writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub fn to_writer<W, T>(writer: W, value: &T) -> Result<()>$/;"	f	method:Formatter::write_char_escape
to_writer_pretty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^pub fn to_writer_pretty<W, T>(writer: W, value: &T) -> Result<()>$/;"	f	method:Formatter::write_char_escape
tokio_thread_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/thread_local.rs	/^macro_rules! tokio_thread_local {$/;"	M
top_level_handler_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^macro_rules! top_level_handler_fn {$/;"	M
top_level_service_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^macro_rules! top_level_service_fn {$/;"	M
tos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn tos(&self) -> io::Result<u32> {$/;"	P	implementation:TcpSocket
tos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn tos(&self) -> io::Result<u32> {$/;"	P	implementation:UdpSocket
total_kills	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        total_kills: usize,$/;"	m	struct:test::MockWait
total_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        total_polls: usize,$/;"	m	struct:test::MockStream
total_waits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        total_waits: Rc<Cell<usize>>,$/;"	m	struct:test::MockWait
total_waits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        total_waits: usize,$/;"	m	struct:test::MockWait
trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    trace: MethodEndpoint<S, B, E>,$/;"	m	struct:MethodRouter
trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod trace;$/;"	n
tracing_helpers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/mod.rs	/^pub(crate) mod tracing_helpers;$/;"	n
tracing_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) tracing_id: Option<tracing::Id>,$/;"	m	struct:Header
track	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^fn track<T: Future>(f: T) -> Track<T> {$/;"	f
trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) trailer: Trailer,$/;"	m	struct:Cell
trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn trailer(&self) -> &Trailer {$/;"	f
trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn trailer(&self) -> &Trailer {$/;"	P	implementation:RawTask
trailer_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) trailer_offset: usize,$/;"	m	struct:Vtable
trailer_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn trailer_ptr(&self) -> NonNull<Trailer> {$/;"	P	implementation:RawTask
traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/error_handling/mod.rs	/^fn traits() {$/;"	f
traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^fn traits() {$/;"	f
traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/into_service_state_in_extension.rs	/^fn traits() {$/;"	f
traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/service.rs	/^fn traits() {$/;"	f
traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^fn traits() {$/;"	f
traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/into_make_service.rs	/^    fn traits() {$/;"	f	module:tests
traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^fn traits() {$/;"	f
traits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/route.rs	/^    fn traits() {$/;"	f	module:tests
traits	/home/trey/code/sqlx-crud/src/lib.rs	/^pub mod traits;$/;"	n
transfer_one_direction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^fn transfer_one_direction<A, B>($/;"	f
transition_from_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_from_parked(&mut self, worker: &Worker) -> bool {$/;"	P	implementation:Core
transition_from_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_from_searching(&mut self, worker: &Worker) {$/;"	P	implementation:Core
transition_to_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_complete(&self) -> Snapshot {$/;"	P	implementation:State
transition_to_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_idle(&self) -> TransitionToIdle {$/;"	P	implementation:State
transition_to_notified_and_cancel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_notified_and_cancel(&self) -> bool {$/;"	P	implementation:State
transition_to_notified_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_notified_by_ref(&self) -> TransitionToNotifiedByRef {$/;"	P	implementation:State
transition_to_notified_by_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_notified_by_val(&self) -> TransitionToNotifiedByVal {$/;"	P	implementation:State
transition_to_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_to_parked(&mut self, worker: &Worker) -> bool {$/;"	P	implementation:Core
transition_to_running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_running(&self) -> TransitionToRunning {$/;"	P	implementation:State
transition_to_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_to_searching(&mut self, worker: &Worker) -> bool {$/;"	P	implementation:Core
transition_to_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_shutdown(&self) -> bool {$/;"	P	implementation:State
transition_to_terminal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_terminal(&self, count: usize) -> bool {$/;"	P	implementation:State
transition_worker_from_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn transition_worker_from_searching(&self) -> bool {$/;"	P	implementation:Idle
transition_worker_from_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_worker_from_searching(&self) {$/;"	P	implementation:Handle
transition_worker_to_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn transition_worker_to_parked(&self, worker: usize, is_searching: bool) -> bool /;"	P	implementation:Idle
transition_worker_to_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn transition_worker_to_searching(&self) -> bool {$/;"	P	implementation:Idle
tri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^macro_rules! tri {$/;"	M
true_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn true_when(&self) -> u64 {$/;"	P	implementation:TimerShared
true_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    true_when: AtomicU64,$/;"	m	struct:TimerShared
truncate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn truncate(&mut self, truncate: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
try	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/lib.rs	/^macro_rules! try {$/;"	M
try_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn try_acquire(&self, num_permits: u32) -> Result<(), TryAcquireError> {$/;"	P	implementation:Semaphore
try_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn try_acquire(&self) -> Result<SemaphorePermit<'_>, TryAcquireError> {$/;"	P	implementation:Semaphore
try_acquire_many	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn try_acquire_many(&self, n: u32) -> Result<SemaphorePermit<'_>, TryAcquireError> {$/;"	P	implementation:Semaphore
try_acquire_many_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn try_acquire_many_available() {$/;"	f
try_acquire_many_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn try_acquire_many_owned($/;"	P	implementation:Semaphore
try_acquire_many_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn try_acquire_many_unavailable() {$/;"	f
try_acquire_one_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn try_acquire_one_available() {$/;"	f
try_acquire_one_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn try_acquire_one_unavailable() {$/;"	f
try_acquire_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn try_acquire_owned(self: Arc<Self>) -> Result<OwnedSemaphorePermit, TryAcquireError> {$/;"	P	implementation:Semaphore
try_advancing_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn try_advancing_head(&mut self) -> bool {$/;"	P	implementation:Rx
try_clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn try_clone(&self) -> io::Result<File> {$/;"	P	implementation:File
try_current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn try_current() -> Result<Self, TryCurrentError> {$/;"	P	implementation:Handle
try_downcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/util.rs	/^pub(crate) fn try_downcast<T, K>(k: K) -> Result<T, K>$/;"	f
try_downgrade_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn try_downgrade_map<F, U: ?Sized>($/;"	P	implementation:OwnedRwLockWriteGuard
try_downgrade_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn try_downgrade_map<F, U: ?Sized>(this: Self, f: F) -> Result<RwLockReadGuard<'a, U>, S/;"	P	implementation:RwLockWriteGuard
try_exists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod try_exists;$/;"	n
try_exists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/try_exists.rs	/^pub async fn try_exists(path: impl AsRef<Path>) -> io::Result<bool> {$/;"	f
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_filter.rs	/^    fn try_from(m: Method) -> Result<Self, NoMatchingMethodFilter> {$/;"	P	implementation:MethodFilter
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    fn try_from(stream: net::TcpListener) -> Result<Self, Self::Error> {$/;"	P	implementation:TcpListener
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn try_from(stream: std::net::TcpStream) -> Result<Self, Self::Error> {$/;"	P	implementation:TcpStream
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn try_from(stream: std::net::UdpSocket) -> Result<Self, Self::Error> {$/;"	P	implementation:UdpSocket
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn try_from(stream: std::os::unix::net::UnixDatagram) -> Result<Self, Self::Error> {$/;"	P	implementation:UnixDatagram
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    fn try_from(stream: std::os::unix::net::UnixListener) -> io::Result<Self> {$/;"	P	implementation:UnixListener
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn try_from(stream: net::UnixStream) -> io::Result<Self> {$/;"	P	implementation:UnixStream
try_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^pub fn try_id() -> Option<Id> {$/;"	f
try_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn try_into(self) -> Result<Stdio, Self::Error> {$/;"	P	implementation:ChildStderr
try_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn try_into(self) -> Result<Stdio, Self::Error> {$/;"	P	implementation:ChildStdin
try_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn try_into(self) -> Result<Stdio, Self::Error> {$/;"	P	implementation:ChildStdout
try_into_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn try_into_panic(self) -> Result<Box<dyn Any + Send + 'static>, JoinError> {$/;"	P	implementation:JoinError
try_into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub fn try_into_std(mut self) -> Result<StdFile, Self> {$/;"	P	implementation:File
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn try_io<R>($/;"	P	implementation:AsyncFdReadyGuard
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn try_io<R>($/;"	P	implementation:AsyncFdReadyMutGuard
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_io<R>($/;"	P	implementation:TcpStream
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_io<R>($/;"	P	implementation:UdpSocket
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_io<R>($/;"	P	implementation:UnixDatagram
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_io<R>($/;"	P	implementation:UnixStream
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_io<R>($/;"	P	implementation:NamedPipeClient
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_io<R>($/;"	P	implementation:NamedPipeServer
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn try_io<R>($/;"	P	implementation:Registration
try_join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/try_join.rs	/^macro_rules! try_join {$/;"	M
try_join3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/try_join.rs	/^pub(crate) fn try_join3<T1, F1, T2, F2, T3, F3, E>($/;"	f
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^        pub(crate) fn try_lock(&self) -> Option<MutexGuard<'_, T>> {$/;"	P	implementation:sync::Mutex
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^    pub(crate) fn try_lock(&self) -> Option<MutexGuard<'_, T>> {$/;"	P	implementation:Mutex
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn try_lock(&self) -> Option<MutexGuard<'_, T>> {$/;"	P	implementation:Mutex
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_lock(&self) -> Result<MutexGuard<'_, T>, TryLockError> {$/;"	P	implementation:Mutex
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    pub(crate) fn try_lock(&self) -> Option<LockGuard<'_, T>> {$/;"	P	implementation:TryLock
try_lock_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_lock_owned(self: Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError> {$/;"	P	implementation:Mutex
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_map<S, F>(mut this: Self, f: F) -> Result<OwnedMappedMutexGuard<T, S>, Self>$/;"	P	implementation:OwnedMappedMutexGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_map<U, F>(mut this: Self, f: F) -> Result<MappedMutexGuard<'a, U>, Self>$/;"	P	implementation:MappedMutexGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_map<U, F>(mut this: Self, f: F) -> Result<MappedMutexGuard<'a, U>, Self>$/;"	P	implementation:MutexGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_map<U, F>(mut this: Self, f: F) -> Result<OwnedMappedMutexGuard<T, U>, Self>$/;"	P	implementation:OwnedMutexGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub fn try_map<F, V: ?Sized>(this: Self, f: F) -> Result<OwnedRwLockReadGuard<T, V>, Self>$/;"	P	implementation:OwnedRwLockReadGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn try_map<F, U: ?Sized>($/;"	P	implementation:OwnedRwLockWriteGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub fn try_map<F, V: ?Sized>($/;"	P	implementation:OwnedRwLockMappedWriteGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub fn try_map<F, U: ?Sized>(this: Self, f: F) -> Result<RwLockReadGuard<'a, U>, Self>$/;"	P	implementation:RwLockReadGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn try_map<F, U: ?Sized>($/;"	P	implementation:RwLockWriteGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub fn try_map<F, U: ?Sized>($/;"	P	implementation:RwLockMappedWriteGuard
try_peek_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_peek_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UdpSocket
try_peek_sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_peek_sender(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
try_pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) fn try_pop(&mut self, tx: &Tx<T>) -> TryPopResult<T> {$/;"	P	implementation:Rx
try_push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn try_push($/;"	P	implementation:Block
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Receiver
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UnixStream
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeClient
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeServer
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn try_read(&self) -> Result<RwLockReadGuard<'_, T>, TryLockError> {$/;"	P	implementation:RwLock
try_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn try_read_output(self, dst: &mut Poll<super::Result<T::Output>>, waker: &Waker)/;"	f
try_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) try_read_output: unsafe fn(NonNull<Header>, *mut (), &Waker),$/;"	m	struct:Vtable
try_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) unsafe fn try_read_output(self, dst: *mut (), waker: &Waker) {$/;"	P	implementation:RawTask
try_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn try_read_output<T: Future, S: Schedule>($/;"	f
try_read_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn try_read_owned(self: Arc<Self>) -> Result<OwnedRwLockReadGuard<T>, TryLockError> {$/;"	P	implementation:RwLock
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:Receiver
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:UnixStream
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeClient
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeServer
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UnixDatagram
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:Receiver
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:Receiver
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^            macro_rules! try_recv {$/;"	M	method:Rx::recv
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^            macro_rules! try_recv {$/;"	M	method:Rx::try_recv
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:Rx
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:UnboundedReceiver
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:Receiver
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn try_recv() {$/;"	f
try_recv_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn try_recv_close() {$/;"	f
try_recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UdpSocket
try_recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UnixDatagram
try_reserve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn try_reserve(&self) -> Result<Permit<'_, T>, TrySendError<()>> {$/;"	P	implementation:Sender
try_reserve_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn try_reserve_owned(self) -> Result<OwnedPermit<T>, TrySendError<Self>> {$/;"	P	implementation:Sender
try_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
try_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UnixDatagram
try_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn try_send(&self, message: T) -> Result<(), TrySendError<T>> {$/;"	P	implementation:Sender
try_send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_send_to(&self, buf: &[u8], target: SocketAddr) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
try_send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_send_to<P>(&self, buf: &[u8], target: P) -> io::Result<usize>$/;"	P	implementation:UnixDatagram
try_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn try_set<F>(&mut self, future: F) -> Result<(), F>$/;"	P	implementation:ReusableBoxFuture
try_set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn try_set_join_waker(&self, waker: &Waker) -> bool {$/;"	P	implementation:RawTask
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:Child
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:StdChild
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    pub(crate) fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:Child
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:test::MockWait
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:T
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn try_wait(&mut self) -> io::Result<Option<ExitStatus>>;$/;"	P	interface:Wait
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:test::MockWait
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    pub(crate) fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:Child
try_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn try_with<F, R>(&'static self, f: F) -> Result<R, AccessError>$/;"	P	implementation:LocalKey
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:WriteHalf
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedWriteHalf
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Sender
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:WriteHalf
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedWriteHalf
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UnixStream
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeClient
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeServer
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn try_write(&self) -> Result<RwLockWriteGuard<'_, T>, TryLockError> {$/;"	P	implementation:RwLock
try_write_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn try_write_owned(self: Arc<Self>) -> Result<OwnedRwLockWriteGuard<T>, TryLockError> {$/;"	P	implementation:RwLock
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn try_write_vectored(&self, bufs: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:WriteHalf
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn try_write_vectored(&self, bufs: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:OwnedWriteHalf
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_write_vectored(&self, bufs: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:Sender
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:WriteHalf
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:OwnedWriteHalf
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:UnixStream
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeClient
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeServer
ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	P	implementation:TcpListener
ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	P	implementation:TcpStream
ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	P	implementation:UdpSocket
tuple_impls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_impls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_responses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/mod.rs	/^    fn tuple_responses() {$/;"	f	module:tests
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:UnitVariant
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:VariantAccess
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value>$/;"	P	implementation:UnitVariantAccess
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value>$/;"	P	implementation:VariantAccess
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:UnitOnly
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:VariantDeserializer
tuple_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:VariantRefDeserializer
turn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn turn(&mut self, handle: &Handle, max_wait: Option<Duration>) {$/;"	P	implementation:Driver
two	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    two: Cell<u32>,$/;"	m	struct:FastRand
two_digits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    fn two_digits() {$/;"	f	module:tests
two_path_extractors	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn two_path_extractors() {$/;"	f	module:tests
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    tx: *mut Option<oneshot::Sender<()>>,$/;"	m	struct:Waiting
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    tx: watch::Sender<()>,$/;"	m	struct:EventInfo
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    tx: list::Tx<T>,$/;"	m	struct:Chan
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^            tx: mpsc::Sender<()>,$/;"	m	struct:try_recv::Context
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^    tx: &'a mut oneshot::Sender<i32>,$/;"	m	struct:OnClose
tx_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn tx_close(&self) {$/;"	P	implementation:Block
tx_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    tx_count: AtomicUsize,$/;"	m	struct:Chan
tx_release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn tx_release(&self, tail_position: usize) {$/;"	P	implementation:Block
tx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    tx_task: Task,$/;"	m	struct:Inner
ty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    ty: PhantomData<T>,$/;"	m	struct:FromStrVisitor
ty_match	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod ty_match;$/;"	n
type_ident	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    type_ident: &'static str,$/;"	m	struct:TaggedSerializer
type_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
type_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
type_that_uses_deserialize_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn type_that_uses_deserialize_any() {$/;"	f	module:tests
typed_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^mod typed_header;$/;"	n
typed_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/typed_header.rs	/^    async fn typed_header() {$/;"	f	module:tests
types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod types {$/;"	n
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for (IpAddr, u16) {}$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for (Ipv4Addr, u16) {}$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for (Ipv6Addr, u16) {}$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for (IpAddr, u16) {$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for (Ipv4Addr, u16) {$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for (Ipv6Addr, u16) {$/;"	c
u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for u32$/;"	c
u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^impl Hi64<u32> for [u32] {$/;"	c
u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for u64$/;"	c
u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/errors.rs	/^impl FloatErrors for u64 {$/;"	c
u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^impl Hi64<u64> for [u64] {$/;"	c
u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/num.rs	/^impl Mantissa for u64 {$/;"	c
u64_to_hi64_1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^fn u64_to_hi64_1(r0: u64) -> (u64, bool) {$/;"	f
u64_to_hi64_2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lexical/math.rs	/^fn u64_to_hi64_2(r0: u64, r1: u64) -> (u64, bool) {$/;"	f
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a [u8] {$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for &'a [u8]$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a [u8]$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl AsyncBufRead for &[u8] {$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl AsyncRead for &[u8] {$/;"	c
u8_between	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^    fn u8_between(lower: u8, upper: u8, g: &mut quickcheck::Gen) -> u8 {$/;"	f	module:tests
ucred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^mod ucred;$/;"	n
uid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub fn uid(&self) -> unix::uid_t {$/;"	P	implementation:UCred
uid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    uid: unix::uid_t,$/;"	m	struct:UCred
uid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn uid(&mut self, id: u32) -> &mut Command {$/;"	P	implementation:Command
uid_t	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub type uid_t = u32;$/;"	t
uint_to_self	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! uint_to_self {$/;"	M
unbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn unbound() -> io::Result<UnixDatagram> {$/;"	P	implementation:UnixDatagram
unbounded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^mod unbounded;$/;"	n
unbounded_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>) {$/;"	f
unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn unchecked(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:OpenOptions
unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    unchecked: bool,$/;"	m	struct:OpenOptions
unconstrained	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    pub(super) const fn unconstrained() -> Budget {$/;"	P	implementation:Budget
unconstrained	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/unconstrained.rs	/^pub fn unconstrained<F>(inner: F) -> Unconstrained<F> {$/;"	f
unexpected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	P	implementation:content::Content
unexpected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub(crate) fn unexpected(&self) -> Unexpected {$/;"	P	implementation:Number
unexpected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn unexpected(&self) -> Unexpected {$/;"	P	implementation:Value
unfilled_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub unsafe fn unfilled_mut(&mut self) -> &mut [MaybeUninit<u8>] {$/;"	P	implementation:ReadBuf
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) unhandled_panic: UnhandledPanic,$/;"	m	struct:Builder
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) unhandled_panic: crate::runtime::UnhandledPanic,$/;"	m	struct:Config
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    unhandled_panic: bool,$/;"	m	struct:Core
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn unhandled_panic(&self) {$/;"	P	interface:Schedule
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub(crate) unhandled_panic: crate::runtime::UnhandledPanic,$/;"	m	struct:Shared
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unhandled_panic: Cell<bool>,$/;"	m	struct:Context
uninit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn uninit(buf: &'a mut [MaybeUninit<u8>]) -> ReadBuf<'a> {$/;"	P	implementation:ReadBuf
uninterruptibly	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^macro_rules! uninterruptibly {$/;"	M
unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/handle_error.rs	/^async fn unit() {}$/;"	f
unit_only	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f	module:private
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn unit_variant(self) -> Result<(), Self::Error> {$/;"	P	implementation:UnitVariant
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	P	interface:VariantAccess
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f	module:content
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn unit_variant(self) -> Result<()> {$/;"	P	implementation:UnitVariantAccess
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn unit_variant(self) -> Result<()> {$/;"	P	implementation:VariantAccess
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	P	implementation:UnitOnly
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	P	implementation:VariantDeserializer
unit_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn unit_variant(self) -> Result<(), Error> {$/;"	P	implementation:VariantRefDeserializer
unix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub(crate) mod unix {$/;"	n
unix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^pub mod unix;$/;"	n
unowned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^    pub(crate) fn unowned<T>(task: T) -> (Notified<NoopSchedule>, JoinHandle<T::Output>)$/;"	f	module:unowned_wrapper
unowned_poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn unowned_poll() {$/;"	f
unowned_wrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^mod unowned_wrapper {$/;"	n
unpack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^fn unpack(n: UnsignedLong) -> (UnsignedShort, UnsignedShort) {$/;"	f
unpack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) fn unpack(&self, src: usize) -> usize {$/;"	P	implementation:Pack
unpack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^pub(crate) const fn unpack(src: usize, mask: usize, shift: u32) -> usize {$/;"	f
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn unpark(&self) {$/;"	P	implementation:Handle
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn unpark(&self) {$/;"	P	implementation:Handle
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn unpark(&self) -> Result<UnparkThread, AccessError> {$/;"	P	implementation:CachedParkThread
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn unpark(&self) {$/;"	P	implementation:Inner
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn unpark(&self) -> UnparkThread {$/;"	P	implementation:ParkThread
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn unpark(&self) {$/;"	P	implementation:UnparkThread
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn unpark(&self, driver: &driver::Handle) {$/;"	P	implementation:Inner
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn unpark(&self) -> Unparker {$/;"	P	implementation:Parker
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn unpark(&self, driver: &driver::Handle) {$/;"	P	implementation:Unparker
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    unpark: Unparker,$/;"	m	struct:Remote
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(crate) fn unpark(&self) {$/;"	P	implementation:Handle
unpark_condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn unpark_condvar(&self) {$/;"	P	implementation:Inner
unpark_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn unpark_one(cell: &AtomicUsize, num_searching: usize) {$/;"	P	implementation:State
unpark_worker_by_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn unpark_worker_by_id(&self, worker_id: usize) -> bool {$/;"	P	implementation:Idle
unparker_to_raw_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn unparker_to_raw_waker(unparker: Arc<Inner>) -> RawWaker {$/;"	f
unsafe_cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod unsafe_cell;$/;"	n
unset_join_interested	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn unset_join_interested(&mut self) {$/;"	P	implementation:Snapshot
unset_join_interested	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn unset_join_interested(&self) -> UpdateResult {$/;"	P	implementation:State
unset_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn unset_join_waker(&mut self) {$/;"	P	implementation:Snapshot
unset_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn unset_notified(&mut self) {$/;"	P	implementation:Snapshot
unset_running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn unset_running(&mut self) {$/;"	P	implementation:Snapshot
unset_rx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn unset_rx_task(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
unset_tx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn unset_tx_task(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
unset_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn unset_waker(&self) -> UpdateResult {$/;"	P	implementation:State
unsplit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    pub fn unsplit(self, wr: WriteHalf<T>) -> T$/;"	P	implementation:ReadHalf
unsupported_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^macro_rules! unsupported_type {$/;"	M
unsupported_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub(super) fn unsupported_type(name: &'static str) -> Self {$/;"	P	implementation:PathDeserializationError
unsync_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    pub(crate) unsafe fn unsync_load(&self) -> u16 {$/;"	P	implementation:AtomicU16
unsync_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    pub(crate) unsafe fn unsync_load(&self) -> u32 {$/;"	P	implementation:AtomicU32
unsync_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    pub(crate) unsafe fn unsync_load(&self) -> usize {$/;"	P	implementation:AtomicUsize
update	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update(self, pool: E) -> CrudFut<'e, Self> {$/;"	P	interface:Crud
update_args	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update_args(self) -> <E::Database as HasArguments<'e>>::Arguments;$/;"	P	interface:Crud
update_by_id_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub update_by_id_sql: &'s str,$/;"	m	struct:Metadata
update_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update_by_id_sql() -> &'static str;$/;"	P	interface:Schema
update_task	/home/trey/code/sqlx-crud/examples/axum/src/main.rs	/^async fn update_task($/;"	f
upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn upgrade(&self) -> Option<Sender<T>> {$/;"	P	implementation:WeakSender
upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(super) fn upgrade(chan: Arc<Chan<T, S>>) -> Option<Self> {$/;"	P	implementation:Tx
upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn upgrade(&self) -> Option<UnboundedSender<T>> {$/;"	P	implementation:WeakUnboundedSender
uri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^        uri: Uri,$/;"	m	struct:tests::UriAndPrefix
uri_host	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    async fn uri_host() {$/;"	f	module:tests
url_params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    url_params: &'de [(Arc<str>, PercentDecodedStr)],$/;"	m	struct:PathDeserializer
url_params	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^pub(crate) mod url_params;$/;"	n
used	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    used: AtomicUsize,$/;"	m	struct:Page
used	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    used: usize,$/;"	m	struct:Slots
user_defined1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn user_defined1() -> Self {$/;"	P	implementation:SignalKind
user_defined2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn user_defined2() -> Self {$/;"	P	implementation:SignalKind
users_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^    async fn users_create(_: Request<Body>) -> &'static str {$/;"	f	function:hello_world
usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^    impl Sealed for usize {}$/;"	c	module:private
usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/index.rs	/^impl Index for usize {$/;"	c
usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl From<State> for usize {$/;"	c
utf8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^mod utf8;$/;"	n
util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/lib.rs	/^mod util;$/;"	n
util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^mod util;$/;"	n
vacant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    vacant: VacantEntryImpl<'a>,$/;"	m	struct:VacantEntry
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^            val: *const (),$/;"	m	struct:ScopedKey::set::Reset
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    val: AtomicUsize,$/;"	m	struct:State
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    val: UnsafeCell<Option<T>>,$/;"	m	struct:Slot
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                val: Option<Rc<Context>>,$/;"	m	struct:LocalSet::with::Reset
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                val: Option<Rc<Context>>,$/;"	m	struct:LocalSet::with_if_possible::Reset
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        val: i32,$/;"	m	struct:tests::Entry
valid_json_content_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^        async fn valid_json_content_type(content_type: &str) -> bool {$/;"	f	function:tests::json_content_types
validate_nest_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^fn validate_nest_path(path: &str) -> &str {$/;"	f
validate_path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^        fn validate_path(path: &str) -> Result<(), &'static str> {$/;"	f	function:route
validates_max_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn validates_max_permits() {$/;"	f
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extension.rs	/^    pub(crate) value: T,$/;"	m	struct:AddExtension
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/connect_info.rs	/^            value: &'static str,$/;"	m	struct:tests::custom::MyConnectInfo
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^            value: Option<&'de PercentDecodedStr>,$/;"	m	struct:ValueDeserializer::deserialize_tuple::PairDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    value: &'de PercentDecodedStr,$/;"	m	struct:ValueDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    value: Arc<str>,$/;"	m	struct:EnumDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    value: Option<&'de PercentDecodedStr>,$/;"	m	struct:MapDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        value: i32,$/;"	m	struct:extract_state::AppState
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^        value: i32,$/;"	m	struct:extract_state::InnerState
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^pub mod value;$/;"	n
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    value: &'a [u8],$/;"	m	struct:BytesDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    value: &'de [u8],$/;"	m	struct:BorrowedBytesDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    value: &'de str,$/;"	m	struct:BorrowedStrDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    value: Cow<'a, str>,$/;"	m	struct:CowStrDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    value: Option<Second<I::Item>>,$/;"	m	struct:MapDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    value: String,$/;"	m	struct:StringDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    value: u32,$/;"	m	struct:U32Deserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::EnumRefDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::MapRefDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::VariantRefDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::EnumDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::MapDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::VariantDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: PhantomData<Content<'de>>,$/;"	m	struct:content::ContentVisitor
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: PhantomData<TagOrContent<'de>>,$/;"	m	struct:content::TagOrContentVisitor
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        value: PhantomData<TaggedContent<'de, T>>,$/;"	m	struct:content::TaggedContentVisitor
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    value: &'de str,$/;"	m	struct:BorrowedStrDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/lib.rs	/^pub mod value;$/;"	n
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^    pub value: Number,$/;"	m	struct:NumberFromString
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    value: Cow<'de, str>,$/;"	m	struct:BorrowedCowStrDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    value: Option<&'de Value>,$/;"	m	struct:EnumRefDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    value: Option<&'de Value>,$/;"	m	struct:MapRefDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    value: Option<&'de Value>,$/;"	m	struct:VariantRefDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    value: Option<Value>,$/;"	m	struct:EnumDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    value: Option<Value>,$/;"	m	struct:MapDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    value: Option<Value>,$/;"	m	struct:VariantDeserializer
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    value: Mutex<Option<T>>,$/;"	m	struct:Inner
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    value: std::sync::Arc<atomic_take::AtomicTake<oneshot::Sender<T>>>,$/;"	m	struct:AtomicOneshot
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    value: UnsafeCell<MaybeUninit<T>>,$/;"	m	struct:OnceCell
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    value: UnsafeCell<Option<T>>,$/;"	m	struct:Inner
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    value: RwLock<T>,$/;"	m	struct:Shared
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            value: &'a Option<T>,$/;"	m	struct:fmt::TransparentOption
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    value: UnsafeCell<ManuallyDrop<T>>,$/;"	m	struct:ListEntry
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    value: UnsafeCell<MaybeUninit<T>>,$/;"	m	struct:OnceCell
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    value: *const Value<T>,$/;"	m	struct:Ref
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    value: T,$/;"	m	struct:Value
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    value: UnsafeCell<Value<T>>,$/;"	m	struct:Slot
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^    value: T,$/;"	m	struct:SyncWrapper
value_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    value_set: AtomicBool,$/;"	m	struct:OnceCell
values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn values(&self) -> Values {$/;"	P	implementation:Map
values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        values: Vec<Option<()>>,$/;"	m	struct:test::MockStream
values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    values: Values<T>,$/;"	m	struct:Block
values_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn values_mut(&mut self) -> ValuesMut {$/;"	P	implementation:Map
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        variant: &'a Content<'de>,$/;"	m	struct:content::EnumRefDeserializer
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        variant: Content<'de>,$/;"	m	struct:content::EnumDeserializer
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeStructVariant
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeTupleVariant
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    variant: &'de str,$/;"	m	struct:EnumRefDeserializer
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    variant: String,$/;"	m	struct:EnumDeserializer
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^mod variant {$/;"	n
variant_ident	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    variant_ident: &'static str,$/;"	m	struct:TaggedSerializer
variant_identifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	M
variant_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeStructVariant
variant_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeTupleVariant
variant_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
variant_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
variant_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/ser.rs	/^    variant_name: &'static str,$/;"	m	struct:TaggedSerializer
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	P	implementation:EnumDeserializer
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f	module:content
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f	module:content
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self)>$/;"	P	implementation:UnitVariantAccess
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self)>$/;"	P	implementation:VariantAccess
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Error>$/;"	P	implementation:BorrowedCowStrDeserializer
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Error>$/;"	P	implementation:EnumRefDeserializer
variant_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, VariantDeserializer), Error>$/;"	P	implementation:EnumDeserializer
vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    vec: Vec<Value>,$/;"	m	struct:SerializeTupleVariant
vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/ser.rs	/^    vec: Vec<Value>,$/;"	m	struct:SerializeVec
vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    vec: V,$/;"	m	struct:VecWithInitialized
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn version(self) -> Version {$/;"	P	implementation:state::StateSnapshot
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    version: Version,$/;"	m	struct:Receiver
visit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/de.rs	/^    fn visit<'de, V>(self, visitor: V) -> Result<V::Value>$/;"	P	implementation:ParserNumber
visit_array	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^fn visit_array<'de, V>(array: Vec<Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_array_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^fn visit_array_ref<'de, V>(array: &'de [Value], visitor: V) -> Result<V::Value, Error>$/;"	f
visit_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	implementation:BoolVisitor
visit_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_bool<E>(self, value: bool) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_borrowed_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn visit_borrowed_str<E>(self, s: &'de str) -> Result<Self::Value, E>$/;"	P	implementation:ReferenceFromString
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_byte_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_char	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_content_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f	module:content
visit_content_map_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f	module:content
visit_content_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, /;"	f	module:content
visit_content_seq_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f	module:content
visit_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:OsStringVisitor
visit_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_enum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Number, E>$/;"	P	implementation:Number::deserialize::NumberVisitor
visit_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Number, E> {$/;"	P	implementation:Number::deserialize::NumberVisitor
visit_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f	module:content
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:Map::deserialize::Visitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Number, V::Error>$/;"	P	implementation:Number::deserialize::NumberVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:Box::deserialize::BoxedVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:RawValue::deserialize::ReferenceVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_newtype_struct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_none<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_none<E>(self) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_object	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^fn visit_object<'de, V>(object: Map<String, Value>, visitor: V) -> Result<V::Value, Error>$/;"	f
visit_object_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^fn visit_object_ref<'de, V>(object: &'de Map<String, Value>, visitor: V) -> Result<V::Value, Err/;"	f
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize_in_place
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:ArrayVisitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:CStringVisitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f	module:content
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_seq<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_some<D>(self, deserializer: D) -> Result<Value, D::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagContentOtherFieldVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagOrContentFieldVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	P	implementation:NumberKey::deserialize::FieldVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn visit_str<E>(self, s: &str) -> Result<NumberFromString, E>$/;"	P	implementation:NumberFromString::deserialize::Visitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	P	implementation:RawKey::deserialize::FieldVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:BoxedFromString
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_str<E>(self, value: &str) -> Result<Value, E>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:KeyClassifier
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/raw.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	P	implementation:BoxedFromString
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_string<E>(self, value: String) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^    fn visit_string<E>(self, s: String) -> Result<Self::Value, E>$/;"	P	implementation:KeyClassifier
visit_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^                    fn visit_u64<E>(self, value: u64) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/number.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Number, E> {$/;"	P	implementation:Number::deserialize::NumberVisitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:PhantomDataVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:UnitVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^            fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:Map::deserialize::Visitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/de.rs	/^            fn visit_unit<E>(self) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedStructVariant
visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedTupleVariant
void	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/ser/impossible.rs	/^    void: Void,$/;"	m	struct:Impossible
vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^    vtable: &'static ErrorVTable,$/;"	m	struct:ErrorImpl
vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/error.rs	/^unsafe fn vtable(p: NonNull<ErrorImpl>) -> &'static ErrorVTable {$/;"	f
vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) vtable: &'static Vtable,$/;"	m	struct:Header
vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^pub(super) fn vtable<T: Future, S: Schedule>() -> &'static Vtable {$/;"	f
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn wait<'a, T>($/;"	P	implementation:Condvar
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub async fn wait(&mut self) -> io::Result<ExitStatus> {$/;"	P	implementation:Child
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^    pub(crate) fn wait(&mut self, timeout: Option<Duration>) -> bool {$/;"	P	implementation:Receiver
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    pub async fn wait(&self) -> BarrierWaitResult {$/;"	P	implementation:Barrier
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    wait: watch::Receiver<usize>,$/;"	m	struct:Barrier
wait_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        wait_complete: Option<oneshot::Receiver<()>>,$/;"	m	struct:test_combination::Signals
wait_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    async fn wait_internal(&self) -> BarrierWaitResult {$/;"	P	implementation:Barrier
wait_object	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    wait_object: HANDLE,$/;"	m	struct:Waiting
wait_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn wait_timeout<'a, T>($/;"	P	implementation:Condvar
wait_with_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub async fn wait_with_output(mut self) -> io::Result<Output> {$/;"	P	implementation:Child
waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    waiter: UnsafeCell<Waiter>,$/;"	m	struct:Recv
waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    waiter: UnsafeCell<Waiter>,$/;"	m	struct:Notified
waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    waiters: Mutex<Waiters>,$/;"	m	struct:ScheduledIo
waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    waiters: Mutex<Waitlist>,$/;"	m	struct:Semaphore
waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    waiters: LinkedList<Waiter, <Waiter as linked_list::Link>::Target>,$/;"	m	struct:Tail
waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    waiters: Mutex<WaitList>,$/;"	m	struct:Notify
waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    waiting: Option<Waiting>,$/;"	m	struct:Child
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    pub(crate) fn wake(&mut self) {$/;"	P	implementation:Defer
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn wake(&self, ready: Ready) {$/;"	P	implementation:ScheduledIo
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn wake(raw: *const ()) {$/;"	f
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn wake(arc_self: Arc<Self>) {$/;"	P	implementation:Handle
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn wake(self) {$/;"	P	implementation:Waker
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn wake(self);$/;"	P	interface:WakerRef
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    pub(crate) fn wake(&self) {$/;"	P	implementation:AtomicWaker
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    unsafe fn wake(_data: *const ()) {$/;"	f	function:notify_clones_waker_before_lock
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    fn wake(me: Arc<Self>) {$/;"	P	implementation:ListEntry
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    fn wake(arc_self: Arc<Self>);$/;"	P	interface:Wake
wake_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    pub(crate) fn wake_all(&mut self) {$/;"	P	implementation:WakeList
wake_arc_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn wake_arc_raw<T: Wake>(data: *const ()) {$/;"	f
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn wake_by_ref(raw: *const ()) {$/;"	f
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn wake_by_ref(arc_self: &Arc<Self>) {$/;"	P	implementation:Handle
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn wake_by_ref(&self) {$/;"	P	implementation:RawTask
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^unsafe fn wake_by_ref(ptr: *const ()) {$/;"	f
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^        fn wake_by_ref(_arc_self: &Arc<Self>) {$/;"	P	implementation:notify_waiters_handles_panicking_waker::PanickingWaker
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    unsafe fn wake_by_ref(_data: *const ()) {$/;"	f	function:notify_clones_waker_before_lock
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^        fn wake_by_ref(_arc_self: &Arc<Self>) {}$/;"	P	implementation:release_permits_at_drop::ReleaseOnDrop
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    fn wake_by_ref(me: &Arc<Self>) {$/;"	P	implementation:ListEntry
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    fn wake_by_ref(arc_self: &Arc<Self>);$/;"	P	interface:Wake
wake_by_ref_arc_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn wake_by_ref_arc_raw<T: Wake>(data: *const ()) {$/;"	f
wake_by_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn wake_by_val(&self) {$/;"	P	implementation:RawTask
wake_by_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^unsafe fn wake_by_val(ptr: *const ()) {$/;"	f
wake_deferred_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^fn wake_deferred_tasks() {$/;"	f
wake_deferred_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^fn wake_deferred_tasks() {$/;"	f
wake_during_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_local.rs	/^fn wake_during_shutdown() {$/;"	f
wake_join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn wake_join(&self) {$/;"	P	implementation:Trailer
wake_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^mod wake_list;$/;"	n
wake_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn wake_rx(&self) {$/;"	P	implementation:Tx
wake_without_register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^fn wake_without_register() {$/;"	f
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    waker: mio::Waker,$/;"	m	struct:Handle
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn waker(&self) -> Result<Waker, AccessError> {$/;"	P	implementation:CachedParkThread
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) waker: UnsafeCell<Option<Waker>>,$/;"	m	struct:Trailer
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod waker;$/;"	n
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^    waker: ManuallyDrop<Waker>,$/;"	m	struct:WakerRef
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    waker: AtomicWaker,$/;"	m	struct:StateCell
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    waker: watch::Sender<usize>,$/;"	m	struct:BarrierState
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    waker: UnsafeCell<Option<Waker>>,$/;"	m	struct:Waiter
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    waker: Option<Waker>,$/;"	m	struct:Waiter
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    waker: Option<Waker>,$/;"	m	struct:Waiter
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    waker: UnsafeCell<Option<Waker>>,$/;"	m	struct:AtomicWaker
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    waker: AtomicWaker,$/;"	m	struct:Shared
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    waker: Option<Waker>,$/;"	m	struct:ListsInner
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    waker: ManuallyDrop<Waker>,$/;"	m	struct:WakerRef
waker_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn waker_ref(me: &Arc<Self>) -> WakerRef<'_> {$/;"	P	implementation:Handle
waker_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^pub(super) fn waker_ref<T, S>(header: &NonNull<Header>) -> WakerRef<'_, S>$/;"	f
waker_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^pub(crate) fn waker_ref<W: Wake>(wake: &Arc<W>) -> WakerRef<'_> {$/;"	f
waker_vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^fn waker_vtable<W: Wake>() -> &'static RawWakerVTable {$/;"	f
wakes_to_local_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn wakes_to_local_queue() {$/;"	f	module:tests
watch_borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn watch_borrow() {$/;"	f	module:tests
watch_spurious_wakeup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn watch_spurious_wakeup() {$/;"	f	module:tests
watch_test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^fn watch_test() {$/;"	f
what_matches_wildcard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn what_matches_wildcard() {$/;"	f
wheel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    wheel: wheel::Wheel,$/;"	m	struct:InnerState
wheel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod wheel;$/;"	n
when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn when(&self) -> Option<u64> {$/;"	P	implementation:StateCell
width	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) const fn width(&self) -> u32 {$/;"	P	implementation:Pack
wildcard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn wildcard() {$/;"	f	module:tests
wildcard_doesnt_match_just_trailing_slash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn wildcard_doesnt_match_just_trailing_slash() {$/;"	f
wildcard_sees_whole_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn wildcard_sees_whole_url() {$/;"	f
will_wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn will_wake(&self, waker: &Waker) -> bool {$/;"	P	implementation:Trailer
will_wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn will_wake(&self, cx: &mut Context<'_>) -> bool {$/;"	P	implementation:Task
window_change	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn window_change() -> Self {$/;"	P	implementation:SignalKind
windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^pub mod windows {$/;"	n
windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^pub mod windows;$/;"	n
windows_sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub(super) mod windows_sys {$/;"	n	module:doc
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^    pub(crate) fn with<R>(&self, f: impl FnOnce(*const T) -> R) -> R {$/;"	P	implementation:UnsafeCell
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^    pub(crate) fn with<F, R>(&'static self, f: F) -> R$/;"	P	implementation:ScopedKey
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn with(f: impl FnOnce(Runtime)) {$/;"	f
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn with<T>(&self, f: impl FnOnce() -> T) -> T {$/;"	P	implementation:LocalSet
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn with<F, R>(&'static self, f: F) -> R$/;"	P	implementation:LocalKey
with_and_without_trailing_slash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn with_and_without_trailing_slash() {$/;"	f
with_budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^fn with_budget<R>(budget: Budget, f: impl FnOnce() -> R) -> R {$/;"	f
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> Self {$/;"	P	implementation:Map
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn with_capacity(n: usize) -> Buf {$/;"	P	implementation:Buf
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn with_capacity(capacity: usize, inner: R) -> Self {$/;"	P	implementation:BufReader
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn with_capacity($/;"	P	implementation:BufStream
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn with_capacity(cap: usize, inner: W) -> Self {$/;"	P	implementation:BufWriter
with_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn with_context<C, F>(self, context: F) -> Result<T, Error>$/;"	P	implementation:Option
with_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn with_context<C, F>(self, context: F) -> Result<T, Error>$/;"	f
with_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^    fn with_context<C, F>(self, f: F) -> Result<T, Error>$/;"	P	interface:Context
with_current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn with_current<F, R>(&self, f: F) -> Result<R, AccessError>$/;"	P	implementation:CachedParkThread
with_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn with_err() -> Self {$/;"	P	implementation:test::MockWait
with_formatter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    pub fn with_formatter(writer: W, formatter: F) -> Self {$/;"	f
with_if_possible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn with_if_possible<T>(&self, f: impl FnOnce() -> T) -> T {$/;"	P	implementation:LocalSet
with_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    fn with_inner<F, T>(&self, f: F) -> T$/;"	P	implementation:LocalOwnedTasks
with_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    unsafe fn with_inner<F, R>(&self, f: F) -> R$/;"	P	implementation:RcCell
with_interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn with_interest(inner: T, interest: Interest) -> io::Result<Self>$/;"	P	implementation:AsyncFd
with_layer_that_changes_request_body_and_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    async fn with_layer_that_changes_request_body_and_state() {$/;"	f	module:tests
with_max_readers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn with_max_readers(value: T, max_reads: u32) -> RwLock<T>$/;"	P	implementation:RwLock
with_middleware_on_inner_fallback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/fallback.rs	/^async fn with_middleware_on_inner_fallback() {$/;"	f
with_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    pub(crate) fn with_mut<R>(&mut self, f: impl FnOnce(&mut usize) -> R) -> R {$/;"	P	implementation:AtomicUsize
with_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^    pub(crate) fn with_mut<R>(&self, f: impl FnOnce(*mut T) -> R) -> R {$/;"	P	implementation:UnsafeCell
with_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn with_mut<R>(&self, f: impl FnOnce(*mut Stage<T>) -> R) -> R {$/;"	P	implementation:CoreStage
with_result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn with_result(result: Poll<Result<(), ()>>) -> Self {$/;"	P	implementation:test::Mock
with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/handler/mod.rs	/^    fn with_state(self, state: S) -> HandlerService<Self, T, S, B> {$/;"	P	interface:Handler
with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    fn with_state<S2>(self, state: &S) -> MethodEndpoint<S2, B, E> {$/;"	f
with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/method_routing.rs	/^    pub fn with_state<S2>(self, state: S) -> MethodRouter<S2, B, E> {$/;"	f
with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    fn with_state<S2>(self, state: S) -> Fallback<S2, B, E> {$/;"	f
with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/mod.rs	/^    pub fn with_state<S2>(self, state: S) -> Router<S2, B> {$/;"	f
with_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/path_router.rs	/^    pub(super) fn with_state<S2>(self, state: S) -> PathRouter<S2, B> {$/;"	f
with_status_code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/response/redirect.rs	/^    fn with_status_code(status_code: StatusCode, uri: &str) -> Self {$/;"	P	implementation:Redirect
with_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn with_task<F, R>(&self, f: F) -> R$/;"	P	implementation:Task
with_unconstrained	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) fn with_unconstrained<R>(f: impl FnOnce() -> R) -> R {$/;"	f
with_value_and_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn with_value_and_context<F, U>(&mut self, func: F) -> U$/;"	P	implementation:EntryInOneOfTheLists
woken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    woken: AtomicBool,$/;"	m	struct:Shared
worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^mod worker;$/;"	n
worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    worker: Arc<Worker>,$/;"	m	struct:Context
worker_local_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_local_queue_depth(&self, worker: usize) -> usize {$/;"	P	implementation:RuntimeMetrics
worker_local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_local_schedule_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    worker_metrics: WorkerMetrics,$/;"	m	struct:Shared
worker_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) worker_metrics: Box<[WorkerMetrics]>,$/;"	m	struct:Shared
worker_noop_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_noop_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_overflow_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_overflow_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_park_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_park_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_poll_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_steal_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_steal_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_steal_operations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_steal_operations(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_thread_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    worker_thread_index: usize,$/;"	m	struct:Shared
worker_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    worker_threads: HashMap<usize, thread::JoinHandle<()>>,$/;"	m	struct:Shared
worker_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn worker_threads(&mut self, val: usize) -> &mut Self {$/;"	P	implementation:Builder
worker_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    worker_threads: Option<usize>,$/;"	m	struct:Builder
worker_to_notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn worker_to_notify(&self) -> Option<usize> {$/;"	P	implementation:Idle
worker_total_busy_duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_total_busy_duration(&self, worker: usize) -> Duration {$/;"	P	implementation:RuntimeMetrics
works	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    async fn works() {$/;"	f	module:tests
works	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_response.rs	/^    async fn works() {$/;"	f	module:tests
works_for_short_circutting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/map_request.rs	/^    async fn works_for_short_circutting() {$/;"	f	module:tests
works_with_request_body_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/middleware/from_extractor.rs	/^    fn works_with_request_body_limit() {$/;"	f	module:tests
wrap_same	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    fn wrap_same(self) -> Self::Wrapped {$/;"	P	interface:WrapSameExt
wrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/lib.rs	/^mod wrapper;$/;"	n
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub async fn writable<'a>(&'a self) -> io::Result<AsyncFdReadyGuard<'a, T>> {$/;"	P	implementation:AsyncFd
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:WriteHalf
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:OwnedWriteHalf
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:TcpStream
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:UdpSocket
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:UnixDatagram
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:Sender
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:WriteHalf
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:OwnedWriteHalf
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:UnixStream
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeClient
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeServer
writable_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub async fn writable_mut<'a>(&'a mut self) -> io::Result<AsyncFdReadyMutGuard<'a, T>> {$/;"	P	implementation:AsyncFd
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Writer
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    write: Arc<Mutex<Option<Vec<u8>>>>,$/;"	m	struct:Handle
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/test_helpers/tracing_helpers.rs	/^    write: Arc<Mutex<Option<Vec<u8>>>>,$/;"	m	struct:TestMakeWriter
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize> {$/;"	P	implementation:Vec
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize> {$/;"	P	implementation:W
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn write(&mut self, buf: &[u8]) -> Result<usize>;$/;"	P	interface:Write
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/value/mod.rs	/^            fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Value::fmt::WriterFormatter
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	P	implementation:MockFile
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod write;$/;"	n
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn write(&mut self, write: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/write.rs	/^pub async fn write(path: impl AsRef<Path>, contents: impl AsRef<[u8]>) -> io::Result<()> {$/;"	f
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    write: Arc<Mutex<Pipe>>,$/;"	m	struct:DuplexStream
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write.rs	/^pub(crate) fn write<'a, W>(writer: &'a mut W, buf: &'a [u8]) -> Write<'a, W>$/;"	f
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn write(&self) -> LockResult<RwLockWriteGuard<'_, T>> {$/;"	P	implementation:RwLock
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn write(&mut self, allowed: bool) -> &mut Self {$/;"	P	implementation:ClientOptions
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn write(&mut self, bytes: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Pipe
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn write(&mut self, bytes: &[u8]) -> io::Result<usize> {$/;"	P	implementation:ArcFile
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn write(&self, slot_index: usize, value: T) {$/;"	P	implementation:Block
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub async fn write(&self) -> RwLockWriteGuard<'_, T> {$/;"	P	implementation:RwLock
write_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn write_all(&mut self, buf: &[u8]) -> Result<()> {$/;"	P	implementation:Vec
write_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn write_all(&mut self, buf: &[u8]) -> Result<()> {$/;"	P	implementation:W
write_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/io/core.rs	/^    fn write_all(&mut self, buf: &[u8]) -> Result<()> {$/;"	P	interface:Write
write_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all.rs	/^pub(crate) fn write_all<'a, W>(writer: &'a mut W, buf: &'a [u8]) -> WriteAll<'a, W>$/;"	f
write_all_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all_buf.rs	/^pub(crate) fn write_all_buf<'a, W, B>(writer: &'a mut W, buf: &'a mut B) -> WriteAllBuf<'a, W, B/;"	f
write_bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_bool<W>(&mut self, writer: &mut W, value: bool) -> io::Result<()>$/;"	P	interface:Formatter
write_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_buf.rs	/^pub(crate) fn write_buf<'a, W, B>(writer: &'a mut W, buf: &'a mut B) -> WriteBuf<'a, W, B>$/;"	f
write_char_escape	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_char_escape<W>(&mut self, writer: &mut W, char_escape: CharEscape) -> io::Result<()/;"	P	interface:Formatter
write_dac	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn write_dac(&mut self, requested: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
write_dac	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    write_dac: bool,$/;"	m	struct:ServerOptions
write_f32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_f32<W>(&mut self, writer: &mut W, value: f32) -> io::Result<()>$/;"	P	interface:Formatter
write_f64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_f64<W>(&mut self, writer: &mut W, value: f64) -> io::Result<()>$/;"	P	interface:Formatter
write_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod write_guard;$/;"	n
write_guard_mapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod write_guard_mapped;$/;"	n
write_history	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        write_history: Vec<usize>,$/;"	m	struct:tests::LoggingMockWriter
write_i128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_i128<W>(&mut self, writer: &mut W, value: i128) -> io::Result<()>$/;"	P	interface:Formatter
write_i16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_i16<W>(&mut self, writer: &mut W, value: i16) -> io::Result<()>$/;"	P	interface:Formatter
write_i32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_i32<W>(&mut self, writer: &mut W, value: i32) -> io::Result<()>$/;"	P	interface:Formatter
write_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_i64<W>(&mut self, writer: &mut W, value: i64) -> io::Result<()>$/;"	P	interface:Formatter
write_i8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_i8<W>(&mut self, writer: &mut W, value: i8) -> io::Result<()>$/;"	P	interface:Formatter
write_null	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_null<W>(&mut self, writer: &mut W) -> io::Result<()>$/;"	P	interface:Formatter
write_number_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_number_str<W>(&mut self, writer: &mut W, value: &str) -> io::Result<()>$/;"	P	interface:Formatter
write_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub async fn write_owned(self: Arc<Self>) -> OwnedRwLockWriteGuard<T> {$/;"	P	implementation:RwLock
write_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn write_owner(&mut self, requested: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
write_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    write_owner: bool,$/;"	m	struct:ServerOptions
write_read_flush_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_read_flush_err() {$/;"	f
write_read_write_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_read_write_err() {$/;"	f
write_seek_flush_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_seek_flush_err() {$/;"	f
write_seek_write_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_seek_write_err() {$/;"	f
write_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/context.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:Quoted
write_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:Buf
write_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/fmt.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
write_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.160/src/de/format.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:Buf
write_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^            fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f	function:collect_str
write_string_fragment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_string_fragment<W>(&mut self, writer: &mut W, fragment: &str) -> io::Result<()>$/;"	P	interface:Formatter
write_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn write_to<T: Write>(&mut self, wr: &mut T) -> io::Result<()> {$/;"	P	implementation:Buf
write_twice_before_dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_twice_before_dispatch() {$/;"	f
write_u128	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_u128<W>(&mut self, writer: &mut W, value: u128) -> io::Result<()>$/;"	P	interface:Formatter
write_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_u16<W>(&mut self, writer: &mut W, value: u16) -> io::Result<()>$/;"	P	interface:Formatter
write_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_u32<W>(&mut self, writer: &mut W, value: u32) -> io::Result<()>$/;"	P	interface:Formatter
write_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_u64<W>(&mut self, writer: &mut W, value: u64) -> io::Result<()>$/;"	P	interface:Formatter
write_u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    fn write_u8<W>(&mut self, writer: &mut W, value: u8) -> io::Result<()>$/;"	P	interface:Formatter
write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_vectored.rs	/^pub(crate) fn write_vectored<'a, 'b, W>($/;"	f
write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn write_vectored(&mut self, bufs: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:Pipe
write_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    write_waker: Option<Waker>,$/;"	m	struct:Pipe
write_with_buffer_larger_than_max	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_with_buffer_larger_than_max() {$/;"	f
write_write_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_write_err() {$/;"	f
writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^            writer: &'ser mut W,$/;"	m	struct:collect_str::Adapter
writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_json-1.0.96/src/ser.rs	/^    writer: W,$/;"	m	struct:Serializer
writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    writer: &'a mut W,$/;"	m	struct:Copy
writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_int.rs	/^macro_rules! writer {$/;"	M
writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    writer: Option<Waker>,$/;"	m	struct:Waiters
writer8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_int.rs	/^macro_rules! writer8 {$/;"	M
written	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.70/src/ensure.rs	/^    written: usize,$/;"	m	struct:Buf
wrong_method_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn wrong_method_handler() {$/;"	f
wrong_method_nest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/nest.rs	/^async fn wrong_method_nest() {$/;"	f
wrong_method_service	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/tests/mod.rs	/^async fn wrong_method_service() {$/;"	f
wrong_number_of_parameters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    pub(super) fn wrong_number_of_parameters() -> WrongNumberOfParameters<()> {$/;"	P	implementation:PathDeserializationError
wrong_number_of_parameters_json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/path/mod.rs	/^    async fn wrong_number_of_parameters_json() {$/;"	f	module:tests
ws	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/mod.rs	/^pub mod ws;$/;"	n
x	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^        x: i32,$/;"	m	struct:tests::Bar
x_forwarded_host_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    async fn x_forwarded_host_header() {$/;"	f	module:tests
x_forwarded_host_precedence_over_host_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/extract/host.rs	/^    async fn x_forwarded_host_precedence_over_host_header() {$/;"	f	module:tests
y	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/json.rs	/^        y: i32,$/;"	m	struct:tests::Bar
yield_calls_park_before_scheduling_again	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_yield.rs	/^fn yield_calls_park_before_scheduling_again() {$/;"	f
yield_now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    pub(crate) fn yield_now() {$/;"	f	module:thread
yield_now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn yield_now(&self, task: Notified) {$/;"	P	implementation:Arc
yield_now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn yield_now(&self, task: Notified<Self>) {$/;"	P	interface:Schedule
yield_now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^pub async fn yield_now() {$/;"	f
yielded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^        yielded: bool,$/;"	m	struct:yield_now::YieldNow
zip_longest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/axum-0.6.15/src/routing/strip_prefix.rs	/^fn zip_longest<I, I2>(a: I, b: I2) -> impl Iterator<Item = Item<I::Item>>$/;"	f

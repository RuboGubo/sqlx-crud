!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl AbortHandle {$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl Drop for AbortHandle {$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl RefUnwindSafe for AbortHandle {}$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl UnwindSafe for AbortHandle {}$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^impl fmt::Debug for AbortHandle {$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^pub struct AbortHandle {$/;"	s
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^unsafe impl Send for AbortHandle {}$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^unsafe impl Sync for AbortHandle {}$/;"	c
AbortHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortHandle,$/;"	e	enum:CombiAbortSource
AbortOnPanic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    impl Drop for AbortOnPanic {$/;"	c	function:run
AbortOnPanic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    struct AbortOnPanic;$/;"	s	function:run
AbortedAfterConsumeOutput	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortedAfterConsumeOutput = 4,$/;"	e	enum:CombiAbort
AbortedAfterFinish	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortedAfterFinish = 3,$/;"	e	enum:CombiAbort
AbortedFirstPoll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortedFirstPoll = 2,$/;"	e	enum:CombiAbort
AbortedImmediately	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    AbortedImmediately = 1,$/;"	e	enum:CombiAbort
Accepted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    Accepted = 2,$/;"	e	enum:MembershipState
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    AccessError,$/;"	e	enum:ScopeInnerErr
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl Error for AccessError {}$/;"	c
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl fmt::Debug for AccessError {$/;"	c
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl fmt::Display for AccessError {$/;"	c
AccessError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^pub struct AccessError {$/;"	s
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl Drop for Acquire<'_> {$/;"	c
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl Future for Acquire<'_> {$/;"	c
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl<'a> Acquire<'a> {$/;"	c
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^pub(crate) struct Acquire<'a> {$/;"	s
Acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^unsafe impl Sync for Acquire<'_> {}$/;"	c
AcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl AcquireError {$/;"	c
AcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl fmt::Display for AcquireError {$/;"	c
AcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl std::error::Error for AcquireError {}$/;"	c
AcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^pub struct AcquireError(());$/;"	s
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^impl Action {$/;"	c
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^impl Serialize for Action {$/;"	c
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^impl<'de> Deserialize<'de> for Action {$/;"	c
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum Action {$/;"	g
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl Action {$/;"	c
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl Serialize for Action {$/;"	c
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl<'de> Deserialize<'de> for Action {$/;"	c
Action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub enum Action {$/;"	g
ActionChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionChannel = ChannelAction;$/;"	t
ActionChannelOverwrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionChannelOverwrite = ChannelOverwriteAction;$/;"	t
ActionEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionEmoji = EmojiAction;$/;"	t
ActionExecution	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub struct ActionExecution {$/;"	s
ActionIntegration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionIntegration = IntegrationAction;$/;"	t
ActionInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionInvite = InviteAction;$/;"	t
ActionMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionMember = MemberAction;$/;"	t
ActionMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionMessage = MessageAction;$/;"	t
ActionRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionRole = RoleAction;$/;"	t
ActionRow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    ActionRow = 1,$/;"	e	enum:ComponentType
ActionRow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub struct ActionRow {$/;"	s
ActionRow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ActionRow = component::ActionRow;$/;"	t	module:message_component
ActionRowComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^impl From<Button> for ActionRowComponent {$/;"	c
ActionRowComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^impl From<SelectMenu> for ActionRowComponent {$/;"	c
ActionRowComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^impl Serialize for ActionRowComponent {$/;"	c
ActionRowComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^impl<'de> Deserialize<'de> for ActionRowComponent {$/;"	c
ActionRowComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub enum ActionRowComponent {$/;"	g
ActionRowComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ActionRowComponent = component::ActionRowComponent;$/;"	t	module:message_component
ActionStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionStageInstance = StageInstanceAction;$/;"	t
ActionSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionSticker = StickerAction;$/;"	t
ActionThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionThread = ThreadAction;$/;"	t
ActionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl From<u8> for ActionType {$/;"	c
ActionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub enum ActionType {$/;"	g
ActionWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub type ActionWebhook = WebhookAction;$/;"	t
Actions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Actions {$/;"	e	enum:Change
Actions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Actions,$/;"	e	enum:Key
Active	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    Active = 2,$/;"	e	enum:ScheduledEventStatus
ActivitiesRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    ActivitiesRead,$/;"	e	enum:Scope
ActivitiesWrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    ActivitiesWrite,$/;"	e	enum:Scope
Activity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^impl Activity {$/;"	c
Activity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct Activity {$/;"	s
ActivityAssets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct ActivityAssets {$/;"	s
ActivityButton	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct ActivityButton {$/;"	s
ActivityEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct ActivityEmoji {$/;"	s
ActivityParty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct ActivityParty {$/;"	s
ActivitySecrets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct ActivitySecrets {$/;"	s
ActivityTimestamps	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct ActivityTimestamps {$/;"	s
ActivityType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^impl Default for ActivityType {$/;"	c
ActivityType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub enum ActivityType {$/;"	g
AddGuildMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    AddGuildMember {$/;"	e	enum:RouteInfo
AddMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/add_member.rs	/^impl AddMember {$/;"	c
AddMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/add_member.rs	/^pub struct AddMember(pub HashMap<&'static str, Value>);$/;"	s
AddMemberRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    AddMemberRole {$/;"	e	enum:RouteInfo
AddThreadMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    AddThreadMember {$/;"	e	enum:RouteInfo
Added	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    Added(Arc<Reaction>),$/;"	e	enum:ReactionAction
Address	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl Address {$/;"	c
Address	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) struct Address(usize);$/;"	s
AffectedComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^pub struct AffectedComponent {$/;"	s
AffectedRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^pub struct AffectedRole {$/;"	s
AfkChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    AfkChannelId {$/;"	e	enum:Change
AfkChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    AfkChannelId,$/;"	e	enum:Key
AfkTimeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    AfkTimeout {$/;"	e	enum:Change
AfkTimeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    AfkTimeout,$/;"	e	enum:Key
After	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    After(GuildId),$/;"	e	enum:GuildPagination
After	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    After(UserId),$/;"	e	enum:UserPagination
AfterHook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^type AfterHook = for<'fut> fn($/;"	t
AgeRestricted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    AgeRestricted = 3,$/;"	e	enum:NsfwLevel
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<E: AioSource + fmt::Debug> fmt::Debug for Aio<E> {$/;"	c
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<E: AioSource> Aio<E> {$/;"	c
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<E: AioSource> Deref for Aio<E> {$/;"	c
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<E: AioSource> DerefMut for Aio<E> {$/;"	c
Aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^pub struct Aio<E> {$/;"	s
AioEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^pub struct AioEvent(ReadyEvent);$/;"	s
AioSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^pub trait AioSource {$/;"	i
Alert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Alert(ChannelId),$/;"	e	enum:Action
Alert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Alert,$/;"	e	enum:ActionType
Alert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^struct Alert {$/;"	s
All	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    All = 0,$/;"	e	enum:DefaultMessageNotificationLevel
All	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    All = 2,$/;"	e	enum:ExplicitContentFilter
AllEntries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^        impl<T, F: FnMut(T)> AllEntries<T, F> {$/;"	c	method:IdleNotifiedSet::drain
AllEntries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^        impl<T, F: FnMut(T)> Drop for AllEntries<T, F> {$/;"	c	method:IdleNotifiedSet::drain
AllEntries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^        struct AllEntries<T, F: FnMut(T)> {$/;"	s	method:IdleNotifiedSet::drain
AllWaiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    AllWaiters,$/;"	e	enum:NotificationType
Allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T: Entry> Allocator<T> {$/;"	c
Allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> fmt::Debug for Allocator<T> {$/;"	c
Allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) struct Allocator<T> {$/;"	s
Allow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Allow {$/;"	e	enum:Change
Allow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Allow,$/;"	e	enum:Key
AlreadyInitializedError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    AlreadyInitializedError(T),$/;"	e	enum:SetError
Animated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^            Animated,$/;"	e	enum:ReactionType::deserialize::Field
Apng	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    Apng = 2,$/;"	e	enum:StickerFormatType
Apng	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    Apng = 2,$/;"	e	enum:StickerFormatType
Apple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Apple,$/;"	e	enum:QuoteKind
Application	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    Application = 3,$/;"	e	enum:WebhookType
ApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    ApplicationCommand = 2,$/;"	e	enum:InteractionType
ApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    ApplicationCommand(ApplicationCommandInteraction),$/;"	e	enum:Interaction
ApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommand = command::Command;$/;"	t	module:application_command
ApplicationCommandInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl ApplicationCommandInteraction {$/;"	c
ApplicationCommandInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl<'de> Deserialize<'de> for ApplicationCommandInteraction {$/;"	c
ApplicationCommandInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^pub struct ApplicationCommandInteraction {$/;"	s
ApplicationCommandInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandInteraction = application_command::ApplicationCommandInteraction;$/;"	t	module:application_command
ApplicationCommandInteractionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandInteractionData = application_command::CommandData;$/;"	t	module:application_command
ApplicationCommandInteractionDataOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandInteractionDataOption = application_command::CommandDataOption;$/;"	t	module:application_command
ApplicationCommandInteractionDataOptionValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandInteractionDataOptionValue =$/;"	t	module:application_command
ApplicationCommandInteractionDataResolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandInteractionDataResolved = application_command::CommandDataResolve/;"	t	module:application_command
ApplicationCommandOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandOption = command::CommandOption;$/;"	t	module:application_command
ApplicationCommandOptionChoice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandOptionChoice = command::CommandOptionChoice;$/;"	t	module:application_command
ApplicationCommandOptionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandOptionType = command::CommandOptionType;$/;"	t	module:application_command
ApplicationCommandPermission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandPermission = command::CommandPermission;$/;"	t	module:application_command
ApplicationCommandPermissionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandPermissionData = command::CommandPermissionData;$/;"	t	module:application_command
ApplicationCommandPermissionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandPermissionType = command::CommandPermissionType;$/;"	t	module:application_command
ApplicationCommandPermissionsUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ApplicationCommandPermissionsUpdate(ApplicationCommandPermissionsUpdateEvent),$/;"	e	enum:Event
ApplicationCommandPermissionsUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ApplicationCommandPermissionsUpdate,$/;"	e	enum:EventType
ApplicationCommandPermissionsUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ApplicationCommandPermissionsUpdateEvent {$/;"	s
ApplicationCommandType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ApplicationCommandType = command::CommandType;$/;"	t	module:application_command
ApplicationId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ApplicationId {$/;"	e	enum:Change
ApplicationId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ApplicationId,$/;"	e	enum:Key
ApplicationId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct ApplicationId(#[serde(with = "snowflake")] pub u64);$/;"	s
ApplicationIdMissing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    ApplicationIdMissing,$/;"	e	enum:Error
ApplicationsBuildsRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    ApplicationsBuildsRead,$/;"	e	enum:Scope
ApplicationsBuildsUpload	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    ApplicationsBuildsUpload,$/;"	e	enum:Scope
ApplicationsCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    ApplicationsCommands,$/;"	e	enum:Scope
ApplicationsCommandsUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    ApplicationsCommandsUpdate,$/;"	e	enum:Scope
ApplicationsEntitlements	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    ApplicationsEntitlements,$/;"	e	enum:Scope
ApplicationsIdCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ApplicationsIdCommands(u64),$/;"	e	enum:Route
ApplicationsIdCommandsId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ApplicationsIdCommandsId(u64),$/;"	e	enum:Route
ApplicationsIdGuildsIdCommandIdPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ApplicationsIdGuildsIdCommandIdPermissions(u64),$/;"	e	enum:Route
ApplicationsIdGuildsIdCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ApplicationsIdGuildsIdCommands(u64),$/;"	e	enum:Route
ApplicationsIdGuildsIdCommandsId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ApplicationsIdGuildsIdCommandsId(u64),$/;"	e	enum:Route
ApplicationsIdGuildsIdCommandsPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ApplicationsIdGuildsIdCommandsPermissions(u64),$/;"	e	enum:Route
ApplicationsStoreUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    ApplicationsStoreUpdate,$/;"	e	enum:Scope
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl AsRef<Cache> for Arc<Context> {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl AsRef<Http> for Arc<Context> {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl AsRef<Cache> for (&Arc<Cache>, &Http) {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl AsRef<Http> for (&Arc<Cache>, &Http) {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl CacheHttp for (&Arc<Cache>, &Http) {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl<T> CacheHttp for Arc<T>$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Schedule for Arc<Handle> {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl task::Schedule for Arc<Handle> {$/;"	c
Arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl task::Schedule for Arc<Shared> {$/;"	c
ArcFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl io::Read for ArcFile {$/;"	c
ArcFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl io::Write for ArcFile {$/;"	c
ArcFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^struct ArcFile(Arc<StdFile>);$/;"	s
Archived	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Archived {$/;"	e	enum:Change
Archived	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Archived,$/;"	e	enum:Key
Args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl Args {$/;"	c
Args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^pub struct Args {$/;"	s
Argument	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Argument,$/;"	e	enum:TokenKind
ArgumentConvert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^pub trait ArgumentConvert: Sized {$/;"	i
AsHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait AsHandle {$/;"	i	module:windows::io
AsRawHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait AsRawHandle {$/;"	i	module:windows::io
AsRawSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait AsRawSocket {$/;"	i	module:windows::io
AsSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait AsSocket {$/;"	i	module:windows::io
Ascii	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Ascii,$/;"	e	enum:QuoteKind
AssertDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl AssertDrop {$/;"	c
AssertDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl Drop for AssertDrop {$/;"	c
AssertDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct AssertDrop {$/;"	s
AssertDropHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl AssertDropHandle {$/;"	c
AssertDropHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct AssertDropHandle {$/;"	s
AssertSend	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^trait AssertSend: Send {}$/;"	i
AssertSync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^trait AssertSync: Sync {}$/;"	i
Asset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Asset {$/;"	e	enum:Change
Asset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Asset,$/;"	e	enum:Key
AsyncBufRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^pub trait AsyncBufRead: AsyncRead {$/;"	i
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: AsRawFd> AsRawFd for AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: AsRawFd> AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: AsRawFd> Drop for AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: AsRawFd> std::os::unix::io::AsFd for AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<T: std::fmt::Debug + AsRawFd> std::fmt::Debug for AsyncFd<T> {$/;"	c
AsyncFd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^pub struct AsyncFd<T: AsRawFd> {$/;"	s
AsyncFdReadyGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<'a, Inner: AsRawFd> AsyncFdReadyGuard<'a, Inner> {$/;"	c
AsyncFdReadyGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<'a, T: std::fmt::Debug + AsRawFd> std::fmt::Debug for AsyncFdReadyGuard<'a, T> {$/;"	c
AsyncFdReadyGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^pub struct AsyncFdReadyGuard<'a, T: AsRawFd> {$/;"	s
AsyncFdReadyMutGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<'a, Inner: AsRawFd> AsyncFdReadyMutGuard<'a, Inner> {$/;"	c
AsyncFdReadyMutGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^impl<'a, T: std::fmt::Debug + AsRawFd> std::fmt::Debug for AsyncFdReadyMutGuard<'a, T> {$/;"	c
AsyncFdReadyMutGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^pub struct AsyncFdReadyMutGuard<'a, T: AsRawFd> {$/;"	s
AsyncRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^pub trait AsyncRead {$/;"	i
AsyncSeek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^pub trait AsyncSeek {$/;"	i
AsyncWrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^pub trait AsyncWrite {$/;"	i
AtCapacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    AtCapacity = 2,$/;"	e	enum:Kind
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^impl<T> AtomicCell<T> {$/;"	c
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^impl<T> Drop for AtomicCell<T> {$/;"	c
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^pub(crate) struct AtomicCell<T> {$/;"	s
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^unsafe impl<T: Send> Send for AtomicCell<T> {}$/;"	c
AtomicCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^unsafe impl<T: Send> Sync for AtomicCell<T> {}$/;"	c
AtomicOneshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^impl<T> AtomicOneshot<T> {$/;"	c
AtomicOneshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^struct AtomicOneshot<T> {$/;"	s
AtomicState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl AtomicState {$/;"	c	module:state
AtomicState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub(super) struct AtomicState(AtomicUsize);$/;"	s	module:state
AtomicTake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    impl<T> AtomicTake<T> {$/;"	c	module:atomic_take
AtomicTake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    impl<T> Drop for AtomicTake<T> {$/;"	c	module:atomic_take
AtomicTake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    pub(super) struct AtomicTake<T> {$/;"	s	module:atomic_take
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^impl AtomicU16 {$/;"	c
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^impl Deref for AtomicU16 {$/;"	c
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^impl fmt::Debug for AtomicU16 {$/;"	c
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^pub(crate) struct AtomicU16 {$/;"	s
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^unsafe impl Send for AtomicU16 {}$/;"	c
AtomicU16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^unsafe impl Sync for AtomicU16 {}$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^impl AtomicU32 {$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^impl Deref for AtomicU32 {$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^impl fmt::Debug for AtomicU32 {$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^pub(crate) struct AtomicU32 {$/;"	s
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^unsafe impl Send for AtomicU32 {}$/;"	c
AtomicU32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^unsafe impl Sync for AtomicU32 {}$/;"	c
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^impl AtomicU64 {$/;"	c
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^impl Default for AtomicU64 {$/;"	c
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^pub(crate) struct AtomicU64 {$/;"	s
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_const_new.rs	/^impl AtomicU64 {$/;"	c
AtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^impl AtomicU64 {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^impl AtomicUsize {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^impl fmt::Debug for AtomicUsize {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^impl ops::Deref for AtomicUsize {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^impl ops::DerefMut for AtomicUsize {$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^pub(crate) struct AtomicUsize {$/;"	s
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^unsafe impl Send for AtomicUsize {}$/;"	c
AtomicUsize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^unsafe impl Sync for AtomicUsize {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl AtomicWaker {$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl Default for AtomicWaker {$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl RefUnwindSafe for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl UnwindSafe for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl fmt::Debug for AtomicWaker {$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^pub(crate) struct AtomicWaker {$/;"	s
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^unsafe impl Send for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^unsafe impl Sync for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^impl AssertSend for AtomicWaker {}$/;"	c
AtomicWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^impl AssertSync for AtomicWaker {}$/;"	c
Attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Attachment = 11,$/;"	e	enum:CommandOptionType
Attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    Attachment(Attachment),$/;"	e	enum:CommandDataOptionValue
Attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^impl Attachment {$/;"	c
Attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^pub struct Attachment {$/;"	s
AttachmentId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct AttachmentId(#[serde(with = "snowflake")] pub u64);$/;"	s
AttachmentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^impl<'a> AttachmentType<'a> {$/;"	c
AttachmentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^impl<'a> From<&'a Path> for AttachmentType<'a> {$/;"	c
AttachmentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^impl<'a> From<&'a PathBuf> for AttachmentType<'a> {$/;"	c
AttachmentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^impl<'a> From<&'a str> for AttachmentType<'a> {$/;"	c
AttachmentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^impl<'a> From<(&'a File, &str)> for AttachmentType<'a> {$/;"	c
AttachmentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^impl<'a> From<(&'a [u8], &str)> for AttachmentType<'a> {$/;"	c
AttachmentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^pub enum AttachmentType<'a> {$/;"	g
AuditLogEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub struct AuditLogEntry {$/;"	s
AuditLogEntryId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct AuditLogEntryId(#[serde(with = "snowflake")] pub u64);$/;"	s
AuditLogs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub struct AuditLogs {$/;"	s
Auto	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Auto = 1,$/;"	e	enum:VideoQualityMode
AutoArchiveDuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    AutoArchiveDuration {$/;"	e	enum:Change
AutoArchiveDuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    AutoArchiveDuration,$/;"	e	enum:Key
AutoModeration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    AutoModeration(AutoModerationAction),$/;"	e	enum:Action
AutoModerationAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    AutoModerationAction = 24,$/;"	e	enum:MessageType
AutoModerationAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum AutoModerationAction {$/;"	g
AutoModerationActionExecution	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    AutoModerationActionExecution(AutoModerationActionExecutionEvent),$/;"	e	enum:Event
AutoModerationActionExecution	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    AutoModerationActionExecution,$/;"	e	enum:EventType
AutoModerationActionExecutionEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct AutoModerationActionExecutionEvent {$/;"	s
AutoModerationRuleCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    AutoModerationRuleCreate(AutoModerationRuleCreateEvent),$/;"	e	enum:Event
AutoModerationRuleCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    AutoModerationRuleCreate,$/;"	e	enum:EventType
AutoModerationRuleCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct AutoModerationRuleCreateEvent {$/;"	s
AutoModerationRuleDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    AutoModerationRuleDelete(AutoModerationRuleDeleteEvent),$/;"	e	enum:Event
AutoModerationRuleDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    AutoModerationRuleDelete,$/;"	e	enum:EventType
AutoModerationRuleDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct AutoModerationRuleDeleteEvent {$/;"	s
AutoModerationRuleUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    AutoModerationRuleUpdate(AutoModerationRuleUpdateEvent),$/;"	e	enum:Event
AutoModerationRuleUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    AutoModerationRuleUpdate,$/;"	e	enum:EventType
AutoModerationRuleUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct AutoModerationRuleUpdateEvent {$/;"	s
Autocomplete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    Autocomplete = 4,$/;"	e	enum:InteractionType
Autocomplete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    Autocomplete = 8,$/;"	e	enum:InteractionResponseType
Autocomplete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    Autocomplete(AutocompleteInteraction),$/;"	e	enum:Interaction
AutocompleteInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^impl AutocompleteInteraction {$/;"	c
AutocompleteInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^impl<'de> Deserialize<'de> for AutocompleteInteraction {$/;"	c
AutocompleteInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^pub struct AutocompleteInteraction {$/;"	s
AutocompleteInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type AutocompleteInteraction = autocomplete::AutocompleteInteraction;$/;"	t	module:autocomplete
Available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Available {$/;"	e	enum:Change
Available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Available,$/;"	e	enum:Key
AvatarHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    AvatarHash {$/;"	e	enum:Change
AvatarHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    AvatarHash,$/;"	e	enum:Key
Ban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub struct Ban {$/;"	s
BanAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    BanAdd = 22,$/;"	e	enum:MemberAction
BanRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    BanRemove = 23,$/;"	e	enum:MemberAction
Banner1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    Banner1,$/;"	e	enum:GuildWidgetStyle
Banner2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    Banner2,$/;"	e	enum:GuildWidgetStyle
Banner3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    Banner3,$/;"	e	enum:GuildWidgetStyle
Banner4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    Banner4,$/;"	e	enum:GuildWidgetStyle
BannerHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    BannerHash {$/;"	e	enum:Change
BannerHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    BannerHash,$/;"	e	enum:Key
Barrier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^impl Barrier {$/;"	c
Barrier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^pub struct Barrier {$/;"	s
BarrierState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^struct BarrierState {$/;"	s
BarrierWaitResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^impl BarrierWaitResult {$/;"	c
BarrierWaitResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^pub struct BarrierWaitResult(bool);$/;"	s
BatchTaskIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^        impl<'a, T: 'static> Iterator for BatchTaskIter<'a, T> {$/;"	c	method:Local::push_overflow
BatchTaskIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^        struct BatchTaskIter<'a, T: 'static> {$/;"	s	method:Local::push_overflow
Before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    Before(GuildId),$/;"	e	enum:GuildPagination
Before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    Before(UserId),$/;"	e	enum:UserPagination
BeforeHook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^type BeforeHook = for<'fut> fn(&'fut Context, &'fut Message, &'fut str) -> BoxFuture<'fut, bool>/;"	t
BigNotify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl BigNotify {$/;"	c	module:big_notify
BigNotify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub(super) struct BigNotify {$/;"	s	module:big_notify
Bitrate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Bitrate {$/;"	e	enum:Change
Bitrate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Bitrate,$/;"	e	enum:Key
Block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^impl<T> Block<T> {$/;"	c
Block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^pub(crate) struct Block<T> {$/;"	s
BlockHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^struct BlockHeader<T> {$/;"	s
BlockMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    BlockMessage = 143,$/;"	e	enum:AutoModerationAction
BlockMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    BlockMessage,$/;"	e	enum:Action
BlockMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    BlockMessage,$/;"	e	enum:ActionType
BlockedChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    BlockedChannel,$/;"	e	enum:DispatchError
BlockedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^impl Future for BlockedFuture {$/;"	c
BlockedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^struct BlockedFuture {$/;"	s
BlockedGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    BlockedGuild,$/;"	e	enum:DispatchError
BlockedUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    BlockedUser,$/;"	e	enum:DispatchError
Blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^impl<T> AsyncRead for Blocking<T>$/;"	c
Blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^impl<T> AsyncWrite for Blocking<T>$/;"	c
Blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^pub(crate) struct Blocking<T> {$/;"	s
BlockingPool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl BlockingPool {$/;"	c
BlockingPool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl Drop for BlockingPool {$/;"	c
BlockingPool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl fmt::Debug for BlockingPool {$/;"	c
BlockingPool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) struct BlockingPool {$/;"	s
BlockingSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^impl BlockingSchedule {$/;"	c
BlockingSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^impl task::Schedule for BlockingSchedule {$/;"	c
BlockingSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^pub(crate) struct BlockingSchedule {$/;"	s
BlockingTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^impl<T, R> Future for BlockingTask<T>$/;"	c
BlockingTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^impl<T> BlockingTask<T> {$/;"	c
BlockingTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^impl<T> Unpin for BlockingTask<T> {}$/;"	c
BlockingTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^pub(crate) struct BlockingTask<T> {$/;"	s
Blurple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Blurple,$/;"	e	enum:DefaultAvatar
Bold	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    Bold,$/;"	e	enum:ContentModifier
Boolean	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Boolean = 5,$/;"	e	enum:CommandOptionType
Boolean	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    Boolean(bool),$/;"	e	enum:CommandDataOptionValue
BorrowError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    BorrowError,$/;"	e	enum:ScopeInnerErr
BorrowedHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub type BorrowedHandle<'handle> = crate::doc::NotDefinedHere;$/;"	t	module:windows::io
BorrowedSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub type BorrowedSocket<'socket> = crate::doc::NotDefinedHere;$/;"	t	module:windows::io
Bot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    Bot,$/;"	e	enum:Scope
BotAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    BotAdd = 28,$/;"	e	enum:MemberAction
BotGateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct BotGateway {$/;"	s
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/mod.rs	/^impl<F> Framework for Box<F>$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl<T: ?Sized + AsyncBufRead + Unpin> AsyncBufRead for Box<T> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl<T: ?Sized + AsyncRead + Unpin> AsyncRead for Box<T> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^impl<T: ?Sized + AsyncSeek + Unpin> AsyncSeek for Box<T> {$/;"	c
Box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl<T: ?Sized + AsyncWrite + Unpin> AsyncWrite for Box<T> {$/;"	c
BroadcastTyping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    BroadcastTyping {$/;"	e	enum:RouteInfo
Bucket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl Bucket {$/;"	c
Bucket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub(crate) enum Bucket {$/;"	g
BucketBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl BucketBuilder {$/;"	c
BucketBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl Default for BucketBuilder {$/;"	c
BucketBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub struct BucketBuilder {$/;"	s
Budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^impl Budget {$/;"	c
Budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) struct Budget(Option<u8>);$/;"	s
BudgetDecrement	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) struct BudgetDecrement {$/;"	s
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^impl Buf {$/;"	c
Buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^pub(crate) struct Buf {$/;"	s
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead + AsyncSeek> AsyncSeek for BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead + AsyncWrite> AsyncWrite for BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead> AsyncBufRead for BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead> AsyncRead for BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: AsyncRead> BufReader<R> {$/;"	c
BufReader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^impl<R: fmt::Debug> fmt::Debug for BufReader<R> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite + AsyncSeek> AsyncSeek for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite> AsyncBufRead for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite> AsyncRead for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite> AsyncWrite for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW: AsyncRead + AsyncWrite> BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW> From<BufReader<BufWriter<RW>>> for BufStream<RW> {$/;"	c
BufStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^impl<RW> From<BufWriter<BufReader<RW>>> for BufStream<RW> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite + AsyncBufRead> AsyncBufRead for BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite + AsyncRead> AsyncRead for BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite + AsyncSeek> AsyncSeek for BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite> AsyncWrite for BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: AsyncWrite> BufWriter<W> {$/;"	c
BufWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^impl<W: fmt::Debug> fmt::Debug for BufWriter<W> {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^impl Builder {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^impl fmt::Debug for Builder {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^pub struct Builder {$/;"	s
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^impl<'a> Builder<'a> {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^pub struct Builder<'a> {$/;"	s
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<'a, T: 'static> Builder<'a, T> {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<'a, T> fmt::Debug for Builder<'a, T> {$/;"	c
Builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^pub struct Builder<'a, T> {$/;"	s
BuildingUrl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    BuildingUrl,$/;"	e	enum:Error
BulkDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    BulkDelete = 73,$/;"	e	enum:MessageAction
BulkDeleteAmount	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    BulkDeleteAmount,$/;"	e	enum:Error
Burst	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    Burst,$/;"	e	enum:MissedTickBehavior
Busy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Busy(JoinHandle<(Operation, Buf)>),$/;"	e	enum:State
Busy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    Busy(sys::Blocking<(io::Result<usize>, Buf, T)>),$/;"	e	enum:State
Busy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    Busy,$/;"	e	enum:TryPopResult
Button	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Button = 2,$/;"	e	enum:ComponentType
Button	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Button(Button),$/;"	e	enum:ActionRowComponent
Button	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub struct Button {$/;"	s
Button	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type Button = component::Button;$/;"	t	module:message_component
ButtonStyle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub enum ButtonStyle {$/;"	g
ButtonStyle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ButtonStyle = component::ButtonStyle;$/;"	t	module:message_component
Byte	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    Byte,$/;"	e	enum:PipeMode
Bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    Bytes { data: Cow<'a, [u8]>, filename: String },$/;"	e	enum:AttachmentType
COUNTER	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    static COUNTER: AtomicU32 = AtomicU32::new(1);$/;"	v	module:rand
CURRENT	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^static CURRENT: TryLock<Option<Runtime>> = TryLock::new(None);$/;"	v
Cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^impl Cache {$/;"	c
Cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^impl Default for Cache {$/;"	c
Cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^pub struct Cache {$/;"	s
Cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl AsRef<Cache> for Cache {$/;"	c
CacheAndHttp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl CacheHttp for CacheAndHttp {$/;"	c
CacheAndHttp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub struct CacheAndHttp {$/;"	s
CacheHttp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub trait CacheHttp: Send + Sync {$/;"	i
CacheUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/cache_update.rs	/^pub trait CacheUpdate {$/;"	i
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> CachedPage<T> {$/;"	c
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Default for CachedPage<T> {$/;"	c
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct CachedPage<T> {$/;"	s
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Send for CachedPage<T> {}$/;"	c
CachedPage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Sync for CachedPage<T> {}$/;"	c
CachedParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl CachedParkThread {$/;"	c
CachedParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^pub(crate) struct CachedParkThread {$/;"	s
Canceled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    Canceled = 4,$/;"	e	enum:ScheduledEventStatus
Cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Cancelled,$/;"	e	enum:RateLimitAction
Cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    Cancelled,$/;"	e	enum:Repr
Cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Cancelled,$/;"	e	enum:TransitionToIdle
Cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Cancelled,$/;"	e	enum:TransitionToRunning
CannotCrosspostMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    CannotCrosspostMessage,$/;"	e	enum:Error
Category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Category(TicketCounter),$/;"	e	enum:Bucket
Category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Category,$/;"	e	enum:LimitedFor
Category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Category = 4,$/;"	e	enum:ChannelType
Category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Category(ChannelCategory),$/;"	e	enum:Channel
Cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl<T: Future, S: Schedule> Cell<T, S> {$/;"	c
Cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) struct Cell<T: Future, S> {$/;"	s
Cfg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^pub(crate) struct Cfg {$/;"	s
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^impl<T, U> AsyncBufRead for Chain<T, U>$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^impl<T, U> AsyncRead for Chain<T, U>$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^impl<T, U> Chain<T, U>$/;"	c
Chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^impl<T, U> fmt::Debug for Chain<T, U>$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Chan<T, S> {$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Drop for Chan<T, S> {$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> fmt::Debug for Chan<T, S>$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(super) struct Chan<T, S> {$/;"	s
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^unsafe impl<T: Send, S: Send> Send for Chan<T, S> {}$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^unsafe impl<T: Send, S: Sync> Sync for Chan<T, S> {}$/;"	c
Chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^struct Chan {$/;"	s
Change	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^impl Change {$/;"	c
Change	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^impl Serialize for Change {$/;"	c
Change	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^impl<'de> Deserialize<'de> for Change {$/;"	c
Change	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^pub enum Change {$/;"	g
ChangeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^impl<'de> Visitor<'de> for ChangeVisitor {$/;"	c
ChangeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^struct ChangeVisitor;$/;"	s
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Channel(TicketCounter),$/;"	e	enum:Bucket
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Channel,$/;"	e	enum:LimitedFor
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Channel = 3,$/;"	e	enum:CommandPermissionType
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Channel = 7,$/;"	e	enum:CommandOptionType
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    Channel(PartialChannel),$/;"	e	enum:CommandDataOptionValue
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl Channel {$/;"	c
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl FromStrAndCache for Channel {$/;"	c
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl Serialize for Channel {$/;"	c
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl fmt::Display for Channel {$/;"	c
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl<'de> Deserialize<'de> for Channel {$/;"	c
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub enum Channel {$/;"	g
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Channel(ChannelAction),$/;"	e	enum:Action
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    Channel(ChannelId),$/;"	e	enum:Mention
Channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl ArgumentConvert for Channel {$/;"	c
ChannelAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum ChannelAction {$/;"	g
ChannelCategory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^impl ChannelCategory {$/;"	c
ChannelCategory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^pub struct ChannelCategory {$/;"	s
ChannelCategory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl ArgumentConvert for ChannelCategory {$/;"	c
ChannelCategoryParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl fmt::Display for ChannelCategoryParseError {$/;"	c
ChannelCategoryParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl std::error::Error for ChannelCategoryParseError {$/;"	c
ChannelCategoryParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^pub enum ChannelCategoryParseError {$/;"	g
ChannelCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ChannelCreate(ChannelCreateEvent),$/;"	e	enum:Event
ChannelCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ChannelCreate,$/;"	e	enum:EventType
ChannelCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for ChannelCreateEvent {$/;"	c
ChannelCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ChannelCreateEvent {$/;"	s
ChannelDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ChannelDelete(ChannelDeleteEvent),$/;"	e	enum:Event
ChannelDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ChannelDelete,$/;"	e	enum:EventType
ChannelDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for ChannelDeleteEvent {$/;"	c
ChannelDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ChannelDeleteEvent {$/;"	s
ChannelFollowAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    ChannelFollowAdd = 12,$/;"	e	enum:MessageType
ChannelFollower	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    ChannelFollower = 2,$/;"	e	enum:WebhookType
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^impl ChannelId {$/;"	c
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^impl From<Channel> for ChannelId {$/;"	c
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^impl From<GuildChannel> for ChannelId {$/;"	c
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^impl From<PrivateChannel> for ChannelId {$/;"	c
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^impl<'a> From<&'a Channel> for ChannelId {$/;"	c
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^impl<'a> From<&'a GuildChannel> for ChannelId {$/;"	c
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^impl<'a> From<&'a PrivateChannel> for ChannelId {$/;"	c
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ChannelId {$/;"	e	enum:Change
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ChannelId,$/;"	e	enum:Key
ChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct ChannelId(#[serde(with = "snowflake")] pub u64);$/;"	s
ChannelMention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^pub struct ChannelMention {$/;"	s
ChannelMessageWithSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    ChannelMessageWithSource = 4,$/;"	e	enum:InteractionResponseType
ChannelNotFound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    ChannelNotFound,$/;"	e	enum:Error
ChannelOverwrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    ChannelOverwrite(ChannelOverwriteAction),$/;"	e	enum:Action
ChannelOverwriteAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum ChannelOverwriteAction {$/;"	g
ChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl StdError for ChannelParseError {}$/;"	c
ChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl fmt::Display for ChannelParseError {$/;"	c
ChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub enum ChannelParseError {$/;"	g
ChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl fmt::Display for ChannelParseError {$/;"	c
ChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl std::error::Error for ChannelParseError {$/;"	c
ChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^pub enum ChannelParseError {$/;"	g
ChannelPinsUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ChannelPinsUpdate(ChannelPinsUpdateEvent),$/;"	e	enum:Event
ChannelPinsUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ChannelPinsUpdate,$/;"	e	enum:EventType
ChannelPinsUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for ChannelPinsUpdateEvent {$/;"	c
ChannelPinsUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ChannelPinsUpdateEvent {$/;"	s
ChannelType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl ChannelType {$/;"	c
ChannelType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub enum ChannelType {$/;"	g
ChannelUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ChannelUpdate(ChannelUpdateEvent),$/;"	e	enum:Event
ChannelUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ChannelUpdate,$/;"	e	enum:EventType
ChannelUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for ChannelUpdateEvent {$/;"	c
ChannelUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ChannelUpdateEvent {$/;"	s
ChannelsId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsId(u64),$/;"	e	enum:Route
ChannelsIdArchivedPrivateThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdArchivedPrivateThreads(u64),$/;"	e	enum:Route
ChannelsIdArchivedPublicThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdArchivedPublicThreads(u64),$/;"	e	enum:Route
ChannelsIdCrosspostsMessageId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdCrosspostsMessageId(u64),$/;"	e	enum:Route
ChannelsIdInvites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdInvites(u64),$/;"	e	enum:Route
ChannelsIdMeJoindedArchivedPrivateThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdMeJoindedArchivedPrivateThreads(u64),$/;"	e	enum:Route
ChannelsIdMessages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdMessages(u64),$/;"	e	enum:Route
ChannelsIdMessagesBulkDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdMessagesBulkDelete(u64),$/;"	e	enum:Route
ChannelsIdMessagesId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdMessagesId(LightMethod, u64),$/;"	e	enum:Route
ChannelsIdMessagesIdAck	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdMessagesIdAck(u64),$/;"	e	enum:Route
ChannelsIdMessagesIdReactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdMessagesIdReactions(u64),$/;"	e	enum:Route
ChannelsIdMessagesIdReactionsUserIdType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdMessagesIdReactionsUserIdType(u64),$/;"	e	enum:Route
ChannelsIdMessagesIdThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdMessagesIdThreads(u64),$/;"	e	enum:Route
ChannelsIdPermissionsOverwriteId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdPermissionsOverwriteId(u64),$/;"	e	enum:Route
ChannelsIdPins	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdPins(u64),$/;"	e	enum:Route
ChannelsIdPinsMessageId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdPinsMessageId(u64),$/;"	e	enum:Route
ChannelsIdThreadMembers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdThreadMembers(u64),$/;"	e	enum:Route
ChannelsIdThreadMembersMe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdThreadMembersMe(u64),$/;"	e	enum:Route
ChannelsIdThreadMembersUserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdThreadMembersUserId(u64),$/;"	e	enum:Route
ChannelsIdThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdThreads(u64),$/;"	e	enum:Route
ChannelsIdTyping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdTyping(u64),$/;"	e	enum:Route
ChannelsIdWebhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ChannelsIdWebhooks(u64),$/;"	e	enum:Route
ChatInput	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    ChatInput = 1,$/;"	e	enum:CommandType
ChatInputCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    ChatInputCommand = 20,$/;"	e	enum:MessageType
Check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^type Check = for<'fut> fn(&'fut Context, &'fut Message) -> BoxFuture<'fut, bool>;$/;"	t
Check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^impl PartialEq for Check {$/;"	c
Check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^impl fmt::Debug for Check {$/;"	c
Check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^pub struct Check {$/;"	s
CheckFailed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    CheckFailed(&'static str, Reason),$/;"	e	enum:DispatchError
CheckFunction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^pub type CheckFunction = for<'fut> fn($/;"	t
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    Child(ChildDropGuard<imp::Child>),$/;"	e	enum:FusedChild
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct Child {$/;"	s
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Future for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Kill for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl fmt::Debug for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) struct Child {$/;"	s
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl AsRawHandle for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl Future for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl Kill for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl fmt::Debug for Child {$/;"	c
Child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(crate) struct Child {$/;"	s
ChildDropGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl<T, E, F> Future for ChildDropGuard<F>$/;"	c
ChildDropGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl<T: Kill> Drop for ChildDropGuard<T> {$/;"	c
ChildDropGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl<T: Kill> Kill for ChildDropGuard<T> {$/;"	c
ChildDropGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^struct ChildDropGuard<T: Kill> {$/;"	s
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsFd for ChildStderr {$/;"	c	module:sys
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsRawFd for ChildStderr {$/;"	c	module:sys
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl AsyncRead for ChildStderr {$/;"	c
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl ChildStderr {$/;"	c
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl TryInto<Stdio> for ChildStderr {$/;"	c
ChildStderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct ChildStderr {$/;"	s
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsFd for ChildStdin {$/;"	c	module:sys
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsRawFd for ChildStdin {$/;"	c	module:sys
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl AsyncWrite for ChildStdin {$/;"	c
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl ChildStdin {$/;"	c
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl TryInto<Stdio> for ChildStdin {$/;"	c
ChildStdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct ChildStdin {$/;"	s
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsFd for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsRawFd for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsyncRead for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsyncWrite for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl fmt::Debug for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) struct ChildStdio {$/;"	s
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl AsRawHandle for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl AsyncRead for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl AsyncWrite for ChildStdio {$/;"	c
ChildStdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(crate) struct ChildStdio {$/;"	s
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsFd for ChildStdout {$/;"	c	module:sys
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl AsRawFd for ChildStdout {$/;"	c	module:sys
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl AsyncRead for ChildStdout {$/;"	c
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl ChildStdout {$/;"	c
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl TryInto<Stdio> for ChildStdout {$/;"	c
ChildStdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct ChildStdout {$/;"	s
ChunkCount	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            ChunkCount,$/;"	e	enum:GuildMembersChunkEvent::deserialize::Field
ChunkGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    ChunkGuild {$/;"	e	enum:ShardRunnerMessage
ChunkGuildFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^pub enum ChunkGuildFilter {$/;"	g
ChunkIndex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            ChunkIndex,$/;"	e	enum:GuildMembersChunkEvent::deserialize::Field
Clear	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    Clear(u8),$/;"	e	enum:Tick
Client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^    Client(ClientEvent),$/;"	e	enum:DispatchEvent
Client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^impl Client {$/;"	c
Client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^pub struct Client {$/;"	s
Client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Client(ClientError),$/;"	e	enum:Error
Client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Client(Box<ShardClientMessage>),$/;"	e	enum:InterMessage
Client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    Client,$/;"	e	enum:PipeEnd
ClientBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^impl ClientBuilder {$/;"	c
ClientBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^impl Future for ClientBuilder {$/;"	c
ClientBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^pub struct ClientBuilder {$/;"	s
ClientEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/event.rs	/^pub(crate) enum ClientEvent {$/;"	g
ClientOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl ClientOptions {$/;"	c
ClientOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct ClientOptions {$/;"	s
ClientStatus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct ClientStatus {$/;"	s
Close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    Close(u16, Option<String>),$/;"	e	enum:ShardRunnerMessage
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    Closed(Option<CloseFrame<'static>>),$/;"	e	enum:Error
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    Closed,$/;"	e	enum:TryAcquireError
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Closed,$/;"	e	enum:error::RecvError
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Closed,$/;"	e	enum:error::TryRecvError
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    Closed,$/;"	e	enum:Read
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    Closed(T),$/;"	e	enum:TrySendError
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    Closed,$/;"	e	enum:TryPopResult
Closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^        Closed,$/;"	e	enum:error::TryRecvError
Code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Code {$/;"	e	enum:Change
Code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Code,$/;"	e	enum:Key
Code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    Code,$/;"	e	enum:ContentModifier
CollectComponentInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^impl CollectComponentInteraction {$/;"	c
CollectComponentInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^impl Future for CollectComponentInteraction {$/;"	c
CollectComponentInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^pub struct CollectComponentInteraction {$/;"	s
CollectModalInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^impl CollectModalInteraction {$/;"	c
CollectModalInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^impl Future for CollectModalInteraction {$/;"	c
CollectModalInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^pub struct CollectModalInteraction {$/;"	s
CollectReaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl CollectReaction {$/;"	c
CollectReaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl Future for CollectReaction {$/;"	c
CollectReaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^pub struct CollectReaction {$/;"	s
CollectReply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^impl CollectReply {$/;"	c
CollectReply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^impl Future for CollectReply {$/;"	c
CollectReply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^pub struct CollectReply {$/;"	s
Collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Collector(CollectorError),$/;"	e	enum:Error
Color	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub type Color = Colour;$/;"	t
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Colour {$/;"	e	enum:Change
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Colour,$/;"	e	enum:Key
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^impl Colour {$/;"	c
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^impl Default for Colour {$/;"	c
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^impl From<(u8, u8, u8)> for Colour {$/;"	c
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^impl From<i32> for Colour {$/;"	c
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^impl From<u32> for Colour {$/;"	c
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^impl From<u64> for Colour {$/;"	c
Colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^pub struct Colour(pub u32);$/;"	s
CombiAbort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiAbort {$/;"	g
CombiAbortSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiAbortSource {$/;"	g
CombiJoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiJoinHandle {$/;"	g
CombiJoinInterest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiJoinInterest {$/;"	g
CombiLocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiLocalSet {$/;"	g
CombiOutput	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiOutput {$/;"	g
CombiRuntime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiRuntime {$/;"	g
CombiTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^enum CombiTask {$/;"	g
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub struct Command<'a> {$/;"	s
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    type Storage = (&'static Command, Arc<CommandMap>);$/;"	v	implementation:CommandMap
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^    Command { group: &'static CommandGroup, command: &'static Command },$/;"	e	enum:Invoke
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^impl PartialEq for Command {$/;"	c
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^impl fmt::Debug for Command {$/;"	c
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub struct Command {$/;"	s
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^impl Command {$/;"	c
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^pub struct Command {$/;"	s
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl Command {$/;"	c
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^impl From<StdCommand> for Command {$/;"	c
Command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub struct Command {$/;"	s
CommandData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl CommandData {$/;"	c
CommandData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl<'de> Deserialize<'de> for CommandData {$/;"	c
CommandData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^pub struct CommandData {$/;"	s
CommandDataOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl<'de> Deserialize<'de> for CommandDataOption {$/;"	c
CommandDataOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^pub struct CommandDataOption {$/;"	s
CommandDataOptionValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^pub enum CommandDataOptionValue {$/;"	g
CommandDataResolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^pub struct CommandDataResolved {$/;"	s
CommandDisabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    CommandDisabled,$/;"	e	enum:DispatchError
CommandError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub type CommandError = Box<dyn StdError + Send + Sync>;$/;"	t
CommandFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub type CommandFn =$/;"	t
CommandGroup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    type Storage = (&'static CommandGroup, Arc<GroupMap>, Arc<CommandMap>);$/;"	v	implementation:GroupMap
CommandGroup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    &'fut [&'static CommandGroup],$/;"	v
CommandGroup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub struct CommandGroup {$/;"	s
CommandId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct CommandId(#[serde(with = "snowflake")] pub u64);$/;"	s
CommandMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^impl CommandMap {$/;"	c
CommandMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^impl ParseMap for CommandMap {$/;"	c
CommandMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^pub struct CommandMap {$/;"	s
CommandOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^pub struct CommandOption {$/;"	s
CommandOptionChoice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^pub struct CommandOptionChoice {$/;"	s
CommandOptionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^pub enum CommandOptionType {$/;"	g
CommandOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^impl CommonOptions for &CommandOptions {$/;"	c
CommandOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub struct CommandOptions {$/;"	s
CommandPermission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^pub struct CommandPermission {$/;"	s
CommandPermissionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^pub struct CommandPermissionData {$/;"	s
CommandPermissionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^impl CommandPermissionId {$/;"	c
CommandPermissionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^impl From<RoleId> for CommandPermissionId {$/;"	c
CommandPermissionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^impl From<UserId> for CommandPermissionId {$/;"	c
CommandPermissionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^impl<'a> From<&'a RoleId> for CommandPermissionId {$/;"	c
CommandPermissionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^impl<'a> From<&'a UserId> for CommandPermissionId {$/;"	c
CommandPermissionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct CommandPermissionId(#[serde(with = "snowflake")] pub u64);$/;"	s
CommandPermissionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^pub enum CommandPermissionType {$/;"	g
CommandResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub type CommandResult<T = ()> = std::result::Result<T, CommandError>;$/;"	t
CommandType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^pub enum CommandType {$/;"	g
CommandVersionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct CommandVersionId(#[serde(with = "snowflake")] pub u64);$/;"	s
CommonOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^pub trait CommonOptions {$/;"	i
CommunicationDisabledUntil	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    CommunicationDisabledUntil {$/;"	e	enum:Change
CommunicationDisabledUntil	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    CommunicationDisabledUntil,$/;"	e	enum:Key
Competing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    Competing = 5,$/;"	e	enum:ActivityType
Complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    Complete,$/;"	e	enum:PollFuture
Completed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    Completed = 3,$/;"	e	enum:ScheduledEventStatus
ComponentInteractionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^impl ComponentInteractionCollector {$/;"	c
ComponentInteractionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^impl Drop for ComponentInteractionCollector {$/;"	c
ComponentInteractionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^impl Stream for ComponentInteractionCollector {$/;"	c
ComponentInteractionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^pub struct ComponentInteractionCollector {$/;"	s
ComponentInteractionCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^impl ComponentInteractionCollectorBuilder {$/;"	c
ComponentInteractionCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^pub struct ComponentInteractionCollectorBuilder {$/;"	s
ComponentInteractionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^impl ComponentInteractionFilter {$/;"	c
ComponentInteractionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^pub struct ComponentInteractionFilter {$/;"	s
ComponentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub enum ComponentType {$/;"	g
ComponentType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ComponentType = component::ComponentType;$/;"	t	module:message_component
Condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl Condvar {$/;"	c
Condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct Condvar(PhantomData<std::sync::Condvar>, parking_lot::Condvar);$/;"	s
Config	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^pub(crate) struct Config {$/;"	s
Configuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^impl Configuration {$/;"	c
Configuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^impl Default for Configuration {$/;"	c
Configuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^pub struct Configuration {$/;"	s
Connected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Connected,$/;"	e	enum:ConnectionStage
Connecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Connecting,$/;"	e	enum:ConnectionStage
Connection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^pub struct Connection {$/;"	s
ConnectionStage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^impl ConnectionStage {$/;"	c
ConnectionStage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^impl fmt::Display for ConnectionStage {$/;"	c
ConnectionStage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^pub enum ConnectionStage {$/;"	g
ConnectionVisibility	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^pub enum ConnectionVisibility {$/;"	g
Connections	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    Connections,$/;"	e	enum:Scope
Consumed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    Consumed,$/;"	e	enum:Stage
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl Add<ContentModifier> for Content {$/;"	c
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl Content {$/;"	c
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl<T: ToString> Add<T> for Content {$/;"	c
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl<T: fmt::Display> From<T> for Content {$/;"	c
Content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^pub struct Content {$/;"	s
ContentModifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl Add<ContentModifier> for ContentModifier {$/;"	c
ContentModifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl ContentModifier {$/;"	c
ContentModifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl<T: ToString> Add<T> for ContentModifier {$/;"	c
ContentModifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^pub enum ContentModifier {$/;"	g
ContentSafeOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^impl ContentSafeOptions {$/;"	c
ContentSafeOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^impl Default for ContentSafeOptions {$/;"	c
ContentSafeOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^pub struct ContentSafeOptions {$/;"	s
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl AsRef<Arc<Cache>> for Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl AsRef<Arc<Http>> for Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl AsRef<Cache> for Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl AsRef<Http> for Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl AsRef<ShardMessenger> for Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^impl Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^pub struct Context {$/;"	s
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl CacheHttp for Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^struct Context {$/;"	s
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^struct Context {$/;"	s
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^struct Context {$/;"	s
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^        struct Context {$/;"	s	function:try_recv
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Context {$/;"	c
Context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^struct Context {$/;"	s
ContextMenuCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    ContextMenuCommand = 23,$/;"	e	enum:MessageType
Copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^impl<R, W> Future for Copy<'_, R, W>$/;"	c
Copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^struct Copy<'a, R: ?Sized, W: ?Sized> {$/;"	s
CopyBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^impl<R, W> Future for CopyBuf<'_, R, W>$/;"	c
CopyBuffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^impl CopyBuffer {$/;"	c
CopyBuffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^pub(super) struct CopyBuffer {$/;"	s
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Core {$/;"	c
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^struct Core {$/;"	s
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Core {$/;"	c
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^struct Core {$/;"	s
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl<T: Future, S: Schedule> Core<T, S> {$/;"	c
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) struct Core<T: Future, S> {$/;"	s
Core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct Core {$/;"	s
CoreGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl CoreGuard<'_> {$/;"	c
CoreGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Drop for CoreGuard<'_> {$/;"	c
CoreGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^struct CoreGuard<'a> {$/;"	s
CoreStage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl<T: Future> CoreStage<T> {$/;"	c
CoreStage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) struct CoreStage<T: Future> {$/;"	s
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 10,$/;"	e	enum:ChannelAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 100,$/;"	e	enum:ScheduledEventAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 110,$/;"	e	enum:ThreadAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 13,$/;"	e	enum:ChannelOverwriteAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 30,$/;"	e	enum:RoleAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 40,$/;"	e	enum:InviteAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 50,$/;"	e	enum:WebhookAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 60,$/;"	e	enum:EmojiAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 80,$/;"	e	enum:IntegrationAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 83,$/;"	e	enum:StageInstanceAction
Create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Create = 90,$/;"	e	enum:StickerAction
CreateActionRow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^impl CreateActionRow {$/;"	c
CreateActionRow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^pub struct CreateActionRow(pub HashMap<&'static str, Value>);$/;"	s
CreateAllowedMentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^impl CreateAllowedMentions {$/;"	c
CreateAllowedMentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^impl Default for CreateAllowedMentions {$/;"	c
CreateAllowedMentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^pub struct CreateAllowedMentions(pub HashMap<&'static str, Value>);$/;"	s
CreateApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^impl CreateApplicationCommand {$/;"	c
CreateApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^pub struct CreateApplicationCommand(pub HashMap<&'static str, Value>);$/;"	s
CreateApplicationCommandOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^impl CreateApplicationCommandOption {$/;"	c
CreateApplicationCommandOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^pub struct CreateApplicationCommandOption(pub HashMap<&'static str, Value>);$/;"	s
CreateApplicationCommandPermissionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^impl CreateApplicationCommandPermissionData {$/;"	c
CreateApplicationCommandPermissionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^pub struct CreateApplicationCommandPermissionData(pub HashMap<&'static str, Value>);$/;"	s
CreateApplicationCommandPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^impl CreateApplicationCommandPermissions {$/;"	c
CreateApplicationCommandPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^pub struct CreateApplicationCommandPermissions(pub HashMap<&'static str, Value>);$/;"	s
CreateApplicationCommandPermissionsData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^impl CreateApplicationCommandPermissionsData {$/;"	c
CreateApplicationCommandPermissionsData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^pub struct CreateApplicationCommandPermissionsData(pub HashMap<&'static str, Value>);$/;"	s
CreateApplicationCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^impl CreateApplicationCommands {$/;"	c
CreateApplicationCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^pub struct CreateApplicationCommands(pub Vec<Value>);$/;"	s
CreateApplicationCommandsPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^impl CreateApplicationCommandsPermissions {$/;"	c
CreateApplicationCommandsPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^pub struct CreateApplicationCommandsPermissions(pub Vec<Value>);$/;"	s
CreateAutoModRule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateAutoModRule {$/;"	e	enum:RouteInfo
CreateAutocompleteResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^impl CreateAutocompleteResponse {$/;"	c
CreateAutocompleteResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^impl Default for CreateAutocompleteResponse {$/;"	c
CreateAutocompleteResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^pub struct CreateAutocompleteResponse(pub HashMap<&'static str, Value>);$/;"	s
CreateBotAuthParameters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^impl CreateBotAuthParameters {$/;"	c
CreateBotAuthParameters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^pub struct CreateBotAuthParameters {$/;"	s
CreateButton	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^impl CreateButton {$/;"	c
CreateButton	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^impl Default for CreateButton {$/;"	c
CreateButton	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^pub struct CreateButton(pub HashMap<&'static str, Value>);$/;"	s
CreateChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^impl CreateChannel {$/;"	c
CreateChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^impl Default for CreateChannel {$/;"	c
CreateChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^pub struct CreateChannel(pub HashMap<&'static str, Value>);$/;"	s
CreateChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateChannel {$/;"	e	enum:RouteInfo
CreateComponents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^impl CreateComponents {$/;"	c
CreateComponents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^pub struct CreateComponents(pub Vec<Value>);$/;"	s
CreateEmbed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^impl CreateEmbed {$/;"	c
CreateEmbed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^impl Default for CreateEmbed {$/;"	c
CreateEmbed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^impl From<Embed> for CreateEmbed {$/;"	c
CreateEmbed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^pub struct CreateEmbed(pub HashMap<&'static str, Value>);$/;"	s
CreateEmbedAuthor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^impl CreateEmbedAuthor {$/;"	c
CreateEmbedAuthor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^pub struct CreateEmbedAuthor(pub HashMap<&'static str, Value>);$/;"	s
CreateEmbedFooter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^impl CreateEmbedFooter {$/;"	c
CreateEmbedFooter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^pub struct CreateEmbedFooter(pub HashMap<&'static str, Value>);$/;"	s
CreateEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateEmoji {$/;"	e	enum:RouteInfo
CreateFollowupMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateFollowupMessage {$/;"	e	enum:RouteInfo
CreateGlobalApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateGlobalApplicationCommand {$/;"	e	enum:RouteInfo
CreateGlobalApplicationCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateGlobalApplicationCommands {$/;"	e	enum:RouteInfo
CreateGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateGuild,$/;"	e	enum:RouteInfo
CreateGuildApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateGuildApplicationCommand {$/;"	e	enum:RouteInfo
CreateGuildApplicationCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateGuildApplicationCommands {$/;"	e	enum:RouteInfo
CreateGuildIntegration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateGuildIntegration {$/;"	e	enum:RouteInfo
CreateGuildWelcomeChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^impl CreateGuildWelcomeChannel {$/;"	c
CreateGuildWelcomeChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^pub struct CreateGuildWelcomeChannel(pub HashMap<&'static str, Value>);$/;"	s
CreateInputText	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^impl CreateInputText {$/;"	c
CreateInputText	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^pub struct CreateInputText(pub HashMap<&'static str, Value>);$/;"	s
CreateInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^impl<'a> CreateInteractionResponse<'a> {$/;"	c
CreateInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^impl<'a> Default for CreateInteractionResponse<'a> {$/;"	c
CreateInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^pub struct CreateInteractionResponse<'a>($/;"	s
CreateInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateInteractionResponse {$/;"	e	enum:RouteInfo
CreateInteractionResponseData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^impl<'a> CreateInteractionResponseData<'a> {$/;"	c
CreateInteractionResponseData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^pub struct CreateInteractionResponseData<'a>($/;"	s
CreateInteractionResponseFollowup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^impl<'a> CreateInteractionResponseFollowup<'a> {$/;"	c
CreateInteractionResponseFollowup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^pub struct CreateInteractionResponseFollowup<'a>($/;"	s
CreateInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^impl CreateInvite {$/;"	c
CreateInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^impl Default for CreateInvite {$/;"	c
CreateInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^pub struct CreateInvite(pub HashMap<&'static str, Value>);$/;"	s
CreateInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateInvite {$/;"	e	enum:RouteInfo
CreateMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^impl<'a> CreateMessage<'a> {$/;"	c
CreateMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^impl<'a> Default for CreateMessage<'a> {$/;"	c
CreateMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^pub struct CreateMessage<'a>($/;"	s
CreateMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateMessage {$/;"	e	enum:RouteInfo
CreatePermission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreatePermission {$/;"	e	enum:RouteInfo
CreatePrivateChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreatePrivateChannel,$/;"	e	enum:RouteInfo
CreatePrivateThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreatePrivateThread {$/;"	e	enum:RouteInfo
CreatePublicThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreatePublicThread {$/;"	e	enum:RouteInfo
CreateReaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateReaction {$/;"	e	enum:RouteInfo
CreateRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateRole {$/;"	e	enum:RouteInfo
CreateScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^impl CreateScheduledEvent {$/;"	c
CreateScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^impl Default for CreateScheduledEvent {$/;"	c
CreateScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^pub struct CreateScheduledEvent(pub HashMap<&'static str, Value>);$/;"	s
CreateScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateScheduledEvent {$/;"	e	enum:RouteInfo
CreateSelectMenu	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^impl CreateSelectMenu {$/;"	c
CreateSelectMenu	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^pub struct CreateSelectMenu(pub HashMap<&'static str, Value>);$/;"	s
CreateSelectMenuOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^impl CreateSelectMenuOption {$/;"	c
CreateSelectMenuOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^pub struct CreateSelectMenuOption(pub HashMap<&'static str, Value>);$/;"	s
CreateSelectMenuOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^impl CreateSelectMenuOptions {$/;"	c
CreateSelectMenuOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^pub struct CreateSelectMenuOptions(pub Vec<Value>);$/;"	s
CreateStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_stage_instance.rs	/^impl CreateStageInstance {$/;"	c
CreateStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_stage_instance.rs	/^pub struct CreateStageInstance(pub HashMap<&'static str, Value>);$/;"	s
CreateStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateStageInstance,$/;"	e	enum:RouteInfo
CreateSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_sticker.rs	/^impl<'a> CreateSticker<'a> {$/;"	c
CreateSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_sticker.rs	/^pub struct CreateSticker<'a>(pub HashMap<&'static str, Value>, pub Option<AttachmentType<'a>>);$/;"	s
CreateSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateSticker {$/;"	e	enum:RouteInfo
CreateThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_thread.rs	/^impl CreateThread {$/;"	c
CreateThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_thread.rs	/^pub struct CreateThread(pub HashMap<&'static str, Value>);$/;"	s
CreateWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CreateWebhook {$/;"	e	enum:RouteInfo
CrosspostMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    CrosspostMessage {$/;"	e	enum:RouteInfo
Crud	/home/trey/code/sqlx-crud/src/traits.rs	/^pub trait Crud<'e, E>$/;"	i
CrudFut	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type CrudFut<'e, T> = Pin<Box<dyn Future<Output = Result<T, sqlx::Error>> + Send + 'e>>;$/;"	t
CrudStream	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type CrudStream<'e, T> =$/;"	t
CtrlBreak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlBreak {$/;"	c
CtrlBreak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlBreak {$/;"	s
CtrlC	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlC {$/;"	c
CtrlC	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlC {$/;"	s
CtrlClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlClose {$/;"	c
CtrlClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlClose {$/;"	s
CtrlLogoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlLogoff {$/;"	c
CtrlLogoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlLogoff {$/;"	s
CtrlShutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^impl CtrlShutdown {$/;"	c
CtrlShutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub struct CtrlShutdown {$/;"	s
CurrentApplicationInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub struct CurrentApplicationInfo {$/;"	s
CurrentPresence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^pub type CurrentPresence = (Option<Activity>, OnlineStatus);$/;"	t
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    CurrentThread,$/;"	e	enum:Kind
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    CurrentThread(CurrentThread),$/;"	e	enum:Scheduler
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    CurrentThread,$/;"	e	enum:RuntimeFlavor
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl CurrentThread {$/;"	c
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl fmt::Debug for CurrentThread {$/;"	c
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^pub(crate) struct CurrentThread {$/;"	s
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^    CurrentThread(Arc<current_thread::Handle>),$/;"	e	enum:Handle
CurrentThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    CurrentThread,$/;"	e	enum:CombiRuntime
CurrentUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl CurrentUser {$/;"	c
CurrentUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^pub struct CurrentUser {$/;"	s
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl<T: AsRef<[u8]> + Unpin> AsyncBufRead for io::Cursor<T> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl<T: AsRef<[u8]> + Unpin> AsyncRead for io::Cursor<T> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^impl<T: AsRef<[u8]> + Unpin> AsyncSeek for io::Cursor<T> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for io::Cursor<&mut Vec<u8>> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for io::Cursor<&mut [u8]> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for io::Cursor<Box<[u8]>> {$/;"	c
Cursor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for io::Cursor<Vec<u8>> {$/;"	c
Custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    Custom {$/;"	e	enum:ReactionType
Custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    Custom = 4,$/;"	e	enum:ActivityType
Custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    Custom { id: EmojiId, name: String },$/;"	e	enum:GuildWelcomeChannelEmoji
CustomMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^impl CustomMessage {$/;"	c
CustomMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^impl Default for CustomMessage {$/;"	c
CustomMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^pub struct CustomMessage {$/;"	s
CustomisedHelpData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub enum CustomisedHelpData<'a> {$/;"	g
DID_SPAWN	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    static DID_SPAWN: AtomicBool = AtomicBool::new(false);$/;"	v	function:spawn_during_shutdown
Danger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Danger = 4,$/;"	e	enum:ButtonStyle
Deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Deaf {$/;"	e	enum:Change
Deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Deaf,$/;"	e	enum:Key
Dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    Dealloc,$/;"	e	enum:PollFuture
Dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Dealloc,$/;"	e	enum:TransitionToNotifiedByVal
Dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Dealloc,$/;"	e	enum:TransitionToRunning
Decode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Decode(&'static str, Value),$/;"	e	enum:Error
Default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Default = 0,$/;"	e	enum:NsfwLevel
DefaultAutoArchiveDuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    DefaultAutoArchiveDuration {$/;"	e	enum:Change
DefaultAutoArchiveDuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    DefaultAutoArchiveDuration,$/;"	e	enum:Key
DefaultAvatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl DefaultAvatar {$/;"	c
DefaultAvatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^pub enum DefaultAvatar {$/;"	g
DefaultMessageNotificationLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub enum DefaultMessageNotificationLevel {$/;"	g
DefaultMessageNotifications	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    DefaultMessageNotifications {$/;"	e	enum:Change
DefaultMessageNotifications	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    DefaultMessageNotifications,$/;"	e	enum:Key
Defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^impl Defer {$/;"	c
Defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^pub(crate) struct Defer {$/;"	s
DeferredChannelMessageWithSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    DeferredChannelMessageWithSource = 5,$/;"	e	enum:InteractionResponseType
DeferredUpdateMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    DeferredUpdateMessage = 6,$/;"	e	enum:InteractionResponseType
Delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    Delay,$/;"	e	enum:MissedTickBehavior
DelayHook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^type DelayHook = for<'fut> fn(&'fut Context, &'fut Message) -> BoxFuture<'fut, ()>;$/;"	t
Delayed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Delayed,$/;"	e	enum:RateLimitAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    Delete,$/;"	e	enum:LightMethod
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 102,$/;"	e	enum:ScheduledEventAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 112,$/;"	e	enum:ThreadAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 12,$/;"	e	enum:ChannelAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 15,$/;"	e	enum:ChannelOverwriteAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 32,$/;"	e	enum:RoleAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 42,$/;"	e	enum:InviteAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 52,$/;"	e	enum:WebhookAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 62,$/;"	e	enum:EmojiAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 72,$/;"	e	enum:MessageAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 82,$/;"	e	enum:IntegrationAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 85,$/;"	e	enum:StageInstanceAction
Delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Delete = 92,$/;"	e	enum:StickerAction
DeleteAutoModRule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteAutoModRule {$/;"	e	enum:RouteInfo
DeleteChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteChannel {$/;"	e	enum:RouteInfo
DeleteEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteEmoji {$/;"	e	enum:RouteInfo
DeleteFollowupMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteFollowupMessage {$/;"	e	enum:RouteInfo
DeleteGlobalApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteGlobalApplicationCommand {$/;"	e	enum:RouteInfo
DeleteGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteGuild {$/;"	e	enum:RouteInfo
DeleteGuildApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteGuildApplicationCommand {$/;"	e	enum:RouteInfo
DeleteGuildIntegration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteGuildIntegration {$/;"	e	enum:RouteInfo
DeleteInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteInvite {$/;"	e	enum:RouteInfo
DeleteMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteMessage {$/;"	e	enum:RouteInfo
DeleteMessageDaysAmount	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    DeleteMessageDaysAmount(u8),$/;"	e	enum:Error
DeleteMessageReactionEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteMessageReactionEmoji {$/;"	e	enum:RouteInfo
DeleteMessageReactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteMessageReactions {$/;"	e	enum:RouteInfo
DeleteMessages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteMessages {$/;"	e	enum:RouteInfo
DeleteNitroSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    DeleteNitroSticker,$/;"	e	enum:Error
DeleteOriginalInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteOriginalInteractionResponse {$/;"	e	enum:RouteInfo
DeletePermission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeletePermission {$/;"	e	enum:RouteInfo
DeleteReaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteReaction {$/;"	e	enum:RouteInfo
DeleteRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteRole {$/;"	e	enum:RouteInfo
DeleteScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteScheduledEvent {$/;"	e	enum:RouteInfo
DeleteStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteStageInstance {$/;"	e	enum:RouteInfo
DeleteSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteSticker {$/;"	e	enum:RouteInfo
DeleteWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteWebhook {$/;"	e	enum:RouteInfo
DeleteWebhookMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteWebhookMessage {$/;"	e	enum:RouteInfo
DeleteWebhookWithToken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    DeleteWebhookWithToken {$/;"	e	enum:RouteInfo
Delimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl Delimiter {$/;"	c
Delimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl From<String> for Delimiter {$/;"	c
Delimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl From<char> for Delimiter {$/;"	c
Delimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl<'a> From<&'a String> for Delimiter {$/;"	c
Delimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl<'a> From<&'a str> for Delimiter {$/;"	c
Delimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^pub enum Delimiter {$/;"	g
Deny	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Deny {$/;"	e	enum:Change
Deny	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Deny,$/;"	e	enum:Key
Description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Description {$/;"	e	enum:Change
Description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Description,$/;"	e	enum:Key
DirBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^impl DirBuilder {$/;"	c
DirBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^pub struct DirBuilder {$/;"	s
DirEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^impl DirEntry {$/;"	c
DirEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^pub struct DirEntry {$/;"	s
Direction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^enum Direction {$/;"	g
Direction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl Direction {$/;"	c
Directory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Directory = 14,$/;"	e	enum:ChannelType
Disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^    Disabled,$/;"	e	enum:Handle
DisallowedGatewayIntents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^    DisallowedGatewayIntents,$/;"	e	enum:ShardManagerError
DisallowedGatewayIntents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    DisallowedGatewayIntents,$/;"	e	enum:Error
Disconnected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Disconnected,$/;"	e	enum:ConnectionStage
Disconnected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    Disconnected,$/;"	e	enum:TryRecvError
DiscordJsonError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^pub struct DiscordJsonError {$/;"	s
DiscordJsonSingleError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^pub struct DiscordJsonSingleError {$/;"	s
DiscoverySplashHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    DiscoverySplashHash {$/;"	e	enum:Change
DiscoverySplashHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    DiscoverySplashHash,$/;"	e	enum:Key
DiscriminatorVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    impl<'de> Visitor<'de> for DiscriminatorVisitor {$/;"	c	module:discriminator
DiscriminatorVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    struct DiscriminatorVisitor;$/;"	s	module:discriminator
Dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^    Dispatch { error: DispatchError, command_name: String },$/;"	e	enum:ParseError
Dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Dispatch(u64, Event),$/;"	e	enum:GatewayEvent
DispatchError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^pub enum DispatchError {$/;"	g
DispatchEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^impl DispatchEvent {$/;"	c
DispatchEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^pub(crate) enum DispatchEvent {$/;"	g
DispatchHook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^type DispatchHook =$/;"	t
Dm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    Dm,$/;"	e	enum:OnlyIn
DoNotDisturb	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    DoNotDisturb,$/;"	e	enum:OnlineStatus
DoNothing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    DoNothing,$/;"	e	enum:TransitionToNotifiedByRef
DoNothing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    DoNothing,$/;"	e	enum:TransitionToNotifiedByVal
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    Done(Fut::Output),$/;"	e	enum:MaybeDone
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^    Done(u64),$/;"	e	enum:TransferState
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    Done(ExitStatus),$/;"	e	enum:FusedChild
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    Done,$/;"	e	enum:PollFuture
Done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    Done,$/;"	e	enum:State
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^pub(crate) struct Driver {$/;"	s
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl fmt::Debug for Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^pub(crate) struct Driver {$/;"	s
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^pub(crate) struct Driver {$/;"	s
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^pub(crate) struct Driver {$/;"	s
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^impl Driver {$/;"	c
Driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^pub(crate) struct Driver {$/;"	s
DropAfterConsume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    DropAfterConsume = 4,$/;"	e	enum:CombiJoinHandle
DropAfterNoConsume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    DropAfterNoConsume = 3,$/;"	e	enum:CombiJoinHandle
DropFirstPoll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    DropFirstPoll = 2,$/;"	e	enum:CombiJoinHandle
DropImmediately	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    DropImmediately = 1,$/;"	e	enum:CombiJoinHandle
DuplexStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl AsyncRead for DuplexStream {$/;"	c
DuplexStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl AsyncWrite for DuplexStream {$/;"	c
DuplexStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl Drop for DuplexStream {$/;"	c
DuplexStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^pub struct DuplexStream {$/;"	s
DynamicPrefixHook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^type DynamicPrefixHook =$/;"	t
EditAutoModRule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^impl Default for EditAutoModRule {$/;"	c
EditAutoModRule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^impl EditAutoModRule {$/;"	c
EditAutoModRule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^pub struct EditAutoModRule(pub HashMap<&'static str, Value>);$/;"	s
EditAutoModRule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditAutoModRule {$/;"	e	enum:RouteInfo
EditChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^impl EditChannel {$/;"	c
EditChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^pub struct EditChannel(pub HashMap<&'static str, Value>);$/;"	s
EditChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditChannel {$/;"	e	enum:RouteInfo
EditEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditEmoji {$/;"	e	enum:RouteInfo
EditFollowupMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditFollowupMessage {$/;"	e	enum:RouteInfo
EditGlobalApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditGlobalApplicationCommand {$/;"	e	enum:RouteInfo
EditGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^impl EditGuild {$/;"	c
EditGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^pub struct EditGuild(pub HashMap<&'static str, Value>);$/;"	s
EditGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditGuild {$/;"	e	enum:RouteInfo
EditGuildApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditGuildApplicationCommand {$/;"	e	enum:RouteInfo
EditGuildApplicationCommandPermission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditGuildApplicationCommandPermission {$/;"	e	enum:RouteInfo
EditGuildApplicationCommandsPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditGuildApplicationCommandsPermissions {$/;"	e	enum:RouteInfo
EditGuildChannels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditGuildChannels {$/;"	e	enum:RouteInfo
EditGuildWelcomeScreen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^impl EditGuildWelcomeScreen {$/;"	c
EditGuildWelcomeScreen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^pub struct EditGuildWelcomeScreen(pub HashMap<&'static str, Value>);$/;"	s
EditGuildWelcomeScreen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditGuildWelcomeScreen {$/;"	e	enum:RouteInfo
EditGuildWidget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_widget.rs	/^impl EditGuildWidget {$/;"	c
EditGuildWidget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_widget.rs	/^pub struct EditGuildWidget(pub HashMap<&'static str, Value>);$/;"	s
EditGuildWidget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditGuildWidget {$/;"	e	enum:RouteInfo
EditInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^impl EditInteractionResponse {$/;"	c
EditInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^pub struct EditInteractionResponse(pub HashMap<&'static str, Value>);$/;"	s
EditMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^impl EditMember {$/;"	c
EditMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^pub struct EditMember(pub HashMap<&'static str, Value>);$/;"	s
EditMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditMember {$/;"	e	enum:RouteInfo
EditMemberMe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditMemberMe {$/;"	e	enum:RouteInfo
EditMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^impl<'a> EditMessage<'a> {$/;"	c
EditMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^pub struct EditMessage<'a>(pub HashMap<&'static str, Value>, pub Vec<AttachmentType<'a>>);$/;"	s
EditMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditMessage {$/;"	e	enum:RouteInfo
EditNickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditNickname {$/;"	e	enum:RouteInfo
EditOriginalInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditOriginalInteractionResponse {$/;"	e	enum:RouteInfo
EditProfile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_profile.rs	/^impl EditProfile {$/;"	c
EditProfile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_profile.rs	/^pub struct EditProfile(pub HashMap<&'static str, Value>);$/;"	s
EditProfile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditProfile,$/;"	e	enum:RouteInfo
EditRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^impl EditRole {$/;"	c
EditRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^pub struct EditRole(pub HashMap<&'static str, Value>);$/;"	s
EditRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditRole {$/;"	e	enum:RouteInfo
EditRolePosition	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditRolePosition {$/;"	e	enum:RouteInfo
EditScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^impl EditScheduledEvent {$/;"	c
EditScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^pub struct EditScheduledEvent(pub HashMap<&'static str, Value>);$/;"	s
EditScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditScheduledEvent {$/;"	e	enum:RouteInfo
EditStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_stage_instance.rs	/^impl EditStageInstance {$/;"	c
EditStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_stage_instance.rs	/^pub struct EditStageInstance(pub HashMap<&'static str, Value>);$/;"	s
EditStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditStageInstance {$/;"	e	enum:RouteInfo
EditSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_sticker.rs	/^impl EditSticker {$/;"	c
EditSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_sticker.rs	/^pub struct EditSticker(pub HashMap<&'static str, Value>);$/;"	s
EditSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditSticker {$/;"	e	enum:RouteInfo
EditThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_thread.rs	/^impl EditThread {$/;"	c
EditThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_thread.rs	/^pub struct EditThread(pub HashMap<&'static str, Value>);$/;"	s
EditThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditThread {$/;"	e	enum:RouteInfo
EditVoiceState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_voice_state.rs	/^impl EditVoiceState {$/;"	c
EditVoiceState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_voice_state.rs	/^pub struct EditVoiceState(pub HashMap<&'static str, Value>);$/;"	s
EditVoiceState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditVoiceState {$/;"	e	enum:RouteInfo
EditVoiceStateMe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditVoiceStateMe {$/;"	e	enum:RouteInfo
EditWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditWebhook {$/;"	e	enum:RouteInfo
EditWebhookMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_webhook_message.rs	/^impl EditWebhookMessage {$/;"	c
EditWebhookMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_webhook_message.rs	/^pub struct EditWebhookMessage(pub HashMap<&'static str, Value>);$/;"	s
EditWebhookMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditWebhookMessage {$/;"	e	enum:RouteInfo
EditWebhookWithToken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    EditWebhookWithToken {$/;"	e	enum:RouteInfo
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    Elapsed,$/;"	e	enum:InsertError
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl Elapsed {$/;"	c
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl fmt::Display for Elapsed {$/;"	c
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl std::error::Error for Elapsed {}$/;"	c
Elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^pub struct Elapsed(());$/;"	s
Elevated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Elevated = 1,$/;"	e	enum:MfaLevel
Email	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    Email,$/;"	e	enum:Scope
Embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^impl Embed {$/;"	c
Embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^pub struct Embed {$/;"	s
EmbedAmount	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    EmbedAmount,$/;"	e	enum:Error
EmbedAuthor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^pub struct EmbedAuthor {$/;"	s
EmbedField	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^impl EmbedField {$/;"	c
EmbedField	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^pub struct EmbedField {$/;"	s
EmbedFooter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^pub struct EmbedFooter {$/;"	s
EmbedImage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^pub struct EmbedImage {$/;"	s
EmbedMessageBuilding	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^pub trait EmbedMessageBuilding {$/;"	i
EmbedProvider	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^pub struct EmbedProvider {$/;"	s
EmbedThumbnail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^pub struct EmbedThumbnail {$/;"	s
EmbedTooLarge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    EmbedTooLarge(usize),$/;"	e	enum:Error
EmbedVideo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^pub struct EmbedVideo {$/;"	s
EmmbeddedApplication	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    EmmbeddedApplication = 2,$/;"	e	enum:InviteTargetType
Emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Emoji(EmojiAction),$/;"	e	enum:Action
Emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^impl Emoji {$/;"	c
Emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^impl fmt::Display for Emoji {$/;"	c
Emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^pub struct Emoji {$/;"	s
Emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    Emoji(EmojiId, bool),$/;"	e	enum:Mention
Emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^impl ArgumentConvert for Emoji {$/;"	c
EmojiAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum EmojiAction {$/;"	g
EmojiId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^impl From<Emoji> for EmojiId {$/;"	c
EmojiId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^impl<'a> From<&'a Emoji> for EmojiId {$/;"	c
EmojiId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct EmojiId(#[serde(with = "snowflake")] pub u64);$/;"	s
EmojiIdentifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^impl EmojiIdentifier {$/;"	c
EmojiIdentifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^impl FromStr for EmojiIdentifier {$/;"	c
EmojiIdentifier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^pub struct EmojiIdentifier {$/;"	s
EmojiIdentifierParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^impl StdError for EmojiIdentifierParseError {}$/;"	c
EmojiIdentifierParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^impl fmt::Display for EmojiIdentifierParseError {$/;"	c
EmojiIdentifierParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^pub struct EmojiIdentifierParseError {$/;"	s
EmojiParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^impl fmt::Display for EmojiParseError {$/;"	c
EmojiParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^impl std::error::Error for EmojiParseError {}$/;"	c
EmojiParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^pub enum EmojiParseError {$/;"	g
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^impl AsyncBufRead for Empty {$/;"	c
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^impl AsyncRead for Empty {$/;"	c
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^impl fmt::Debug for Empty {$/;"	c
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Empty,$/;"	e	enum:error::TryRecvError
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    Empty,$/;"	e	enum:TryRecvError
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    Empty,$/;"	e	enum:TryPopResult
Empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^        Empty,$/;"	e	enum:error::TryRecvError
EnableEmoticons	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    EnableEmoticons {$/;"	e	enum:Change
EnableEmoticons	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    EnableEmoticons,$/;"	e	enum:Key
Enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Enabled {$/;"	e	enum:Change
Enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Enabled,$/;"	e	enum:Key
EnterGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^pub struct EnterGuard<'a> {$/;"	s
EntityType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    EntityType {$/;"	e	enum:Change
EntityType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    EntityType,$/;"	e	enum:Key
EntityType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^pub enum EntityType {$/;"	g
Entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    struct Entry {$/;"	s	module:tests
Entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    unsafe impl<'a> Link for &'a Entry {$/;"	c	module:tests
Entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) trait Entry: Default {$/;"	i
EntryInOneOfTheLists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^impl<'a, T> EntryInOneOfTheLists<'a, T> {$/;"	c
EntryInOneOfTheLists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^pub(crate) struct EntryInOneOfTheLists<'a, T> {$/;"	s
EntryList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(super) type EntryList = crate::util::linked_list::LinkedList<TimerShared, TimerShared>;$/;"	t
Eos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Eos,$/;"	e	enum:Error
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    type Err = F::Err;$/;"	t	implementation:F
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    type Err;$/;"	t	interface:FromStrAndCache
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    type Err = ChannelParseError;$/;"	t	implementation:Channel
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    type Err = ReactionConversionError;$/;"	t	implementation:ReactionType
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    type Err = RoleParseError;$/;"	t	implementation:Role
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    type Err = MentionParseError;$/;"	t	implementation:Mention
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    type Err = EmojiIdentifierParseError;$/;"	t	implementation:EmojiIdentifier
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^    type Err = ParseError;$/;"	t	implementation:Timestamp
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/_template.rs	/^    type Err = PLACEHOLDERParseError;$/;"	t	implementation:PLACEHOLDER
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    type Err = ChannelCategoryParseError;$/;"	t	implementation:ChannelCategory
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    type Err = ChannelParseError;$/;"	t	implementation:Channel
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    type Err = GuildChannelParseError;$/;"	t	implementation:GuildChannel
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^    type Err = EmojiParseError;$/;"	t	implementation:Emoji
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/guild.rs	/^    type Err = GuildParseError;$/;"	t	implementation:Guild
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^    type Err = MemberParseError;$/;"	t	implementation:Member
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^    type Err = MessageParseError;$/;"	t	implementation:Message
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^    type Err = <T as std::str::FromStr>::Err;$/;"	t	implementation:T
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^    type Err;$/;"	t	interface:ArgumentConvert
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^    type Err = RoleParseError;$/;"	t	implementation:Role
Err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^    type Err = UserParseError;$/;"	t	implementation:User
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/error.rs	/^impl StdError for Error {}$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/error.rs	/^pub enum Error {$/;"	g
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/error.rs	/^impl StdError for Error {}$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/error.rs	/^pub enum Error {$/;"	g
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<FormatError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<GatewayError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<HttpError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<InvalidHeaderValue> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<IoError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<JsonError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<ModelError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<ReqwestError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<TungsteniteError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl From<simd_json::Error> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^pub enum Error {$/;"	g
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl<E: fmt::Debug + fmt::Display> StdError for Error<E> {}$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl<E: fmt::Display> fmt::Display for Error<E> {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl<E> From<E> for Error<E> {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^pub enum Error<E> {$/;"	g
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^impl StdError for Error {}$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^pub enum Error {$/;"	g
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^impl Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^impl From<ErrorResponse> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^impl From<InvalidHeaderValue> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^impl From<ReqwestError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^impl From<UrlError> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^pub enum Error {$/;"	g
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    type Error = ReactionConversionError;$/;"	t	implementation:ReactionType
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^impl Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^impl StdError for Error {}$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^pub enum Error {$/;"	g
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    type Error = Vec<T>;$/;"	t	implementation:Option
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    type Error = io::Error;$/;"	t	implementation:TcpListener
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    type Error = io::Error;$/;"	t	implementation:TcpStream
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    type Error = io::Error;$/;"	t	implementation:UdpSocket
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    type Error = io::Error;$/;"	t	implementation:UnixDatagram
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    type Error = io::Error;$/;"	t	implementation:UnixListener
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    type Error = io::Error;$/;"	t	implementation:UnixStream
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    type Error = io::Error;$/;"	t	implementation:ChildStderr
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    type Error = io::Error;$/;"	t	implementation:ChildStdin
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    type Error = io::Error;$/;"	t	implementation:ChildStdout
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl From<SpawnError> for io::Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl From<JoinError> for io::Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl From<Elapsed> for std::io::Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl From<Kind> for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl error::Error for Error {}$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^pub struct Error(Kind);$/;"	s
ErrorResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^impl ErrorResponse {$/;"	c
ErrorResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^pub struct ErrorResponse {$/;"	s
Event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    Event = 0,$/;"	e	enum:OpCode
Event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl Event {$/;"	c
Event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub enum Event {$/;"	g
Event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^        struct Event {$/;"	s	function:roles::deserialize_event
EventCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^impl Drop for EventCollector {$/;"	c
EventCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^impl EventCollector {$/;"	c
EventCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^impl Stream for EventCollector {$/;"	c
EventCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^pub struct EventCollector {$/;"	s
EventCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^impl EventCollectorBuilder {$/;"	c
EventCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^pub struct EventCollectorBuilder {$/;"	s
EventFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^impl EventFilter {$/;"	c
EventFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^pub struct EventFilter {$/;"	s
EventHandler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^pub trait EventHandler: Send + Sync {$/;"	i
EventId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) type EventId = usize;$/;"	t
EventInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl Default for EventInfo {$/;"	c
EventInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) struct EventInfo {$/;"	s
EventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl EventType {$/;"	c
EventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl From<&Event> for EventType {$/;"	c
EventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl<'de> Deserialize<'de> for EventType {$/;"	c
EventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub enum EventType {$/;"	g
EventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    EventType {$/;"	e	enum:Change
EventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    EventType,$/;"	e	enum:Key
EventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl From<u8> for EventType {$/;"	c
EventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub enum EventType {$/;"	g
EventTypeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^        impl<'de> Visitor<'de> for EventTypeVisitor {$/;"	c	method:EventType::deserialize
EventTypeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^        struct EventTypeVisitor;$/;"	s	method:EventType::deserialize
Everyone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    Everyone,$/;"	e	enum:ParseValue
Everyone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    Everyone = 1,$/;"	e	enum:ConnectionVisibility
ExceededLimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    ExceededLimit(String, u32),$/;"	e	enum:Error
ExecuteWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^impl<'a> Default for ExecuteWebhook<'a> {$/;"	c
ExecuteWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^impl<'a> ExecuteWebhook<'a> {$/;"	c
ExecuteWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^pub struct ExecuteWebhook<'a>($/;"	s
ExecuteWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    ExecuteWebhook {$/;"	e	enum:RouteInfo
ExemptChannels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExemptChannels {$/;"	e	enum:Change
ExemptChannels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExemptChannels,$/;"	e	enum:Key
ExemptRoles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExemptRoles {$/;"	e	enum:Change
ExemptRoles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExemptRoles,$/;"	e	enum:Key
ExpectedHello	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    ExpectedHello,$/;"	e	enum:Error
Expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^pub(crate) struct Expiration {$/;"	s
ExpireBehavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExpireBehavior {$/;"	e	enum:Change
ExpireBehavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExpireBehavior,$/;"	e	enum:Key
ExpireGracePeriod	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExpireGracePeriod {$/;"	e	enum:Change
ExpireGracePeriod	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExpireGracePeriod,$/;"	e	enum:Key
Explicit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Explicit = 1,$/;"	e	enum:NsfwLevel
ExplicitContentFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExplicitContentFilter {$/;"	e	enum:Change
ExplicitContentFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ExplicitContentFilter,$/;"	e	enum:Key
ExplicitContentFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub enum ExplicitContentFilter {$/;"	g
External	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    External = 3,$/;"	e	enum:ScheduledEventType
F	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^impl<F: FromStr> FromStrAndCache for F {$/;"	c
F	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/mod.rs	/^impl<'a, F> Framework for &'a mut F$/;"	c
Failed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Failed,$/;"	e	enum:TransitionToRunning
FailedDelay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    FailedDelay,$/;"	e	enum:RateLimitAction
FailedToRetrieveGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^    FailedToRetrieveGuild,$/;"	e	enum:EmojiParseError
FastRand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^impl FastRand {$/;"	c
FastRand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^pub(crate) struct FastRand {$/;"	s
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^        enum Field {$/;"	g	method:ReactionType::deserialize
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^        enum Field {$/;"	g	method:GuildMembersChunkEvent::deserialize
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^        enum Field {$/;"	g	method:ChangeVisitor::visit_map
Field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^        enum Field {$/;"	g	method:Action::deserialize
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    File { file: &'a File, filename: String },$/;"	e	enum:AttachmentType
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl AsyncRead for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl AsyncSeek for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl AsyncWrite for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl From<StdFile> for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl fmt::Debug for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl std::os::unix::io::AsFd for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl std::os::unix::io::AsRawFd for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl std::os::unix::io::FromRawFd for File {$/;"	c
File	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^pub struct File {$/;"	s
FillBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/fill_buf.rs	/^impl<'a, R: AsyncBufRead + ?Sized + Unpin> Future for FillBuf<'a, R> {$/;"	c
FilterFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^impl fmt::Debug for FilterFn {$/;"	c
FilterFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^struct FilterFn(Arc<dyn Fn(&Arc<Event>) -> bool + 'static + Send + Sync>);$/;"	s
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^impl fmt::Debug for FilterOptions {$/;"	c
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^struct FilterOptions {$/;"	s
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^struct FilterOptions {$/;"	s
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^impl fmt::Debug for FilterOptions {$/;"	c
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^struct FilterOptions {$/;"	s
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^impl fmt::Debug for FilterOptions {$/;"	c
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^struct FilterOptions {$/;"	s
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl Default for FilterOptions {$/;"	c
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl fmt::Debug for FilterOptions {$/;"	c
FilterOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^struct FilterOptions {$/;"	s
Finished	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    Finished(super::Result<T::Output>),$/;"	e	enum:Stage
Flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/flush.rs	/^impl<A> Future for Flush<'_, A>$/;"	c
FollowNewsChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    FollowNewsChannel {$/;"	e	enum:RouteInfo
FollowNewsChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    FollowNewsChannel(u64),$/;"	e	enum:Route
FollowedChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/partial_channel.rs	/^pub struct FollowedChannel {$/;"	s
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    struct Foo {$/;"	s	function:assert_no_stack_overflow
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    impl Default for Foo {$/;"	c	module:test
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    impl Entry for Foo {$/;"	c	module:test
Foo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    struct Foo {$/;"	s	module:test
Format	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Format(FormatError),$/;"	e	enum:Error
FormatType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    FormatType {$/;"	e	enum:Change
FormatType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    FormatType,$/;"	e	enum:Key
Forum	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Forum = 15,$/;"	e	enum:ChannelType
Framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/mod.rs	/^pub trait Framework: Send + Sync {$/;"	i
FromRawHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait FromRawHandle {$/;"	i	module:windows::io
FromRawSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait FromRawSocket {$/;"	i	module:windows::io
FromStrAndCache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^pub trait FromStrAndCache: Sized {$/;"	i
Full	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Full = 2,$/;"	e	enum:VideoQualityMode
Full	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    Full(T),$/;"	e	enum:TrySendError
FusedChild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^enum FusedChild {$/;"	g
FutWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl<F: Future> Future for FutWrapper<F> {$/;"	c	function:test_combination
FutWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl<F> Drop for FutWrapper<F> {$/;"	c	function:test_combination
FutWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    struct FutWrapper<F> {$/;"	s	function:test_combination
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    Future(Fut),$/;"	e	enum:MaybeDone
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^        type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;$/;"	t	interface:sealed::ToSocketAddrsPriv
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = ReadyFuture<Self::Iter>;$/;"	t	implementation:SocketAddr
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = ReadyFuture<Self::Iter>;$/;"	t	implementation:SocketAddrV4
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = ReadyFuture<Self::Iter>;$/;"	t	implementation:SocketAddrV6
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = ReadyFuture<Self::Iter>;$/;"	t	implementation:u16
Future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Future = T::Future;$/;"	t
GLOBALS	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    static GLOBALS: OnceCell<Globals> = OnceCell::new();$/;"	v	function:globals
Gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Gateway(GatewayError),$/;"	e	enum:Error
Gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    Gateway,$/;"	e	enum:Route
Gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct Gateway {$/;"	s
GatewayBot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GatewayBot,$/;"	e	enum:Route
GatewayEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl<'de> Deserialize<'de> for GatewayEvent {$/;"	c
GatewayEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub enum GatewayEvent {$/;"	g
GatewayIntents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^impl GatewayIntents {$/;"	c
GdmJoin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    GdmJoin,$/;"	e	enum:Scope
GenericId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct GenericId(#[serde(with = "snowflake")] pub u64);$/;"	s
Get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    Get,$/;"	e	enum:LightMethod
GetActiveMaintenance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetActiveMaintenance,$/;"	e	enum:RouteInfo
GetAuditLogs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetAuditLogs {$/;"	e	enum:RouteInfo
GetAutoModRule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetAutoModRule {$/;"	e	enum:RouteInfo
GetAutoModRules	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetAutoModRules {$/;"	e	enum:RouteInfo
GetBans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetBans {$/;"	e	enum:RouteInfo
GetBotGateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetBotGateway,$/;"	e	enum:RouteInfo
GetChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetChannel {$/;"	e	enum:RouteInfo
GetChannelArchivedPrivateThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetChannelArchivedPrivateThreads {$/;"	e	enum:RouteInfo
GetChannelArchivedPublicThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetChannelArchivedPublicThreads {$/;"	e	enum:RouteInfo
GetChannelInvites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetChannelInvites {$/;"	e	enum:RouteInfo
GetChannelJoinedPrivateArchivedThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetChannelJoinedPrivateArchivedThreads {$/;"	e	enum:RouteInfo
GetChannelThreadMembers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetChannelThreadMembers {$/;"	e	enum:RouteInfo
GetChannelWebhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetChannelWebhooks {$/;"	e	enum:RouteInfo
GetChannels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetChannels {$/;"	e	enum:RouteInfo
GetCurrentApplicationInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetCurrentApplicationInfo,$/;"	e	enum:RouteInfo
GetCurrentUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetCurrentUser,$/;"	e	enum:RouteInfo
GetEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetEmoji {$/;"	e	enum:RouteInfo
GetEmojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetEmojis {$/;"	e	enum:RouteInfo
GetFollowupMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetFollowupMessage {$/;"	e	enum:RouteInfo
GetGateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGateway,$/;"	e	enum:RouteInfo
GetGlobalApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGlobalApplicationCommand {$/;"	e	enum:RouteInfo
GetGlobalApplicationCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGlobalApplicationCommands {$/;"	e	enum:RouteInfo
GetGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuild {$/;"	e	enum:RouteInfo
GetGuildActiveThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildActiveThreads {$/;"	e	enum:RouteInfo
GetGuildApplicationCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildApplicationCommand {$/;"	e	enum:RouteInfo
GetGuildApplicationCommandPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildApplicationCommandPermissions {$/;"	e	enum:RouteInfo
GetGuildApplicationCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildApplicationCommands {$/;"	e	enum:RouteInfo
GetGuildApplicationCommandsPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildApplicationCommandsPermissions {$/;"	e	enum:RouteInfo
GetGuildIntegrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildIntegrations {$/;"	e	enum:RouteInfo
GetGuildInvites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildInvites {$/;"	e	enum:RouteInfo
GetGuildMembers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    GetGuildMembers = 8,$/;"	e	enum:OpCode
GetGuildMembers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildMembers {$/;"	e	enum:RouteInfo
GetGuildPreview	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildPreview {$/;"	e	enum:RouteInfo
GetGuildPruneCount	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildPruneCount {$/;"	e	enum:RouteInfo
GetGuildPruneCountRequest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^        struct GetGuildPruneCountRequest {$/;"	s	method:Http::get_guild_prune_count
GetGuildRegions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildRegions {$/;"	e	enum:RouteInfo
GetGuildRoles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildRoles {$/;"	e	enum:RouteInfo
GetGuildSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildSticker {$/;"	e	enum:RouteInfo
GetGuildStickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildStickers {$/;"	e	enum:RouteInfo
GetGuildVanityUrl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildVanityUrl {$/;"	e	enum:RouteInfo
GetGuildWebhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildWebhooks {$/;"	e	enum:RouteInfo
GetGuildWelcomeScreen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildWelcomeScreen {$/;"	e	enum:RouteInfo
GetGuildWidget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildWidget {$/;"	e	enum:RouteInfo
GetGuildWithCounts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuildWithCounts {$/;"	e	enum:RouteInfo
GetGuilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetGuilds {$/;"	e	enum:RouteInfo
GetInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetInvite {$/;"	e	enum:RouteInfo
GetMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetMember {$/;"	e	enum:RouteInfo
GetMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetMessage {$/;"	e	enum:RouteInfo
GetMessages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^impl GetMessages {$/;"	c
GetMessages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^pub struct GetMessages(pub HashMap<&'static str, u64>);$/;"	s
GetMessages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetMessages {$/;"	e	enum:RouteInfo
GetOriginalInteractionResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetOriginalInteractionResponse {$/;"	e	enum:RouteInfo
GetPins	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetPins {$/;"	e	enum:RouteInfo
GetReactionUsers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetReactionUsers {$/;"	e	enum:RouteInfo
GetScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetScheduledEvent {$/;"	e	enum:RouteInfo
GetScheduledEventUsers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetScheduledEventUsers {$/;"	e	enum:RouteInfo
GetScheduledEvents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetScheduledEvents {$/;"	e	enum:RouteInfo
GetStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetStageInstance {$/;"	e	enum:RouteInfo
GetSticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetSticker {$/;"	e	enum:RouteInfo
GetStickerPacks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetStickerPacks,$/;"	e	enum:RouteInfo
GetUnresolvedIncidents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetUnresolvedIncidents,$/;"	e	enum:RouteInfo
GetUpcomingMaintenances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetUpcomingMaintenances,$/;"	e	enum:RouteInfo
GetUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetUser {$/;"	e	enum:RouteInfo
GetUserConnections	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetUserConnections,$/;"	e	enum:RouteInfo
GetUserDmChannels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetUserDmChannels,$/;"	e	enum:RouteInfo
GetVoiceRegions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetVoiceRegions,$/;"	e	enum:RouteInfo
GetWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetWebhook {$/;"	e	enum:RouteInfo
GetWebhookMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetWebhookMessage {$/;"	e	enum:RouteInfo
GetWebhookWithToken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GetWebhookWithToken {$/;"	e	enum:RouteInfo
Global	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Global(TicketCounter),$/;"	e	enum:Bucket
Global	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Global,$/;"	e	enum:LimitedFor
GlobalOrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl GlobalOrphanQueue {$/;"	c
GlobalOrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl OrphanQueue<StdChild> for GlobalOrphanQueue {$/;"	c
GlobalOrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl fmt::Debug for GlobalOrphanQueue {$/;"	c
GlobalOrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) struct GlobalOrphanQueue;$/;"	s
Globals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl Globals {$/;"	c
Globals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl ops::Deref for Globals {$/;"	c
Globals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) struct Globals {$/;"	s
Gone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    Gone,$/;"	e	enum:MaybeDone
Green	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Green,$/;"	e	enum:DefaultAvatar
Grey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Grey,$/;"	e	enum:DefaultAvatar
GroupCallCreation	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GroupCallCreation = 3,$/;"	e	enum:MessageType
GroupCommandsPair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub struct GroupCommandsPair {$/;"	s
GroupIconUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GroupIconUpdate = 5,$/;"	e	enum:MessageType
GroupMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^impl GroupMap {$/;"	c
GroupMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^impl ParseMap for GroupMap {$/;"	c
GroupMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^pub struct GroupMap {$/;"	s
GroupNameUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GroupNameUpdate = 4,$/;"	e	enum:MessageType
GroupOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^impl CommonOptions for &GroupOptions {$/;"	c
GroupOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub struct GroupOptions {$/;"	s
GroupRecipientAddition	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GroupRecipientAddition = 1,$/;"	e	enum:MessageType
GroupRecipientRemoval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GroupRecipientRemoval = 2,$/;"	e	enum:MessageType
GroupedCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    GroupedCommands { help_description: String, groups: Vec<GroupCommandsPair> },$/;"	e	enum:CustomisedHelpData
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> Drop for Guard<'_, T> {$/;"	c
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> Guard<'_, T> {$/;"	c
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^struct Guard<'a, T> {$/;"	s
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^        impl<'a, T: Future, S: Schedule> Drop for Guard<'a, T, S> {$/;"	c	function:poll_future
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^        struct Guard<'a, T: Future, S: Schedule> {$/;"	s	function:poll_future
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^        impl<'a, T: 'static> Drop for Guard<'a, T> {$/;"	c	method:LocalKey::scope_inner
Guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^        struct Guard<'a, T: 'static> {$/;"	s	method:LocalKey::scope_inner
GuardedWaitList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^type GuardedWaitList = GuardedLinkedList<Waiter, <Waiter as linked_list::Link>::Target>;$/;"	t
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Guild(TicketCounter),$/;"	e	enum:Bucket
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    Guild,$/;"	e	enum:LimitedFor
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    Guild,$/;"	e	enum:OnlyIn
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Guild(GuildChannel),$/;"	e	enum:Channel
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Guild(PartialGuild),$/;"	e	enum:GuildContainer
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^impl Guild {$/;"	c
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^impl<'de> Deserialize<'de> for Guild {$/;"	c
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub struct Guild {$/;"	s
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    Guild = 2,$/;"	e	enum:StickerType
Guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/guild.rs	/^impl ArgumentConvert for Guild {$/;"	c
GuildBanAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildBanAdd(GuildBanAddEvent),$/;"	e	enum:Event
GuildBanAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildBanAdd,$/;"	e	enum:EventType
GuildBanAddEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildBanAddEvent {$/;"	s
GuildBanRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildBanRemove(GuildBanRemoveEvent),$/;"	e	enum:Event
GuildBanRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildBanRemove,$/;"	e	enum:EventType
GuildBanRemoveEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildBanRemoveEvent {$/;"	s
GuildBanUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildBanUser {$/;"	e	enum:RouteInfo
GuildChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^impl GuildChannel {$/;"	c
GuildChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^impl fmt::Display for GuildChannel {$/;"	c
GuildChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^pub struct GuildChannel {$/;"	s
GuildChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl ArgumentConvert for GuildChannel {$/;"	c
GuildChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl fmt::Display for GuildChannelParseError {$/;"	c
GuildChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^impl std::error::Error for GuildChannelParseError {$/;"	c
GuildChannelParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^pub enum GuildChannelParseError {$/;"	g
GuildContainer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^impl From<GuildId> for GuildContainer {$/;"	c
GuildContainer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^impl From<PartialGuild> for GuildContainer {$/;"	c
GuildContainer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^impl From<u64> for GuildContainer {$/;"	c
GuildContainer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub enum GuildContainer {$/;"	g
GuildCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildCreate(GuildCreateEvent),$/;"	e	enum:Event
GuildCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildCreate,$/;"	e	enum:EventType
GuildCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildCreateEvent {$/;"	c
GuildCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildCreateEvent {$/;"	s
GuildDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildDelete(GuildDeleteEvent),$/;"	e	enum:Event
GuildDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildDelete,$/;"	e	enum:EventType
GuildDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildDeleteEvent {$/;"	c
GuildDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildDeleteEvent {$/;"	s
GuildDiscoveryDisqualified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GuildDiscoveryDisqualified = 14,$/;"	e	enum:MessageType
GuildDiscoveryGracePeriodFinalWarning	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GuildDiscoveryGracePeriodFinalWarning = 17,$/;"	e	enum:MessageType
GuildDiscoveryGracePeriodInitialWarning	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GuildDiscoveryGracePeriodInitialWarning = 16,$/;"	e	enum:MessageType
GuildDiscoveryRequalified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GuildDiscoveryRequalified = 15,$/;"	e	enum:MessageType
GuildEmojisUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildEmojisUpdate(GuildEmojisUpdateEvent),$/;"	e	enum:Event
GuildEmojisUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildEmojisUpdate,$/;"	e	enum:EventType
GuildEmojisUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildEmojisUpdateEvent {$/;"	c
GuildEmojisUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildEmojisUpdateEvent {$/;"	s
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            GuildId,$/;"	e	enum:GuildMembersChunkEvent::deserialize::Field
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    GuildId {$/;"	e	enum:Change
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    GuildId,$/;"	e	enum:Key
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl From<Guild> for GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl From<GuildInfo> for GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl From<InviteGuild> for GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl From<PartialGuild> for GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl<'a> From<&'a Guild> for GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl<'a> From<&'a GuildInfo> for GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl<'a> From<&'a InviteGuild> for GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl<'a> From<&'a PartialGuild> for GuildId {$/;"	c
GuildId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct GuildId(#[serde(with = "snowflake")] pub u64);$/;"	s
GuildInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^impl GuildInfo {$/;"	c
GuildInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub struct GuildInfo {$/;"	s
GuildIntegrationsUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildIntegrationsUpdate(GuildIntegrationsUpdateEvent),$/;"	e	enum:Event
GuildIntegrationsUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildIntegrationsUpdate,$/;"	e	enum:EventType
GuildIntegrationsUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildIntegrationsUpdateEvent {$/;"	s
GuildInviteReminder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    GuildInviteReminder = 22,$/;"	e	enum:MessageType
GuildMemberAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildMemberAdd(GuildMemberAddEvent),$/;"	e	enum:Event
GuildMemberAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildMemberAdd,$/;"	e	enum:EventType
GuildMemberAddEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildMemberAddEvent {$/;"	c
GuildMemberAddEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildMemberAddEvent {$/;"	s
GuildMemberRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildMemberRemove(GuildMemberRemoveEvent),$/;"	e	enum:Event
GuildMemberRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildMemberRemove,$/;"	e	enum:EventType
GuildMemberRemoveEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildMemberRemoveEvent {$/;"	c
GuildMemberRemoveEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildMemberRemoveEvent {$/;"	s
GuildMemberUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildMemberUpdate(GuildMemberUpdateEvent),$/;"	e	enum:Event
GuildMemberUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildMemberUpdate,$/;"	e	enum:EventType
GuildMemberUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildMemberUpdateEvent {$/;"	c
GuildMemberUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildMemberUpdateEvent {$/;"	s
GuildMembersChunk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildMembersChunk(GuildMembersChunkEvent),$/;"	e	enum:Event
GuildMembersChunk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildMembersChunk,$/;"	e	enum:EventType
GuildMembersChunkEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildMembersChunkEvent {$/;"	c
GuildMembersChunkEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl<'de> Deserialize<'de> for GuildMembersChunkEvent {$/;"	c
GuildMembersChunkEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildMembersChunkEvent {$/;"	s
GuildMembersChunkVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^        impl<'de> Visitor<'de> for GuildMembersChunkVisitor {$/;"	c	method:GuildMembersChunkEvent::deserialize
GuildMembersChunkVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^        struct GuildMembersChunkVisitor;$/;"	s	method:GuildMembersChunkEvent::deserialize
GuildNotFound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    GuildNotFound,$/;"	e	enum:Error
GuildNotInCache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^    GuildNotInCache,$/;"	e	enum:MemberParseError
GuildPagination	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub enum GuildPagination {$/;"	g
GuildParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/guild.rs	/^impl fmt::Display for GuildParseError {$/;"	c
GuildParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/guild.rs	/^impl std::error::Error for GuildParseError {}$/;"	c
GuildParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/guild.rs	/^pub enum GuildParseError {$/;"	g
GuildPreview	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^pub struct GuildPreview {$/;"	s
GuildPrune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub struct GuildPrune {$/;"	s
GuildRoleCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildRoleCreate(GuildRoleCreateEvent),$/;"	e	enum:Event
GuildRoleCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildRoleCreate,$/;"	e	enum:EventType
GuildRoleCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildRoleCreateEvent {$/;"	c
GuildRoleCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl<'de> Deserialize<'de> for GuildRoleCreateEvent {$/;"	c
GuildRoleCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildRoleCreateEvent {$/;"	s
GuildRoleDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildRoleDelete(GuildRoleDeleteEvent),$/;"	e	enum:Event
GuildRoleDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildRoleDelete,$/;"	e	enum:EventType
GuildRoleDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildRoleDeleteEvent {$/;"	c
GuildRoleDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildRoleDeleteEvent {$/;"	s
GuildRoleUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildRoleUpdate(GuildRoleUpdateEvent),$/;"	e	enum:Event
GuildRoleUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildRoleUpdate,$/;"	e	enum:EventType
GuildRoleUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildRoleUpdateEvent {$/;"	c
GuildRoleUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl<'de> Deserialize<'de> for GuildRoleUpdateEvent {$/;"	c
GuildRoleUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildRoleUpdateEvent {$/;"	s
GuildScheduledEventCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventCreate(GuildScheduledEventCreateEvent),$/;"	e	enum:Event
GuildScheduledEventCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventCreate,$/;"	e	enum:EventType
GuildScheduledEventCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildScheduledEventCreateEvent {$/;"	s
GuildScheduledEventDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventDelete(GuildScheduledEventDeleteEvent),$/;"	e	enum:Event
GuildScheduledEventDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventDelete,$/;"	e	enum:EventType
GuildScheduledEventDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildScheduledEventDeleteEvent {$/;"	s
GuildScheduledEventUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventUpdate(GuildScheduledEventUpdateEvent),$/;"	e	enum:Event
GuildScheduledEventUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventUpdate,$/;"	e	enum:EventType
GuildScheduledEventUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildScheduledEventUpdateEvent {$/;"	s
GuildScheduledEventUserAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventUserAdd(GuildScheduledEventUserAddEvent),$/;"	e	enum:Event
GuildScheduledEventUserAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventUserAdd,$/;"	e	enum:EventType
GuildScheduledEventUserAddEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildScheduledEventUserAddEvent {$/;"	s
GuildScheduledEventUserRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventUserRemove(GuildScheduledEventUserRemoveEvent),$/;"	e	enum:Event
GuildScheduledEventUserRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildScheduledEventUserRemove,$/;"	e	enum:EventType
GuildScheduledEventUserRemoveEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildScheduledEventUserRemoveEvent {$/;"	s
GuildStickersUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildStickersUpdate(GuildStickersUpdateEvent),$/;"	e	enum:Event
GuildStickersUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildStickersUpdate,$/;"	e	enum:EventType
GuildStickersUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildStickersUpdateEvent {$/;"	c
GuildStickersUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildStickersUpdateEvent {$/;"	s
GuildUnavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildUnavailable(GuildUnavailableEvent),$/;"	e	enum:Event
GuildUnavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildUnavailable,$/;"	e	enum:EventType
GuildUnavailableEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildUnavailableEvent {$/;"	c
GuildUnavailableEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildUnavailableEvent {$/;"	s
GuildUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildUpdate(GuildUpdateEvent),$/;"	e	enum:Event
GuildUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    GuildUpdate,$/;"	e	enum:EventType
GuildUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    GuildUpdate,$/;"	e	enum:Action
GuildUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for GuildUpdateEvent {$/;"	c
GuildUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct GuildUpdateEvent {$/;"	s
GuildVanityUrl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^        struct GuildVanityUrl {$/;"	s	method:Http::get_guild_vanity_url
GuildWelcomeChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^impl Serialize for GuildWelcomeChannel {$/;"	c
GuildWelcomeChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^impl<'de> Deserialize<'de> for GuildWelcomeChannel {$/;"	c
GuildWelcomeChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^pub struct GuildWelcomeChannel {$/;"	s
GuildWelcomeChannelEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^pub enum GuildWelcomeChannelEmoji {$/;"	g
GuildWelcomeScreen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^pub struct GuildWelcomeScreen {$/;"	s
GuildWidget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub struct GuildWidget {$/;"	s
GuildWidgetStyle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl fmt::Display for GuildWidgetStyle {$/;"	c
GuildWidgetStyle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^pub enum GuildWidgetStyle {$/;"	g
Guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    Guilds,$/;"	e	enum:Route
Guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    Guilds,$/;"	e	enum:Scope
GuildsId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsId(u64),$/;"	e	enum:Route
GuildsIdAuditLogs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdAuditLogs(u64),$/;"	e	enum:Route
GuildsIdAutoModRules	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdAutoModRules(u64),$/;"	e	enum:Route
GuildsIdAutoModRulesId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdAutoModRulesId(u64),$/;"	e	enum:Route
GuildsIdBans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdBans(u64),$/;"	e	enum:Route
GuildsIdBansUserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdBansUserId(u64),$/;"	e	enum:Route
GuildsIdChannels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdChannels(u64),$/;"	e	enum:Route
GuildsIdEmojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdEmojis(u64),$/;"	e	enum:Route
GuildsIdEmojisId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdEmojisId(u64),$/;"	e	enum:Route
GuildsIdIntegrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdIntegrations(u64),$/;"	e	enum:Route
GuildsIdIntegrationsId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdIntegrationsId(u64),$/;"	e	enum:Route
GuildsIdIntegrationsIdSync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdIntegrationsIdSync(u64),$/;"	e	enum:Route
GuildsIdInvites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdInvites(u64),$/;"	e	enum:Route
GuildsIdMembers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdMembers(u64),$/;"	e	enum:Route
GuildsIdMembersId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdMembersId(u64),$/;"	e	enum:Route
GuildsIdMembersIdRolesId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdMembersIdRolesId(u64),$/;"	e	enum:Route
GuildsIdMembersMe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdMembersMe(u64),$/;"	e	enum:Route
GuildsIdMembersMeNick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdMembersMeNick(u64),$/;"	e	enum:Route
GuildsIdMembersSearch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdMembersSearch(u64),$/;"	e	enum:Route
GuildsIdPreview	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdPreview(u64),$/;"	e	enum:Route
GuildsIdPrune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdPrune(u64),$/;"	e	enum:Route
GuildsIdRegions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdRegions(u64),$/;"	e	enum:Route
GuildsIdRoles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdRoles(u64),$/;"	e	enum:Route
GuildsIdRolesId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdRolesId(u64),$/;"	e	enum:Route
GuildsIdScheduledEvents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdScheduledEvents(u64),$/;"	e	enum:Route
GuildsIdScheduledEventsId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdScheduledEventsId(u64),$/;"	e	enum:Route
GuildsIdScheduledEventsIdUsers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdScheduledEventsIdUsers(u64),$/;"	e	enum:Route
GuildsIdStickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdStickers(u64),$/;"	e	enum:Route
GuildsIdStickersId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdStickersId(u64),$/;"	e	enum:Route
GuildsIdThreadsActive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdThreadsActive,$/;"	e	enum:Route
GuildsIdVanityUrl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdVanityUrl(u64),$/;"	e	enum:Route
GuildsIdVoiceStates	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdVoiceStates(u64),$/;"	e	enum:Route
GuildsIdVoiceStatesMe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdVoiceStatesMe(u64),$/;"	e	enum:Route
GuildsIdWebhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdWebhooks(u64),$/;"	e	enum:Route
GuildsIdWelcomeScreen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdWelcomeScreen(u64),$/;"	e	enum:Route
GuildsIdWidget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    GuildsIdWidget(u64),$/;"	e	enum:Route
GuildsJoin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    GuildsJoin,$/;"	e	enum:Scope
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^pub struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl fmt::Debug for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl Wake for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^impl fmt::Debug for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^pub(crate) enum Handle {$/;"	g
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^impl fmt::Debug for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    type Handle = Task<S>;$/;"	t	implementation:Task
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    type Handle = TimerHandle;$/;"	t	implementation:TimerShared
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^impl fmt::Debug for Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^pub(crate) struct Handle {$/;"	s
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^impl Handle {$/;"	c
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    type Handle = NonNull<Waiter>;$/;"	t	implementation:Waiter
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    type Handle = NonNull<Waiter>;$/;"	t	implementation:Waiter
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    type Handle = NonNull<Waiter>;$/;"	t	implementation:Waiter
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    type Handle = Arc<ListEntry<T>>;$/;"	t	implementation:ListEntry
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        type Handle = Pin<&'a Entry>;$/;"	t	implementation:tests::Entry
Handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    type Handle;$/;"	t	interface:Link
Handler	/home/trey/code/sqlx-crud/examples/serenity/src/main.rs	/^impl EventHandler for Handler {$/;"	c
Handler	/home/trey/code/sqlx-crud/examples/serenity/src/main.rs	/^struct Handler {$/;"	s
Handshake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Handshake,$/;"	e	enum:ConnectionStage
HarmfulLink	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    HarmfulLink,$/;"	e	enum:Trigger
HarmfulLink	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    HarmfulLink,$/;"	e	enum:TriggerType
Harness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^impl<T, S> Harness<T, S>$/;"	c
Harness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^pub(super) struct Harness<T: Future, S: 'static> {$/;"	s
Header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl Header {$/;"	c
Header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(crate) struct Header {$/;"	s
Header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^unsafe impl Send for Header {}$/;"	c
Header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^unsafe impl Sync for Header {}$/;"	c
Heartbeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    Heartbeat = 1,$/;"	e	enum:OpCode
Heartbeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Heartbeat,$/;"	e	enum:ShardAction
Heartbeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Heartbeat(u64),$/;"	e	enum:GatewayEvent
HeartbeatAck	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    HeartbeatAck = 11,$/;"	e	enum:OpCode
HeartbeatAck	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    HeartbeatAck,$/;"	e	enum:GatewayEvent
HeartbeatFailed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    HeartbeatFailed,$/;"	e	enum:Error
Hello	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    Hello = 10,$/;"	e	enum:OpCode
Hello	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Hello(u64),$/;"	e	enum:GatewayEvent
Help	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^    Help(&'static str),$/;"	e	enum:Invoke
HelpBehaviour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub enum HelpBehaviour {$/;"	g
HelpCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^impl PartialEq for HelpCommand {$/;"	c
HelpCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^impl fmt::Debug for HelpCommand {$/;"	c
HelpCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub struct HelpCommand {$/;"	s
HelpCommandFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub type HelpCommandFn = for<'fut> fn($/;"	t
HelpOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub struct HelpOptions {$/;"	s
Helper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^        struct Helper {$/;"	s	method:GuildWelcomeChannel::deserialize
Hide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    Hide,$/;"	e	enum:HelpBehaviour
Hierarchy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    Hierarchy,$/;"	e	enum:Error
High	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    High = 3,$/;"	e	enum:VerificationLevel
Higher	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Higher = 4,$/;"	e	enum:VerificationLevel
Hoist	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Hoist {$/;"	e	enum:Change
Hoist	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Hoist,$/;"	e	enum:Key
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Http(Box<HttpError>),$/;"	e	enum:Error
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^impl AsRef<Http> for Http {$/;"	c
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^impl Http {$/;"	c
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^impl fmt::Debug for Http {$/;"	c
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^pub struct Http {$/;"	s
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl CacheHttp for Http {$/;"	c
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    Http(SerenityError),$/;"	e	enum:ChannelCategoryParseError
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    Http(SerenityError),$/;"	e	enum:ChannelParseError
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    Http(SerenityError),$/;"	e	enum:GuildChannelParseError
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^    Http(SerenityError),$/;"	e	enum:MessageParseError
Http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^    Http(SerenityError),$/;"	e	enum:RoleParseError
HttpBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^impl HttpBuilder {$/;"	c
HttpBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^pub struct HttpBuilder {$/;"	s
HttpNotAvailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^    HttpNotAvailable,$/;"	e	enum:MessageParseError
INIT	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    static INIT: Once = Once::new();$/;"	v	function:global_init
IconHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    IconHash {$/;"	e	enum:Change
IconHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    IconHash,$/;"	e	enum:Key
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^            Id,$/;"	e	enum:ReactionType::deserialize::Field
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Id {$/;"	e	enum:Change
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Id,$/;"	e	enum:Key
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Id(GuildId),$/;"	e	enum:GuildContainer
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^impl Id {$/;"	c
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^impl fmt::Display for Id {$/;"	c
Id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^pub struct Id(u64);$/;"	s
Id	/home/trey/code/sqlx-crud/src/traits.rs	/^    type Id: Copy + Send + Sync;$/;"	t	interface:Schema
Identified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    Identified,$/;"	e	enum:IncidentStatus
Identify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    Identify = 2,$/;"	e	enum:OpCode
Identify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Identify,$/;"	e	enum:ShardAction
Identify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    Identify,$/;"	e	enum:Scope
Identifying	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Identifying,$/;"	e	enum:ConnectionStage
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Idle,$/;"	e	enum:OnlineStatus
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Idle(Option<Buf>),$/;"	e	enum:State
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    Idle(Option<(VecDeque<io::Result<DirEntry>>, StdReadDir)>),$/;"	e	enum:State
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    Idle(Option<Buf>),$/;"	e	enum:State
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl Idle {$/;"	c
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^pub(super) struct Idle {$/;"	s
Idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    Idle,$/;"	e	enum:List
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^impl<T> Drop for IdleNotifiedSet<T> {$/;"	c
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^impl<T> IdleNotifiedSet<T> {$/;"	c
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^pub(crate) struct IdleNotifiedSet<T> {$/;"	s
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T: Send> Send for IdleNotifiedSet<T> {}$/;"	c
IdleNotifiedSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T: Sync> Sync for IdleNotifiedSet<T> {}$/;"	c
Image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    Image(Url),$/;"	e	enum:AttachmentType
ImageHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ImageHash {$/;"	e	enum:Change
ImageHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    ImageHash,$/;"	e	enum:Key
Incident	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^pub struct Incident {$/;"	s
IncidentStatus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^pub enum IncidentStatus {$/;"	g
IncidentUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^pub struct IncidentUpdate {$/;"	s
Incoming	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    Incoming = 1,$/;"	e	enum:WebhookType
Init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    Init,$/;"	e	enum:SeekState
Init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    Init,$/;"	e	enum:SeekState
Init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) trait Init {$/;"	i
Init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    Init,$/;"	e	enum:State
InitializingError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    InitializingError(T),$/;"	e	enum:SetError
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^impl<T: 'static> Drop for Inject<T> {$/;"	c
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^impl<T: 'static> Inject<T> {$/;"	c
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^pub(crate) struct Inject<T: 'static> {$/;"	s
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^unsafe impl<T> Send for Inject<T> {}$/;"	c
Inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^unsafe impl<T> Sync for Inject<T> {}$/;"	c
InlineReply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    InlineReply = 19,$/;"	e	enum:MessageType
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^struct Inner<T> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^pub(crate) struct Inner<T: 'static> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^unsafe impl<T> Send for Inner<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^unsafe impl<T> Sync for Inner<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^impl Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^impl fmt::Debug for Inner {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^struct Inner {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T: fmt::Debug> fmt::Debug for Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Drop for Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Inner<T> {$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^struct Inner<T> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^unsafe impl<T: Send> Send for Inner<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^unsafe impl<T: Send> Sync for Inner<T> {}$/;"	c
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^struct Inner<T: ?Sized, U: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^struct Inner<T: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^struct Inner<T: ?Sized, U: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^struct Inner<'a, T: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^struct Inner<'a, T: ?Sized> {$/;"	s
Inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^struct Inner<'a, T: ?Sized> {$/;"	s
InnerState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^struct InnerState {$/;"	s
InputText	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    InputText = 4,$/;"	e	enum:ComponentType
InputText	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    InputText(InputText),$/;"	e	enum:ActionRowComponent
InputText	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub struct InputText {$/;"	s
InputText	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type InputText = component::InputText;$/;"	t	module:message_component
InputTextStyle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub enum InputTextStyle {$/;"	g
InputTextStyle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type InputTextStyle = component::InputTextStyle;$/;"	t	module:message_component
InsertError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^pub(crate) enum InsertError {$/;"	g
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl From<Instant> for std::time::Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl From<std::time::Instant> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl fmt::Debug for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::Add<Duration> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::AddAssign<Duration> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::Sub for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::Sub<Duration> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^impl ops::SubAssign<Duration> for Instant {$/;"	c
Instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^pub struct Instant {$/;"	s
Instrumented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/trace.rs	/^impl<F: Future> InstrumentedFuture for tracing::instrument::Instrumented<F> {$/;"	c
InstrumentedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/trace.rs	/^pub(crate) trait InstrumentedFuture: Future {$/;"	i
Int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Int(u64),$/;"	e	enum:EntityType
Integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Integer = 4,$/;"	e	enum:CommandOptionType
Integer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    Integer(i64),$/;"	e	enum:CommandDataOptionValue
Integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Integration(IntegrationAction),$/;"	e	enum:Action
Integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^pub struct Integration {$/;"	s
IntegrationAccount	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^pub struct IntegrationAccount {$/;"	s
IntegrationAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum IntegrationAction {$/;"	g
IntegrationApplication	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^pub struct IntegrationApplication {$/;"	s
IntegrationCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    IntegrationCreate(IntegrationCreateEvent),$/;"	e	enum:Event
IntegrationCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    IntegrationCreate,$/;"	e	enum:EventType
IntegrationCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct IntegrationCreateEvent {$/;"	s
IntegrationDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    IntegrationDelete(IntegrationDeleteEvent),$/;"	e	enum:Event
IntegrationDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    IntegrationDelete,$/;"	e	enum:EventType
IntegrationDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct IntegrationDeleteEvent {$/;"	s
IntegrationExpireBehaviour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^pub enum IntegrationExpireBehaviour {$/;"	g
IntegrationId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^impl From<Integration> for IntegrationId {$/;"	c
IntegrationId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct IntegrationId(#[serde(with = "snowflake")] pub u64);$/;"	s
IntegrationUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    IntegrationUpdate(IntegrationUpdateEvent),$/;"	e	enum:Event
IntegrationUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    IntegrationUpdate,$/;"	e	enum:EventType
IntegrationUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct IntegrationUpdateEvent {$/;"	s
InterMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^pub enum InterMessage {$/;"	g
Interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^impl Interaction {$/;"	c
Interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^impl Serialize for Interaction {$/;"	c
Interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^impl<'de> Deserialize<'de> for Interaction {$/;"	c
Interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub enum Interaction {$/;"	g
Interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub type Interaction = interaction::Interaction;$/;"	t
InteractionApplicationCommandCallbackDataFlags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub type InteractionApplicationCommandCallbackDataFlags = interaction::MessageFlags;$/;"	t
InteractionCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    InteractionCreate(InteractionCreateEvent),$/;"	e	enum:Event
InteractionCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    InteractionCreate,$/;"	e	enum:EventType
InteractionCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct InteractionCreateEvent {$/;"	s
InteractionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct InteractionId(#[serde(with = "snowflake")] pub u64);$/;"	s
InteractionResponseType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub enum InteractionResponseType {$/;"	g
InteractionResponseType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub type InteractionResponseType = interaction::InteractionResponseType;$/;"	t
InteractionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub enum InteractionType {$/;"	g
InteractionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub type InteractionType = interaction::InteractionType;$/;"	t
InteractionsId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    InteractionsId(u64),$/;"	e	enum:Route
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^impl Interest {$/;"	c
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^impl fmt::Debug for Interest {$/;"	c
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^impl ops::BitOr for Interest {$/;"	c
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^impl ops::BitOrAssign for Interest {$/;"	c
Interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^pub struct Interest(mio::Interest);$/;"	s
InterimMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^pub(crate) struct InterimMember {$/;"	s
InterimRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^pub(crate) struct InterimRole {$/;"	s
InterimTrigger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^struct InterimTrigger<'a> {$/;"	s
InterimTriggerMetadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^struct InterimTriggerMetadata<'a> {$/;"	s
InterimVoiceState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^        struct InterimVoiceState {$/;"	s	method:VoiceState::deserialize
Internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    pub struct Internal;$/;"	s	module:sealed
InternalStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) trait InternalStream {$/;"	i
Interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^impl Interval {$/;"	c
Interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^pub struct Interval {$/;"	s
IntoRawSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub trait IntoRawSocket {$/;"	i	module:windows::io
Invalid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    Invalid = 3,$/;"	e	enum:Kind
InvalidAuthentication	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    InvalidAuthentication,$/;"	e	enum:Error
InvalidChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    InvalidChannel,$/;"	e	enum:ChannelParseError
InvalidChannelType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    InvalidChannelType,$/;"	e	enum:Error
InvalidEventIdFilters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/error.rs	/^    InvalidEventIdFilters,$/;"	e	enum:Error
InvalidGatewayIntents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^    InvalidGatewayIntents,$/;"	e	enum:ShardManagerError
InvalidGatewayIntents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    InvalidGatewayIntents,$/;"	e	enum:Error
InvalidHandshake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    InvalidHandshake,$/;"	e	enum:Error
InvalidHeader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    InvalidHeader(InvalidHeaderValue),$/;"	e	enum:Error
InvalidMention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    InvalidMention,$/;"	e	enum:MentionParseError
InvalidOpCode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    InvalidOpCode,$/;"	e	enum:Error
InvalidPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    InvalidPermissions(Permissions),$/;"	e	enum:Error
InvalidPort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    InvalidPort,$/;"	e	enum:Error
InvalidRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    InvalidRole,$/;"	e	enum:RoleParseError
InvalidScheme	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    InvalidScheme,$/;"	e	enum:Error
InvalidSession	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    InvalidSession = 9,$/;"	e	enum:OpCode
InvalidShardData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    InvalidShardData,$/;"	e	enum:Error
InvalidTimestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^impl fmt::Display for InvalidTimestamp {$/;"	c
InvalidTimestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^impl std::error::Error for InvalidTimestamp {}$/;"	c
InvalidTimestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^pub struct InvalidTimestamp;$/;"	s
InvalidToken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^    InvalidToken,$/;"	e	enum:ShardManagerError
InvalidToken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/token.rs	/^impl fmt::Display for InvalidToken {$/;"	c
InvalidToken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/token.rs	/^impl std::error::Error for InvalidToken {}$/;"	c
InvalidToken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/token.rs	/^pub struct InvalidToken;$/;"	s
InvalidUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    InvalidUser,$/;"	e	enum:Error
InvalidWebhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    InvalidWebhook,$/;"	e	enum:Error
InvalidateSession	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    InvalidateSession(bool),$/;"	e	enum:GatewayEvent
Investigating	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    Investigating,$/;"	e	enum:IncidentStatus
Invisible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Invisible,$/;"	e	enum:OnlineStatus
Invitable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Invitable {$/;"	e	enum:Change
Invitable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Invitable,$/;"	e	enum:Key
Invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Invite(InviteAction),$/;"	e	enum:Action
Invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^impl Invite {$/;"	c
Invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^pub struct Invite {$/;"	s
InviteAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum InviteAction {$/;"	g
InviteChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^pub struct InviteChannel {$/;"	s
InviteCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    InviteCreate(InviteCreateEvent),$/;"	e	enum:Event
InviteCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    InviteCreate,$/;"	e	enum:EventType
InviteCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct InviteCreateEvent {$/;"	s
InviteDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    InviteDelete(InviteDeleteEvent),$/;"	e	enum:Event
InviteDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    InviteDelete,$/;"	e	enum:EventType
InviteDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct InviteDeleteEvent {$/;"	s
InviteGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^impl InviteGuild {$/;"	c
InviteGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^impl InviteGuild {$/;"	c
InviteGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^pub struct InviteGuild {$/;"	s
InviteStageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^pub struct InviteStageInstance {$/;"	s
InviteTargetType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^pub enum InviteTargetType {$/;"	g
Invited	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    Invited = 1,$/;"	e	enum:MembershipState
InviterId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    InviterId {$/;"	e	enum:Change
InviterId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    InviterId,$/;"	e	enum:Key
InvitesCode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    InvitesCode,$/;"	e	enum:Route
Invoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^pub enum Invoke {$/;"	g
Io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Io(IoError),$/;"	e	enum:Error
IoDispatcher	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^impl IoDispatcher {$/;"	c
IoDispatcher	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^struct IoDispatcher {$/;"	s
IoDriverMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^impl IoDriverMetrics {$/;"	c
IoDriverMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^pub(crate) struct IoDriverMetrics {$/;"	s
Italic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    Italic,$/;"	e	enum:ContentModifier
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    type Item = RefMulti<'a, MessageId, Message, S>;$/;"	t	implementation:MessageIterator
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    type Item = Arc<MessageComponentInteraction>;$/;"	t	implementation:ComponentInteractionCollector
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    type Item = Arc<Event>;$/;"	t	implementation:EventCollector
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    type Item = Arc<Message>;$/;"	t	implementation:MessageCollector
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    type Item = Arc<ModalSubmitInteraction>;$/;"	t	implementation:ModalInteractionCollector
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    type Item = Arc<ReactionAction>;$/;"	t	implementation:ReactionCollector
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    type Item = &'a str;$/;"	t	implementation:RawArguments
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    type Item = Result<T, T::Err>;$/;"	t	implementation:Iter
Item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            type Item = task::Notified<T>;$/;"	t	implementation:Local::push_overflow::BatchTaskIter
ItemMissing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    ItemMissing,$/;"	e	enum:Error
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl<'a, T: FromStr> Iter<'a, T> {$/;"	c
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl<'a, T: FromStr> Iterator for Iter<'a, T> {$/;"	c
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^pub struct Iter<'a, T: FromStr> {$/;"	s
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^        type Iter: Iterator<Item = SocketAddr> + Send + 'static;$/;"	t	interface:sealed::ToSocketAddrsPriv
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = T::Iter;$/;"	t
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::option::IntoIter<SocketAddr>;$/;"	t	implementation:SocketAddr
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::option::IntoIter<SocketAddr>;$/;"	t	implementation:SocketAddrV4
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::option::IntoIter<SocketAddr>;$/;"	t	implementation:SocketAddrV6
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::option::IntoIter<SocketAddr>;$/;"	t	implementation:u16
Iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    type Iter = std::vec::IntoIter<SocketAddr>;$/;"	t	implementation:SocketAddr
JOIN	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    JOIN = 1,$/;"	e	enum:MessageActivityKind
JOIN_MESSAGES	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^pub static JOIN_MESSAGES: &[&str] = &[$/;"	v
JOIN_REQUEST	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    JOIN_REQUEST = 5,$/;"	e	enum:MessageActivityKind
JoinError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl JoinError {$/;"	c
JoinError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl fmt::Debug for JoinError {$/;"	c
JoinError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl fmt::Display for JoinError {$/;"	c
JoinError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^impl std::error::Error for JoinError {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl<T> Future for JoinHandle<T> {$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^pub(super) struct JoinHandle<T> {$/;"	s
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> Drop for JoinHandle<T> {$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> Future for JoinHandle<T> {$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> JoinHandle<T> {$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> RefUnwindSafe for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> Unpin for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> UnwindSafe for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^impl<T> fmt::Debug for JoinHandle<T>$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^unsafe impl<T: Send> Send for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^unsafe impl<T: Send> Sync for JoinHandle<T> {}$/;"	c
JoinHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    JoinHandle,$/;"	e	enum:CombiAbortSource
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T: 'static> JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T> Default for JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T> Drop for JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T> JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^impl<T> fmt::Debug for JoinSet<T> {$/;"	c
JoinSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^pub struct JoinSet<T> {$/;"	s
JoinThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    JoinThread {$/;"	e	enum:RouteInfo
Json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Json(JsonError),$/;"	e	enum:Error
Json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Json(Value),$/;"	e	enum:InterMessage
JsonMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub type JsonMap = serde_json::Map<String, Value>;$/;"	t
JsonMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub type JsonMap = simd_json::owned::Object;$/;"	t
Key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^            Key,$/;"	e	enum:ChangeVisitor::visit_map::Field
Key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^enum Key {$/;"	g
Keyword	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Keyword(Vec<String>),$/;"	e	enum:Trigger
Keyword	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Keyword,$/;"	e	enum:TriggerType
KeywordPreset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    KeywordPreset(Vec<KeywordPresetType>),$/;"	e	enum:Trigger
KeywordPreset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    KeywordPreset,$/;"	e	enum:TriggerType
KeywordPresetType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl From<u8> for KeywordPresetType {$/;"	c
KeywordPresetType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub enum KeywordPresetType {$/;"	g
Kick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Kick = 20,$/;"	e	enum:MemberAction
Kick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    Kick = 1,$/;"	e	enum:IntegrationExpireBehaviour
KickMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    KickMember {$/;"	e	enum:RouteInfo
Kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/kill.rs	/^pub(crate) trait Kill {$/;"	i
Kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^pub(crate) enum Kind {$/;"	g
Kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^pub(crate) enum Kind {$/;"	g
Known	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Known(T),$/;"	e	enum:MaybeUnknown
LISTEN	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    LISTEN = 3,$/;"	e	enum:MessageActivityKind
LackingPermissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    LackingPermissions(Permissions),$/;"	e	enum:DispatchError
LackingRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    LackingRole,$/;"	e	enum:DispatchError
Lagged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Lagged(u64),$/;"	e	enum:error::RecvError
Lagged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        Lagged(u64),$/;"	e	enum:error::TryRecvError
Launch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Launch {$/;"	c
Launch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(crate) struct Launch(Vec<Arc<Worker>>);$/;"	s
LazyArc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^impl<'a, T: Clone> LazyArc<'a, T> {$/;"	c
LazyArc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^impl<'a, T> std::ops::Deref for LazyArc<'a, T> {$/;"	c
LazyArc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^pub(crate) struct LazyArc<'a, T> {$/;"	s
LazyReactionAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl<'a> LazyReactionAction<'a> {$/;"	c
LazyReactionAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^pub(crate) struct LazyReactionAction<'a> {$/;"	s
LeaveGroup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    LeaveGroup {$/;"	e	enum:RouteInfo
LeaveGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    LeaveGuild {$/;"	e	enum:RouteInfo
LeaveThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    LeaveThread {$/;"	e	enum:RouteInfo
Level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^impl Level {$/;"	c
Level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^impl fmt::Debug for Level {$/;"	c
Level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^pub(crate) struct Level {$/;"	s
LightMethod	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl LightMethod {$/;"	c
LightMethod	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub enum LightMethod {$/;"	g
LimitedFor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl Default for LimitedFor {$/;"	c
LimitedFor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub enum LimitedFor {$/;"	g
Lines	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^impl<R> Lines<R>$/;"	c
Link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Link = 5,$/;"	e	enum:ButtonStyle
Link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^pub(crate) unsafe trait Link {$/;"	i
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^type LinkedList<T> =$/;"	t
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<L, T> LinkedList<L, T> {$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<L: Link> Default for LinkedList<L, L::Target> {$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<L: Link> LinkedList<L, L::Target> {$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<L: Link> fmt::Debug for LinkedList<L, L::Target> {$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^pub(crate) struct LinkedList<L, T> {$/;"	s
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^unsafe impl<L: Link> Send for LinkedList<L, L::Target> where L::Target: Send {}$/;"	c
LinkedList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^unsafe impl<L: Link> Sync for LinkedList<L, L::Target> where L::Target: Sync {}$/;"	c
List	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^enum List {$/;"	g
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^impl<T: 'static> Wake for ListEntry<T> {$/;"	c
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^struct ListEntry<T> {$/;"	s
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T> Send for ListEntry<T> {}$/;"	c
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T> Sync for ListEntry<T> {}$/;"	c
ListEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe impl<T> linked_list::Link for ListEntry<T> {$/;"	c
Listening	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    Listening = 2,$/;"	e	enum:ActivityType
Lists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^type Lists<T> = Mutex<ListsInner<T>>;$/;"	t
ListsInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^struct ListsInner<T> {$/;"	s
Local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Drop for Local<T> {$/;"	c
Local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Local<T> {$/;"	c
Local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^pub(crate) struct Local<T: 'static> {$/;"	s
LocalData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^struct LocalData {$/;"	s
LocalEnterGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Drop for LocalEnterGuard {$/;"	c
LocalEnterGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl fmt::Debug for LocalEnterGuard {$/;"	c
LocalEnterGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^pub struct LocalEnterGuard(Option<Rc<Context>>);$/;"	s
LocalKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static> LocalKey<T> {$/;"	c
LocalKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static> fmt::Debug for LocalKey<T> {$/;"	c
LocalKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: Copy + 'static> LocalKey<T> {$/;"	c
LocalKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^pub struct LocalKey<T: 'static> {$/;"	s
LocalNotified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: Schedule> LocalNotified<S> {$/;"	c
LocalNotified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) struct LocalNotified<S: 'static> {$/;"	s
LocalOwnedTasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^impl<S: 'static> LocalOwnedTasks<S> {$/;"	c
LocalOwnedTasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^pub(crate) struct LocalOwnedTasks<S: 'static> {$/;"	s
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Default for LocalSet {$/;"	c
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Drop for LocalSet {$/;"	c
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Future for LocalSet {$/;"	c
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl LocalSet {$/;"	c
LocalSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl fmt::Debug for LocalSet {$/;"	c
LocalState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl LocalState {$/;"	c
LocalState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^struct LocalState {$/;"	s
LocalState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^unsafe impl Send for LocalState {}$/;"	c
Location	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Location {$/;"	e	enum:Change
Location	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Location,$/;"	e	enum:Key
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^impl<T> Deref for LockGuard<'_, T> {$/;"	c
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^impl<T> DerefMut for LockGuard<'_, T> {$/;"	c
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^impl<T> Drop for LockGuard<'_, T> {$/;"	c
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^pub(crate) struct LockGuard<'a, T> {$/;"	s
LockGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^unsafe impl<T: Sync> Sync for LockGuard<'_, T> {}$/;"	c
Locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Locked {$/;"	e	enum:Change
Locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Locked,$/;"	e	enum:Key
Log	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    Log(String),$/;"	e	enum:Reason
LoggingMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    impl LoggingMockWriter {$/;"	c	module:tests
LoggingMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    impl crate::io::AsyncWrite for LoggingMockWriter {$/;"	c	module:tests
LoggingMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    struct LoggingMockWriter {$/;"	s	module:tests
Lottie	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    Lottie = 3,$/;"	e	enum:StickerFormatType
Lottie	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    Lottie = 3,$/;"	e	enum:StickerFormatType
Low	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Low = 1,$/;"	e	enum:VerificationLevel
Maintenance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^pub struct Maintenance {$/;"	s
Malformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^    Malformed,$/;"	e	enum:MessageParseError
Manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    Manager(ShardManagerMessage),$/;"	e	enum:ShardClientMessage
Mandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    Mandatory,$/;"	e	enum:Mandatory
Mandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) enum Mandatory {$/;"	g
Map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^pub enum Map {$/;"	g
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized + fmt::Debug> fmt::Debug for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized + fmt::Display> fmt::Display for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> Deref for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> DerefMut for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> Drop for MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> MappedMutexGuard<'a, T> {$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct MappedMutexGuard<'a, T: ?Sized> {$/;"	s
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<'a, T> Send for MappedMutexGuard<'a, T> where T: ?Sized + Send + 'a {}$/;"	c
MappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<'a, T> Sync for MappedMutexGuard<'a, T> where T: ?Sized + Sync + 'a {}$/;"	c
MappedMutexGuardInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^struct MappedMutexGuardInner<'a, T: ?Sized> {$/;"	s
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<&'a [u8], Vec<u8>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<&'a str, String> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<Option<&'a [u8]>, Option<&'a Vec<u8>>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<Option<&'a [u8]>, Option<Vec<u8>>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<Option<&'a str>, Option<&'a String>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<'a> MatchBorrowExt for MatchBorrow<Option<&'a str>, Option<String>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> MatchBorrow<T, U> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> MatchBorrowExt for &'_ MatchBorrow<T, U> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<&'_ &'_ T, T> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<&'_ T, T> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<Option<&'_ &'_ T>, Option<T>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<Option<&'_ T>, Option<T>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<Option<T>, Option<&'_ &'_ T>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<Option<T>, Option<&'_ T>> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<T, &'_ &'_ T> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T> MatchBorrowExt for MatchBorrow<T, &'_ T> {$/;"	c
MatchBorrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub struct MatchBorrow<T, U>(PhantomData<T>, PhantomData<U>);$/;"	s
MatchBorrowExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub trait MatchBorrowExt: Sized {$/;"	i
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = &'a [u8];$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = &'a str;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = Option<&'a [u8]>;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = Option<&'a str>;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = Option<T>;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = T;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched = U;$/;"	t	implementation:MatchBorrow
Matched	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Matched;$/;"	t	interface:MatchBorrowExt
MaxAge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    MaxAge {$/;"	e	enum:Change
MaxAge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    MaxAge,$/;"	e	enum:Key
MaxUses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    MaxUses {$/;"	e	enum:Change
MaxUses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    MaxUses,$/;"	e	enum:Key
MaybeDone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^impl<Fut: Future + Unpin> Unpin for MaybeDone<Fut> {}$/;"	c
MaybeDone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^impl<Fut: Future> Future for MaybeDone<Fut> {$/;"	c
MaybeDone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^impl<Fut: Future> MaybeDone<Fut> {$/;"	c
MaybeDone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^pub enum MaybeDone<Fut: Future> {$/;"	g
MaybeUnknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^enum MaybeUnknown<T> {$/;"	g
Medium	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Medium = 2,$/;"	e	enum:VerificationLevel
Member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Member(UserId),$/;"	e	enum:PermissionOverwriteType
Member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Member(MemberAction),$/;"	e	enum:Action
Member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^impl From<InterimMember> for Member {$/;"	c
Member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^impl Member {$/;"	c
Member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^impl fmt::Display for Member {$/;"	c
Member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^pub struct Member {$/;"	s
Member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^impl ArgumentConvert for Member {$/;"	c
MemberAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum MemberAction {$/;"	g
MemberDisconnect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    MemberDisconnect = 27,$/;"	e	enum:MemberAction
MemberJoin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    MemberJoin = 7,$/;"	e	enum:MessageType
MemberMove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    MemberMove = 26,$/;"	e	enum:MemberAction
MemberNotFound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    MemberNotFound,$/;"	e	enum:Error
MemberParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^impl fmt::Display for MemberParseError {$/;"	c
MemberParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^impl std::error::Error for MemberParseError {}$/;"	c
MemberParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^pub enum MemberParseError {$/;"	g
Members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            Members,$/;"	e	enum:GuildMembersChunkEvent::deserialize::Field
MembersIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^impl<H: AsRef<Http>> MembersIter<H> {$/;"	c
MembersIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^pub struct MembersIter<H: AsRef<Http>> {$/;"	s
MembershipState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub enum MembershipState {$/;"	g
Mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^impl FromStr for Mention {$/;"	c
Mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^impl fmt::Display for Mention {$/;"	c
Mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^pub enum Mention {$/;"	g
MentionParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^impl StdError for MentionParseError {}$/;"	c
MentionParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^impl fmt::Display for MentionParseError {$/;"	c
MentionParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^pub enum MentionParseError {$/;"	g
Mentionable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Mentionable = 9,$/;"	e	enum:CommandOptionType
Mentionable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Mentionable {$/;"	e	enum:Change
Mentionable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Mentionable,$/;"	e	enum:Key
Mentionable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^pub trait Mentionable {$/;"	i
Mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Mentions = 1,$/;"	e	enum:DefaultMessageNotificationLevel
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    Message(Message),$/;"	e	enum:ShardRunnerMessage
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Message = 3,$/;"	e	enum:CommandType
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    Message(Box<Message>),$/;"	e	enum:ResolvedTarget
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^impl AsRef<MessageId> for Message {$/;"	c
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^impl Message {$/;"	c
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^pub struct Message {$/;"	s
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Message(MessageAction),$/;"	e	enum:Action
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^impl ArgumentConvert for Message {$/;"	c
Message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    Message,$/;"	e	enum:PipeMode
MessageAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum MessageAction {$/;"	g
MessageActivity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^pub struct MessageActivity {$/;"	s
MessageActivityKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^pub enum MessageActivityKind {$/;"	g
MessageAlreadyCrossposted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    MessageAlreadyCrossposted,$/;"	e	enum:Error
MessageApplication	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^pub struct MessageApplication {$/;"	s
MessageBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl EmbedMessageBuilding for MessageBuilder {$/;"	c
MessageBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl MessageBuilder {$/;"	c
MessageBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^impl fmt::Display for MessageBuilder {$/;"	c
MessageBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^pub struct MessageBuilder(pub String);$/;"	s
MessageCache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^type MessageCache = DashMap<ChannelId, DashMap<MessageId, Message>>;$/;"	t
MessageCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^impl Drop for MessageCollector {$/;"	c
MessageCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^impl MessageCollector {$/;"	c
MessageCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^impl Stream for MessageCollector {$/;"	c
MessageCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^pub struct MessageCollector {$/;"	s
MessageCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^impl MessageCollectorBuilder {$/;"	c
MessageCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^pub struct MessageCollectorBuilder {$/;"	s
MessageComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    MessageComponent = 3,$/;"	e	enum:InteractionType
MessageComponent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    MessageComponent(MessageComponentInteraction),$/;"	e	enum:Interaction
MessageComponentInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^impl MessageComponentInteraction {$/;"	c
MessageComponentInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^impl<'de> Deserialize<'de> for MessageComponentInteraction {$/;"	c
MessageComponentInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^pub struct MessageComponentInteraction {$/;"	s
MessageComponentInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type MessageComponentInteraction = message_component::MessageComponentInteraction;$/;"	t	module:message_component
MessageComponentInteractionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^pub struct MessageComponentInteractionData {$/;"	s
MessageComponentInteractionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type MessageComponentInteractionData = message_component::MessageComponentInteractionDat/;"	t	module:message_component
MessageCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    MessageCreate(MessageCreateEvent),$/;"	e	enum:Event
MessageCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    MessageCreate,$/;"	e	enum:EventType
MessageCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for MessageCreateEvent {$/;"	c
MessageCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct MessageCreateEvent {$/;"	s
MessageDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    MessageDelete(MessageDeleteEvent),$/;"	e	enum:Event
MessageDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    MessageDelete,$/;"	e	enum:EventType
MessageDeleteBulk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    MessageDeleteBulk(MessageDeleteBulkEvent),$/;"	e	enum:Event
MessageDeleteBulk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    MessageDeleteBulk,$/;"	e	enum:EventType
MessageDeleteBulkEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct MessageDeleteBulkEvent {$/;"	s
MessageDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct MessageDeleteEvent {$/;"	s
MessageFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^impl MessageFilter {$/;"	c
MessageFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^pub struct MessageFilter {$/;"	s
MessageId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl From<TargetId> for MessageId {$/;"	c
MessageId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^impl From<Message> for MessageId {$/;"	c
MessageId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^impl MessageId {$/;"	c
MessageId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^impl<'a> From<&'a Message> for MessageId {$/;"	c
MessageId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct MessageId(#[serde(with = "snowflake")] pub u64);$/;"	s
MessageInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub struct MessageInteraction {$/;"	s
MessageInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub type MessageInteraction = interaction::MessageInteraction;$/;"	t
MessageIterator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^impl<'a, S: 'a + BuildHasher + Clone> Iterator for MessageIterator<'a, S> {$/;"	c
MessageIterator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^pub struct MessageIterator<'a, S: BuildHasher + Clone>($/;"	s
MessageParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^impl fmt::Display for MessageParseError {$/;"	c
MessageParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^impl std::error::Error for MessageParseError {$/;"	c
MessageParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^pub enum MessageParseError {$/;"	g
MessageReaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^pub struct MessageReaction {$/;"	s
MessageReference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^impl From<&Message> for MessageReference {$/;"	c
MessageReference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^impl From<(ChannelId, MessageId)> for MessageReference {$/;"	c
MessageReference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^pub struct MessageReference {$/;"	s
MessageSend	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    MessageSend,$/;"	e	enum:EventType
MessageTooLong	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    MessageTooLong(usize),$/;"	e	enum:Error
MessageType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^pub enum MessageType {$/;"	g
MessageUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    MessageUpdate(MessageUpdateEvent),$/;"	e	enum:Event
MessageUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    MessageUpdate,$/;"	e	enum:EventType
MessageUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for MessageUpdateEvent {$/;"	c
MessageUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct MessageUpdateEvent {$/;"	s
MessagesIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^impl<H: AsRef<Http>> MessagesIter<H> {$/;"	c
MessagesIter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^pub struct MessagesIter<H: AsRef<Http>> {$/;"	s
MessagesRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    MessagesRead,$/;"	e	enum:Scope
MessagingBot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    MessagingBot,$/;"	e	enum:Error
Metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^            Metadata,$/;"	e	enum:Action::deserialize::Field
Metadata	/home/trey/code/sqlx-crud/src/schema.rs	/^pub struct Metadata<'s, const C: usize> {$/;"	s
MetricsBatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^impl MetricsBatch {$/;"	c
MetricsBatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^pub(crate) struct MetricsBatch {$/;"	s
MetricsBatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^impl MetricsBatch {$/;"	c
MetricsBatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^pub(crate) struct MetricsBatch {}$/;"	s
MfaLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    MfaLevel {$/;"	e	enum:Change
MfaLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    MfaLevel,$/;"	e	enum:Key
MfaLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub enum MfaLevel {$/;"	g
MioSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^impl<T: AioSource> Source for MioSource<T> {$/;"	c
MioSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^struct MioSource<T>(T);$/;"	s
MissedTickBehavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^impl Default for MissedTickBehavior {$/;"	c
MissedTickBehavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^impl MissedTickBehavior {$/;"	c
MissedTickBehavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^pub enum MissedTickBehavior {$/;"	g
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl Future for Mock {$/;"	c	module:test
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl Kill for Mock {$/;"	c	module:test
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    impl Mock {$/;"	c	module:test
Mock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    struct Mock {$/;"	s	module:test
MockFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl Read for &'_ MockFile {$/;"	c
MockFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl Read for MockFile {$/;"	c
MockFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl Seek for &'_ MockFile {$/;"	c
MockFile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^impl Write for &'_ MockFile {$/;"	c
MockQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    impl<W> MockQueue<W> {$/;"	c	module:test
MockQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    impl<W> OrphanQueue<W> for MockQueue<W> {$/;"	c	module:test
MockQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    pub(crate) struct MockQueue<W> {$/;"	s	module:test
MockStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl InternalStream for MockStream {$/;"	c	module:test
MockStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl MockStream {$/;"	c	module:test
MockStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    struct MockStream {$/;"	s	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    impl MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    impl Wait for MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    struct MockWait {$/;"	s	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl Kill for MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    impl Wait for MockWait {$/;"	c	module:test
MockWait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    struct MockWait {$/;"	s	module:test
Modal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    Modal = 9,$/;"	e	enum:InteractionResponseType
ModalInteractionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^impl Drop for ModalInteractionCollector {$/;"	c
ModalInteractionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^impl ModalInteractionCollector {$/;"	c
ModalInteractionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^impl Stream for ModalInteractionCollector {$/;"	c
ModalInteractionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^pub struct ModalInteractionCollector {$/;"	s
ModalInteractionCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^impl ModalInteractionCollectorBuilder {$/;"	c
ModalInteractionCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^pub struct ModalInteractionCollectorBuilder {$/;"	s
ModalInteractionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^impl ModalInteractionFilter {$/;"	c
ModalInteractionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^pub struct ModalInteractionFilter {$/;"	s
ModalSubmit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    ModalSubmit = 5,$/;"	e	enum:InteractionType
ModalSubmit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    ModalSubmit(ModalSubmitInteraction),$/;"	e	enum:Interaction
ModalSubmitInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^impl ModalSubmitInteraction {$/;"	c
ModalSubmitInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^impl<'de> Deserialize<'de> for ModalSubmitInteraction {$/;"	c
ModalSubmitInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^pub struct ModalSubmitInteraction {$/;"	s
ModalSubmitInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ModalSubmitInteraction = modal::ModalSubmitInteraction;$/;"	t	module:modal
ModalSubmitInteractionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^pub struct ModalSubmitInteractionData {$/;"	s
ModalSubmitInteractionData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ModalSubmitInteractionData = modal::ModalSubmitInteractionData;$/;"	t	module:modal
Model	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^    Model(Event),$/;"	e	enum:DispatchEvent
Model	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Model(ModelError),$/;"	e	enum:Error
Monitoring	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    Monitoring,$/;"	e	enum:IncidentStatus
Multi1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    Multi1,$/;"	e	enum:CombiRuntime
Multi2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    Multi2,$/;"	e	enum:CombiRuntime
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    MultiThread,$/;"	e	enum:Kind
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    MultiThread(MultiThread),$/;"	e	enum:Scheduler
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    MultiThread,$/;"	e	enum:RuntimeFlavor
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^    MultiThread(Arc<multi_thread::Handle>),$/;"	e	enum:Handle
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^impl MultiThread {$/;"	c
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^impl fmt::Debug for MultiThread {$/;"	c
MultiThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^pub(crate) struct MultiThread;$/;"	s
Multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/multipart.rs	/^impl<'a> Multipart<'a> {$/;"	c
Multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/multipart.rs	/^pub struct Multipart<'a> {$/;"	s
Multiple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Multiple(String),$/;"	e	enum:Delimiter
Multiple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Multiple(Vec<T>),$/;"	e	enum:RelatedId
Mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Mute {$/;"	e	enum:Change
Mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Mute,$/;"	e	enum:Key
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    impl<T> Mutex<T> {$/;"	c	module:sync
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    pub(crate) struct Mutex<T>(loom::sync::Mutex<T>);$/;"	s	module:sync
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^impl<T> Mutex<T> {$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^pub(crate) struct Mutex<T: ?Sized>(sync::Mutex<T>);$/;"	s
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<T> Mutex<T> {$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct Mutex<T: ?Sized>(PhantomData<std::sync::Mutex<T>>, parking_lot::Mutex<T>);$/;"	s
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Mutex<T> {$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> std::fmt::Debug for Mutex<T>$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T> Default for Mutex<T>$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T> From<T> for Mutex<T> {$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct Mutex<T: ?Sized> {$/;"	s
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T> Send for Mutex<T> where T: ?Sized + Send {}$/;"	c
Mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T> Sync for Mutex<T> where T: ?Sized + Send {}$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized + fmt::Display> fmt::Display for MutexGuard<'a, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> Deref for MutexGuard<'a, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> DerefMut for MutexGuard<'a, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct MutexGuard<'a, T: ?Sized>($/;"	s
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<'a, T: ?Sized> MutexGuard<'a, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized + fmt::Debug> fmt::Debug for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized + fmt::Display> fmt::Display for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Deref for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> DerefMut for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Drop for MutexGuard<'_, T> {$/;"	c
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct MutexGuard<'a, T: ?Sized> {$/;"	s
MutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T> Sync for MutexGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
MutexGuardInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^struct MutexGuardInner<'a, T: ?Sized> {$/;"	s
NEXT_ID	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^        static NEXT_ID: StaticAtomicU64 = StaticAtomicU64::new(1);$/;"	v	method:Id::next
NEXT_ID	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^        static NEXT_ID: StaticAtomicU64 = StaticAtomicU64::new(0);$/;"	v	method:ThreadId::next
NONPANICKING_VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^    static NONPANICKING_VTABLE: RawWakerVTable = RawWakerVTable::new($/;"	v	function:atomic_waker_panic_safe
Name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^            Name,$/;"	e	enum:ReactionType::deserialize::Field
Name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Name {$/;"	e	enum:Change
Name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Name,$/;"	e	enum:Key
NameTooLong	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    NameTooLong,$/;"	e	enum:Error
NameTooShort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    NameTooShort,$/;"	e	enum:Error
NamedPipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^        pub type NamedPipe = crate::doc::NotDefinedHere;$/;"	t	module:doc::mio_windows
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsHandle for NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsRawHandle for NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsyncRead for NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsyncWrite for NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl NamedPipeClient {$/;"	c
NamedPipeClient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct NamedPipeClient {$/;"	s
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsHandle for NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsRawHandle for NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsyncRead for NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl AsyncWrite for NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl NamedPipeServer {$/;"	c
NamedPipeServer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct NamedPipeServer {$/;"	s
Neither	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    Neither,$/;"	e	enum:List
Never	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Never,$/;"	e	enum:RelatedId
NewValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^            NewValue,$/;"	e	enum:ChangeVisitor::visit_map::Field
News	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    News = 5,$/;"	e	enum:ChannelType
NewsThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    NewsThread = 10,$/;"	e	enum:ChannelType
Nick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Nick {$/;"	e	enum:Change
Nick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Nick,$/;"	e	enum:Key
NitroBoost	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    NitroBoost = 8,$/;"	e	enum:MessageType
NitroTier1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    NitroTier1 = 9,$/;"	e	enum:MessageType
NitroTier2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    NitroTier2 = 10,$/;"	e	enum:MessageType
NitroTier3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    NitroTier3 = 11,$/;"	e	enum:MessageType
No	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    No,$/;"	e	enum:CombiLocalSet
NoAuthentication	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    NoAuthentication,$/;"	e	enum:Error
NoCommandFound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    NoCommandFound { help_error_message: &'a str },$/;"	e	enum:CustomisedHelpData
NoContext	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    NoContext,$/;"	e	enum:TryCurrentErrorKind
NoEventTypes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/error.rs	/^    NoEventTypes,$/;"	e	enum:Error
NoPanic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    NoPanic,$/;"	e	enum:CombiOutput
NoPanic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    NoPanic,$/;"	e	enum:CombiTask
NoPermits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    NoPermits,$/;"	e	enum:TryAcquireError
NoSessionId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    NoSessionId,$/;"	e	enum:Error
NoStickerFileSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    NoStickerFileSet,$/;"	e	enum:Error
NoThreads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    NoThreads(io::Error),$/;"	e	enum:SpawnError
NoTokenSet	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    NoTokenSet,$/;"	e	enum:Error
NonMandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    NonMandatory,$/;"	e	enum:Mandatory
Nonce	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            Nonce,$/;"	e	enum:GuildMembersChunkEvent::deserialize::Field
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    None,$/;"	e	enum:ChunkGuildFilter
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    None,$/;"	e	enum:State
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    None,$/;"	e	enum:OnlyIn
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    None,$/;"	e	enum:Route
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    None = 0,$/;"	e	enum:ConnectionVisibility
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    None,$/;"	e	enum:RelatedId
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    None = 0,$/;"	e	enum:ExplicitContentFilter
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    None = 0,$/;"	e	enum:MfaLevel
None	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    None = 0,$/;"	e	enum:VerificationLevel
NoopSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^    impl task::Schedule for NoopSchedule {$/;"	c	module:noop_scheduler
NoopSchedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^    pub(crate) struct NoopSchedule;$/;"	s	module:noop_scheduler
Normal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    Normal = 0,$/;"	e	enum:InviteTargetType
NormalMessageHook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^type NormalMessageHook = for<'fut> fn(&'fut Context, &'fut Message) -> BoxFuture<'fut, ()>;$/;"	t
NotAChannelCategory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    NotAChannelCategory,$/;"	e	enum:ChannelCategoryParseError
NotAGuildChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    NotAGuildChannel,$/;"	e	enum:GuildChannelParseError
NotAborted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    NotAborted = 0,$/;"	e	enum:CombiAbort
NotAuthor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    NotAuthor,$/;"	e	enum:Error
NotDefinedHere	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/mod.rs	/^pub enum NotDefinedHere {}$/;"	g
NotEnoughArguments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    NotEnoughArguments { min: u16, given: usize },$/;"	e	enum:DispatchError
NotFoundOrMalformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    NotFoundOrMalformed,$/;"	e	enum:ChannelCategoryParseError
NotFoundOrMalformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    NotFoundOrMalformed,$/;"	e	enum:ChannelParseError
NotFoundOrMalformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    NotFoundOrMalformed,$/;"	e	enum:GuildChannelParseError
NotFoundOrMalformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^    NotFoundOrMalformed,$/;"	e	enum:EmojiParseError
NotFoundOrMalformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/guild.rs	/^    NotFoundOrMalformed,$/;"	e	enum:GuildParseError
NotFoundOrMalformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^    NotFoundOrMalformed,$/;"	e	enum:MemberParseError
NotFoundOrMalformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^    NotFoundOrMalformed,$/;"	e	enum:RoleParseError
NotFoundOrMalformed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^    NotFoundOrMalformed,$/;"	e	enum:UserParseError
NotInCache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^    NotInCache,$/;"	e	enum:RoleParseError
NotInGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^    NotInGuild,$/;"	e	enum:RoleParseError
NotInRange	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    NotInRange(&'static str, u64, u64, u64),$/;"	e	enum:Error
NotPolled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    NotPolled,$/;"	e	enum:CombiJoinInterest
NotPresentInCache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    NotPresentInCache,$/;"	e	enum:ChannelParseError
NotPresentInCache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    NotPresentInCache,$/;"	e	enum:RoleParseError
Nothing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    Nothing,$/;"	e	enum:HelpBehaviour
NotificationType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^enum NotificationType {$/;"	g
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^type Notified = task::Notified<Arc<Handle>>;$/;"	t
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    Notified,$/;"	e	enum:PollFuture
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: 'static> Notified<S> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S> fmt::Debug for Notified<S> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) struct Notified<S: 'static>(Task<S>);$/;"	s
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S: Schedule> Send for Notified<S> {}$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S: Schedule> Sync for Notified<S> {}$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Drop for Notified<'_> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Future for Notified<'_> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Notified<'_> {$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^pub struct Notified<'a> {$/;"	s
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^unsafe impl<'a> Send for Notified<'a> {}$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^unsafe impl<'a> Sync for Notified<'a> {}$/;"	c
Notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    Notified,$/;"	e	enum:List
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Default for Notify {$/;"	c
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Notify {$/;"	c
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl RefUnwindSafe for Notify {}$/;"	c
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl UnwindSafe for Notify {}$/;"	c
Notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^pub struct Notify {$/;"	s
NotifyWaitersList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Drop for NotifyWaitersList<'_> {$/;"	c
NotifyWaitersList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl<'a> NotifyWaitersList<'a> {$/;"	c
NotifyWaitersList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^struct NotifyWaitersList<'a> {$/;"	s
Nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Nsfw {$/;"	e	enum:Change
Nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Nsfw,$/;"	e	enum:Key
NsfwLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub enum NsfwLevel {$/;"	g
NullValueVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    impl<'de> Visitor<'de> for NullValueVisitor {$/;"	c	module:premium_subscriber
NullValueVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    struct NullValueVisitor;$/;"	s	module:premium_subscriber
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Number = 10,$/;"	e	enum:CommandOptionType
Number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    Number(f64),$/;"	e	enum:CommandDataOptionValue
O	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^impl<T, O: OrphanQueue<T>> OrphanQueue<T> for &O {$/;"	c
OAuth2Scope	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^    pub type OAuth2Scope = super::application::oauth::Scope;$/;"	t	module:oauth2
Offline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Offline,$/;"	e	enum:OnlineStatus
OffsetHelper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^impl<T: Future, S: Schedule> OffsetHelper<T, S> {$/;"	c
OffsetHelper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^struct OffsetHelper<T, S>(T, S);$/;"	s
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Ok,$/;"	e	enum:TransitionToIdle
Ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    Ok(T),$/;"	e	enum:TryPopResult
OkDealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    OkDealloc,$/;"	e	enum:TransitionToIdle
OkNotified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    OkNotified,$/;"	e	enum:TransitionToIdle
OldValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^            OldValue,$/;"	e	enum:ChangeVisitor::visit_map::Field
OnClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^impl Future for OnClose<'_> {$/;"	c
OnClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^impl<'a> OnClose<'a> {$/;"	c
OnClose	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^struct OnClose<'a> {$/;"	s
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: Clone> Clone for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: Eq> Eq for OnceCell<T> {}$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: PartialEq> PartialEq for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: fmt::Debug> fmt::Debug for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> Default for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> Drop for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> From<T> for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^pub struct OnceCell<T> {$/;"	s
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^unsafe impl<T: Send> Send for OnceCell<T> {}$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^unsafe impl<T: Sync + Send> Sync for OnceCell<T> {}$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^impl<T> Drop for OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^impl<T> OnceCell<T> {$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^pub(crate) struct OnceCell<T> {$/;"	s
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^unsafe impl<T: Send + Sync> Send for OnceCell<T> {}$/;"	c
OnceCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^unsafe impl<T: Send + Sync> Sync for OnceCell<T> {}$/;"	c
OneWaiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    OneWaiter,$/;"	e	enum:NotificationType
Online	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Online,$/;"	e	enum:OnlineStatus
OnlineStatus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl Default for OnlineStatus {$/;"	c
OnlineStatus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl OnlineStatus {$/;"	c
OnlineStatus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^pub enum OnlineStatus {$/;"	g
OnlyForDM	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    OnlyForDM,$/;"	e	enum:DispatchError
OnlyForGuilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    OnlyForGuilds,$/;"	e	enum:DispatchError
OnlyForOwners	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    OnlyForOwners,$/;"	e	enum:DispatchError
OnlyIn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^impl Default for OnlyIn {$/;"	c
OnlyIn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub enum OnlyIn {$/;"	g
Op	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        enum Op {$/;"	g	function:tests::fuzz_linked_list
OpCode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^pub enum OpCode {$/;"	g
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^impl Default for OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^impl From<StdOpenOptions> for OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^impl OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^pub struct OpenOptions(StdOpenOptions);$/;"	s
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl Default for OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl OpenOptions {$/;"	c
OpenOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^pub struct OpenOptions {$/;"	s
Operation	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^enum Operation {$/;"	g
Opt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^        struct Opt {$/;"	s	function:tests::test_id_serde
Option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl<T> TryFrom<RelatedId<T>> for Option<T> {$/;"	c
OptionalDiscriminatorVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        impl<'de> Visitor<'de> for OptionalDiscriminatorVisitor {$/;"	c	module:discriminator::option
OptionalDiscriminatorVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        struct OptionalDiscriminatorVisitor;$/;"	s	module:discriminator::option
OptionalStringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^    impl<'de> Visitor<'de> for OptionalStringVisitor {$/;"	c	module:optional_string
OptionalStringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^    struct OptionalStringVisitor;$/;"	s	module:optional_string
Options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub struct Options {$/;"	s
Orange	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Orange,$/;"	e	enum:DefaultAvatar
OrphanQueue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^pub(crate) trait OrphanQueue<T> {$/;"	i
OrphanQueueImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^impl<T> OrphanQueueImpl<T> {$/;"	c
OrphanQueueImpl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^pub(crate) struct OrphanQueueImpl<T> {$/;"	s
OsExtraData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Init for OsExtraData {$/;"	c
OsExtraData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) struct OsExtraData {$/;"	s
OsExtraData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^impl Init for OsExtraData {$/;"	c
OsExtraData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(crate) struct OsExtraData {}$/;"	s
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Init for OsStorage {$/;"	c
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Storage for OsStorage {$/;"	c
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) type OsStorage = Vec<SignalInfo>;$/;"	t
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^impl Init for OsStorage {$/;"	c
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^impl Storage for OsStorage {$/;"	c
OsStorage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(crate) struct OsStorage {$/;"	s
Other	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Other(&'static str),$/;"	e	enum:Error
Other	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Other(String),$/;"	e	enum:EventType
Other	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Other {$/;"	e	enum:Change
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/cache_update.rs	/^    type Output;$/;"	t	interface:CacheUpdate
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:ChannelDeleteEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:ChannelPinsUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:ChannelUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:GuildCreateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:GuildEmojisUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:GuildMemberAddEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:GuildMembersChunkEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:GuildRoleCreateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:GuildStickersUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:GuildUnavailableEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:GuildUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:PresenceUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:PresencesReplaceEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = ();$/;"	t	implementation:ReadyEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = Channel;$/;"	t	implementation:ChannelCreateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = CurrentUser;$/;"	t	implementation:UserUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = Guild;$/;"	t	implementation:GuildDeleteEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = GuildChannel;$/;"	t	implementation:ThreadCreateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = GuildChannel;$/;"	t	implementation:ThreadDeleteEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = GuildChannel;$/;"	t	implementation:ThreadUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = Member;$/;"	t	implementation:GuildMemberRemoveEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = Member;$/;"	t	implementation:GuildMemberUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = Message;$/;"	t	implementation:MessageCreateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = Message;$/;"	t	implementation:MessageUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = Role;$/;"	t	implementation:GuildRoleDeleteEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = Role;$/;"	t	implementation:GuildRoleUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    type Output = VoiceState;$/;"	t	implementation:VoiceStateUpdateEvent
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    type Output = Result<Client>;$/;"	t	implementation:ClientBuilder
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    type Output = Option<Arc<MessageComponentInteraction>>;$/;"	t	implementation:CollectComponentInteraction
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    type Output = Option<Arc<Message>>;$/;"	t	implementation:CollectReply
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    type Output = Option<Arc<ModalSubmitInteraction>>;$/;"	t	implementation:CollectModalInteraction
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    type Output = Option<Arc<ReactionAction>>;$/;"	t	implementation:CollectReaction
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    type Output = Content;$/;"	t	implementation:Content
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    type Output = Content;$/;"	t	implementation:ContentModifier
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    type Output = Result<T, io::Error>;$/;"	t	implementation:JoinHandle
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    type Output = ();$/;"	t	implementation:MaybeDone
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^    type Output = T;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/try_join.rs	/^    type Output = Result<(T1, T2, T3), E>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    type Output = Self;$/;"	t	implementation:Interest
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    type Output = Ready;$/;"	t	implementation:Ready
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/seek.rs	/^    type Output = io::Result<u64>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    type Output = io::Result<u64>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^    type Output = io::Result<u64>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/fill_buf.rs	/^    type Output = io::Result<&'a [u8]>;$/;"	t	implementation:FillBuf
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/flush.rs	/^    type Output = io::Result<()>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_buf.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^    type Output = io::Result<usize>;$/;"	t	implementation:ReadLine
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^    type Output = io::Result<usize>;$/;"	t	implementation:ReadUntil
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/shutdown.rs	/^    type Output = io::Result<()>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all.rs	/^    type Output = io::Result<()>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all_buf.rs	/^    type Output = io::Result<()>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_buf.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_vectored.rs	/^    type Output = io::Result<usize>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        type Output = Result<(), ()>;$/;"	t	implementation:test::Mock
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    type Output = Result<T, E>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    type Output = io::Result<ExitStatus>;$/;"	t	implementation:Child
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    type Output = io::Result<ExitStatus>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    type Output = io::Result<ExitStatus>;$/;"	t	implementation:Child
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^    type Output = R;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    type Output = super::Result<T>;$/;"	t	implementation:JoinHandle
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    type Output = ();$/;"	t	implementation:BlockedFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    type Output = ();$/;"	t	implementation:ResetFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    type Output = Track<T::Output>;$/;"	t	implementation:Track
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        type Output = F::Output;$/;"	t	implementation:test_combination::FutWrapper
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl Drop for Output {$/;"	c	function:test_combination
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl Output {$/;"	c	function:test_combination
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    struct Output {$/;"	s	function:test_combination
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^        type Output = u32;$/;"	t	implementation:test::ZeroSizedFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    type Output = T;$/;"	t	implementation:ReusableBoxFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    type Output = Result<(), AcquireError>;$/;"	t	implementation:Acquire
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    type Output = Result<T, RecvError>;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    type Output = UnsafeCell<MaybeUninit<T>>;$/;"	t	implementation:Values
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    type Output = ();$/;"	t	implementation:Notified
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    type Output = Result<T, RecvError>;$/;"	t	implementation:Receiver
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^    type Output = bool;$/;"	t	implementation:OnClose
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    type Output = ();$/;"	t	implementation:LocalSet
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    type Output = T::Output;$/;"	t	implementation:RunUntil
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    type Output = F::Output;$/;"	t	implementation:TaskLocalFuture
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/unconstrained.rs	/^    type Output = <F as Future>::Output;$/;"	t
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^        type Output = ();$/;"	t	implementation:yield_now::YieldNow
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    type Output = Duration;$/;"	t	implementation:Instant
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    type Output = Instant;$/;"	t	implementation:Instant
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    type Output = ();$/;"	t	implementation:Sleep
Output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    type Output = Result<T::Output, Elapsed>;$/;"	t
OutsideGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^    OutsideGuild,$/;"	e	enum:EmojiParseError
OutsideGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^    OutsideGuild,$/;"	e	enum:MemberParseError
OverloadedShard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    OverloadedShard,$/;"	e	enum:Error
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized + fmt::Debug> fmt::Debug for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized + fmt::Display> fmt::Display for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized> Deref for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized> DerefMut for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized> Drop for OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized, U: ?Sized> OwnedMappedMutexGuard<T, U> {$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct OwnedMappedMutexGuard<T: ?Sized, U: ?Sized = T> {$/;"	s
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T, U> Send for OwnedMappedMutexGuard<T, U>$/;"	c
OwnedMappedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T, U> Sync for OwnedMappedMutexGuard<T, U>$/;"	c
OwnedMappedMutexGuardInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^struct OwnedMappedMutexGuardInner<T: ?Sized, U: ?Sized> {$/;"	s
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized + fmt::Debug> fmt::Debug for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized + fmt::Display> fmt::Display for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Deref for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> DerefMut for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> Drop for OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl<T: ?Sized> OwnedMutexGuard<T> {$/;"	c
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct OwnedMutexGuard<T: ?Sized> {$/;"	s
OwnedMutexGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^unsafe impl<T> Sync for OwnedMutexGuard<T> where T: ?Sized + Send + Sync {}$/;"	c
OwnedMutexGuardInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^struct OwnedMutexGuardInner<T: ?Sized> {$/;"	s
OwnedPermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Drop for OwnedPermit<T> {$/;"	c
OwnedPermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> OwnedPermit<T> {$/;"	c
OwnedPermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for OwnedPermit<T> {$/;"	c
OwnedPermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct OwnedPermit<T> {$/;"	s
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl AsRef<TcpStream> for OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl AsyncRead for OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub struct OwnedReadHalf {$/;"	s
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl AsRef<UnixStream> for OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl AsyncRead for OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl OwnedReadHalf {$/;"	c
OwnedReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub struct OwnedReadHalf {$/;"	s
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T, U> Send for OwnedRwLockMappedWriteGuard<T, U>$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T, U> Sync for OwnedRwLockMappedWriteGuard<T, U>$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> Drop for OwnedRwLockMappedWriteGuard<T, U> {$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> OwnedRwLockMappedWriteGuard<T, U> {$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> fmt::Debug for OwnedRwLockMappedWriteGuard<T, U>$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> fmt::Display for OwnedRwLockMappedWriteGuard<T, U>$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> ops::Deref for OwnedRwLockMappedWriteGuard<T, U> {$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^impl<T: ?Sized, U: ?Sized> ops::DerefMut for OwnedRwLockMappedWriteGuard<T, U> {$/;"	c
OwnedRwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^pub struct OwnedRwLockMappedWriteGuard<T: ?Sized, U: ?Sized = T> {$/;"	s
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T, U> Send for OwnedRwLockReadGuard<T, U>$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T, U> Sync for OwnedRwLockReadGuard<T, U>$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> Drop for OwnedRwLockReadGuard<T, U> {$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> OwnedRwLockReadGuard<T, U> {$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> fmt::Debug for OwnedRwLockReadGuard<T, U>$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> fmt::Display for OwnedRwLockReadGuard<T, U>$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^impl<T: ?Sized, U: ?Sized> ops::Deref for OwnedRwLockReadGuard<T, U> {$/;"	c
OwnedRwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^pub struct OwnedRwLockReadGuard<T: ?Sized, U: ?Sized = T> {$/;"	s
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for OwnedRwLockWriteGuard<T> where T: ?Sized + Send + Sync {}$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for OwnedRwLockWriteGuard<T> where T: ?Sized + Send + Sync {}$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> Drop for OwnedRwLockWriteGuard<T> {$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> OwnedRwLockWriteGuard<T> {$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> fmt::Debug for OwnedRwLockWriteGuard<T>$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> fmt::Display for OwnedRwLockWriteGuard<T>$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> ops::Deref for OwnedRwLockWriteGuard<T> {$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^impl<T: ?Sized> ops::DerefMut for OwnedRwLockWriteGuard<T> {$/;"	c
OwnedRwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^pub struct OwnedRwLockWriteGuard<T: ?Sized> {$/;"	s
OwnedSemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl Drop for OwnedSemaphorePermit {$/;"	c
OwnedSemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl OwnedSemaphorePermit {$/;"	c
OwnedSemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^pub struct OwnedSemaphorePermit {$/;"	s
OwnedTasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^impl<S: 'static> OwnedTasks<S> {$/;"	c
OwnedTasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^pub(crate) struct OwnedTasks<S: 'static> {$/;"	s
OwnedTasksInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^struct OwnedTasksInner<S: 'static> {$/;"	s
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl AsRef<TcpStream> for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl AsyncWrite for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl Drop for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub struct OwnedWriteHalf {$/;"	s
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl AsRef<UnixStream> for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl AsyncWrite for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl Drop for OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl OwnedWriteHalf {$/;"	c
OwnedWriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub struct OwnedWriteHalf {$/;"	s
OwnerId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    OwnerId {$/;"	e	enum:Change
OwnerId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    OwnerId,$/;"	e	enum:Key
PANICKING_VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^    static PANICKING_VTABLE: RawWakerVTable = RawWakerVTable::new($/;"	v	function:atomic_waker_panic_safe
PANICKING_VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^    static PANICKING_VTABLE: RawWakerVTable =$/;"	v	function:test_panicky_waker
PLACEHOLDER	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/_template.rs	/^impl ArgumentConvert for PLACEHOLDER {$/;"	c
PLACEHOLDERParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/_template.rs	/^impl fmt::Display for PLACEHOLDERParseError {$/;"	c
PLACEHOLDERParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/_template.rs	/^impl std::error::Error for PLACEHOLDERParseError {}$/;"	c
PLACEHOLDERParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/_template.rs	/^pub enum PLACEHOLDERParseError {$/;"	g
Pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^impl Pack {$/;"	c
Pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^impl fmt::Debug for Pack {$/;"	c
Pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^pub(crate) struct Pack {$/;"	s
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T: Entry> Page<T> {$/;"	c
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Default for Page<T> {$/;"	c
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Page<T> {$/;"	c
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct Page<T> {$/;"	s
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Send for Page<T> {}$/;"	c
Page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Sync for Page<T> {}$/;"	c
Panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    Panic(SyncWrapper<Box<dyn Any + Send + 'static>>),$/;"	e	enum:Repr
PanicOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    PanicOnDrop,$/;"	e	enum:CombiOutput
PanicOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    PanicOnDrop,$/;"	e	enum:CombiTask
PanicOnRun	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    PanicOnRun,$/;"	e	enum:CombiTask
PanicOnRunAndDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    PanicOnRunAndDrop,$/;"	e	enum:CombiTask
PanickingWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    impl ArcWake for PanickingWaker {$/;"	c	function:notify_waiters_handles_panicking_waker
PanickingWaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    struct PanickingWaker(Arc<Notify>);$/;"	s	function:notify_waiters_handles_panicking_waker
Paragraph	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Paragraph = 2,$/;"	e	enum:InputTextStyle
ParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl Default for ParkThread {$/;"	c
ParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl ParkThread {$/;"	c
ParkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^pub(crate) struct ParkThread {$/;"	s
Parker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^impl Clone for Parker {$/;"	c
Parker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^impl Parker {$/;"	c
Parker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^pub(crate) struct Parker {$/;"	s
Parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Parse(E),$/;"	e	enum:Error
ParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^pub enum ParseError {$/;"	g
ParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^impl std::error::Error for ParseError {}$/;"	c
ParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^pub struct ParseError(InnerError);$/;"	s
ParseMap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^pub trait ParseMap {$/;"	i
ParseValue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^pub enum ParseValue {$/;"	g
PartialChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/partial_channel.rs	/^pub struct PartialChannel {$/;"	s
PartialCurrentApplicationInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub struct PartialCurrentApplicationInfo {$/;"	s
PartialGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^impl From<Guild> for PartialGuild {$/;"	c
PartialGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^impl PartialGuild {$/;"	c
PartialGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^impl<'de> Deserialize<'de> for PartialGuild {$/;"	c
PartialGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^pub struct PartialGuild {$/;"	s
PartialGuildChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^pub struct PartialGuildChannel {$/;"	s
PartialMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^pub struct PartialMember {$/;"	s
Patch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    Patch,$/;"	e	enum:LightMethod
Path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    Path(&'a Path),$/;"	e	enum:AttachmentType
Pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    Pending(JoinHandle<(VecDeque<io::Result<DirEntry>>, StdReadDir)>),$/;"	e	enum:State
Pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    Pending,$/;"	e	enum:SeekState
Pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    Pending,$/;"	e	enum:SeekState
PendingOverflowed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    PendingOverflowed(i64),$/;"	e	enum:SeekState
PermissionOverwrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl Serialize for PermissionOverwrite {$/;"	c
PermissionOverwrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^impl<'de> Deserialize<'de> for PermissionOverwrite {$/;"	c
PermissionOverwrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub struct PermissionOverwrite {$/;"	s
PermissionOverwriteData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^struct PermissionOverwriteData {$/;"	s
PermissionOverwriteType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub enum PermissionOverwriteType {$/;"	g
PermissionOverwrites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PermissionOverwrites {$/;"	e	enum:Change
PermissionOverwrites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PermissionOverwrites,$/;"	e	enum:Key
Permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Permissions {$/;"	e	enum:Change
Permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Permissions,$/;"	e	enum:Key
Permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^impl Permissions {$/;"	c
Permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^impl Serialize for Permissions {$/;"	c
Permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^impl fmt::Display for Permissions {$/;"	c
Permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^impl<'de> Deserialize<'de> for Permissions {$/;"	c
Permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Drop for Permit<'_, T> {$/;"	c
Permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Permit<'_, T> {$/;"	c
Permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for Permit<'_, T> {$/;"	c
Permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct Permit<'a, T> {$/;"	s
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Pin = 74,$/;"	e	enum:MessageAction
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl<P> AsyncBufRead for Pin<P>$/;"	c
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl<P> AsyncRead for Pin<P>$/;"	c
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^impl<P> AsyncSeek for Pin<P>$/;"	c
Pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl<P> AsyncWrite for Pin<P>$/;"	c
PinMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    PinMessage {$/;"	e	enum:RouteInfo
Ping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    Ping = 1,$/;"	e	enum:InteractionType
Ping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    Ping(PingInteraction),$/;"	e	enum:Interaction
PingInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/ping.rs	/^pub struct PingInteraction {$/;"	s
PingInteraction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type PingInteraction = ping::PingInteraction;$/;"	t	module:ping
PinsAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    PinsAdd = 6,$/;"	e	enum:MessageType
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl AsyncRead for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl AsyncWrite for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^impl Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^struct Pipe {$/;"	s
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsFd for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl AsRawFd for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Source for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl<'a> io::Read for &'a Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl<'a> io::Write for &'a Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl<T: IntoRawFd> From<T> for Pipe {$/;"	c
Pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) struct Pipe {$/;"	s
PipeEnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^enum PipeEnd {$/;"	g
PipeEnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub enum PipeEnd {$/;"	g
PipeInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct PipeInfo {$/;"	s
PipeMode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub enum PipeMode {$/;"	g
Playing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    Playing = 0,$/;"	e	enum:ActivityType
Png	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    Png = 1,$/;"	e	enum:StickerFormatType
Png	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    Png = 1,$/;"	e	enum:StickerFormatType
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^struct Pointers {$/;"	s
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<T> Pointers<T> {$/;"	c
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^impl<T> fmt::Debug for Pointers<T> {$/;"	c
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^pub(crate) struct Pointers<T> {$/;"	s
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^unsafe impl<T: Send> Send for Pointers<T> {}$/;"	c
Pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^unsafe impl<T: Sync> Sync for Pointers<T> {}$/;"	c
PointersInner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^struct PointersInner<T> {$/;"	s
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source + fmt::Debug> fmt::Debug for PollEvented<E> {$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> Deref for PollEvented<E> {$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> Drop for PollEvented<E> {$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> PollEvented<E> {$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> RefUnwindSafe for PollEvented<E> {}$/;"	c
PollEvented	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^impl<E: Source> UnwindSafe for PollEvented<E> {}$/;"	c
PollFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^impl<F> fmt::Debug for PollFn<F> {$/;"	c
PollFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^impl<T, F> Future for PollFn<F>$/;"	c
PollFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^pub struct PollFn<F> {$/;"	s
PollFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^enum PollFuture {$/;"	g
Polled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    Polled,$/;"	e	enum:CombiJoinInterest
Pong	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    Pong = 1,$/;"	e	enum:InteractionResponseType
Pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^            Pop,$/;"	e	enum:tests::fuzz_linked_list::Op
Position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Position {$/;"	e	enum:Change
Position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Position,$/;"	e	enum:Key
Post	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    Post,$/;"	e	enum:LightMethod
Postmortem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    Postmortem,$/;"	e	enum:IncidentStatus
PreferredLocale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PreferredLocale {$/;"	e	enum:Change
PreferredLocale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PreferredLocale,$/;"	e	enum:Key
PrefixOnlyHook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^type PrefixOnlyHook = for<'fut> fn(&'fut Context, &'fut Message) -> BoxFuture<'fut, ()>;$/;"	t
Prefixless	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    Prefixless(GroupMap, CommandMap),$/;"	e	enum:Map
PremiumTier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/premium_tier.rs	/^impl Default for PremiumTier {$/;"	c
PremiumTier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/premium_tier.rs	/^pub enum PremiumTier {$/;"	g
Presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct Presence {$/;"	s
PresenceUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    PresenceUpdate(PresenceUpdateEvent),$/;"	e	enum:Event
PresenceUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    PresenceUpdate,$/;"	e	enum:EventType
PresenceUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for PresenceUpdateEvent {$/;"	c
PresenceUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct PresenceUpdateEvent {$/;"	s
PresenceUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^impl PresenceUser {$/;"	c
PresenceUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct PresenceUser {$/;"	s
PresencesReplace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    PresencesReplace(PresencesReplaceEvent),$/;"	e	enum:Event
PresencesReplace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    PresencesReplace,$/;"	e	enum:EventType
PresencesReplaceEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for PresencesReplaceEvent {$/;"	c
PresencesReplaceEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct PresencesReplaceEvent {$/;"	s
Primary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Primary = 1,$/;"	e	enum:ButtonStyle
PrivacyLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PrivacyLevel {$/;"	e	enum:Change
PrivacyLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PrivacyLevel,$/;"	e	enum:Key
Private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Private = 1,$/;"	e	enum:ChannelType
Private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Private(PrivateChannel),$/;"	e	enum:Channel
PrivateChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^impl PrivateChannel {$/;"	c
PrivateChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^impl fmt::Display for PrivateChannel {$/;"	c
PrivateChannel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^pub struct PrivateChannel {$/;"	s
PrivateThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    PrivateThread = 12,$/;"	e	enum:ChannelType
Profanity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Profanity,$/;"	e	enum:KeywordPresetType
Prune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Prune = 21,$/;"	e	enum:MemberAction
PruneDeleteDays	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PruneDeleteDays {$/;"	e	enum:Change
PruneDeleteDays	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PruneDeleteDays,$/;"	e	enum:Key
PublicThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    PublicThread = 11,$/;"	e	enum:ChannelType
PublicUpdatesChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PublicUpdatesChannelId {$/;"	e	enum:Change
PublicUpdatesChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    PublicUpdatesChannelId,$/;"	e	enum:Key
Push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^            Push,$/;"	e	enum:tests::fuzz_linked_list::Op
Put	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    Put,$/;"	e	enum:LightMethod
Query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    Query(String),$/;"	e	enum:ChunkGuildFilter
QuoteKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^enum QuoteKind {$/;"	g
QuoteKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl QuoteKind {$/;"	c
Quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Quoted,$/;"	e	enum:State
QuotedArgument	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    QuotedArgument,$/;"	e	enum:TokenKind
QuotedTrimmed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    QuotedTrimmed,$/;"	e	enum:State
R	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/async_buf_read_ext.rs	/^impl<R: AsyncBufRead + ?Sized> AsyncBufReadExt for R {}$/;"	c
R	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/async_read_ext.rs	/^impl<R: AsyncRead + ?Sized> AsyncReadExt for R {}$/;"	c
RateLimitAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub enum RateLimitAction {$/;"	g
RateLimitI64F64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    RateLimitI64F64,$/;"	e	enum:Error
RateLimitInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl RateLimitInfo {$/;"	c
RateLimitInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub struct RateLimitInfo {$/;"	s
RateLimitPerUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    RateLimitPerUser {$/;"	e	enum:Change
RateLimitPerUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    RateLimitPerUser,$/;"	e	enum:Key
RateLimitUtf8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    RateLimitUtf8,$/;"	e	enum:Error
Ratelimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub(crate) struct Ratelimit {$/;"	s
Ratelimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^impl Default for Ratelimit {$/;"	c
Ratelimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^impl Ratelimit {$/;"	c
Ratelimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^pub struct Ratelimit {$/;"	s
Ratelimited	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    Ratelimited(RateLimitInfo),$/;"	e	enum:DispatchError
RatelimitedRequest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^impl<'a> From<Request<'a>> for RatelimitedRequest<'a> {$/;"	c
RatelimitedRequest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^pub struct RatelimitedRequest<'a> {$/;"	s
Ratelimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^impl Ratelimiter {$/;"	c
Ratelimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^impl fmt::Debug for Ratelimiter {$/;"	c
Ratelimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^pub struct Ratelimiter {$/;"	s
RawArguments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl<'a> Iterator for RawArguments<'a> {$/;"	c
RawArguments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^pub struct RawArguments<'a> {$/;"	s
RawEventHandler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^pub trait RawEventHandler: Send + Sync {$/;"	i
RawHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub type RawHandle = crate::doc::NotDefinedHere;$/;"	t	module:windows::io
RawSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^        pub type RawSocket = crate::doc::NotDefinedHere;$/;"	t	module:windows::io
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^impl RawTask {$/;"	c
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^impl Clone for RawTask {$/;"	c
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^impl Copy for RawTask {}$/;"	c
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^impl RawTask {$/;"	c
RawTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^pub(super) struct RawTask {$/;"	s
RcCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^impl<T> RcCell<T> {$/;"	c
RcCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^pub(crate) struct RcCell<T> {$/;"	s
Reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl Reaction {$/;"	c
Reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl<'de> Deserialize<'de> for Reaction {$/;"	c
Reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^pub struct Reaction {$/;"	s
ReactionAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl ReactionAction {$/;"	c
ReactionAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^pub enum ReactionAction {$/;"	g
ReactionAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ReactionAdd(ReactionAddEvent),$/;"	e	enum:Event
ReactionAdd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ReactionAdd,$/;"	e	enum:EventType
ReactionAddEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ReactionAddEvent {$/;"	s
ReactionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl Drop for ReactionCollector {$/;"	c
ReactionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl ReactionCollector {$/;"	c
ReactionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl Stream for ReactionCollector {$/;"	c
ReactionCollector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^pub struct ReactionCollector {$/;"	s
ReactionCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl ReactionCollectorBuilder {$/;"	c
ReactionCollectorBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^pub struct ReactionCollectorBuilder {$/;"	s
ReactionConversionError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl fmt::Display for ReactionConversionError {$/;"	c
ReactionConversionError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl std::error::Error for ReactionConversionError {}$/;"	c
ReactionConversionError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^pub struct ReactionConversionError;$/;"	s
ReactionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^impl ReactionFilter {$/;"	c
ReactionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^pub struct ReactionFilter {$/;"	s
ReactionRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ReactionRemove(ReactionRemoveEvent),$/;"	e	enum:Event
ReactionRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ReactionRemove,$/;"	e	enum:EventType
ReactionRemoveAll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ReactionRemoveAll(ReactionRemoveAllEvent),$/;"	e	enum:Event
ReactionRemoveAll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ReactionRemoveAll,$/;"	e	enum:EventType
ReactionRemoveAllEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ReactionRemoveAllEvent {$/;"	s
ReactionRemoveEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ReactionRemoveEvent {$/;"	s
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl From<Emoji> for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl From<EmojiId> for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl From<EmojiIdentifier> for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl From<char> for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl FromStr for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl Serialize for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl TryFrom<String> for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl fmt::Display for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl<'a> TryFrom<&'a str> for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^impl<'de> Deserialize<'de> for ReactionType {$/;"	c
ReactionType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^pub enum ReactionType {$/;"	g
ReactionTypeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^        impl<'de> Visitor<'de> for ReactionTypeVisitor {$/;"	c	method:ReactionType::deserialize
ReactionTypeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^        struct ReactionTypeVisitor;$/;"	s	method:ReactionType::deserialize
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Read(io::Result<usize>),$/;"	e	enum:Operation
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read.rs	/^impl<R> Future for Read<'_, R>$/;"	c
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    Read,$/;"	e	enum:Direction
Read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^pub(crate) enum Read<T> {$/;"	g
ReadBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^impl fmt::Debug for ReadBuf<'_> {$/;"	c
ReadBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^impl<'a> ReadBuf<'a> {$/;"	c
ReadBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^pub struct ReadBuf<'a> {$/;"	s
ReadBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_buf.rs	/^impl<R, B> Future for ReadBuf<'_, R, B>$/;"	c
ReadBufParts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^pub(crate) struct ReadBufParts {$/;"	s
ReadDir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^impl ReadDir {$/;"	c
ReadDir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^pub struct ReadDir(State);$/;"	s
ReadExact	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^impl<A> Future for ReadExact<'_, A>$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T: AsyncRead> AsyncRead for ReadHalf<T> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T: fmt::Debug> fmt::Debug for ReadHalf<T> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> ReadHalf<T> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^unsafe impl<T: Send> Send for ReadHalf<T> {}$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^unsafe impl<T: Sync> Sync for ReadHalf<T> {}$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl AsRef<TcpStream> for ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl AsyncRead for ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^pub struct ReadHalf<'a>(&'a TcpStream);$/;"	s
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl AsRef<UnixStream> for ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl AsyncRead for ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl ReadHalf<'_> {$/;"	c
ReadHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^pub struct ReadHalf<'a>(&'a UnixStream);$/;"	s
ReadLine	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^impl<R: AsyncBufRead + ?Sized + Unpin> Future for ReadLine<'_, R> {$/;"	c
ReadToEnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^impl<A> Future for ReadToEnd<'_, A>$/;"	c
ReadToString	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^impl<A> Future for ReadToString<'_, A>$/;"	c
ReadUntil	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^impl<R: AsyncBufRead + ?Sized + Unpin> Future for ReadUntil<'_, R> {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Ready(ReadyEvent),$/;"	e	enum:Event
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Ready,$/;"	e	enum:EventType
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct Ready {$/;"	s
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl fmt::Debug for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl ops::BitAnd<Ready> for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl ops::BitOr<Ready> for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl ops::BitOrAssign<Ready> for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^impl ops::Sub<Ready> for Ready {$/;"	c
Ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^pub struct Ready(usize);$/;"	s
ReadyEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for ReadyEvent {$/;"	c
ReadyEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ReadyEvent {$/;"	s
ReadyEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^pub(crate) struct ReadyEvent {$/;"	s
ReadyFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^type ReadyFuture<T> = future::Ready<io::Result<T>>;$/;"	t
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Deref for Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Drop for Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Future for Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Kill for Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^impl<W, Q, S> Reaper<W, Q, S>$/;"	c
Reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^pub(crate) struct Reaper<W, Q, S>$/;"	s
Reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^impl Error for Reason {}$/;"	c
Reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^impl fmt::Display for Reason {$/;"	c
Reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^pub enum Reason {$/;"	g
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    Receiver,$/;"	e	enum:PipeEnd
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsFd for Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsRawFd for Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsyncRead for Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^pub struct Receiver {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^impl Receiver {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^pub(super) struct Receiver {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^pub(crate) struct Receiver<T> {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T: Clone> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Drop for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> fmt::Debug for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<T: Send> Send for Receiver<T> {}$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<T: Send> Sync for Receiver<T> {}$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Unpin for Receiver<T> {}$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Drop for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Future for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^pub struct Receiver<T> {$/;"	s
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Clone for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Drop for Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Receiver<T> {$/;"	c
Receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub struct Receiver<T> {$/;"	s
ReceiverExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^pub trait ReceiverExt {$/;"	i
Reconnect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    Reconnect = 7,$/;"	e	enum:OpCode
Reconnect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Reconnect(ReconnectType),$/;"	e	enum:ShardAction
Reconnect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Reconnect,$/;"	e	enum:GatewayEvent
ReconnectFailure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    ReconnectFailure,$/;"	e	enum:Error
ReconnectType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^pub enum ReconnectType {$/;"	g
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> Drop for Recv<'a, T> {$/;"	c
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> Future for Recv<'a, T>$/;"	c
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> Recv<'a, T> {$/;"	c
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Recv<'a, T> {$/;"	s
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<'a, T: Send> Send for Recv<'a, T> {}$/;"	c
Recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<'a, T: Send> Sync for Recv<'a, T> {}$/;"	c
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl fmt::Display for RecvError {$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl std::error::Error for RecvError {}$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub enum RecvError {$/;"	g	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl Error for RecvError {}$/;"	c
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl fmt::Display for RecvError {$/;"	c
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^pub struct RecvError(());$/;"	s
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    impl fmt::Display for RecvError {$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    impl std::error::Error for RecvError {}$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub struct RecvError(pub(super) ());$/;"	s	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl fmt::Display for RecvError {$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl std::error::Error for RecvError {}$/;"	c	module:error
RecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub struct RecvError(pub(super) ());$/;"	s	module:error
RecvGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> Drop for RecvGuard<'a, T> {$/;"	c
RecvGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<'a, T> RecvGuard<'a, T> {$/;"	c
RecvGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct RecvGuard<'a, T> {$/;"	s
Red	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    Red,$/;"	e	enum:DefaultAvatar
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<'a, T> Ref<'a, T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> ops::Deref for Ref<'_, T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub struct Ref<'a, T> {$/;"	s
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T: fmt::Debug> fmt::Debug for Ref<T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Drop for Ref<T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> ops::Deref for Ref<T> {$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) struct Ref<T> {$/;"	s
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Send for Ref<T> {}$/;"	c
Ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^unsafe impl<T: Sync> Sync for Ref<T> {}$/;"	c
Region	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Region {$/;"	e	enum:Change
Region	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Region,$/;"	e	enum:Key
Registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^impl Drop for Registration {$/;"	c
Registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^impl Registration {$/;"	c
Registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^unsafe impl Send for Registration {}$/;"	c
Registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^unsafe impl Sync for Registration {}$/;"	c
Registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl<S: Storage> Registry<S> {$/;"	c
Registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl<S> Registry<S> {$/;"	c
Registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) struct Registry<S> {$/;"	s
Regular	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    Regular = 0,$/;"	e	enum:MessageType
Reidentify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Reidentify,$/;"	e	enum:ReconnectType
RelactionshipsRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    RelactionshipsRead,$/;"	e	enum:Scope
RelatedId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl<T> From<Option<T>> for RelatedId<T> {$/;"	c
RelatedId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl<T> RelatedId<T> {$/;"	c
RelatedId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub enum RelatedId<T> {$/;"	g
RelatedIdsForEventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct RelatedIdsForEventType {$/;"	s
ReleaseOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^    impl ArcWake for ReleaseOnDrop {$/;"	c	function:release_permits_at_drop
ReleaseOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^    struct ReleaseOnDrop(Option<OwnedSemaphorePermit>);$/;"	s	function:release_permits_at_drop
Remote	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^struct Remote {$/;"	s
Remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^            Remove(usize),$/;"	e	enum:tests::fuzz_linked_list::Op
RemoveBan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    RemoveBan {$/;"	e	enum:RouteInfo
RemoveMemberRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    RemoveMemberRole {$/;"	e	enum:RouteInfo
RemoveRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    RemoveRole = 0,$/;"	e	enum:IntegrationExpireBehaviour
RemoveThreadMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    RemoveThreadMember {$/;"	e	enum:RouteInfo
Removed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    Removed(Arc<Reaction>),$/;"	e	enum:ReactionAction
Repeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/repeat.rs	/^impl AsyncRead for Repeat {$/;"	c
Repr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^enum Repr {$/;"	g
Request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    Request(ReqwestError),$/;"	e	enum:Error
Request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^impl<'a> Request<'a> {$/;"	c
Request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^pub struct Request<'a> {$/;"	s
RequestBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^impl<'a> RequestBuilder<'a> {$/;"	c
RequestBuilder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^pub struct RequestBuilder<'a> {$/;"	s
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^        impl Drop for Reset {$/;"	c	method:ScopedKey::set
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^        struct Reset {$/;"	s	method:ScopedKey::set
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    impl Drop for Reset {$/;"	c	function:block_in_place
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    struct Reset(coop::Budget);$/;"	s	function:block_in_place
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    impl Drop for Reset {$/;"	c	function:with
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    struct Reset;$/;"	s	function:with
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^            impl<'a> Drop for Reset<'a> {$/;"	c	method:LocalSet::with
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^            impl<'a> Drop for Reset<'a> {$/;"	c	method:LocalSet::with_if_possible
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^            struct Reset<'a> {$/;"	s	method:LocalSet::with
Reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^            struct Reset<'a> {$/;"	s	method:LocalSet::with_if_possible
ResetFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^impl Future for ResetFuture {$/;"	c
ResetFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^struct ResetFuture {$/;"	s
ResetGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    impl Drop for ResetGuard {$/;"	c	function:with_budget
ResetGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    struct ResetGuard {$/;"	s	function:with_budget
Resolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    Resolved,$/;"	e	enum:IncidentStatus
ResolvedTarget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^pub enum ResolvedTarget {$/;"	g
ResolvedTarget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type ResolvedTarget = application_command::ResolvedTarget;$/;"	t	module:application_command
Restart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    Restart(ShardId),$/;"	e	enum:ShardManagerMessage
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^type Result<T> = std::result::Result<T, ShardManagerError>;$/;"	t
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^pub type Result<T> = StdResult<T, Error>;$/;"	t
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^type Result<T, E> = ::std::result::Result<T, Error<E>>;$/;"	t
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    type Result<T> = StdResult<T, Box<dyn StdError>>;$/;"	t	module:tests
Result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) type Result<T> = std::result::Result<T, JoinError>;$/;"	t
Resume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    Resume = 6,$/;"	e	enum:OpCode
Resume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Resume,$/;"	e	enum:ReconnectType
Resumed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Resumed(ResumedEvent),$/;"	e	enum:Event
Resumed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Resumed,$/;"	e	enum:EventType
ResumedEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ResumedEvent {$/;"	s
Resuming	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    Resuming,$/;"	e	enum:ConnectionStage
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl Error for ReuniteError {}$/;"	c
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^impl fmt::Display for ReuniteError {$/;"	c
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub struct ReuniteError(pub OwnedReadHalf, pub OwnedWriteHalf);$/;"	s
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl Error for ReuniteError {}$/;"	c
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^impl fmt::Display for ReuniteError {$/;"	c
ReuniteError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub struct ReuniteError(pub OwnedReadHalf, pub OwnedWriteHalf);$/;"	s
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> Drop for ReusableBoxFuture<T> {$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> Future for ReusableBoxFuture<T> {$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> ReusableBoxFuture<T> {$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> Unpin for ReusableBoxFuture<T> {}$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^impl<T> fmt::Debug for ReusableBoxFuture<T> {$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^pub(crate) struct ReusableBoxFuture<T> {$/;"	s
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^unsafe impl<T> Send for ReusableBoxFuture<T> {}$/;"	c
ReusableBoxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^unsafe impl<T> Sync for ReusableBoxFuture<T> {}$/;"	c
RevertBucket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl fmt::Display for RevertBucket {$/;"	c
RevertBucket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl std::error::Error for RevertBucket {}$/;"	c
RevertBucket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub struct RevertBucket;$/;"	s
RichInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^impl RichInvite {$/;"	c
RichInvite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^pub struct RichInvite {$/;"	s
RngSeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^impl RngSeed {$/;"	c
RngSeed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^pub struct RngSeed {$/;"	s
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Role = 1,$/;"	e	enum:CommandPermissionType
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Role = 8,$/;"	e	enum:CommandOptionType
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    Role(Role),$/;"	e	enum:CommandDataOptionValue
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Role(RoleId),$/;"	e	enum:PermissionOverwriteType
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Role(RoleAction),$/;"	e	enum:Action
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl Eq for Role {}$/;"	c
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl From<InterimRole> for Role {$/;"	c
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl FromStrAndCache for Role {$/;"	c
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl Ord for Role {$/;"	c
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl PartialEq for Role {$/;"	c
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl PartialOrd for Role {$/;"	c
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl Role {$/;"	c
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl fmt::Display for Role {$/;"	c
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^pub struct Role {$/;"	s
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    Role(RoleId),$/;"	e	enum:Mention
Role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^impl ArgumentConvert for Role {$/;"	c
RoleAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum RoleAction {$/;"	g
RoleId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^impl From<CommandPermissionId> for RoleId {$/;"	c
RoleId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl From<Role> for RoleId {$/;"	c
RoleId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl RoleId {$/;"	c
RoleId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl<'a> From<&'a Role> for RoleId {$/;"	c
RoleId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct RoleId(#[serde(with = "snowflake")] pub u64);$/;"	s
RoleNotFound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    RoleNotFound,$/;"	e	enum:Error
RoleParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl StdError for RoleParseError {}$/;"	c
RoleParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^impl fmt::Display for RoleParseError {$/;"	c
RoleParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^pub enum RoleParseError {$/;"	g
RoleParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^impl fmt::Display for RoleParseError {$/;"	c
RoleParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^impl std::error::Error for RoleParseError {$/;"	c
RoleParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^pub enum RoleParseError {$/;"	g
RoleTags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^pub struct RoleTags {$/;"	s
RoleUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    RoleUpdate = 25,$/;"	e	enum:MemberAction
Roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    Roles,$/;"	e	enum:ParseValue
RolesAdded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    RolesAdded {$/;"	e	enum:Change
RolesAdded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    RolesAdded,$/;"	e	enum:Key
RolesRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    RolesRemove {$/;"	e	enum:Change
RolesRemove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    RolesRemove,$/;"	e	enum:Key
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^impl Route {$/;"	c
Route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^pub enum Route {$/;"	g
RouteInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^impl<'a> RouteInfo<'a> {$/;"	c
RouteInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^pub enum RouteInfo<'a> {$/;"	g
Rpc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    Rpc,$/;"	e	enum:Scope
RpcActivitiesWrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    RpcActivitiesWrite,$/;"	e	enum:Scope
RpcNotificationsRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    RpcNotificationsRead,$/;"	e	enum:Scope
RpcVoiceRead	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    RpcVoiceRead,$/;"	e	enum:Scope
RpcVoiceWrite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    RpcVoiceWrite,$/;"	e	enum:Scope
Rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    impl Rt {$/;"	c	function:test_combination
Rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    struct Rt {$/;"	s	function:test_combination
Rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^        struct Rule {$/;"	s	function:tests::rule_trigger_serde
Rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub struct Rule {$/;"	s
RuleCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    RuleCreate = 140,$/;"	e	enum:AutoModerationAction
RuleDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    RuleDelete = 142,$/;"	e	enum:AutoModerationAction
RuleId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct RuleId(#[serde(with = "snowflake")] pub u64);$/;"	s
RuleUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    RuleUpdate = 141,$/;"	e	enum:AutoModerationAction
RulesChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    RulesChannelId {$/;"	e	enum:Change
RulesChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    RulesChannelId,$/;"	e	enum:Key
RunResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^type RunResult = Result<Box<Core>, ()>;$/;"	t
RunUntil	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl<T: Future> Future for RunUntil<'_, T> {$/;"	c
Runner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    Runner(ShardRunnerMessage),$/;"	e	enum:ShardClientMessage
Running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^    Running(CopyBuffer),$/;"	e	enum:TransferState
Running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    Running(T),$/;"	e	enum:Stage
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^impl Drop for Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^impl Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^pub struct Runtime {$/;"	s
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^impl Schedule for Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^struct Runtime;$/;"	s
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^impl Schedule for Runtime {$/;"	c
Runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^struct Runtime(Arc<Inner>);$/;"	s
RuntimeFlavor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^pub enum RuntimeFlavor {$/;"	g
RuntimeMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^impl RuntimeMetrics {$/;"	c
RuntimeMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^pub struct RuntimeMetrics {$/;"	s
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<T> RwLock<T> {$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct RwLock<T>(PhantomData<std::sync::RwLock<T>>, parking_lot::RwLock<T>);$/;"	s
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^impl<T: ?Sized> Default for RwLock<T>$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^impl<T: ?Sized> RwLock<T> {$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^impl<T> From<T> for RwLock<T> {$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub struct RwLock<T: ?Sized> {$/;"	s
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for RwLock<T> where T: ?Sized + Send {}$/;"	c
RwLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for RwLock<T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for RwLockMappedWriteGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for RwLockMappedWriteGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<'a, T: ?Sized> Drop for RwLockMappedWriteGuard<'a, T> {$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<'a, T: ?Sized> RwLockMappedWriteGuard<'a, T> {$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<'a, T: ?Sized> fmt::Debug for RwLockMappedWriteGuard<'a, T>$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<'a, T: ?Sized> fmt::Display for RwLockMappedWriteGuard<'a, T>$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<T: ?Sized> ops::Deref for RwLockMappedWriteGuard<'_, T> {$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^impl<T: ?Sized> ops::DerefMut for RwLockMappedWriteGuard<'_, T> {$/;"	c
RwLockMappedWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^pub struct RwLockMappedWriteGuard<'a, T: ?Sized> {$/;"	s
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized + fmt::Display> fmt::Display for RwLockReadGuard<'a, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> Deref for RwLockReadGuard<'a, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct RwLockReadGuard<'a, T: ?Sized>($/;"	s
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for RwLockReadGuard<'_, T> where T: ?Sized + Sync {}$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for RwLockReadGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<'a, T: ?Sized> Drop for RwLockReadGuard<'a, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<'a, T: ?Sized> RwLockReadGuard<'a, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<'a, T: ?Sized> fmt::Debug for RwLockReadGuard<'a, T>$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<'a, T: ?Sized> fmt::Display for RwLockReadGuard<'a, T>$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^impl<T: ?Sized> ops::Deref for RwLockReadGuard<'_, T> {$/;"	c
RwLockReadGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^pub struct RwLockReadGuard<'a, T: ?Sized> {$/;"	s
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized + fmt::Display> fmt::Display for RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> Deref for RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^impl<'a, T: ?Sized> DerefMut for RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^pub(crate) struct RwLockWriteGuard<'a, T: ?Sized>($/;"	s
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Send for RwLockWriteGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^unsafe impl<T> Sync for RwLockWriteGuard<'_, T> where T: ?Sized + Send + Sync {}$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<'a, T: ?Sized> Drop for RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<'a, T: ?Sized> RwLockWriteGuard<'a, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<'a, T: ?Sized> fmt::Debug for RwLockWriteGuard<'a, T>$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<'a, T: ?Sized> fmt::Display for RwLockWriteGuard<'a, T>$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<T: ?Sized> ops::Deref for RwLockWriteGuard<'_, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^impl<T: ?Sized> ops::DerefMut for RwLockWriteGuard<'_, T> {$/;"	c
RwLockWriteGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^pub struct RwLockWriteGuard<'a, T: ?Sized> {$/;"	s
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: Semaphore + fmt::Debug> fmt::Debug for Rx<T, S> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: Semaphore> Drop for Rx<T, S> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: Semaphore> Rx<T, S> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(crate) struct Rx<T, S: Semaphore> {$/;"	s
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^impl<T> Rx<T> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^impl<T> fmt::Debug for Rx<T> {$/;"	c
Rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^pub(crate) struct Rx<T> {$/;"	s
RxFields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T> fmt::Debug for RxFields<T> {$/;"	c
RxFields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^struct RxFields<T> {$/;"	s
RxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^impl RxFuture {$/;"	c
RxFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^struct RxFuture {$/;"	s
S	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^        struct S {$/;"	s	function:tests::test_id_serde
S	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/async_seek_ext.rs	/^impl<S: AsyncSeek + ?Sized> AsyncSeekExt for S {}$/;"	c
SPECTATE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    SPECTATE = 2,$/;"	e	enum:MessageActivityKind
Safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Safe = 2,$/;"	e	enum:NsfwLevel
Schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) trait Schedule: Sync + Sized + 'static {$/;"	i
Scheduled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    Scheduled = 1,$/;"	e	enum:ScheduledEventStatus
ScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    ScheduledEvent(ScheduledEventAction),$/;"	e	enum:Action
ScheduledEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^pub struct ScheduledEvent {$/;"	s
ScheduledEventAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum ScheduledEventAction {$/;"	g
ScheduledEventId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct ScheduledEventId(#[serde(with = "snowflake")] pub u64);$/;"	s
ScheduledEventMetadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^pub struct ScheduledEventMetadata {$/;"	s
ScheduledEventStatus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^pub enum ScheduledEventStatus {$/;"	g
ScheduledEventType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^pub enum ScheduledEventType {$/;"	g
ScheduledEventUser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^pub struct ScheduledEventUser {$/;"	s
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^impl Default for ScheduledIo {$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^impl Drop for ScheduledIo {$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^impl Entry for ScheduledIo {$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^impl ScheduledIo {$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^pub(crate) struct ScheduledIo {$/;"	s
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^unsafe impl Send for ScheduledIo {}$/;"	c
ScheduledIo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^unsafe impl Sync for ScheduledIo {}$/;"	c
Scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^pub(super) enum Scheduler {$/;"	g
SchedulerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^impl SchedulerMetrics {$/;"	c
SchedulerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^pub(crate) struct SchedulerMetrics {}$/;"	s
SchedulerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^impl SchedulerMetrics {$/;"	c
SchedulerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^pub(crate) struct SchedulerMetrics {$/;"	s
Schema	/home/trey/code/sqlx-crud/src/traits.rs	/^pub trait Schema {$/;"	i
Scope	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^impl fmt::Display for Scope {$/;"	c
Scope	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^pub enum Scope {$/;"	g
ScopeInnerErr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^enum ScopeInnerErr {$/;"	g
ScopeInnerErr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl From<std::cell::BorrowMutError> for ScopeInnerErr {$/;"	c
ScopeInnerErr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl From<std::thread::AccessError> for ScopeInnerErr {$/;"	c
ScopeInnerErr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl ScopeInnerErr {$/;"	c
ScopedKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^impl<T> ScopedKey<T> {$/;"	c
ScopedKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^pub(crate) struct ScopedKey<T> {$/;"	s
ScopedKey	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^unsafe impl<T> Sync for ScopedKey<T> {}$/;"	c
SearchGuildMembers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    SearchGuildMembers {$/;"	e	enum:RouteInfo
Secondary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Secondary = 2,$/;"	e	enum:ButtonStyle
Seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Seek(io::Result<u64>),$/;"	e	enum:Operation
Seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/seek.rs	/^impl<S> Future for Seek<'_, S>$/;"	c
SeekState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^pub(super) enum SeekState {$/;"	g
SeekState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^pub(super) enum SeekState {$/;"	g
SelectMenu	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    SelectMenu = 3,$/;"	e	enum:ComponentType
SelectMenu	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    SelectMenu(SelectMenu),$/;"	e	enum:ActionRowComponent
SelectMenu	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub struct SelectMenu {$/;"	s
SelectMenu	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type SelectMenu = component::SelectMenu;$/;"	t	module:message_component
SelectMenuOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^pub struct SelectMenuOption {$/;"	s
SelectMenuOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^    pub type SelectMenuOption = component::SelectMenuOption;$/;"	t	module:message_component
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl fmt::Debug for Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^pub(crate) struct Semaphore {$/;"	s
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub(crate) struct Semaphore {$/;"	s
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl Semaphore for bounded::Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl Semaphore for unbounded::Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(crate) trait Semaphore {$/;"	i
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub(crate) struct Semaphore(pub(crate) AtomicUsize);$/;"	s
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl Semaphore {$/;"	c
Semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^pub struct Semaphore {$/;"	s
SemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl Drop for SemaphorePermit<'_> {$/;"	c
SemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^impl<'a> SemaphorePermit<'a> {$/;"	c
SemaphorePermit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^pub struct SemaphorePermit<'a> {$/;"	s
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl<T: fmt::Debug> std::error::Error for SendError<T> {}$/;"	c	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl<T> fmt::Display for SendError<T> {$/;"	c	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub struct SendError<T>(pub T);$/;"	s	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T: fmt::Debug> std::error::Error for SendError<T> {}$/;"	c
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T> fmt::Display for SendError<T> {$/;"	c
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^pub struct SendError<T>(pub T);$/;"	s
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl<T: fmt::Debug> fmt::Display for SendError<T> {$/;"	c	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl<T: fmt::Debug> std::error::Error for SendError<T> {}$/;"	c	module:error
SendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub struct SendError<T>(pub T);$/;"	s	module:error
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    Sender,$/;"	e	enum:PipeEnd
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsFd for Sender {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsRawFd for Sender {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl AsyncWrite for Sender {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^impl Sender {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^pub struct Sender {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^pub(super) struct Sender {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^pub(crate) struct Sender<T> {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Clone for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Drop for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl<T> fmt::Debug for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<T: Send> Send for Sender<T> {}$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl<T: Send> Sync for Sender<T> {}$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Clone for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Drop for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^pub struct Sender<T> {$/;"	s
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Drop for Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T> Sender<T> {$/;"	c
Sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub struct Sender<T> {$/;"	s
SenderExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^pub trait SenderExt {$/;"	i
SequenceToMapVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^impl<'de, F, K, V> Visitor<'de> for SequenceToMapVisitor<F, V>$/;"	c
SequenceToMapVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^impl<F, V> SequenceToMapVisitor<F, V> {$/;"	c
SequenceToMapVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub(in crate::model) struct SequenceToMapVisitor<F, V> {$/;"	s
Server	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    Server,$/;"	e	enum:PipeEnd
ServerOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^impl ServerOptions {$/;"	c
ServerOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^pub struct ServerOptions {$/;"	s
SessionStartLimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^pub struct SessionStartLimit {$/;"	s
Set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    Set(u8),$/;"	e	enum:Tick
SetActivity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    SetActivity(Option<Activity>),$/;"	e	enum:ShardRunnerMessage
SetComponentInteractionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    SetComponentInteractionFilter(ComponentInteractionFilter),$/;"	e	enum:ShardRunnerMessage
SetError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T: fmt::Debug> Error for SetError<T> {}$/;"	c
SetError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> SetError<T> {$/;"	c
SetError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^impl<T> fmt::Display for SetError<T> {$/;"	c
SetError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^pub enum SetError<T> {$/;"	g
SetEventFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    SetEventFilter(EventFilter),$/;"	e	enum:ShardRunnerMessage
SetMessageFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    SetMessageFilter(MessageFilter),$/;"	e	enum:ShardRunnerMessage
SetModalInteractionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    SetModalInteractionFilter(ModalInteractionFilter),$/;"	e	enum:ShardRunnerMessage
SetPresence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    SetPresence(OnlineStatus, Option<Activity>),$/;"	e	enum:ShardRunnerMessage
SetReactionFilter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    SetReactionFilter(ReactionFilter),$/;"	e	enum:ShardRunnerMessage
SetStatus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    SetStatus(OnlineStatus),$/;"	e	enum:ShardRunnerMessage
Settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/settings.rs	/^impl Settings {$/;"	c
Settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/settings.rs	/^pub struct Settings {$/;"	s
SexualContent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    SexualContent,$/;"	e	enum:KeywordPresetType
Shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^impl Shard {$/;"	c
Shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^pub struct Shard {$/;"	s
ShardAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^pub enum ShardAction {$/;"	g
ShardBootFailure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/error.rs	/^    ShardBootFailure,$/;"	e	enum:Error
ShardClientMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^pub enum ShardClientMessage {$/;"	g
ShardDisallowedGatewayIntents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    ShardDisallowedGatewayIntents,$/;"	e	enum:ShardManagerMessage
ShardId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^impl fmt::Display for ShardId {$/;"	c
ShardId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^pub struct ShardId(pub u64);$/;"	s
ShardInvalidAuthentication	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    ShardInvalidAuthentication,$/;"	e	enum:ShardManagerMessage
ShardInvalidGatewayIntents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    ShardInvalidGatewayIntents,$/;"	e	enum:ShardManagerMessage
ShardManager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^impl Drop for ShardManager {$/;"	c
ShardManager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^impl ShardManager {$/;"	c
ShardManager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^pub struct ShardManager {$/;"	s
ShardManagerError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^pub enum ShardManagerError {$/;"	g
ShardManagerMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^pub enum ShardManagerMessage {$/;"	g
ShardManagerMonitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^impl ShardManagerMonitor {$/;"	c
ShardManagerMonitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^pub struct ShardManagerMonitor {$/;"	s
ShardManagerOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^pub struct ShardManagerOptions<'a> {$/;"	s
ShardMessenger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^impl AsRef<ShardMessenger> for ShardMessenger {$/;"	c
ShardMessenger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^impl ShardMessenger {$/;"	c
ShardMessenger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^pub struct ShardMessenger {$/;"	s
ShardQueuer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^impl ShardQueuer {$/;"	c
ShardQueuer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^pub struct ShardQueuer {$/;"	s
ShardQueuerMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^pub enum ShardQueuerMessage {$/;"	g
ShardRunner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^impl ShardRunner {$/;"	c
ShardRunner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^pub struct ShardRunner {$/;"	s
ShardRunnerInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^impl AsRef<ShardMessenger> for ShardRunnerInfo {$/;"	c
ShardRunnerInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^pub struct ShardRunnerInfo {$/;"	s
ShardRunnerMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^pub enum ShardRunnerMessage {$/;"	g
ShardRunnerOptions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^pub struct ShardRunnerOptions {$/;"	s
ShardStageUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/event.rs	/^    ShardStageUpdate(ShardStageUpdateEvent),$/;"	e	enum:ClientEvent
ShardStageUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/event.rs	/^pub struct ShardStageUpdateEvent {$/;"	s
ShardUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    ShardUpdate { id: ShardId, latency: Option<StdDuration>, stage: ConnectionStage },$/;"	e	enum:ShardManagerMessage
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(super) struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Shared<T> {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^    struct Shared {$/;"	s	function:basic_usage
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^impl<T: fmt::Debug> fmt::Debug for Shared<T> {$/;"	c
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^struct Shared<T> {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^impl Shared {$/;"	c
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^struct Shared {$/;"	s
Shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^unsafe impl Sync for Shared {}$/;"	c
Shield	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    Shield,$/;"	e	enum:GuildWidgetStyle
Short	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Short = 1,$/;"	e	enum:InputTextStyle
Shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    Shutdown(ShardId, u16),$/;"	e	enum:ShardManagerMessage
Shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    Shutdown,$/;"	e	enum:ShardQueuerMessage
Shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/error.rs	/^    Shutdown,$/;"	e	enum:Error
Shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/shutdown.rs	/^impl<A> Future for Shutdown<'_, A>$/;"	c
Shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    Shutdown = 1,$/;"	e	enum:Kind
ShutdownAll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    ShutdownAll,$/;"	e	enum:ShardManagerMessage
ShutdownFinished	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    ShutdownFinished(ShardId),$/;"	e	enum:ShardManagerMessage
ShutdownInitiated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    ShutdownInitiated,$/;"	e	enum:ShardManagerMessage
ShutdownShard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    ShutdownShard(ShardId, u16),$/;"	e	enum:ShardQueuerMessage
ShuttingDown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^    ShuttingDown(u64),$/;"	e	enum:TransferState
ShuttingDown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    ShuttingDown,$/;"	e	enum:SpawnError
Signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl InternalStream for Signal {$/;"	c
Signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Signal {$/;"	c
Signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub struct Signal {$/;"	s
SignalInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl Default for SignalInfo {$/;"	c
SignalInfo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) struct SignalInfo {$/;"	s
SignalKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl From<std::os::raw::c_int> for SignalKind {$/;"	c
SignalKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl SignalKind {$/;"	c
SignalKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub struct SignalKind(libc::c_int);$/;"	s
Signals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    struct Signals {$/;"	s	function:test_combination
SimdJson	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    SimdJson(simd_json::Error),$/;"	e	enum:Error
Single	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Single(char),$/;"	e	enum:Delimiter
SingleCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    SingleCommand { command: Command<'a> },$/;"	e	enum:CustomisedHelpData
Sink	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^impl AsyncWrite for Sink {$/;"	c
Sink	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^impl fmt::Debug for Sink {$/;"	c
Skip	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    Skip,$/;"	e	enum:MissedTickBehavior
SkuId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct SkuId(#[serde(with = "snowflake")] pub u64);$/;"	s
Slab	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Slab<T> {$/;"	c
Slab	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> fmt::Debug for Slab<T> {$/;"	c
Slab	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^pub(crate) struct Slab<T> {$/;"	s
Sleep	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^impl Future for Sleep {$/;"	c
Sleep	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^impl Sleep {$/;"	c
Slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Slot<T> {$/;"	s
Slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct Slot<T> {$/;"	s
Slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Slots<T> {$/;"	c
Slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct Slots<T> {$/;"	s
Slurs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Slurs,$/;"	e	enum:KeywordPresetType
Snapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^impl Snapshot {$/;"	c
Snapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^impl fmt::Debug for Snapshot {$/;"	c
Snapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) struct Snapshot(usize);$/;"	s
SnowflakeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^    impl<'de> Visitor<'de> for SnowflakeVisitor {$/;"	c	module:snowflake
SnowflakeVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^    struct SnowflakeVisitor;$/;"	s	module:snowflake
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for &[SocketAddr] {}$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for SocketAddr {}$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for &[SocketAddr] {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^impl SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^impl fmt::Debug for SocketAddr {$/;"	c
SocketAddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^pub struct SocketAddr(pub(super) mio::net::SocketAddr);$/;"	s
SocketAddrV4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for SocketAddrV4 {}$/;"	c
SocketAddrV4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for SocketAddrV4 {$/;"	c
SocketAddrV6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for SocketAddrV6 {}$/;"	c
SocketAddrV6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for SocketAddrV6 {$/;"	c
Some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Some(T),$/;"	e	enum:RelatedId
Spam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Spam,$/;"	e	enum:Trigger
Spam	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Spam,$/;"	e	enum:TriggerType
SpawnError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) enum SpawnError {$/;"	g
SpawnOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    impl Drop for SpawnOnDrop {$/;"	c	function:spawn_during_shutdown
SpawnOnDrop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    struct SpawnOnDrop(Runtime);$/;"	s	function:spawn_during_shutdown
SpawnedChild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub(crate) struct SpawnedChild {$/;"	s
Spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl Spawner {$/;"	c
Spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl fmt::Debug for Spawner {$/;"	c
Spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) struct Spawner {$/;"	s
SpawnerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl SpawnerMetrics {$/;"	c
SpawnerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) struct SpawnerMetrics {$/;"	s
SplashHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    SplashHash {$/;"	e	enum:Change
SplashHash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    SplashHash,$/;"	e	enum:Key
Split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^impl<R> Split<R>$/;"	c
SplitByUtf8BoundaryIfWindows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^impl<W> SplitByUtf8BoundaryIfWindows<W> {$/;"	c
SplitByUtf8BoundaryIfWindows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^impl<W> crate::io::AsyncWrite for SplitByUtf8BoundaryIfWindows<W>$/;"	c
SplitByUtf8BoundaryIfWindows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^pub(crate) struct SplitByUtf8BoundaryIfWindows<W> {$/;"	s
Spoiler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    Spoiler,$/;"	e	enum:ContentModifier
Stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Stage = 13,$/;"	e	enum:ChannelType
Stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) enum Stage<T: Future> {$/;"	g
StageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub struct StageInstance {$/;"	s
StageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    StageInstance(StageInstanceAction),$/;"	e	enum:Action
StageInstance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    StageInstance = 1,$/;"	e	enum:ScheduledEventType
StageInstanceAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum StageInstanceAction {$/;"	g
StageInstanceCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    StageInstanceCreate(StageInstanceCreateEvent),$/;"	e	enum:Event
StageInstanceCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    StageInstanceCreate,$/;"	e	enum:EventType
StageInstanceCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct StageInstanceCreateEvent {$/;"	s
StageInstanceDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    StageInstanceDelete(StageInstanceDeleteEvent),$/;"	e	enum:Event
StageInstanceDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    StageInstanceDelete,$/;"	e	enum:EventType
StageInstanceDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct StageInstanceDeleteEvent {$/;"	s
StageInstanceId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct StageInstanceId(#[serde(with = "snowflake")] pub u64);$/;"	s
StageInstanceUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    StageInstanceUpdate(StageInstanceUpdateEvent),$/;"	e	enum:Event
StageInstanceUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    StageInstanceUpdate,$/;"	e	enum:EventType
StageInstanceUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct StageInstanceUpdateEvent {$/;"	s
StageInstances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StageInstances,$/;"	e	enum:Route
StageInstancesChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StageInstancesChannelId(u64),$/;"	e	enum:Route
Standard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    Standard = 1,$/;"	e	enum:StickerType
StandardFramework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^impl Framework for StandardFramework {$/;"	c
StandardFramework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^impl StandardFramework {$/;"	c
StandardFramework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^pub struct StandardFramework {$/;"	s
Start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    Start(ShardId, ShardId),$/;"	e	enum:ShardQueuerMessage
Start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    Start(SeekFrom),$/;"	e	enum:SeekState
Start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    Start(SeekFrom),$/;"	e	enum:SeekState
StartGuildPrune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StartGuildPrune {$/;"	e	enum:RouteInfo
StartIntegrationSync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StartIntegrationSync {$/;"	e	enum:RouteInfo
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^enum State {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^enum State {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^enum State {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^enum State<T> {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl From<usize> for State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl fmt::Debug for State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^struct State(usize);$/;"	s
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^impl State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^impl fmt::Debug for State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) struct State {$/;"	s
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^enum State {$/;"	g
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl fmt::Debug for State {$/;"	c
State	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^struct State(usize);$/;"	s
StateCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl Default for StateCell {$/;"	c
StateCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl StateCell {$/;"	c
StateCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl std::fmt::Debug for StateCell {$/;"	c
StateCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(super) struct StateCell {$/;"	s
StateSnapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl StateSnapshot {$/;"	c	module:state
StateSnapshot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub(super) struct StateSnapshot(usize);$/;"	s	module:state
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^        pub(crate) type StaticAtomicU64 = std::sync::atomic::AtomicU64;$/;"	t	module:sync::atomic
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_native.rs	/^pub(crate) type StaticAtomicU64 = AtomicU64;$/;"	t
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_const_new.rs	/^pub(crate) type StaticAtomicU64 = AtomicU64;$/;"	t
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^impl StaticAtomicU64 {$/;"	c
StaticAtomicU64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^pub(crate) struct StaticAtomicU64 {$/;"	s
Status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Status {$/;"	e	enum:Change
Status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Status,$/;"	e	enum:Key
StatusIncidentsUnresolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StatusIncidentsUnresolved,$/;"	e	enum:RouteInfo
StatusMaintenancesActive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StatusMaintenancesActive,$/;"	e	enum:RouteInfo
StatusMaintenancesUpcoming	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StatusMaintenancesUpcoming,$/;"	e	enum:RouteInfo
StatusResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^        struct StatusResponse {$/;"	s	method:Http::get_active_maintenances
StatusResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^        struct StatusResponse {$/;"	s	method:Http::get_unresolved_incidents
StatusResponse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^        struct StatusResponse {$/;"	s	method:Http::get_upcoming_maintenances
StatusUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    StatusUpdate = 3,$/;"	e	enum:OpCode
StdChild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Kill for StdChild {$/;"	c
StdChild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^impl Wait for StdChild {$/;"	c
StdReadDir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^type StdReadDir = std::iter::Fuse<std::fs::ReadDir>;$/;"	t
Stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    impl AsFd for Stderr {$/;"	c	module:sys
Stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    impl AsRawFd for Stderr {$/;"	c	module:sys
Stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^impl AsyncWrite for Stderr {$/;"	c
Stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^    impl AsFd for Stdin {$/;"	c	module:sys
Stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^    impl AsRawFd for Stdin {$/;"	c	module:sys
Stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^impl AsyncRead for Stdin {$/;"	c
Stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    impl AsFd for Stdout {$/;"	c	module:sys
Stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    impl AsRawFd for Stdout {$/;"	c	module:sys
Stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^impl AsyncWrite for Stdout {$/;"	c
Steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Clone for Steal<T> {$/;"	c
Steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^impl<T> Steal<T> {$/;"	c
Steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^pub(crate) struct Steal<T: 'static>(Arc<Inner<T>>);$/;"	s
Sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^pub struct Sticker {$/;"	s
Sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Sticker(StickerAction),$/;"	e	enum:Action
Sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^impl Sticker {$/;"	c
Sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^pub struct Sticker {$/;"	s
StickerAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum StickerAction {$/;"	g
StickerAmount	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    StickerAmount,$/;"	e	enum:Error
StickerFormatType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^pub enum StickerFormatType {$/;"	g
StickerFormatType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^pub enum StickerFormatType {$/;"	g
StickerId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct StickerId(#[serde(with = "snowflake")] pub u64);$/;"	s
StickerId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_id.rs	/^impl StickerId {$/;"	c
StickerItem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_item.rs	/^impl StickerItem {$/;"	c
StickerItem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_item.rs	/^pub struct StickerItem {$/;"	s
StickerPack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^impl StickerPack {$/;"	c
StickerPack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^pub struct StickerPack {$/;"	s
StickerPackBannerId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct StickerPackBannerId(#[serde(with = "snowflake")] pub u64);$/;"	s
StickerPackId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct StickerPackId(#[serde(with = "snowflake")] pub u64);$/;"	s
StickerPacks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^        struct StickerPacks {$/;"	s	method:Http::get_nitro_stickers
StickerPacks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StickerPacks,$/;"	e	enum:Route
StickerType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^pub enum StickerType {$/;"	g
StickersId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    StickersId,$/;"	e	enum:Route
Storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    type Storage = (&'static Command, Arc<CommandMap>);$/;"	t	implementation:CommandMap
Storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    type Storage = (&'static CommandGroup, Arc<GroupMap>, Arc<CommandMap>);$/;"	t	implementation:GroupMap
Storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    type Storage;$/;"	t	interface:ParseMap
Storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) trait Storage {$/;"	i
Str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Str(String),$/;"	e	enum:EntityType
StrExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^pub trait StrExt: Sized {$/;"	i
Stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    Stream = 1,$/;"	e	enum:InviteTargetType
Streaming	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    Streaming = 1,$/;"	e	enum:ActivityType
Strike	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    Strike,$/;"	e	enum:HelpBehaviour
Strikethrough	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    Strikethrough,$/;"	e	enum:ContentModifier
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    String = 3,$/;"	e	enum:CommandOptionType
String	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    String(String),$/;"	e	enum:CommandDataOptionValue
StringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^        impl<'de> serde::de::Visitor<'de> for StringVisitor {$/;"	c	method:Permissions::deserialize
StringVisitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^        struct StringVisitor;$/;"	s	method:Permissions::deserialize
SubCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    SubCommand = 1,$/;"	e	enum:CommandOptionType
SubCommandGroup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    SubCommandGroup = 2,$/;"	e	enum:CommandOptionType
Submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Submit,$/;"	e	enum:TransitionToNotifiedByRef
Submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Submit,$/;"	e	enum:TransitionToNotifiedByVal
Success	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Success = 3,$/;"	e	enum:ButtonStyle
Success	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    Success,$/;"	e	enum:TransitionToRunning
SuggestedCommandName	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub struct SuggestedCommandName {$/;"	s
SuggestedCommands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    SuggestedCommands { help_description: String, suggestions: Suggestions },$/;"	e	enum:CustomisedHelpData
Suggestions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^impl Suggestions {$/;"	c
Suggestions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub struct Suggestions(pub Vec<SuggestedCommandName>);$/;"	s
SyncWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^impl<T> SyncWrapper<T> {$/;"	c
SyncWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^pub(crate) struct SyncWrapper<T> {$/;"	s
SyncWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^unsafe impl<T: Send> Send for SyncWrapper<T> {}$/;"	c
SyncWrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^unsafe impl<T> Sync for SyncWrapper<T> {}$/;"	c
SystemChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    SystemChannelId {$/;"	e	enum:Change
SystemChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    SystemChannelId,$/;"	e	enum:Key
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^impl<T> CacheHttp for &T$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^impl<T: Into<Value>> ToNumber for T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^impl<T: Into<serde_json::Number>> ToNumber for T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^        struct T {$/;"	s	function:tests::action_serde
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^        struct T {$/;"	s	function:tests::optional_string_module
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^impl<T> Mentionable for T$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^impl<T: std::str::FromStr> ArgumentConvert for T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl<T: ?Sized + AsyncBufRead + Unpin> AsyncBufRead for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl<T: ?Sized + AsyncRead + Unpin> AsyncRead for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^impl<T: ?Sized + AsyncSeek + Unpin> AsyncSeek for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl<T: ?Sized + AsyncWrite + Unpin> AsyncWrite for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl<T: ToSocketAddrs + ?Sized> ToSocketAddrs for &T {}$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl<T> sealed::ToSocketAddrsPriv for &T$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/kill.rs	/^impl<T: Kill> Kill for &mut T {$/;"	c
T	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^impl<T: Wait> Wait for &mut T {$/;"	c
Tags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Tags {$/;"	e	enum:Change
Tags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Tags,$/;"	e	enum:Key
Tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^impl Tail {$/;"	c
Tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Tail {$/;"	s
Take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^impl<R: AsyncBufRead> AsyncBufRead for Take<R> {$/;"	c
Take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^impl<R: AsyncRead> AsyncRead for Take<R> {$/;"	c
Take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^impl<R: AsyncRead> Take<R> {$/;"	c
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^    type Target = T;$/;"	t	implementation:LazyArc
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    type Target = E;$/;"	t	implementation:Aio
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    type Target = E;$/;"	t	implementation:PollEvented
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    type Target = std::sync::atomic::AtomicU16;$/;"	t	implementation:AtomicU16
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    type Target = std::sync::atomic::AtomicU32;$/;"	t	implementation:AtomicU32
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    type Target = std::sync::atomic::AtomicUsize;$/;"	t	implementation:AtomicUsize
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    type Target = T;$/;"	t	implementation:MutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    type Target = T;$/;"	t	implementation:RwLockReadGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    type Target = T;$/;"	t	implementation:RwLockWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    type Target = W;$/;"	t
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    type Target = Header;$/;"	t	implementation:Task
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^    type Target = Waker;$/;"	t	implementation:WakerRef
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    type Target = TimerShared;$/;"	t	implementation:TimerShared
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    type Target = OsExtraData;$/;"	t	implementation:Globals
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    type Target = Waiter;$/;"	t	implementation:Waiter
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    type Target = Waiter;$/;"	t	implementation:Waiter
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    type Target = T;$/;"	t	implementation:MappedMutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    type Target = T;$/;"	t	implementation:MutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    type Target = T;$/;"	t	implementation:OwnedMutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    type Target = U;$/;"	t	implementation:OwnedMappedMutexGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    type Target = Waiter;$/;"	t	implementation:Waiter
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    type Target = U;$/;"	t	implementation:OwnedRwLockReadGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    type Target = T;$/;"	t	implementation:OwnedRwLockWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    type Target = U;$/;"	t	implementation:OwnedRwLockMappedWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    type Target = T;$/;"	t	implementation:RwLockReadGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    type Target = T;$/;"	t	implementation:RwLockWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    type Target = T;$/;"	t	implementation:RwLockMappedWriteGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    type Target = T;$/;"	t	implementation:Ref
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    type Target = ListEntry<T>;$/;"	t	implementation:ListEntry
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        type Target = Entry;$/;"	t	implementation:tests::Entry
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    type Target;$/;"	t	interface:Link
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    type Target = T;$/;"	t	implementation:Ref
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    type Target = T;$/;"	t	implementation:LockGuard
Target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    type Target = Waker;$/;"	t	implementation:WakerRef
TargetId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl From<MessageId> for TargetId {$/;"	c
TargetId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl From<UserId> for TargetId {$/;"	c
TargetId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl TargetId {$/;"	c
TargetId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl<'a> From<&'a MessageId> for TargetId {$/;"	c
TargetId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl<'a> From<&'a UserId> for TargetId {$/;"	c
TargetId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct TargetId(#[serde(with = "snowflake")] pub u64);$/;"	s
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^impl Task {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) struct Task {$/;"	s
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^type Task = task::Task<Arc<Handle>>;$/;"	t
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: 'static> Drop for Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: 'static> Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: Schedule> Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S> fmt::Debug for Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) struct Task<S: 'static> {$/;"	s
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> Send for Task<S> {}$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> Sync for Task<S> {}$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> linked_list::Link for Task<S> {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^impl Task {$/;"	c
Task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^struct Task(UnsafeCell<MaybeUninit<Waker>>);$/;"	s
TaskIdGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl Drop for TaskIdGuard {$/;"	c
TaskIdGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl TaskIdGuard {$/;"	c
TaskIdGuard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(crate) struct TaskIdGuard {$/;"	s
TaskLocalFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static, F: Future> Future for TaskLocalFuture<T, F> {$/;"	c
TaskLocalFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static, F> Drop for TaskLocalFuture<T, F> {$/;"	c
TaskLocalFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^impl<T: 'static, F> fmt::Debug for TaskLocalFuture<T, F>$/;"	c
TaskLocalFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^pub struct TaskLocalFuture<T, F>$/;"	s
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    impl AsFd for TcpListener {$/;"	c	module:sys
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    impl AsRawFd for TcpListener {$/;"	c	module:sys
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^impl TcpListener {$/;"	c
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^impl TryFrom<net::TcpListener> for TcpListener {$/;"	c
TcpListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^impl fmt::Debug for TcpListener {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl AsFd for TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl AsRawFd for TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl FromRawFd for TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl IntoRawFd for TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl TcpSocket {$/;"	c
TcpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^impl fmt::Debug for TcpSocket {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    impl AsFd for TcpStream {$/;"	c	module:sys
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    impl AsRawFd for TcpStream {$/;"	c	module:sys
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl AsyncRead for TcpStream {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl AsyncWrite for TcpStream {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl TcpStream {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl TryFrom<std::net::TcpStream> for TcpStream {$/;"	c
TcpStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^impl fmt::Debug for TcpStream {$/;"	c
Team	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub struct Team {$/;"	s
TeamMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub struct TeamMember {$/;"	s
Temporary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Temporary {$/;"	e	enum:Change
Temporary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Temporary,$/;"	e	enum:Key
Text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Text = 0,$/;"	e	enum:ChannelType
TextMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    impl crate::io::AsyncWrite for TextMockWriter {$/;"	c	module:tests
TextMockWriter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    struct TextMockWriter;$/;"	s	module:tests
Thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Thread(ThreadAction),$/;"	e	enum:Action
ThreadAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum ThreadAction {$/;"	g
ThreadCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadCreate(ThreadCreateEvent),$/;"	e	enum:Event
ThreadCreate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadCreate,$/;"	e	enum:EventType
ThreadCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for ThreadCreateEvent {$/;"	c
ThreadCreateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ThreadCreateEvent {$/;"	s
ThreadCreated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    ThreadCreated = 18,$/;"	e	enum:MessageType
ThreadDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadDelete(ThreadDeleteEvent),$/;"	e	enum:Event
ThreadDelete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadDelete,$/;"	e	enum:EventType
ThreadDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for ThreadDeleteEvent {$/;"	c
ThreadDeleteEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ThreadDeleteEvent {$/;"	s
ThreadId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^impl ThreadId {$/;"	c
ThreadId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^pub(crate) struct ThreadId(NonZeroU64);$/;"	s
ThreadListSync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadListSync(ThreadListSyncEvent),$/;"	e	enum:Event
ThreadListSync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadListSync,$/;"	e	enum:EventType
ThreadListSyncEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ThreadListSyncEvent {$/;"	s
ThreadLocalDestroyed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    ThreadLocalDestroyed,$/;"	e	enum:TryCurrentErrorKind
ThreadMember	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^pub struct ThreadMember {$/;"	s
ThreadMemberUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadMemberUpdate(ThreadMemberUpdateEvent),$/;"	e	enum:Event
ThreadMemberUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadMemberUpdate,$/;"	e	enum:EventType
ThreadMemberUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ThreadMemberUpdateEvent {$/;"	s
ThreadMembersUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadMembersUpdate(ThreadMembersUpdateEvent),$/;"	e	enum:Event
ThreadMembersUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadMembersUpdate,$/;"	e	enum:EventType
ThreadMembersUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ThreadMembersUpdateEvent {$/;"	s
ThreadMetadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub struct ThreadMetadata {$/;"	s
ThreadNameFn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^pub(crate) type ThreadNameFn = std::sync::Arc<dyn Fn() -> String + Send + Sync + 'static>;$/;"	t
ThreadStarterMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    ThreadStarterMessage = 21,$/;"	e	enum:MessageType
ThreadUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadUpdate(ThreadUpdateEvent),$/;"	e	enum:Event
ThreadUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    ThreadUpdate,$/;"	e	enum:EventType
ThreadUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for ThreadUpdateEvent {$/;"	c
ThreadUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct ThreadUpdateEvent {$/;"	s
ThreadsData	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub struct ThreadsData {$/;"	s
Tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^enum Tick {$/;"	g
TicketCounter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl TicketCounter {$/;"	c
TicketCounter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub(crate) struct TicketCounter {$/;"	s
Tier0	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/premium_tier.rs	/^    Tier0,$/;"	e	enum:PremiumTier
Tier1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/premium_tier.rs	/^    Tier1,$/;"	e	enum:PremiumTier
Tier2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/premium_tier.rs	/^    Tier2,$/;"	e	enum:PremiumTier
Tier3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/premium_tier.rs	/^    Tier3,$/;"	e	enum:PremiumTier
TimeSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^impl TimeSource {$/;"	c
TimeSource	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^pub(crate) struct TimeSource {$/;"	s
Timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Timeout(Duration),$/;"	e	enum:Action
Timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Timeout,$/;"	e	enum:ActionType
Timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^struct Timeout {$/;"	s
Timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^impl<T> Future for Timeout<T>$/;"	c
Timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^impl<T> Timeout<T> {$/;"	c
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl Drop for TimerEntry {$/;"	c
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl TimerEntry {$/;"	c
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(crate) struct TimerEntry {$/;"	s
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl Send for TimerEntry {}$/;"	c
TimerEntry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl Sync for TimerEntry {}$/;"	c
TimerHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl TimerHandle {$/;"	c
TimerHandle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(crate) struct TimerHandle {$/;"	s
TimerResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^type TimerResult = Result<(), crate::time::error::Error>;$/;"	t
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl TimerShared {$/;"	c
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^impl std::fmt::Debug for TimerShared {$/;"	c
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^pub(crate) struct TimerShared {$/;"	s
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl Send for TimerShared {}$/;"	c
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl Sync for TimerShared {}$/;"	c
TimerShared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^unsafe impl linked_list::Link for TimerShared {$/;"	c
Timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^impl From<&Timestamp> for Timestamp {$/;"	c
Timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^impl From<String> for Timestamp {$/;"	c
Timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^impl FromStr for Timestamp {$/;"	c
Timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^impl<'a> From<&'a str> for Timestamp {$/;"	c
ToNumber	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub trait ToNumber {$/;"	i
ToSocketAddrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^pub trait ToSocketAddrs: sealed::ToSocketAddrsPriv {}$/;"	i
ToSocketAddrsPriv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    pub trait ToSocketAddrsPriv {$/;"	i	module:sealed
Token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^impl Token {$/;"	c
Token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^struct Token {$/;"	s
TokenKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^enum TokenKind {$/;"	g
TooManyArguments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    TooManyArguments { max: u16, given: usize },$/;"	e	enum:DispatchError
Topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Topic {$/;"	e	enum:Change
Topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Topic,$/;"	e	enum:Key
Track	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^impl<T: Future> Future for Track<T> {$/;"	c
Track	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^impl<T> Track<T> {$/;"	c
Trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^impl Trailer {$/;"	c
Trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^pub(super) struct Trailer {$/;"	s
TransferState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^enum TransferState {$/;"	g
TransitionToIdle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) enum TransitionToIdle {$/;"	g
TransitionToNotifiedByRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) enum TransitionToNotifiedByRef {$/;"	g
TransitionToNotifiedByVal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) enum TransitionToNotifiedByVal {$/;"	g
TransitionToRunning	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^pub(super) enum TransitionToRunning {$/;"	g
TransparentOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^        impl<'a, T: fmt::Debug> fmt::Debug for TransparentOption<'a, T> {$/;"	c	function:fmt
TransparentOption	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^        struct TransparentOption<'a, T> {$/;"	s	function:fmt
Trigger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl Serialize for Trigger {$/;"	c
Trigger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl Trigger {$/;"	c
Trigger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl<'de> Deserialize<'de> for Trigger {$/;"	c
Trigger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub enum Trigger {$/;"	g
TriggerMetadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    TriggerMetadata {$/;"	e	enum:Change
TriggerMetadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    TriggerMetadata,$/;"	e	enum:Key
TriggerMetadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub struct TriggerMetadata {$/;"	s
TriggerType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    TriggerType {$/;"	e	enum:Change
TriggerType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    TriggerType,$/;"	e	enum:Key
TriggerType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl From<u8> for TriggerType {$/;"	c
TriggerType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^pub enum TriggerType {$/;"	g
Trimmed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    Trimmed,$/;"	e	enum:State
TrimmedQuoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    TrimmedQuoted,$/;"	e	enum:State
TryAcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl TryAcquireError {$/;"	c
TryAcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl fmt::Display for TryAcquireError {$/;"	c
TryAcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl std::error::Error for TryAcquireError {}$/;"	c
TryAcquireError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^pub enum TryAcquireError {$/;"	g
TryCollectFut	/home/trey/code/sqlx-crud/src/traits.rs	/^pub type TryCollectFut<'e, T> = TryCollect<CrudStream<'e, T>, Vec<T>>;$/;"	t
TryCurrentError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl TryCurrentError {$/;"	c
TryCurrentError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl error::Error for TryCurrentError {}$/;"	c
TryCurrentError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl fmt::Display for TryCurrentError {$/;"	c
TryCurrentError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^pub struct TryCurrentError {$/;"	s
TryCurrentErrorKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^enum TryCurrentErrorKind {$/;"	g
TryCurrentErrorKind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^impl fmt::Debug for TryCurrentErrorKind {$/;"	c
TryDeserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    impl<'de, T: Deserialize<'de>> Deserialize<'de> for TryDeserialize<T> {$/;"	c	function:deserialize_guild_channels
TryDeserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    struct TryDeserialize<T>(StdResult<T, String>);$/;"	s	function:deserialize_guild_channels
TryIoError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^pub struct TryIoError(());$/;"	s
TryJoin3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/try_join.rs	/^impl<T1, F1, T2, F2, T3, F3, E> Future for TryJoin3<F1, F2, F3>$/;"	c
TryLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^impl<T> TryLock<T> {$/;"	c
TryLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^pub(crate) struct TryLock<T> {$/;"	s
TryLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^unsafe impl<T: Send> Send for TryLock<T> {}$/;"	c
TryLock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^unsafe impl<T: Send> Sync for TryLock<T> {}$/;"	c
TryLockError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl Error for TryLockError {}$/;"	c
TryLockError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^impl fmt::Display for TryLockError {$/;"	c
TryLockError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^pub struct TryLockError(pub(super) ());$/;"	s
TryPopResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^pub(crate) enum TryPopResult<T> {$/;"	g
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl fmt::Display for TryRecvError {$/;"	c	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    impl std::error::Error for TryRecvError {}$/;"	c	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub enum TryRecvError {$/;"	g	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl Error for TryRecvError {}$/;"	c
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl fmt::Display for TryRecvError {$/;"	c
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^pub enum TryRecvError {$/;"	g
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    impl fmt::Display for TryRecvError {$/;"	c	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    impl std::error::Error for TryRecvError {}$/;"	c	module:error
TryRecvError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub enum TryRecvError {$/;"	g	module:error
TrySendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T: fmt::Debug> Error for TrySendError<T> {}$/;"	c
TrySendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T> From<SendError<T>> for TrySendError<T> {$/;"	c
TrySendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^impl<T> fmt::Display for TrySendError<T> {$/;"	c
TrySendError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^pub enum TrySendError<T> {$/;"	g
Tungstenite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Tungstenite(TungsteniteError),$/;"	e	enum:Error
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: Semaphore> Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S: fmt::Debug> fmt::Debug for Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Clone for Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Drop for Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^impl<T, S> Tx<T, S> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(crate) struct Tx<T, S> {$/;"	s
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^impl<T> Tx<T> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^impl<T> fmt::Debug for Tx<T> {$/;"	c
Tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^pub(crate) struct Tx<T> {$/;"	s
Type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Type {$/;"	e	enum:Change
Type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Type,$/;"	e	enum:Key
Type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^            Type,$/;"	e	enum:Action::deserialize::Field
Typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/typing.rs	/^impl Typing {$/;"	c
Typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/typing.rs	/^pub struct Typing(Sender<()>);$/;"	s
TypingStart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    TypingStart(TypingStartEvent),$/;"	e	enum:Event
TypingStart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    TypingStart,$/;"	e	enum:EventType
TypingStartEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct TypingStartEvent {$/;"	s
UCred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^impl UCred {$/;"	c
UCred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub struct UCred {$/;"	s
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    impl AsFd for UdpSocket {$/;"	c	module:sys
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    impl AsRawFd for UdpSocket {$/;"	c	module:sys
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^impl TryFrom<std::net::UdpSocket> for UdpSocket {$/;"	c
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^impl UdpSocket {$/;"	c
UdpSocket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^impl fmt::Debug for UdpSocket {$/;"	c
UnavailableGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub struct UnavailableGuild {$/;"	s
UnboundedReceiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> UnboundedReceiver<T> {$/;"	c
UnboundedReceiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> fmt::Debug for UnboundedReceiver<T> {$/;"	c
UnboundedReceiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub struct UnboundedReceiver<T> {$/;"	s
UnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> Clone for UnboundedSender<T> {$/;"	c
UnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> UnboundedSender<T> {$/;"	c
UnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> fmt::Debug for UnboundedSender<T> {$/;"	c
UnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub struct UnboundedSender<T> {$/;"	s
Unconstrained	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/unconstrained.rs	/^impl<F> Future for Unconstrained<F>$/;"	c
Underline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    Underline,$/;"	e	enum:ContentModifier
Unicode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    Unicode(String),$/;"	e	enum:ReactionType
Unicode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    Unicode(String),$/;"	e	enum:GuildWelcomeChannelEmoji
UnicodeEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    UnicodeEmoji {$/;"	e	enum:Change
UnicodeEmoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    UnicodeEmoji,$/;"	e	enum:Key
UnitRatelimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^impl UnitRatelimit {$/;"	c
UnitRatelimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^pub(crate) struct UnitRatelimit {$/;"	s
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl AsFd for UnixDatagram {$/;"	c
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl AsRawFd for UnixDatagram {$/;"	c
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl TryFrom<std::os::unix::net::UnixDatagram> for UnixDatagram {$/;"	c
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl UnixDatagram {$/;"	c
UnixDatagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^impl fmt::Debug for UnixDatagram {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl AsFd for UnixListener {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl AsRawFd for UnixListener {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl TryFrom<std::os::unix::net::UnixListener> for UnixListener {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl UnixListener {$/;"	c
UnixListener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^impl fmt::Debug for UnixListener {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl AsFd for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl AsRawFd for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl AsyncRead for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl AsyncWrite for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl TryFrom<net::UnixStream> for UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl UnixStream {$/;"	c
UnixStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^impl fmt::Debug for UnixStream {$/;"	c
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    Unknown = !0,$/;"	e	enum:OpCode
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    Unknown,$/;"	e	enum:Reason
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    Unknown = !0,$/;"	e	enum:MembershipState
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Unknown = !0,$/;"	e	enum:CommandOptionType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Unknown = !0,$/;"	e	enum:CommandPermissionType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    Unknown = !0,$/;"	e	enum:CommandType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Unknown = !0,$/;"	e	enum:ButtonStyle
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Unknown = !0,$/;"	e	enum:ComponentType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    Unknown = !0,$/;"	e	enum:InputTextStyle
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    Unknown = !0,$/;"	e	enum:InteractionType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    Unknown = !0,$/;"	e	enum:MessageActivityKind
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    Unknown = !0,$/;"	e	enum:MessageType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Unknown = !0,$/;"	e	enum:ChannelType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Unknown = !0,$/;"	e	enum:VideoQualityMode
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    Unknown = !0,$/;"	e	enum:StickerFormatType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    Unknown = !0,$/;"	e	enum:ConnectionVisibility
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            Unknown(String),$/;"	e	enum:GuildMembersChunkEvent::deserialize::Field
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    Unknown(UnknownEvent),$/;"	e	enum:Event
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    Unknown = !0,$/;"	e	enum:ActivityType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Unknown(u8),$/;"	e	enum:Action
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Unknown(String),$/;"	e	enum:MaybeUnknown
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^            Unknown(String),$/;"	e	enum:Action::deserialize::Field
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Unknown(u8),$/;"	e	enum:Action
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Unknown(u8),$/;"	e	enum:ActionType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Unknown(u8),$/;"	e	enum:EventType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Unknown(u8),$/;"	e	enum:KeywordPresetType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Unknown(u8),$/;"	e	enum:Trigger
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    Unknown(u8),$/;"	e	enum:TriggerType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    Unknown = !0,$/;"	e	enum:IntegrationExpireBehaviour
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Unknown = !0,$/;"	e	enum:DefaultMessageNotificationLevel
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Unknown = !0,$/;"	e	enum:ExplicitContentFilter
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Unknown = !0,$/;"	e	enum:MfaLevel
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Unknown = !0,$/;"	e	enum:NsfwLevel
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    Unknown = !0,$/;"	e	enum:VerificationLevel
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/premium_tier.rs	/^    Unknown = !0,$/;"	e	enum:PremiumTier
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    Unknown = !0,$/;"	e	enum:ScheduledEventStatus
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    Unknown = !0,$/;"	e	enum:ScheduledEventType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    Unknown = !0,$/;"	e	enum:InviteTargetType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    Unknown = !0,$/;"	e	enum:StickerFormatType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    Unknown = !0,$/;"	e	enum:StickerType
Unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    Unknown = !0,$/;"	e	enum:WebhookType
UnknownEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct UnknownEvent {$/;"	s
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: 'static> Drop for UnownedTask<S> {$/;"	c
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^impl<S: Schedule> UnownedTask<S> {$/;"	c
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^pub(crate) struct UnownedTask<S: 'static> {$/;"	s
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> Send for UnownedTask<S> {}$/;"	c
UnownedTask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^unsafe impl<S> Sync for UnownedTask<S> {}$/;"	c
UnparkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^impl UnparkThread {$/;"	c
UnparkThread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^pub(crate) struct UnparkThread {$/;"	s
Unparker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^impl Unparker {$/;"	c
Unparker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^pub(crate) struct Unparker {$/;"	s
Unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Unpin = 75,$/;"	e	enum:MessageAction
UnpinMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    UnpinMessage {$/;"	e	enum:RouteInfo
UnrecognisedCommand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^    UnrecognisedCommand(Option<String>),$/;"	e	enum:ParseError
UnrecognisedHook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^type UnrecognisedHook =$/;"	t
UnsafeCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^impl<T> UnsafeCell<T> {$/;"	c
UnsafeCell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^pub(crate) struct UnsafeCell<T>(std::cell::UnsafeCell<T>);$/;"	s
UnsuccessfulRequest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    UnsuccessfulRequest(ErrorResponse),$/;"	e	enum:Error
UnwrapWith	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^        trait UnwrapWith {$/;"	i	method:Content::to_string
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 101,$/;"	e	enum:ScheduledEventAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 11,$/;"	e	enum:ChannelAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 111,$/;"	e	enum:ThreadAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 14,$/;"	e	enum:ChannelOverwriteAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 24,$/;"	e	enum:MemberAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 31,$/;"	e	enum:RoleAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 41,$/;"	e	enum:InviteAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 51,$/;"	e	enum:WebhookAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 61,$/;"	e	enum:EmojiAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 81,$/;"	e	enum:IntegrationAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 84,$/;"	e	enum:StageInstanceAction
Update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Update = 91,$/;"	e	enum:StickerAction
UpdateMessage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    UpdateMessage = 7,$/;"	e	enum:InteractionResponseType
UpdateResult	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^type UpdateResult = Result<Snapshot, Snapshot>;$/;"	t
Url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    Url(String),$/;"	e	enum:Error
Url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    Url(UrlError),$/;"	e	enum:Error
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    User(TicketCounter),$/;"	e	enum:Bucket
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    User,$/;"	e	enum:LimitedFor
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    User(String),$/;"	e	enum:Reason
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    User = 2,$/;"	e	enum:CommandPermissionType
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    User = 2,$/;"	e	enum:CommandType
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    User = 6,$/;"	e	enum:CommandOptionType
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    User(User, Option<Box<PartialMember>>),$/;"	e	enum:ResolvedTarget
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    User(User, Option<PartialMember>),$/;"	e	enum:CommandDataOptionValue
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    User(UserId),$/;"	e	enum:Mention
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        struct User {$/;"	s	function:test::test_discriminator_serde
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl Default for User {$/;"	c
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl Eq for User {}$/;"	c
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl From<CurrentUser> for User {$/;"	c
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl Hash for User {$/;"	c
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl PartialEq for User {$/;"	c
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl User {$/;"	c
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl fmt::Display for User {$/;"	c
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl<'a> From<&'a CurrentUser> for User {$/;"	c
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^pub struct User {$/;"	s
User	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^impl ArgumentConvert for User {$/;"	c
User	/home/trey/code/sqlx-crud/examples/serenity/src/main.rs	/^struct User {$/;"	s
UserAndLog	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    UserAndLog { user: String, log: String },$/;"	e	enum:Reason
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^impl From<CommandPermissionId> for UserId {$/;"	c
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^impl From<TargetId> for UserId {$/;"	c
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct UserId(#[serde(with = "snowflake")] pub u64);$/;"	s
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl From<CurrentUser> for UserId {$/;"	c
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl From<Member> for UserId {$/;"	c
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl From<User> for UserId {$/;"	c
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl UserId {$/;"	c
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl<'a> From<&'a CurrentUser> for UserId {$/;"	c
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl<'a> From<&'a Member> for UserId {$/;"	c
UserId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^impl<'a> From<&'a User> for UserId {$/;"	c
UserIds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner_message.rs	/^    UserIds(Vec<UserId>),$/;"	e	enum:ChunkGuildFilter
UserLimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    UserLimit {$/;"	e	enum:Change
UserLimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    UserLimit,$/;"	e	enum:Key
UserOpt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        struct UserOpt {$/;"	s	function:test::test_discriminator_serde
UserPagination	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub enum UserPagination {$/;"	g
UserParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^impl fmt::Display for UserParseError {$/;"	c
UserParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^impl std::error::Error for UserParseError {}$/;"	c
UserParseError	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^pub enum UserParseError {$/;"	g
UserUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    UserUpdate(UserUpdateEvent),$/;"	e	enum:Event
UserUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    UserUpdate,$/;"	e	enum:EventType
UserUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for UserUpdateEvent {$/;"	c
UserUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct UserUpdateEvent {$/;"	s
Users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    Users,$/;"	e	enum:ParseValue
UsersId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    UsersId,$/;"	e	enum:Route
UsersMe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    UsersMe,$/;"	e	enum:Route
UsersMeChannels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    UsersMeChannels,$/;"	e	enum:Route
UsersMeConnections	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    UsersMeConnections,$/;"	e	enum:Route
UsersMeGuilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    UsersMeGuilds,$/;"	e	enum:Route
UsersMeGuildsId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    UsersMeGuildsId,$/;"	e	enum:Route
Uses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Uses {$/;"	e	enum:Change
Uses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    Uses,$/;"	e	enum:Key
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub type Value = serde_json::Value;$/;"	t
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub type Value = simd_json::OwnedValue;$/;"	t
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^            type Value = ReactionType;$/;"	t	implementation:ReactionType::deserialize::ReactionTypeVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            type Value = EventType;$/;"	t	implementation:EventType::deserialize::EventTypeVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            type Value = GuildMembersChunkEvent;$/;"	t	implementation:GuildMembersChunkEvent::deserialize::GuildMembersChunkVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    type Value = Change;$/;"	t	implementation:ChangeVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^        type Value = Option<u64>;$/;"	t	implementation:optional_string::OptionalStringVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^            type Value = Action;$/;"	t	implementation:Action::deserialize::Visitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^        type Value = bool;$/;"	t	implementation:premium_subscriber::NullValueVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^        type Value = u64;$/;"	t	implementation:snowflake::SnowflakeVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^            type Value = Permissions;$/;"	t	implementation:Permissions::deserialize::StringVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^            type Value = Option<u16>;$/;"	t	implementation:discriminator::option::OptionalDiscriminatorVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        type Value = u16;$/;"	t	implementation:discriminator::DiscriminatorVisitor
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    type Value = HashMap<K, V>;$/;"	t
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    Value(T),$/;"	e	enum:Read
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^impl<T> Value<T> {$/;"	c
Value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^struct Value<T> {$/;"	s
Values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^impl<T> Values<T> {$/;"	c
Values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^impl<T> ops::Index<usize> for Values<T> {$/;"	c
Values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^struct Values<T>([UnsafeCell<MaybeUninit<T>>; BLOCK_CAP]);$/;"	s
VanityUrlCode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    VanityUrlCode {$/;"	e	enum:Change
VanityUrlCode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    VanityUrlCode,$/;"	e	enum:Key
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^impl AsyncWrite for Vec<u8> {$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^unsafe impl VecU8 for &mut Vec<u8> {}$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^unsafe impl VecU8 for Vec<u8> {}$/;"	c
Vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^impl Storage for Vec<EventInfo> {$/;"	c
VecU8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^pub(crate) unsafe trait VecU8: AsRef<Vec<u8>> + AsMut<Vec<u8>> {}$/;"	i
VecWithInitialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^impl VecWithInitialized<Vec<u8>> {$/;"	c
VecWithInitialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^impl<V> VecWithInitialized<V>$/;"	c
VecWithInitialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^pub(crate) struct VecWithInitialized<V> {$/;"	s
VerificationLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    VerificationLevel {$/;"	e	enum:Change
VerificationLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    VerificationLevel,$/;"	e	enum:Key
VerificationLevel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub enum VerificationLevel {$/;"	g
Version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    impl Version {$/;"	c	module:state
Version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub(super) struct Version(usize);$/;"	s	module:state
VideoQualityMode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^pub enum VideoQualityMode {$/;"	g
Visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^        impl<'de> serde::de::Visitor<'de> for Visitor {$/;"	c	method:Action::deserialize
Visitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^        struct Visitor;$/;"	s	method:Action::deserialize
Voice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    Voice = 2,$/;"	e	enum:ChannelType
Voice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    Voice = 2,$/;"	e	enum:ScheduledEventType
VoiceGatewayManager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/voice/mod.rs	/^pub trait VoiceGatewayManager: Send + Sync {$/;"	i
VoiceRegion	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^pub struct VoiceRegion {$/;"	s
VoiceRegions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    VoiceRegions,$/;"	e	enum:Route
VoiceServerPing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    VoiceServerPing = 5,$/;"	e	enum:OpCode
VoiceServerUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    VoiceServerUpdate(VoiceServerUpdateEvent),$/;"	e	enum:Event
VoiceServerUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    VoiceServerUpdate,$/;"	e	enum:EventType
VoiceServerUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^impl fmt::Debug for VoiceServerUpdateEvent {$/;"	c
VoiceServerUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct VoiceServerUpdateEvent {$/;"	s
VoiceState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^impl fmt::Debug for VoiceState {$/;"	c
VoiceState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^impl<'de> Deserialize<'de> for VoiceState {$/;"	c
VoiceState	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^pub struct VoiceState {$/;"	s
VoiceStateUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^    VoiceStateUpdate = 4,$/;"	e	enum:OpCode
VoiceStateUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    VoiceStateUpdate(VoiceStateUpdateEvent),$/;"	e	enum:Event
VoiceStateUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    VoiceStateUpdate,$/;"	e	enum:EventType
VoiceStateUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^impl CacheUpdate for VoiceStateUpdateEvent {$/;"	c
VoiceStateUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct VoiceStateUpdateEvent {$/;"	s
Vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^pub(super) struct Vtable {$/;"	s
W	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/async_write_ext.rs	/^impl<W: AsyncWrite + ?Sized> AsyncWriteExt for W {}$/;"	c
WAKER_VTABLE	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^static WAKER_VTABLE: RawWakerVTable =$/;"	v
Wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^pub(crate) trait Wait {$/;"	i
WaitList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^type WaitList = LinkedList<Waiter, <Waiter as linked_list::Link>::Target>;$/;"	t
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^impl Waiter {$/;"	c
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^struct Waiter {$/;"	s
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^unsafe impl linked_list::Link for Waiter {$/;"	c
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^struct Waiter {$/;"	s
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^unsafe impl linked_list::Link for Waiter {$/;"	c
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^impl Waiter {$/;"	c
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^struct Waiter {$/;"	s
Waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^unsafe impl linked_list::Link for Waiter {$/;"	c
Waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^struct Waiters {$/;"	s
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^impl Drop for Waiting {$/;"	c
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^struct Waiting {$/;"	s
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^unsafe impl Send for Waiting {}$/;"	c
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^unsafe impl Sync for Waiting {}$/;"	c
Waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    Waiting,$/;"	e	enum:State
Waitlist	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^struct Waitlist {$/;"	s
Wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^pub(crate) trait Wake: Send + Sync + Sized + 'static {$/;"	i
WakeList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^impl Drop for WakeList {$/;"	c
WakeList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^impl WakeList {$/;"	c
WakeList	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^pub(crate) struct WakeList {$/;"	s
Waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl WakerRef for &Waker {$/;"	c
Waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^impl WakerRef for Waker {$/;"	c
Waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^impl AssertSend for Waker {}$/;"	c
Waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^impl AssertSync for Waker {}$/;"	c
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^impl<S> ops::Deref for WakerRef<'_, S> {$/;"	c
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^pub(super) struct WakerRef<'a, S: 'static> {$/;"	s
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^trait WakerRef {$/;"	i
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^impl Deref for WakerRef<'_> {$/;"	c
WakerRef	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^pub(crate) struct WakerRef<'a> {$/;"	s
Watching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    Watching = 3,$/;"	e	enum:ActivityType
WeakSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> Clone for WeakSender<T> {$/;"	c
WeakSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> WeakSender<T> {$/;"	c
WeakSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^impl<T> fmt::Debug for WeakSender<T> {$/;"	c
WeakSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub struct WeakSender<T> {$/;"	s
WeakUnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> Clone for WeakUnboundedSender<T> {$/;"	c
WeakUnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> WeakUnboundedSender<T> {$/;"	c
WeakUnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^impl<T> fmt::Debug for WeakUnboundedSender<T> {$/;"	c
WeakUnboundedSender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub struct WeakUnboundedSender<T> {$/;"	s
WebSocketGatewayClientExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^pub trait WebSocketGatewayClientExt {$/;"	i
Webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    Webhook(WebhookAction),$/;"	e	enum:Action
Webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^impl Webhook {$/;"	c
Webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^impl fmt::Debug for Webhook {$/;"	c
Webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^pub struct Webhook {$/;"	s
WebhookAction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^pub enum WebhookAction {$/;"	g
WebhookId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub struct WebhookId(#[serde(with = "snowflake")] pub u64);$/;"	s
WebhookId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^impl WebhookId {$/;"	c
WebhookIncomming	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    WebhookIncomming,$/;"	e	enum:Scope
WebhookType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^impl WebhookType {$/;"	c
WebhookType	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^pub enum WebhookType {$/;"	g
WebhookUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    WebhookUpdate(WebhookUpdateEvent),$/;"	e	enum:Event
WebhookUpdate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    WebhookUpdate,$/;"	e	enum:EventType
WebhookUpdateEvent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub struct WebhookUpdateEvent {$/;"	s
WebhooksApplicationId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    WebhooksApplicationId(u64),$/;"	e	enum:Route
WebhooksId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    WebhooksId(u64),$/;"	e	enum:Route
WebhooksIdMessagesId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    WebhooksIdMessagesId(u64),$/;"	e	enum:Route
Wheel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^impl Wheel {$/;"	c
Wheel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^pub(crate) struct Wheel {$/;"	s
WidgetChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    WidgetChannelId {$/;"	e	enum:Change
WidgetChannelId	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    WidgetChannelId,$/;"	e	enum:Key
WidgetEnabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    WidgetEnabled {$/;"	e	enum:Change
WidgetEnabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    WidgetEnabled,$/;"	e	enum:Key
WithPrefixes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    WithPrefixes(GroupMap),$/;"	e	enum:Map
WithWhiteSpace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^impl Default for WithWhiteSpace {$/;"	c
WithWhiteSpace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^impl From<(bool, bool)> for WithWhiteSpace {$/;"	c
WithWhiteSpace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^impl From<(bool, bool, bool)> for WithWhiteSpace {$/;"	c
WithWhiteSpace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^impl From<bool> for WithWhiteSpace {$/;"	c
WithWhiteSpace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^pub struct WithWhiteSpace {$/;"	s
WithoutRole	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    WithoutRole = 1,$/;"	e	enum:ExplicitContentFilter
Worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^impl Worker {$/;"	c
Worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(super) struct Worker {$/;"	s
WorkerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^impl WorkerMetrics {$/;"	c
WorkerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^pub(crate) struct WorkerMetrics {}$/;"	s
WorkerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^impl WorkerMetrics {$/;"	c
WorkerMetrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^pub(crate) struct WorkerMetrics {$/;"	s
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> WrapSame<T, U> {$/;"	c
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> WrapSameExt for &'_ WrapSame<T, U> {$/;"	c
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^impl<T, U> WrapSameExt for WrapSame<T, Option<U>> {$/;"	c
WrapSame	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub struct WrapSame<T, U>(PhantomData<T>, PhantomData<U>);$/;"	s
WrapSameExt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub trait WrapSameExt: Sized {$/;"	i
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Wrapped = Option<T>;$/;"	t	implementation:WrapSame
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Wrapped = T;$/;"	t	implementation:WrapSame
Wrapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    type Wrapped;$/;"	t	interface:WrapSameExt
Write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    Write(io::Result<()>),$/;"	e	enum:Operation
Write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write.rs	/^impl<W> Future for Write<'_, W>$/;"	c
Write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    Write,$/;"	e	enum:Direction
WriteAll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all.rs	/^impl<W> Future for WriteAll<'_, W>$/;"	c
WriteAllBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all_buf.rs	/^impl<W, B> Future for WriteAllBuf<'_, W, B>$/;"	c
WriteBuf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_buf.rs	/^impl<W, B> Future for WriteBuf<'_, W, B>$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T: AsyncWrite> AsyncWrite for WriteHalf<T> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T: fmt::Debug> fmt::Debug for WriteHalf<T> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^impl<T> WriteHalf<T> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^unsafe impl<T: Send> Send for WriteHalf<T> {}$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^unsafe impl<T: Sync> Sync for WriteHalf<T> {}$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl AsRef<TcpStream> for WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl AsyncWrite for WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^impl WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^pub struct WriteHalf<'a>(&'a TcpStream);$/;"	s
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl AsRef<UnixStream> for WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl AsyncWrite for WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^impl WriteHalf<'_> {$/;"	c
WriteHalf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^pub struct WriteHalf<'a>(&'a UnixStream);$/;"	s
WriteVectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_vectored.rs	/^impl<W> Future for WriteVectored<'_, '_, W>$/;"	c
WrongGuild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    WrongGuild,$/;"	e	enum:Error
WsStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^pub type WsStream = WebSocketStream<ConnectStream>;$/;"	t
WsStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^impl WebSocketGatewayClientExt for WsStream {$/;"	c
WsStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^impl ReceiverExt for WsStream {$/;"	c
WsStream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^impl SenderExt for WsStream {$/;"	c
Yes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    Yes,$/;"	e	enum:CombiLocalSet
YieldNow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^    impl Future for YieldNow {$/;"	c	function:yield_now
YieldNow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^    struct YieldNow {$/;"	s	function:yield_now
ZeroSizedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    impl Future for ZeroSizedFuture {$/;"	c	module:test
ZeroSizedFuture	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    struct ZeroSizedFuture {}$/;"	s	module:test
__task_local_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^macro_rules! __task_local_inner {$/;"	M
_a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^        _a: [u8; 2_000_000],$/;"	m	struct:assert_no_stack_overflow::Foo
_add_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    fn _add_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:CreateMessage
_add_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    fn _add_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:EditMessage
_add_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    async fn _add_role(&mut self, http: impl AsRef<Http>, role_id: RoleId) -> Result<()> {$/;"	P	implementation:Member
_afk_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    fn _afk_channel(&mut self, channel: Option<ChannelId>) {$/;"	P	implementation:EditGuild
_after	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^    fn _after(&mut self, message_id: MessageId) {$/;"	P	implementation:GetMessages
_anchor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    _anchor: PhantomData<Rc<()>>,$/;"	m	struct:CachedParkThread
_around	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^    fn _around(&mut self, message_id: MessageId) {$/;"	P	implementation:GetMessages
_assert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn _assert<T: Send + Sync>() {}$/;"	f	function:_assert_kinds
_assert_kinds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^fn _assert_kinds() {$/;"	f
_avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    fn _avatar(&mut self, avatar_url: String) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
_ban_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    async fn _ban_with_reason($/;"	P	implementation:GuildId
_ban_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    async fn _ban_with_reason($/;"	P	implementation:Guild
_before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^    fn _before(&mut self, message_id: MessageId) {$/;"	P	implementation:GetMessages
_category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    fn _category(&mut self, category: Option<ChannelId>) {$/;"	P	implementation:EditChannel
_category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _category(&self, channel_id: ChannelId) -> Option<ChannelCategory> {$/;"	P	implementation:Cache
_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _channel(&self, id: ChannelId) -> Option<Channel> {$/;"	P	implementation:Cache
_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn _channel(&mut self, channel: ChannelId) -> &mut Self {$/;"	P	implementation:MessageBuilder
_colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    fn _colour(&mut self, colour: Colour) {$/;"	P	implementation:CreateEmbed
_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    fn _content(&mut self, content: String) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    fn _content(&mut self, content: String) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    fn _content(&mut self, content: String) -> &mut Self {$/;"	P	implementation:CreateMessage
_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    fn _content(&mut self, content: String) -> &mut Self {$/;"	P	implementation:EditInteractionResponse
_create_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    async fn _create_followup_message<'a>($/;"	P	implementation:ApplicationCommandInteraction
_create_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    async fn _create_interaction_response<'a>($/;"	P	implementation:ApplicationCommandInteraction
_edit_voice_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    async fn _edit_voice_state<F>($/;"	P	implementation:GuildChannel
_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    fn _emoji(&mut self, emoji: ReactionType) -> &mut Self {$/;"	P	implementation:CreateButton
_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    fn _emoji(&mut self, emoji: ReactionType) -> &mut Self {$/;"	P	implementation:CreateSelectMenuOption
_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    fn _field(&mut self, name: String, value: String, inline: bool) {$/;"	P	implementation:CreateEmbed
_greater_member_hierarchy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    fn _greater_member_hierarchy($/;"	P	implementation:Guild
_greater_member_hierarchy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    async fn _greater_member_hierarchy($/;"	P	implementation:PartialGuild
_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    _guard: context::SetCurrentGuard,$/;"	m	struct:EnterGuard
_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _guild(&self, id: GuildId) -> Option<Guild> {$/;"	P	implementation:Cache
_guild_categories	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _guild_categories(&self, guild_id: GuildId) -> Option<DashMap<ChannelId, ChannelCategory>/;"	P	implementation:Cache
_guild_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _guild_channel(&self, id: ChannelId) -> Option<GuildChannel> {$/;"	P	implementation:Cache
_guild_channel_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _guild_channel_field<Ret, Fun>(&self, id: ChannelId, field_selector: Fun) -> Option<Ret>$/;"	P	implementation:Cache
_guild_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _guild_channels(&self, guild_id: GuildId) -> Option<DashMap<ChannelId, GuildChannel>> {$/;"	P	implementation:Cache
_guild_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _guild_field<Ret, Fun>(&self, id: GuildId, field_accessor: Fun) -> Option<Ret>$/;"	P	implementation:Cache
_guild_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _guild_roles(&self, guild_id: GuildId) -> Option<HashMap<RoleId, Role>> {$/;"	P	implementation:Cache
_handle_lifetime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    _handle_lifetime: PhantomData<&'a Handle>,$/;"	m	struct:EnterGuard
_has_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn _has_role<'a>($/;"	P	implementation:User
_m	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    _m: std::marker::PhantomPinned,$/;"	m	struct:TimerEntry
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    _marker: PhantomData<T>,$/;"	m	struct:Iter
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^    pub(crate) _marker: marker::PhantomData<T>,$/;"	m	struct:ScopedKey
_marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    _marker: PhantomData<*const L>,$/;"	m	struct:LinkedList
_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _member(&self, guild_id: GuildId, user_id: UserId) -> Option<Member> {$/;"	P	implementation:Cache
_member_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _member_field<Ret, Fun>($/;"	P	implementation:Cache
_member_permission_from_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub(crate) fn _member_permission_from_member(&self, member: &Member) -> Permissions {$/;"	P	implementation:Guild
_member_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    async fn _member_permissions($/;"	P	implementation:Guild
_member_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    async fn _member_permissions($/;"	P	implementation:PartialGuild
_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _message(&self, channel_id: ChannelId, message_id: MessageId) -> Option<Message> {$/;"	P	implementation:Cache
_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    fn _new(http: Http, intents: GatewayIntents) -> Self {$/;"	P	implementation:ClientBuilder
_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    fn _new(client: Client, token: String) -> Self {$/;"	P	implementation:Ratelimiter
_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    fn _new(name: String, value: String, inline: bool) -> Self {$/;"	P	implementation:EmbedField
_not_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    _not_send: PhantomData<*const ()>,$/;"	m	struct:LocalNotified
_not_send_or_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    _not_send_or_sync: PhantomData<*const ()>,$/;"	m	struct:LocalOwnedTasks
_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    fn _owner(&mut self, user_id: UserId) {$/;"	P	implementation:EditGuild
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    _p: PhantomData<T>,$/;"	m	struct:Inject
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    _p: PhantomData<S>,$/;"	m	struct:Task
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    _p: PhantomData<S>,$/;"	m	struct:UnownedTask
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^    _p: PhantomData<(&'a Header, S)>,$/;"	m	struct:WakerRef
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    _p: PhantomPinned,$/;"	m	struct:TimerShared
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    _p: PhantomPinned,$/;"	m	struct:Waiter
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    _p: PhantomPinned,$/;"	m	struct:Waiter
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    _p: PhantomPinned,$/;"	m	struct:Waiter
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub(super) _p: PhantomData<T>,$/;"	m	struct:OwnedRwLockReadGuard
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) _p: PhantomData<T>,$/;"	m	struct:OwnedRwLockWriteGuard
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) _p: PhantomData<T>,$/;"	m	struct:OwnedRwLockMappedWriteGuard
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    _p: PhantomData<std::rc::Rc<()>>,$/;"	m	struct:LockGuard
_p	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    _p: PhantomData<&'a ()>,$/;"	m	struct:WakerRef
_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    _pin: PhantomPinned,$/;"	m	struct:ListEntry
_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    _pin: PhantomPinned,$/;"	m	struct:PointersInner
_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    _pin: std::marker::PhantomPinned,$/;"	m	struct:Slot
_pinned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    _pinned: PhantomPinned,$/;"	m	struct:TaskLocalFuture
_prepare_edit_builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    fn _prepare_edit_builder<'a>(&self) -> EditMessage<'a> {$/;"	P	implementation:Message
_private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    _private: (),$/;"	m	struct:AccessError
_private_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _private_channel(&self, channel_id: ChannelId) -> Option<PrivateChannel> {$/;"	P	implementation:Cache
_push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn _push(&mut self, content: &str) -> &mut Self {$/;"	P	implementation:MessageBuilder
_react	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    async fn _react($/;"	P	implementation:Message
_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    fn _reactions(&mut self, reactions: Vec<ReactionType>) {$/;"	P	implementation:CreateMessage
_read_image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^fn _read_image(path: &Path) -> Result<String> {$/;"	f
_rename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub fn _rename() {}$/;"	f
_reply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    async fn _reply($/;"	P	implementation:Message
_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _role(&self, guild_id: GuildId, role_id: RoleId) -> Option<Role> {$/;"	P	implementation:Cache
_role_permissions_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub(crate) fn _role_permissions_in($/;"	P	implementation:Guild
_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    fn _roles(&mut self, roles: Vec<Value>) {$/;"	P	implementation:EditMember
_send_edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    async fn _send_edit<'a>(&mut self, http: &Http, builder: EditMessage<'a>) -> Result<()> {$/;"	P	implementation:Message
_send_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    async fn _send_message<'a>(self, http: &Http, msg: CreateMessage<'a>) -> Result<Message> {$/;"	P	implementation:ChannelId
_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    fn _timestamp(&mut self, timestamp: Timestamp) {$/;"	P	implementation:CreateEmbed
_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    fn _timestamp(&mut self, field: &'static str, timestamp: Timestamp) {$/;"	P	implementation:CreateScheduledEvent
_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    fn _timestamp(&mut self, field: &'static str, timestamp: Timestamp) {$/;"	P	implementation:EditScheduledEvent
_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^    _tx: Arc<oneshot::Sender<()>>,$/;"	m	struct:Sender
_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn _user(&self, user_id: UserId) -> Option<User> {$/;"	P	implementation:Cache
_user_permissions_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub(crate) fn _user_permissions_in($/;"	P	implementation:Guild
_username	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    fn _username(&mut self, username: String) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    async fn _users($/;"	P	implementation:Reaction
_verification_level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    fn _verification_level(&mut self, verification_level: VerificationLevel) {$/;"	P	implementation:EditGuild
_voice_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    fn _voice_channel(&mut self, channel_id: ChannelId) {$/;"	P	implementation:EditMember
abort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    pub fn abort(&self) {$/;"	P	implementation:AbortHandle
abort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub fn abort(&self) {$/;"	P	implementation:JoinHandle
abort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod abort;$/;"	n
abort_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn abort_all(&mut self) {$/;"	P	implementation:JoinSet
abort_all_during_completion	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_join_set.rs	/^fn abort_all_during_completion() {$/;"	f
abort_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub fn abort_handle(&self) -> super::AbortHandle {$/;"	P	implementation:JoinHandle
about_to_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn about_to_park(&mut self) {$/;"	P	implementation:MetricsBatch
about_to_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn about_to_park(&mut self) {}$/;"	P	implementation:MetricsBatch
accent_colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub accent_colour: Option<Colour>,$/;"	m	struct:CurrentUser
accent_colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub accent_colour: Option<Colour>,$/;"	m	struct:User
accent_colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub accent_colour: Option<u32>,$/;"	m	struct:CurrentUser
accent_colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub accent_colour: Option<u32>,$/;"	m	struct:User
accept	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub async fn accept(&self) -> io::Result<(TcpStream, SocketAddr)> {$/;"	P	implementation:TcpListener
accept	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub async fn accept(&self) -> io::Result<(UnixStream, SocketAddr)> {$/;"	P	implementation:UnixListener
accept_added	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    accept_added: bool,$/;"	m	struct:FilterOptions
accept_removed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    accept_removed: bool,$/;"	m	struct:FilterOptions
access_inbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    access_inbound: bool,$/;"	m	struct:ServerOptions
access_inbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn access_inbound(&mut self, allowed: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
access_outbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    access_outbound: bool,$/;"	m	struct:ServerOptions
access_outbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn access_outbound(&mut self, allowed: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
access_system_security	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    access_system_security: bool,$/;"	m	struct:ServerOptions
access_system_security	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn access_system_security(&mut self, requested: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
access_token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/add_member.rs	/^    pub fn access_token(&mut self, access_token: impl ToString) -> &mut Self {$/;"	P	implementation:AddMember
account	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub account: IntegrationAccount,$/;"	m	struct:Integration
acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn acquire(&self, num_permits: u32) -> Acquire<'_> {$/;"	P	implementation:Semaphore
acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    async fn acquire(&self) {$/;"	P	implementation:Mutex
acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub async fn acquire(&self) -> Result<SemaphorePermit<'_>, AcquireError> {$/;"	P	implementation:Semaphore
acquire_many	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub async fn acquire_many(&self, n: u32) -> Result<SemaphorePermit<'_>, AcquireError> {$/;"	P	implementation:Semaphore
acquire_many_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub async fn acquire_many_owned($/;"	P	implementation:Semaphore
acquire_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub async fn acquire_owned(self: Arc<Self>) -> Result<OwnedSemaphorePermit, AcquireError> {$/;"	P	implementation:Semaphore
action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    async fn action(&mut self, action: &ShardAction) -> Result<()> {$/;"	P	implementation:ShardRunner
action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub action: RateLimitAction,$/;"	m	struct:RateLimitInfo
action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^            action: Action,$/;"	m	struct:tests::action_serde::T
action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub action: Action,$/;"	m	struct:AuditLogEntry
action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub action: Action,$/;"	m	struct:ActionExecution
action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^fn action(globals: &'static Globals, signal: libc::c_int) {$/;"	f
action_serde	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    fn action_serde() {$/;"	f	module:tests
action_serde	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn action_serde() {$/;"	f	module:tests
action_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    fn action_value() {$/;"	f	module:tests
actions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^    pub fn actions<I>(&mut self, actions: I) -> &mut Self$/;"	P	implementation:EditAutoModRule
actions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub actions: Vec<Action>,$/;"	m	struct:Rule
active	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^        active: AtomicUsize,$/;"	m	struct:basic_usage::Shared
active_delays	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub active_delays: u32,$/;"	m	struct:RateLimitInfo
activities	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub activities: Vec<Activity>,$/;"	m	struct:Presence
activity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub activity: Option<MessageActivity>,$/;"	m	struct:Message
actor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^    async fn actor(shared: Arc<Shared>) {$/;"	f	function:basic_usage
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn add(mut self, rhs: ContentModifier) -> Content {$/;"	P	implementation:Content
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn add(mut self, rhs: T) -> Content {$/;"	P	implementation:Content
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn add(self, rhs: ContentModifier) -> Content {$/;"	P	implementation:ContentModifier
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn add(self, rhs: T) -> Content {$/;"	P	implementation:ContentModifier
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub const fn add(self, other: Interest) -> Interest {$/;"	P	implementation:Interest
add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn add(self, other: Duration) -> Instant {$/;"	P	implementation:Instant
add_action_row	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn add_action_row(&mut self, mut row: CreateActionRow) -> &mut Self {$/;"	P	implementation:CreateComponents
add_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_application_command(&mut self, command: CreateApplicationCommand) -> &mut Self {$/;"	P	implementation:CreateApplicationCommands
add_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn add_application_command($/;"	P	implementation:CreateApplicationCommandsPermissions
add_assign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn add_assign(&mut self, rhs: Duration) {$/;"	P	implementation:Instant
add_button	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn add_button(&mut self, button: CreateButton) -> &mut Self {$/;"	P	implementation:CreateActionRow
add_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn add_channel_id(mut self, channel_id: impl Into<ChannelId>) -> Self {$/;"	P	implementation:EventCollectorBuilder
add_choice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    fn add_choice(&mut self, value: Value) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
add_choice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    fn add_choice(&mut self, value: Value) -> &mut Self {$/;"	P	implementation:CreateAutocompleteResponse
add_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn add_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
add_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn add_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
add_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn add_embed<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateMessage
add_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    pub fn add_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:EditInteractionResponse
add_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn add_embed<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditMessage
add_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn add_embeds(&mut self, embeds: Vec<CreateEmbed>) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
add_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn add_embeds(&mut self, embeds: Vec<CreateEmbed>) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
add_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn add_embeds(&mut self, embeds: Vec<CreateEmbed>) -> &mut Self {$/;"	P	implementation:CreateMessage
add_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    pub fn add_embeds(&mut self, embeds: Vec<CreateEmbed>) -> &mut Self {$/;"	P	implementation:EditInteractionResponse
add_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn add_embeds(&mut self, embeds: Vec<CreateEmbed>) -> &mut Self {$/;"	P	implementation:EditMessage
add_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) unsafe fn add_entry(&mut self, item: TimerHandle) {$/;"	P	implementation:Level
add_event_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn add_event_type(mut self, event_type: EventType) -> Self {$/;"	P	implementation:EventCollectorBuilder
add_existing_attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn add_existing_attachment(&mut self, attachment: AttachmentId) -> &mut Self {$/;"	P	implementation:EditMessage
add_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn add_file<T: Into<AttachmentType<'a>>>(&mut self, file: T) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
add_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn add_file<T: Into<AttachmentType<'a>>>(&mut self, file: T) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
add_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn add_file<T: Into<AttachmentType<'a>>>(&mut self, file: T) -> &mut Self {$/;"	P	implementation:CreateMessage
add_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn add_file<T: Into<AttachmentType<'a>>>(&mut self, file: T) -> &mut Self {$/;"	P	implementation:ExecuteWebhook
add_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn add_files<T: Into<AttachmentType<'a>>, It: IntoIterator<Item = T>>($/;"	P	implementation:CreateInteractionResponseData
add_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn add_files<T: Into<AttachmentType<'a>>, It: IntoIterator<Item = T>>($/;"	P	implementation:CreateInteractionResponseFollowup
add_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn add_files<T: Into<AttachmentType<'a>>, It: IntoIterator<Item = T>>($/;"	P	implementation:CreateMessage
add_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn add_files<T: Into<AttachmentType<'a>>, It: IntoIterator<Item = T>>($/;"	P	implementation:ExecuteWebhook
add_guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn add_guild_id(mut self, guild_id: impl Into<GuildId>) -> Self {$/;"	P	implementation:EventCollectorBuilder
add_guild_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn add_guild_member($/;"	P	implementation:Http
add_input_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn add_input_text(&mut self, input_text: CreateInputText) -> &mut Self {$/;"	P	implementation:CreateActionRow
add_int_choice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_int_choice<D: ToString>(&mut self, name: D, value: i32) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
add_int_choice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn add_int_choice<D: ToString>(&mut self, name: D, value: i64) -> &mut Self {$/;"	P	implementation:CreateAutocompleteResponse
add_int_choice_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_int_choice_localized<L: ToString, D: ToString>($/;"	P	implementation:CreateApplicationCommandOption
add_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod add_member;$/;"	n
add_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn add_member($/;"	P	implementation:GuildId
add_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn add_member($/;"	P	implementation:Guild
add_member_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn add_member_role($/;"	P	implementation:Http
add_message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn add_message_id(mut self, message_id: impl Into<MessageId>) -> Self {$/;"	P	implementation:EventCollectorBuilder
add_number_choice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_number_choice<D: ToString>(&mut self, name: D, value: f64) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
add_number_choice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn add_number_choice<D: ToString>(&mut self, name: D, value: f64) -> &mut Self {$/;"	P	implementation:CreateAutocompleteResponse
add_number_choice_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_number_choice_localized<L: ToString, D: ToString>($/;"	P	implementation:CreateApplicationCommandOption
add_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_option(&mut self, option: CreateApplicationCommandOption) -> &mut Self {$/;"	P	implementation:CreateApplicationCommand
add_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn add_option(&mut self, option: CreateSelectMenuOption) -> &mut Self {$/;"	P	implementation:CreateSelectMenuOptions
add_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn add_permission($/;"	P	implementation:CreateApplicationCommandPermissionsData
add_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn add_permissions($/;"	P	implementation:CreateApplicationCommandPermissions
add_permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn add_permit(&self) {$/;"	P	implementation:Semaphore
add_permit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn add_permit(&self);$/;"	P	interface:Semaphore
add_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn add_permits(&self, n: usize) {$/;"	P	implementation:Semaphore
add_permits_locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn add_permits_locked(&self, mut rem: usize, waiters: MutexGuard<'_, Waitlist>) {$/;"	P	implementation:Semaphore
add_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn add_reactions(self) -> bool {$/;"	P	implementation:Permissions
add_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn add_role($/;"	P	implementation:Member
add_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn add_roles($/;"	P	implementation:Member
add_select_menu	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn add_select_menu(&mut self, menu: CreateSelectMenu) -> &mut Self {$/;"	P	implementation:CreateActionRow
add_source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(super) fn add_source($/;"	P	implementation:Handle
add_sticker_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn add_sticker_id(&mut self, sticker_id: impl Into<StickerId>) -> &mut Self {$/;"	P	implementation:CreateMessage
add_sticker_ids	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn add_sticker_ids<T: Into<StickerId>, It: IntoIterator<Item = T>>($/;"	P	implementation:CreateMessage
add_string_choice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_string_choice<D: ToString, E: ToString>(&mut self, name: D, value: E) -> &mut Sel/;"	P	implementation:CreateApplicationCommandOption
add_string_choice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn add_string_choice<D: ToString, E: ToString>(&mut self, name: D, value: E) -> &mut Sel/;"	P	implementation:CreateAutocompleteResponse
add_string_choice_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_string_choice_localized<L: ToString, D: ToString, E: ToString>($/;"	P	implementation:CreateApplicationCommandOption
add_sub_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn add_sub_option(&mut self, sub_option: CreateApplicationCommandOption) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
add_thread_channel_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn add_thread_channel_member(&self, channel_id: u64, user_id: u64) -> Result<()> {$/;"	P	implementation:Http
add_thread_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn add_thread_member(&self, http: impl AsRef<Http>, user_id: UserId) -> Result<()>/;"	P	implementation:ChannelId
add_user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn add_user_id(mut self, user_id: impl Into<UserId>) -> Self {$/;"	P	implementation:EventCollectorBuilder
add_welcome_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^    pub fn add_welcome_channel(&mut self, channel: CreateGuildWelcomeChannel) -> &mut Self {$/;"	P	implementation:EditGuildWelcomeScreen
added	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    added: bool,$/;"	m	struct:LazyReactionAction
added_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub added_members: Vec<ThreadMember>,$/;"	m	struct:ThreadMembersUpdateEvent
addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/mod.rs	/^mod addr;$/;"	n
addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn addr(&self, slot: usize) -> Address {$/;"	P	implementation:Page
addr_of	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod addr_of;$/;"	n
administrator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn administrator(self) -> bool {$/;"	P	implementation:Permissions
advance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn advance(&mut self) -> &mut Self {$/;"	P	implementation:Args
advance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn advance(&mut self, n: usize) {$/;"	P	implementation:ReadBuf
affected_components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub affected_components: Vec<AffectedComponent>,$/;"	m	struct:IncidentUpdate
afk_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn afk_channel<C: Into<ChannelId>>(&mut self, channel: Option<C>) -> &mut Self {$/;"	P	implementation:EditGuild
afk_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub afk_channel_id: Option<ChannelId>,$/;"	m	struct:Guild
afk_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub afk_channel_id: Option<ChannelId>,$/;"	m	struct:PartialGuild
afk_channel_id_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    fn afk_channel_id_variant() {$/;"	f	module:tests
afk_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn afk_timeout(&mut self, timeout: u64) -> &mut Self {$/;"	P	implementation:EditGuild
afk_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub afk_timeout: u64,$/;"	m	struct:Guild
afk_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub afk_timeout: u64,$/;"	m	struct:PartialGuild
after	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^    pub fn after<M: Into<MessageId>>(&mut self, message_id: M) -> &mut Self {$/;"	P	implementation:GetMessages
after	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    after: Option<AfterHook>,$/;"	m	struct:StandardFramework
after	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn after(mut self, f: AfterHook) -> Self {$/;"	P	implementation:StandardFramework
after	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    after: Option<UserId>,$/;"	m	struct:MembersIter
after_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    after_start: Option<Callback>,$/;"	m	struct:Inner
after_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) after_start: Option<Callback>,$/;"	m	struct:Builder
after_unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) after_unpark: Option<Callback>,$/;"	m	struct:Builder
after_unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) after_unpark: Option<Callback>,$/;"	m	struct:Config
alarm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn alarm() -> Self {$/;"	P	implementation:SignalKind
alert_system_message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub alert_system_message_id: Option<MessageId>,$/;"	m	struct:ActionExecution
aliases	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub aliases: Vec<&'static str>,$/;"	m	struct:Command
aliases_label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub aliases_label: &'static str,$/;"	m	struct:HelpOptions
all	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn all(pool: E) -> TryCollectFut<'e, Self> {$/;"	P	interface:Crud
all_enqueued	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        pub(crate) all_enqueued: RefCell<Vec<W>>,$/;"	m	struct:test::MockQueue
all_entries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^            all_entries: LinkedList<T>,$/;"	m	struct:IdleNotifiedSet::drain::AllEntries
allocate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn allocate(&self) -> io::Result<(slab::Address, slab::Ref<ScheduledIo>)> {$/;"	P	implementation:Handle
allocate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn allocate(me: &Arc<Page<T>>) -> Option<(Address, Ref<T>)> {$/;"	P	implementation:Page
allocate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn allocate(&self) -> Option<(Address, Ref<T>)> {$/;"	P	implementation:Allocator
allocated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    allocated: AtomicBool,$/;"	m	struct:Page
allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    allocator: slab::Allocator<ScheduledIo>,$/;"	m	struct:IoDispatcher
allocator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn allocator(&self) -> Allocator<T> {$/;"	P	implementation:Slab
allow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    allow: Permissions,$/;"	m	struct:PermissionOverwriteData
allow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub allow: Permissions,$/;"	m	struct:PermissionOverwrite
allow_dm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub allow_dm: bool,$/;"	m	struct:Configuration
allow_dm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn allow_dm(&mut self, allow_dm: bool) -> &mut Self {$/;"	P	implementation:Configuration
allowed_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub allowed_channels: HashSet<ChannelId>,$/;"	m	struct:Configuration
allowed_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn allowed_channels(&mut self, channels: HashSet<ChannelId>) -> &mut Self {$/;"	P	implementation:Configuration
allowed_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn allowed_mentions<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateInteractionResponseData
allowed_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn allowed_mentions<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateInteractionResponseFollowup
allowed_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn allowed_mentions<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateMessage
allowed_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    pub fn allowed_mentions<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditInteractionResponse
allowed_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn allowed_mentions<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditMessage
allowed_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_webhook_message.rs	/^    pub fn allowed_mentions<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditWebhookMessage
allowed_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn allowed_mentions<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:ExecuteWebhook
allowed_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn allowed_roles(&self) -> &'static [&'static str] {$/;"	P	implementation:CommandOptions
allowed_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn allowed_roles(&self) -> &'static [&'static str] {$/;"	P	implementation:GroupOptions
allowed_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn allowed_roles(&self) -> &'static [&'static str];$/;"	P	interface:CommonOptions
allowed_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub allowed_roles: &'static [&'static str],$/;"	m	struct:CommandOptions
allowed_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub allowed_roles: &'static [&'static str],$/;"	m	struct:GroupOptions
amt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    amt: u64,$/;"	m	struct:CopyBuffer
animated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub animated: Option<bool>,$/;"	m	struct:ActivityEmoji
animated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub animated: bool,$/;"	m	struct:Emoji
animated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub animated: bool,$/;"	m	struct:EmojiIdentifier
api	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/macros.rs	/^macro_rules! api {$/;"	M
app_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub app_permissions: Option<Permissions>,$/;"	m	struct:ApplicationCommandInteraction
app_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub app_permissions: Option<Permissions>,$/;"	m	struct:AutocompleteInteraction
app_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub app_permissions: Option<Permissions>,$/;"	m	struct:MessageComponentInteraction
app_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn app_permissions(&self) -> Option<Permissions> {$/;"	P	implementation:Interaction
app_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub app_permissions: Option<Permissions>,$/;"	m	struct:ModalSubmitInteraction
append	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn append(&mut self, append: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
application	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub application: Option<MessageApplication>,$/;"	m	struct:Message
application	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub application: PartialCurrentApplicationInfo,$/;"	m	struct:Ready
application	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub application: Option<IntegrationApplication>,$/;"	m	struct:Integration
application	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod application;$/;"	n
application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn application_command(application_id: u64, command_id: u64) -> String {$/;"	P	implementation:Route
application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn application_command(self) -> Option<ApplicationCommandInteraction> {$/;"	P	implementation:Interaction
application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub mod application_command;$/;"	n
application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub mod application_command {$/;"	n
application_command_permissions_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn application_command_permissions_update($/;"	P	interface:EventHandler
application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn application_commands(application_id: u64) -> String {$/;"	P	implementation:Route
application_guild_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn application_guild_command($/;"	P	implementation:Route
application_guild_command_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn application_guild_command_permissions($/;"	P	implementation:Route
application_guild_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn application_guild_commands(application_id: u64, guild_id: u64) -> String {$/;"	P	implementation:Route
application_guild_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn application_guild_commands_permissions(application_id: u64, guild_id: u64) -> String /;"	P	implementation:Route
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn application_id(self, application_id: u64) -> Self {$/;"	P	implementation:ClientBuilder
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    application_id: AtomicU64,$/;"	m	struct:Http
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    application_id: Option<u64>,$/;"	m	struct:HttpBuilder
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn application_id(&self) -> Option<u64> {$/;"	P	implementation:Http
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn application_id(mut self, application_id: u64) -> Self {$/;"	P	implementation:HttpBuilder
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub application_id: ApplicationId,$/;"	m	struct:Command
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub application_id: ApplicationId,$/;"	m	struct:CommandPermission
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub application_id: ApplicationId,$/;"	m	struct:ApplicationCommandInteraction
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub application_id: ApplicationId,$/;"	m	struct:AutocompleteInteraction
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub application_id: ApplicationId,$/;"	m	struct:MessageComponentInteraction
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn application_id(&self) -> ApplicationId {$/;"	P	implementation:Interaction
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub application_id: ApplicationId,$/;"	m	struct:ModalSubmitInteraction
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/ping.rs	/^    pub application_id: ApplicationId,$/;"	m	struct:PingInteraction
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub application_id: Option<ApplicationId>,$/;"	m	struct:IntegrationDeleteEvent
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub application_id: Option<ApplicationId>,$/;"	m	struct:Activity
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub application_id: Option<ApplicationId>,$/;"	m	struct:Guild
application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub application_id: Option<ApplicationId>,$/;"	m	struct:PartialGuild
apply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn apply<'a>(&self, s: &'a str) -> &'a str {$/;"	P	implementation:Args
apply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn apply(&mut self, modifier: &ContentModifier) {$/;"	P	implementation:Content
apply_read_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn apply_read_buf(&mut self, parts: ReadBufParts) {$/;"	f
approximate_member_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub approximate_member_count: u64,$/;"	m	struct:GuildPreview
approximate_member_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub approximate_member_count: Option<u64>,$/;"	m	struct:Guild
approximate_member_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub approximate_member_count: Option<u64>,$/;"	m	struct:PartialGuild
approximate_member_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub approximate_member_count: Option<u64>,$/;"	m	struct:Invite
approximate_presence_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub approximate_presence_count: u64,$/;"	m	struct:GuildPreview
approximate_presence_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub approximate_presence_count: Option<u64>,$/;"	m	struct:Guild
approximate_presence_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub approximate_presence_count: Option<u64>,$/;"	m	struct:PartialGuild
approximate_presence_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub approximate_presence_count: Option<u64>,$/;"	m	struct:Invite
arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^    arc: Option<Arc<T>>,$/;"	m	struct:LazyArc
arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    arc: Option<Arc<ReactionAction>>,$/;"	m	struct:LazyReactionAction
archive_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub archive_timestamp: Option<Timestamp>,$/;"	m	struct:ThreadMetadata
archived	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_thread.rs	/^    pub fn archived(&mut self, archived: bool) -> &mut Self {$/;"	P	implementation:EditThread
archived	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub archived: bool,$/;"	m	struct:ThreadMetadata
arg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn arg<S: AsRef<OsStr>>(&mut self, arg: S) -> &mut Command {$/;"	P	implementation:Command
arg0	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn arg0<S>(&mut self, arg: S) -> &mut Command$/;"	P	implementation:Command
args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    args: &'a mut Args,$/;"	m	struct:Iter
args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    args: Vec<Token>,$/;"	m	struct:Args
args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^mod args;$/;"	n
args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn args<I, S>(&mut self, args: I) -> &mut Command$/;"	P	implementation:Command
argument_convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^mod argument_convert;$/;"	n
around	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^    pub fn around<M: Into<MessageId>>(&mut self, message_id: M) -> &mut Self {$/;"	P	implementation:GetMessages
arrived	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    arrived: usize,$/;"	m	struct:BarrierState
as_arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^    pub fn as_arc(&mut self) -> Arc<T> {$/;"	P	implementation:LazyArc
as_arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn as_arc(&mut self) -> Arc<ReactionAction> {$/;"	P	implementation:LazyReactionAction
as_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub fn as_data(&self) -> String {$/;"	P	implementation:ReactionType
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn as_fd(&self) -> std::os::unix::io::BorrowedFd<'_> {$/;"	P	implementation:File
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn as_fd(&self) -> std::os::unix::io::BorrowedFd<'_> {$/;"	P	implementation:AsyncFd
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::Stderr
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::Stdin
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::Stdout
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::TcpListener
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:TcpSocket
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::TcpStream
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::UdpSocket
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:UnixDatagram
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:UnixListener
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:Receiver
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:Sender
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:UnixStream
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::ChildStderr
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::ChildStdin
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:sys::ChildStdout
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:ChildStdio
as_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn as_fd(&self) -> BorrowedFd<'_> {$/;"	P	implementation:Pipe
as_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn as_handle(&self) -> BorrowedHandle<'_>;$/;"	P	interface:windows::io::AsHandle
as_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn as_handle(&self) -> BorrowedHandle<'_> {$/;"	P	implementation:NamedPipeClient
as_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn as_handle(&self) -> BorrowedHandle<'_> {$/;"	P	implementation:NamedPipeServer
as_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub(super) fn as_inner(&self) -> &std::fs::DirEntry {$/;"	P	implementation:DirEntry
as_inner_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub(super) fn as_inner_mut(&mut self) -> &mut StdOpenOptions {$/;"	P	implementation:OpenOptions
as_inner_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn as_inner_ref(&self) -> &Arc<Reaction> {$/;"	P	implementation:ReactionAction
as_micros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn as_micros(&self) -> u128 {$/;"	P	implementation:RateLimitInfo
as_millis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn as_millis(&self) -> u128 {$/;"	P	implementation:RateLimitInfo
as_pathname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^    pub fn as_pathname(&self) -> Option<&Path> {$/;"	P	implementation:SocketAddr
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn as_raw(handle: &Task<S>) -> NonNull<Header> {$/;"	P	implementation:Task
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn as_raw(handle: &Self::Handle) -> NonNull<Self::Target> {$/;"	P	implementation:TimerShared
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn as_raw(handle: &Self::Handle) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn as_raw(handle: &NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn as_raw(handle: &NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    fn as_raw(handle: &Self::Handle) -> NonNull<ListEntry<T>> {$/;"	P	implementation:ListEntry
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        fn as_raw(handle: &Pin<&'_ Entry>) -> NonNull<Entry> {$/;"	P	implementation:tests::Entry
as_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn as_raw(handle: &Self::Handle) -> NonNull<Self::Target>;$/;"	P	interface:Link
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn as_raw_fd(&self) -> std::os::unix::io::RawFd {$/;"	P	implementation:File
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:AsyncFd
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::Stderr
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::Stdin
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::Stdout
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::TcpListener
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:TcpSocket
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::TcpStream
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::UdpSocket
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:UnixDatagram
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:UnixListener
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:Receiver
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:Sender
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:UnixStream
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::ChildStderr
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::ChildStdin
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:sys::ChildStdout
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:ChildStdio
as_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn as_raw_fd(&self) -> RawFd {$/;"	P	implementation:Pipe
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn as_raw_handle(&self) -> RawHandle;$/;"	P	interface:windows::io::AsRawHandle
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn as_raw_handle(&self) -> RawHandle {$/;"	P	implementation:NamedPipeClient
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn as_raw_handle(&self) -> RawHandle {$/;"	P	implementation:NamedPipeServer
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn as_raw_handle(&self) -> RawHandle {$/;"	P	implementation:Child
as_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn as_raw_handle(&self) -> RawHandle {$/;"	P	implementation:ChildStdio
as_raw_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn as_raw_socket(&self) -> RawSocket;$/;"	P	interface:windows::io::AsRawSocket
as_raw_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn as_raw_value(&self) -> std::os::raw::c_int {$/;"	P	implementation:SignalKind
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    fn as_ref(&self) -> &ShardMessenger {$/;"	P	implementation:ShardRunnerInfo
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    fn as_ref(&self) -> &ShardMessenger {$/;"	P	implementation:ShardMessenger
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    fn as_ref(&self) -> &Arc<Cache> {$/;"	P	implementation:Context
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    fn as_ref(&self) -> &Arc<Http> {$/;"	P	implementation:Context
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    fn as_ref(&self) -> &Cache {$/;"	P	implementation:Arc
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    fn as_ref(&self) -> &Cache {$/;"	P	implementation:Cache
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    fn as_ref(&self) -> &Cache {$/;"	P	implementation:Context
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    fn as_ref(&self) -> &Http {$/;"	P	implementation:Arc
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    fn as_ref(&self) -> &Http {$/;"	P	implementation:Context
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    fn as_ref(&self) -> &ShardMessenger {$/;"	P	implementation:Context
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    fn as_ref(&self) -> &Http {$/;"	P	implementation:Http
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn as_ref(&self) -> &Cache {$/;"	f
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn as_ref(&self) -> &Http {$/;"	f
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    fn as_ref(&self) -> &MessageId {$/;"	P	implementation:Message
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn as_ref(&self) -> &TcpStream {$/;"	P	implementation:ReadHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn as_ref(&self) -> &TcpStream {$/;"	P	implementation:WriteHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn as_ref(&self) -> &TcpStream {$/;"	P	implementation:OwnedReadHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn as_ref(&self) -> &TcpStream {$/;"	P	implementation:OwnedWriteHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn as_ref(&self) -> &UnixStream {$/;"	P	implementation:ReadHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn as_ref(&self) -> &UnixStream {$/;"	P	implementation:WriteHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn as_ref(&self) -> &UnixStream {$/;"	P	implementation:OwnedReadHalf
as_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn as_ref(&self) -> &UnixStream {$/;"	P	implementation:OwnedWriteHalf
as_secs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn as_secs(&self) -> u64 {$/;"	P	implementation:RateLimitInfo
as_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn as_socket(&self) -> BorrowedSocket<'_>;$/;"	P	interface:windows::io::AsSocket
as_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn as_socket(&self) -> socket2::SockRef<'_> {$/;"	P	implementation:UdpSocket
as_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn as_std(&self) -> &StdCommand {$/;"	P	implementation:Command
as_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^    pub(crate) fn as_u64(&self) -> u64 {$/;"	P	implementation:Id
as_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub(crate) fn as_usize(self) -> usize {$/;"	P	implementation:Ready
as_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn as_usize(self) -> usize {$/;"	P	implementation:State
as_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) const fn as_usize(self) -> usize {$/;"	P	implementation:Address
as_vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub fn as_vec(&self) -> &Vec<SuggestedCommandName> {$/;"	P	implementation:Suggestions
assert_action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^        macro_rules! assert_action {$/;"	M	function:tests::action_value
assert_at_most_num_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^fn assert_at_most_num_polls(rt: Arc<Runtime>, at_most_polls: usize) {$/;"	f
assert_called_from_owner_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn assert_called_from_owner_thread(&self) {$/;"	P	implementation:LocalState
assert_clean	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    macro_rules! assert_clean {$/;"	M	module:tests
assert_dropped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn assert_dropped(&self) {$/;"	P	implementation:AssertDropHandle
assert_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^macro_rules! assert_metrics {$/;"	M
assert_no_stack_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^fn assert_no_stack_overflow() {$/;"	f
assert_no_unnecessary_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^fn assert_no_unnecessary_polls() {$/;"	f
assert_not_dropped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn assert_not_dropped(&self) {$/;"	P	implementation:AssertDropHandle
assert_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn assert_owner(&self, task: Notified<S>) -> LocalNotified<S> {$/;"	P	implementation:LocalOwnedTasks
assert_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn assert_owner(&self, task: Notified<S>) -> LocalNotified<S> {$/;"	P	implementation:OwnedTasks
assert_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn assert_owner($/;"	P	implementation:LocalState
assert_ptr_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    macro_rules! assert_ptr_eq {$/;"	M	module:tests
assert_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn assert_send(&self, value: T) {$/;"	P	implementation:AtomicOneshot
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/repeat.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^    fn assert_unpin() {$/;"	f	module:tests
assert_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    fn assert_unpin() {$/;"	f	module:tests
asset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    pub asset: String,$/;"	m	struct:Sticker
assets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub assets: Option<ActivityAssets>,$/;"	m	struct:Activity
assign_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn assign_permits(&self, n: &mut usize) -> bool {$/;"	P	implementation:Waiter
assume_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub unsafe fn assume_init(&mut self, n: usize) {$/;"	P	implementation:ReadBuf
async_buf_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod async_buf_read;$/;"	n
async_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    async_fd: &'a AsyncFd<T>,$/;"	m	struct:AsyncFdReadyGuard
async_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    async_fd: &'a mut AsyncFd<T>,$/;"	m	struct:AsyncFdReadyMutGuard
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn async_io<R>($/;"	P	implementation:TcpStream
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn async_io<R>($/;"	P	implementation:UdpSocket
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn async_io<R>($/;"	P	implementation:UnixDatagram
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn async_io<R>($/;"	P	implementation:UnixStream
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn async_io<R>($/;"	P	implementation:NamedPipeClient
async_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn async_io<R>($/;"	P	implementation:NamedPipeServer
async_op_poll_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    async_op_poll_span: tracing::Span,$/;"	m	struct:Receiver
async_op_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    async_op_span: tracing::Span,$/;"	m	struct:Receiver
async_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod async_read;$/;"	n
async_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod async_seek;$/;"	n
async_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod async_write;$/;"	n
asyncify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^pub(crate) async fn asyncify<F, T>(f: F) -> io::Result<T>$/;"	f
at_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn at_capacity() -> Error {$/;"	P	implementation:Error
atomic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    pub(crate) mod atomic {$/;"	n	module:sync
atomic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    pub(crate) mod atomic {$/;"	n	module:sync
atomic_cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod atomic_cell;$/;"	n
atomic_inc_num_notify_waiters_calls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn atomic_inc_num_notify_waiters_calls(data: &AtomicUsize) {$/;"	f
atomic_take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod atomic_take {$/;"	n
atomic_u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod atomic_u16;$/;"	n
atomic_u32	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod atomic_u32;$/;"	n
atomic_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod atomic_u64;$/;"	n
atomic_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod atomic_usize;$/;"	n
atomic_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/mod.rs	/^mod atomic_waker;$/;"	n
atomic_waker_panic_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^fn atomic_waker_panic_safe() {$/;"	f
attach_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn attach_files(self) -> bool {$/;"	P	implementation:Permissions
attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn attachment<S: ToString>(&mut self, filename: S) -> &mut Self {$/;"	P	implementation:CreateEmbed
attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn attachment(&mut self, attachment: impl Into<AttachmentType<'a>>) -> &mut Self {$/;"	P	implementation:EditMessage
attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod attachment;$/;"	n
attachment_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod attachment_type;$/;"	n
attachments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub attachments: HashMap<AttachmentId, Attachment>,$/;"	m	struct:CommandDataResolved
attachments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub attachments: Vec<Attachment>,$/;"	m	struct:Message
attachments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub attachments: Option<Vec<Attachment>>,$/;"	m	struct:MessageUpdateEvent
attachments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn attachments<It>(&mut self, attachments: It) -> &mut Self$/;"	P	implementation:CustomMessage
audit_log	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub mod audit_log;$/;"	n
audit_logs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn audit_logs($/;"	P	implementation:GuildId
audit_logs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn audit_logs($/;"	P	implementation:Guild
audit_logs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn audit_logs($/;"	P	implementation:PartialGuild
author	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn author<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateEmbed
author	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub author: Option<EmbedAuthor>,$/;"	m	struct:Embed
author	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub author: User,$/;"	m	struct:Message
author	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub author: Option<User>,$/;"	m	struct:MessageUpdateEvent
author	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn author(&mut self, user: User) -> &mut Self {$/;"	P	implementation:CustomMessage
author_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    author_id: Option<u64>,$/;"	m	struct:FilterOptions
author_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    author_id: Option<u64>,$/;"	m	struct:FilterOptions
author_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    author_id: Option<u64>,$/;"	m	struct:FilterOptions
author_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    author_id: Option<u64>,$/;"	m	struct:FilterOptions
author_nick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn author_nick(&self, cache_http: impl CacheHttp) -> Option<String> {$/;"	P	implementation:Message
auto_archive_duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_thread.rs	/^    pub fn auto_archive_duration(&mut self, duration: u16) -> &mut Self {$/;"	P	implementation:CreateThread
auto_archive_duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_thread.rs	/^    pub fn auto_archive_duration(&mut self, duration: u16) -> &mut Self {$/;"	P	implementation:EditThread
auto_archive_duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub auto_archive_duration: Option<u64>,$/;"	m	struct:ThreadMetadata
auto_client_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    pub async fn auto_client_id(&mut self, http: impl AsRef<Http>) -> Result<&mut Self> {$/;"	P	implementation:CreateBotAuthParameters
auto_moderation_action_execution	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn auto_moderation_action_execution(&self, _ctx: Context, _execution: ActionExecution)/;"	P	interface:EventHandler
auto_moderation_configuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn auto_moderation_configuration(self) -> bool {$/;"	P	implementation:GatewayIntents
auto_moderation_execution	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn auto_moderation_execution(self) -> bool {$/;"	P	implementation:GatewayIntents
auto_moderation_rule_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn auto_moderation_rule_create(&self, _ctx: Context, _rule: Rule) {}$/;"	P	interface:EventHandler
auto_moderation_rule_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn auto_moderation_rule_delete(&self, _ctx: Context, _rule: Rule) {}$/;"	P	interface:EventHandler
auto_moderation_rule_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn auto_moderation_rule_update(&self, _ctx: Context, _rule: Rule) {}$/;"	P	interface:EventHandler
autocomplete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub autocomplete: bool,$/;"	m	struct:CommandOption
autocomplete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn autocomplete(self) -> Option<AutocompleteInteraction> {$/;"	P	implementation:Interaction
autocomplete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub mod autocomplete;$/;"	n
autocomplete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub mod autocomplete {$/;"	n
automod	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^pub mod automod;$/;"	n
automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn automod_rule($/;"	P	implementation:GuildId
automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn automod_rule($/;"	P	implementation:Guild
automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn automod_rule($/;"	P	implementation:PartialGuild
automod_rules	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn automod_rules(self, http: impl AsRef<Http>) -> Result<Vec<Rule>> {$/;"	P	implementation:GuildId
automod_rules	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn automod_rules(self, http: impl AsRef<Http>) -> Result<Vec<Rule>> {$/;"	P	implementation:Guild
automod_rules	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn automod_rules(self, http: impl AsRef<Http>) -> Result<Vec<Rule>> {$/;"	P	implementation:PartialGuild
availability	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub availability: &'a str,$/;"	m	struct:Command
available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub available: bool,$/;"	m	struct:Emoji
available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub available: bool,$/;"	m	struct:Sticker
available_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn available_permits(&self) -> usize {$/;"	P	implementation:Semaphore
available_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn available_permits(&self) -> usize {$/;"	P	implementation:Semaphore
available_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub available_text: &'static str,$/;"	m	struct:HelpOptions
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn avatar<D: ToString>(&mut self, avatar_url: D) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_profile.rs	/^    pub fn avatar(&mut self, avatar: Option<&str>) -> &mut Self {$/;"	P	implementation:EditProfile
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub avatar: Option<String>,$/;"	m	struct:GuildMemberUpdateEvent
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub avatar: Option<String>,$/;"	m	struct:PresenceUser
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub avatar: Option<String>,$/;"	m	struct:InterimMember
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub avatar: Option<String>,$/;"	m	struct:Member
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub avatar: Option<String>,$/;"	m	struct:CurrentUser
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub avatar: Option<String>,$/;"	m	struct:User
avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub avatar: Option<String>,$/;"	m	struct:Webhook
avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn avatar_url<S: ToString>(&mut self, avatar_url: S) -> &mut Self {$/;"	P	implementation:ExecuteWebhook
avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn avatar_url(&self) -> Option<String> {$/;"	P	implementation:Member
avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^fn avatar_url(guild_id: GuildId, user_id: UserId, hash: Option<&String>) -> Option<String> {$/;"	f
avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn avatar_url(&self) -> Option<String> {$/;"	P	implementation:CurrentUser
avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn avatar_url(&self) -> Option<String> {$/;"	P	implementation:User
avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^fn avatar_url(user_id: UserId, hash: Option<&String>) -> Option<String> {$/;"	f
await_component_interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn await_component_interaction($/;"	P	implementation:Message
await_component_interactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn await_component_interactions($/;"	P	implementation:Message
await_modal_interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn await_modal_interaction($/;"	P	implementation:Message
await_modal_interactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn await_modal_interactions($/;"	P	implementation:Message
await_ratelimits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub await_ratelimits: u32,$/;"	m	struct:TicketCounter
await_ratelimits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn await_ratelimits(&mut self, amount: u32) -> &mut Self {$/;"	P	implementation:BucketBuilder
await_ratelimits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub(crate) await_ratelimits: u32,$/;"	m	struct:BucketBuilder
await_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub fn await_reaction(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReaction/;"	P	implementation:ChannelId
await_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn await_reaction(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReaction/;"	P	implementation:GuildChannel
await_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn await_reaction(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReaction/;"	P	implementation:Message
await_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn await_reaction(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReaction/;"	P	implementation:GuildId
await_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn await_reaction(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReaction/;"	P	implementation:Guild
await_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn await_reaction(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReaction/;"	P	implementation:PartialGuild
await_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn await_reaction(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReaction/;"	P	implementation:User
await_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub fn await_reactions($/;"	P	implementation:ChannelId
await_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn await_reactions($/;"	P	implementation:GuildChannel
await_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn await_reactions($/;"	P	implementation:Message
await_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn await_reactions($/;"	P	implementation:GuildId
await_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn await_reactions($/;"	P	implementation:Guild
await_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn await_reactions($/;"	P	implementation:PartialGuild
await_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn await_reactions($/;"	P	implementation:User
await_replies	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub fn await_replies($/;"	P	implementation:ChannelId
await_replies	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn await_replies($/;"	P	implementation:GuildChannel
await_replies	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn await_replies($/;"	P	implementation:GuildId
await_replies	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn await_replies($/;"	P	implementation:Guild
await_replies	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn await_replies($/;"	P	implementation:PartialGuild
await_replies	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn await_replies($/;"	P	implementation:User
await_reply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub fn await_reply(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReply {$/;"	P	implementation:ChannelId
await_reply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn await_reply(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReply {$/;"	P	implementation:GuildChannel
await_reply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn await_reply(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReply {$/;"	P	implementation:GuildId
await_reply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn await_reply(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReply {$/;"	P	implementation:Guild
await_reply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn await_reply(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReply {$/;"	P	implementation:PartialGuild
await_reply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn await_reply(&self, shard_messenger: impl AsRef<ShardMessenger>) -> CollectReply {$/;"	P	implementation:User
awaiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub awaiting: u32,$/;"	m	struct:UnitRatelimit
b	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn b() {$/;"	f	module:test
b	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub const fn b(self) -> u8 {$/;"	P	implementation:Colour
backports	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub(crate) mod backports;$/;"	n
ban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn ban(self, http: impl AsRef<Http>, user: impl Into<UserId>, dmd: u8) -> Result<(/;"	P	implementation:GuildId
ban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn ban(&self, http: impl AsRef<Http>, dmd: u8) -> Result<()> {$/;"	P	implementation:Member
ban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn ban($/;"	P	implementation:Guild
ban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn ban($/;"	P	implementation:PartialGuild
ban_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn ban_members(self) -> bool {$/;"	P	implementation:Permissions
ban_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn ban_user($/;"	P	implementation:Http
ban_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn ban_with_reason($/;"	P	implementation:GuildId
ban_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn ban_with_reason($/;"	P	implementation:Member
ban_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn ban_with_reason($/;"	P	implementation:Guild
ban_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn ban_with_reason($/;"	P	implementation:PartialGuild
banner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn banner(&mut self, banner: Option<&str>) -> &mut Self {$/;"	P	implementation:EditGuild
banner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub banner: Option<String>,$/;"	m	struct:Guild
banner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub banner: Option<String>,$/;"	m	struct:PartialGuild
banner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub banner: Option<String>,$/;"	m	struct:CurrentUser
banner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub banner: Option<String>,$/;"	m	struct:User
banner_asset_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub banner_asset_id: StickerPackBannerId,$/;"	m	struct:StickerPack
banner_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn banner_url(&self) -> Option<String> {$/;"	P	implementation:Guild
banner_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn banner_url(&self) -> Option<String> {$/;"	P	implementation:PartialGuild
banner_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub fn banner_url(&self) -> String {$/;"	P	implementation:StickerPack
banner_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^fn banner_url(banner_asset_id: StickerPackBannerId) -> String {$/;"	f
banner_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn banner_url(&self) -> Option<String> {$/;"	P	implementation:User
banner_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^fn banner_url(user_id: UserId, hash: Option<&String>) -> Option<String> {$/;"	f
bans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn bans(self, http: impl AsRef<Http>) -> Result<Vec<Ban>> {$/;"	P	implementation:GuildId
bans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn bans(&self, cache_http: impl CacheHttp) -> Result<Vec<Ban>> {$/;"	P	implementation:Guild
bans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn bans(&self, http: impl AsRef<Http>) -> Result<Vec<Ban>> {$/;"	P	implementation:PartialGuild
basic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^fn basic() {$/;"	f
basic_closing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn basic_closing() {$/;"	f
basic_notification	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^fn basic_notification() {$/;"	f
basic_usage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^fn basic_usage() {$/;"	f
basic_usage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn basic_usage() {$/;"	f
batch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn batch() {$/;"	f
before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^    pub fn before<M: Into<MessageId>>(&mut self, message_id: M) -> &mut Self {$/;"	P	implementation:GetMessages
before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    before: Option<BeforeHook>,$/;"	m	struct:StandardFramework
before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn before(mut self, f: BeforeHook) -> Self {$/;"	P	implementation:StandardFramework
before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    before: Option<MessageId>,$/;"	m	struct:MessagesIter
before_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) before_park: Option<Callback>,$/;"	m	struct:Builder
before_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) before_park: Option<Callback>,$/;"	m	struct:Config
before_stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    before_stop: Option<Callback>,$/;"	m	struct:Inner
before_stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) before_stop: Option<Callback>,$/;"	m	struct:Builder
big_notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^mod big_notify {$/;"	n
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn bind(&self, addr: SocketAddr) -> io::Result<()> {$/;"	P	implementation:TcpSocket
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn bind<A: ToSocketAddrs>(addr: A) -> io::Result<UdpSocket> {$/;"	P	implementation:UdpSocket
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn bind<P>(path: P) -> io::Result<UnixDatagram>$/;"	P	implementation:UnixDatagram
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn bind<P>(path: P) -> io::Result<UnixListener>$/;"	P	implementation:UnixListener
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn bind<T>($/;"	P	implementation:LocalOwnedTasks
bind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn bind<T>($/;"	P	implementation:OwnedTasks
bind_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn bind_addr(addr: SocketAddr) -> io::Result<UdpSocket> {$/;"	P	implementation:UdpSocket
bind_device	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn bind_device(&self, interface: Option<&[u8]>) -> io::Result<()> {$/;"	P	implementation:TcpSocket
bind_device	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn bind_device(&self, interface: Option<&[u8]>) -> io::Result<()> {$/;"	P	implementation:UdpSocket
bind_new_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(super) fn bind_new_task<T>(me: &Arc<Self>, future: T, id: task::Id) -> JoinHandle<T::Out/;"	P	implementation:Handle
bitand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn bitand(self, other: Ready) -> Ready {$/;"	P	implementation:Ready
bitflags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/macros.rs	/^macro_rules! bitflags {$/;"	M
bitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    fn bitor(self, other: Self) -> Self {$/;"	P	implementation:Interest
bitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn bitor(self, other: Ready) -> Ready {$/;"	P	implementation:Ready
bitor_assign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    fn bitor_assign(&mut self, other: Self) {$/;"	P	implementation:Interest
bitor_assign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn bitor_assign(&mut self, other: Ready) {$/;"	P	implementation:Ready
bitrate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn bitrate(&mut self, rate: u32) -> &mut Self {$/;"	P	implementation:CreateChannel
bitrate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn bitrate(&mut self, bitrate: u64) -> &mut Self {$/;"	P	implementation:EditChannel
bitrate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub bitrate: Option<u64>,$/;"	m	struct:GuildChannel
block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^pub(super) mod block;$/;"	n
block_in_place	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(crate) fn block_in_place<F, R>(f: F) -> R$/;"	f
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn block_on<F: Future>(&self, future: F) -> F::Output {$/;"	P	implementation:Handle
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn block_on<F: Future>(&mut self, f: F) -> Result<F::Output, AccessError> {$/;"	P	implementation:CachedParkThread
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn block_on<F: Future>(&self, future: F) -> F::Output {$/;"	P	implementation:Runtime
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn block_on<F: Future>(self, future: F) -> F::Output {$/;"	P	implementation:CoreGuard
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn block_on<F: Future>(&self, handle: &scheduler::Handle, future: F) -> F::Output/;"	P	implementation:CurrentThread
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^    pub(crate) fn block_on<F>(&self, handle: &scheduler::Handle, future: F) -> F::Output$/;"	P	implementation:MultiThread
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn block_on<T>(&self, task: T) -> T::Output$/;"	P	implementation:test_combination::Rt
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn block_on<T>(f: impl std::future::Future<Output = T>) -> T {$/;"	f
block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub fn block_on<F>(&self, rt: &crate::runtime::Runtime, future: F) -> F::Output$/;"	P	implementation:LocalSet
block_on_num_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^fn block_on_num_polls() {$/;"	f
block_tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    block_tail: AtomicPtr<Block<T>>,$/;"	m	struct:Tx
blocked_guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub blocked_guilds: HashSet<GuildId>,$/;"	m	struct:Configuration
blocked_guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn blocked_guilds(&mut self, guilds: HashSet<GuildId>) -> &mut Self {$/;"	P	implementation:Configuration
blocked_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub blocked_users: HashSet<UserId>,$/;"	m	struct:Configuration
blocked_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn blocked_users(&mut self, users: HashSet<UserId>) -> &mut Self {$/;"	P	implementation:Configuration
blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^mod blocking;$/;"	n
blocking_and_regular	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn blocking_and_regular() {$/;"	f	module:group_b
blocking_and_regular_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn blocking_and_regular_inner(first_pending: bool) {$/;"	f	module:group_b
blocking_and_regular_with_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn blocking_and_regular_with_pending() {$/;"	f	module:group_b
blocking_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn blocking_lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:Mutex
blocking_lock_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn blocking_lock_owned(self: Arc<Self>) -> OwnedMutexGuard<T> {$/;"	P	implementation:Mutex
blocking_pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    blocking_pool: BlockingPool,$/;"	m	struct:Runtime
blocking_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn blocking_queue_depth(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
blocking_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn blocking_read(&self) -> RwLockReadGuard<'_, T> {$/;"	P	implementation:RwLock
blocking_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn blocking_recv(&mut self) -> Option<T> {$/;"	P	implementation:Receiver
blocking_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn blocking_recv(&mut self) -> Option<T> {$/;"	P	implementation:UnboundedReceiver
blocking_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn blocking_recv(self) -> Result<T, RecvError> {$/;"	P	implementation:Receiver
blocking_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn blocking_send(&self, value: T) -> Result<(), SendError<T>> {$/;"	P	implementation:Sender
blocking_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn blocking_shutdown() {$/;"	f
blocking_spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) blocking_spawner: blocking::Spawner,$/;"	m	struct:Handle
blocking_spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) blocking_spawner: blocking::Spawner,$/;"	m	struct:Handle
blocking_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn blocking_write(&self) -> RwLockWriteGuard<'_, T> {$/;"	P	implementation:RwLock
body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    body: Option<&'a [u8]>,$/;"	m	struct:RequestBuilder
body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn body(&mut self, body: Option<&'a [u8]>) -> &mut Self {$/;"	P	implementation:RequestBuilder
body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub(super) body: Option<&'a [u8]>,$/;"	m	struct:Request
body	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub body: String,$/;"	m	struct:IncidentUpdate
body_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn body_mut(&mut self) -> &mut Option<&'a [u8]> {$/;"	P	implementation:Request
body_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn body_ref(&self) -> &Option<&'a [u8]> {$/;"	P	implementation:Request
bold	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub bold: bool,$/;"	m	struct:Content
bool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^        impl UnwrapWith for bool {$/;"	c	method:Content::to_string
boot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    fn boot(&mut self, shard_info: [ShardId; 2]) {$/;"	P	implementation:ShardManager
borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn borrow(&self) -> Ref<'_, T> {$/;"	P	implementation:Receiver
borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn borrow(&self) -> Ref<'_, T> {$/;"	P	implementation:Sender
borrow_and_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn borrow_and_update(&mut self) -> Ref<'_, T> {$/;"	P	implementation:Receiver
bot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub bot: Option<bool>,$/;"	m	struct:PresenceUser
bot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub bot: Option<User>,$/;"	m	struct:IntegrationApplication
bot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub bot: bool,$/;"	m	struct:CurrentUser
bot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub bot: bool,$/;"	m	struct:User
bot_auth_parameters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod bot_auth_parameters;$/;"	n
bot_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub bot_id: Option<UserId>,$/;"	m	struct:RoleTags
bot_public	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub bot_public: bool,$/;"	m	struct:CurrentApplicationInfo
bot_require_code_grant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub bot_require_code_grant: bool,$/;"	m	struct:CurrentApplicationInfo
bound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub(crate) bound: usize,$/;"	m	struct:Semaphore
bounded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^mod bounded;$/;"	n
bounds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^fn bounds() {$/;"	f
bounds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^fn bounds() {$/;"	f
bounds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^fn bounds() {$/;"	f
boxed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    boxed: NonNull<dyn Future<Output = T> + Send>,$/;"	m	struct:ReusableBoxFuture
branding	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub mod branding {$/;"	n	module:colours
bridge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^pub mod bridge;$/;"	n
broadcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn broadcast(&self) -> io::Result<bool> {$/;"	P	implementation:UdpSocket
broadcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn broadcast(&self) -> bool {$/;"	P	implementation:Registry
broadcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pub(crate) fn broadcast(&self) -> bool {$/;"	P	implementation:Globals
broadcast_returns_if_at_least_one_event_fired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn broadcast_returns_if_at_least_one_event_fired() {$/;"	f	module:tests
broadcast_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn broadcast_send() {$/;"	f
broadcast_two	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn broadcast_two() {$/;"	f
broadcast_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn broadcast_typing(&self, channel_id: u64) -> Result<()> {$/;"	P	implementation:Http
broadcast_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn broadcast_typing(self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:ChannelId
broadcast_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn broadcast_typing(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:GuildChannel
broadcast_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn broadcast_typing(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:PrivateChannel
broadcast_wrap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn broadcast_wrap() {$/;"	f
bucket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub async fn bucket<F>(self, name: &str, f: F) -> Self$/;"	P	implementation:StandardFramework
bucket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub bucket: Option<&'static str>,$/;"	m	struct:CommandOptions
buckets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    buckets: Mutex<HashMap<String, Bucket>>,$/;"	m	struct:StandardFramework
buckets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^pub mod buckets;$/;"	n
budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    budget: Cell<coop::Budget>,$/;"	m	struct:Context
budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^pub(super) fn budget<R>(f: impl FnOnce(&Cell<coop::Budget>) -> R) -> Result<R, AccessError> {$/;"	f
budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) fn budget<R>(f: impl FnOnce() -> R) -> R {$/;"	f
budget_forced_yield_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn budget_forced_yield_count(&self) -> u64 {$/;"	P	implementation:RuntimeMetrics
budget_forced_yield_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(super) budget_forced_yield_count: AtomicU64,$/;"	m	struct:SchedulerMetrics
budgeting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    fn budgeting() {$/;"	f	module:test
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    buf: Vec<u8>,$/;"	m	struct:Buf
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    buf: &'a mut [MaybeUninit<u8>],$/;"	m	struct:ReadBuf
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    buf: Box<[u8]>,$/;"	m	struct:CopyBuffer
buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    buf: CopyBuffer,$/;"	m	struct:Copy
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    buffer: Vec<Message>,$/;"	m	struct:MessagesIter
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    buffer: Vec<Member>,$/;"	m	struct:MembersIter
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn buffer(&self) -> &[u8] {$/;"	P	implementation:BufReader
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn buffer(&self) -> &[u8] {$/;"	P	implementation:BufWriter
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    buffer: BytesMut,$/;"	m	struct:Pipe
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            buffer: &'a [UnsafeCell<MaybeUninit<task::Notified<T>>>; LOCAL_QUEUE_CAPACITY],$/;"	m	struct:Local::push_overflow::BatchTaskIter
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    buffer: Box<[UnsafeCell<MaybeUninit<task::Notified<T>>>; LOCAL_QUEUE_CAPACITY]>,$/;"	m	struct:Inner
buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    buffer: Box<[RwLock<Slot<T>>]>,$/;"	m	struct:Shared
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    pub fn build(self) -> String {$/;"	P	implementation:CreateBotAuthParameters
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn build(&mut self) -> Value {$/;"	P	implementation:CreateActionRow
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn build(mut self) -> Value {$/;"	P	implementation:CreateButton
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn build(mut self) -> Value {$/;"	P	implementation:CreateInputText
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn build(mut self) -> Value {$/;"	P	implementation:CreateSelectMenu
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    pub fn build(self) -> ComponentInteractionCollector {$/;"	P	implementation:ComponentInteractionCollectorBuilder
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn build(self) -> Result<EventCollector> {$/;"	P	implementation:EventCollectorBuilder
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    pub fn build(self) -> MessageCollector {$/;"	P	implementation:MessageCollectorBuilder
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    pub fn build(self) -> ModalInteractionCollector {$/;"	P	implementation:ModalInteractionCollectorBuilder
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn build(self) -> ReactionCollector {$/;"	P	implementation:ReactionCollectorBuilder
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn build(self) -> Http {$/;"	P	implementation:HttpBuilder
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub async fn build($/;"	P	implementation:Request
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn build(self) -> Request<'a> {$/;"	P	implementation:RequestBuilder
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn build(self) -> Message {$/;"	P	implementation:CustomMessage
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn build(&mut self) -> String {$/;"	P	implementation:MessageBuilder
build	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn build(&mut self) -> io::Result<Runtime> {$/;"	P	implementation:Builder
build_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub(crate) fn build_application_command<F>(f: F) -> JsonMap$/;"	P	implementation:Command
build_current_thread_runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    fn build_current_thread_runtime(&mut self) -> io::Result<Runtime> {$/;"	P	implementation:Builder
build_form	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/multipart.rs	/^    pub(crate) async fn build_form(&mut self, client: &Client) -> Result<Form> {$/;"	P	implementation:Multipart
build_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn build_task(&mut self) -> Builder<'_, T> {$/;"	P	implementation:JoinSet
builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn builder(token: impl AsRef<str>, intents: GatewayIntents) -> ClientBuilder {$/;"	P	implementation:Client
builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod builder;$/;"	n
builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    builder: super::Builder<'a>,$/;"	m	struct:Builder
busy_duration_total	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    busy_duration_total: u64,$/;"	m	struct:MetricsBatch
busy_duration_total	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) busy_duration_total: AtomicU64,$/;"	m	struct:WorkerMetrics
busy_file_seek_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn busy_file_seek_error() {$/;"	f
buttons	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub buttons: Vec<ActivityButton>,$/;"	m	struct:Activity
by_id	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn by_id(pool: E, id: <Self as Schema>::Id) -> CrudFut<'e, Option<Self>> {$/;"	P	interface:Crud
by_space	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub by_space: bool,$/;"	m	struct:Configuration
by_space	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn by_space(&mut self, b: bool) -> &mut Self {$/;"	P	implementation:Configuration
bytes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn bytes(&self) -> &[u8] {$/;"	P	implementation:Buf
c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    c: UnsafeCell<T>,$/;"	m	struct:Mutex
c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    c: UnsafeCell<T>,$/;"	m	struct:RwLock
c_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^impl From<SignalKind> for std::os::raw::c_int {$/;"	c
cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub cache: Arc<Cache>,$/;"	m	struct:Context
cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn cache(&self) -> Option<&Arc<Cache>> {$/;"	P	implementation:CacheAndHttp
cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn cache(&self) -> Option<&Arc<Cache>> {$/;"	P	implementation:Context
cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn cache(&self) -> Option<&Arc<Cache>> {$/;"	P	interface:CacheHttp
cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn cache(&self) -> Option<&Arc<Cache>> {$/;"	f
cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^    pub cache: Arc<Cache>,$/;"	m	struct:CacheAndHttp
cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod cache;$/;"	n
cache_and_http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub cache_and_http: &'a Arc<CacheAndHttp>,$/;"	m	struct:ShardManagerOptions
cache_and_http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub cache_and_http: Arc<CacheAndHttp>,$/;"	m	struct:ShardQueuer
cache_and_http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    cache_and_http: Arc<CacheAndHttp>,$/;"	m	struct:ShardRunner
cache_and_http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub cache_and_http: Arc<CacheAndHttp>,$/;"	m	struct:ShardRunnerOptions
cache_and_http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub cache_and_http: Arc<CacheAndHttp>,$/;"	m	struct:Client
cache_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn cache_ready(&self, _ctx: Context, _guilds: Vec<GuildId>) {}$/;"	P	interface:EventHandler
cache_settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    cache_settings: Option<CacheSettings>,$/;"	m	struct:ClientBuilder
cache_settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn cache_settings<F>(mut self, f: F) -> Self$/;"	P	implementation:ClientBuilder
cache_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^mod cache_update;$/;"	n
cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    cached: [CachedPage<T>; NUM_PAGES],$/;"	m	struct:Slab
cached_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    cached_when: AtomicU64,$/;"	m	struct:TimerShared
cached_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn cached_when(&self) -> u64 {$/;"	P	implementation:TimerShared
cached_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn cached_when(&self) -> u64 {$/;"	P	implementation:TimerHandle
callback	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^unsafe extern "system" fn callback(ptr: *mut std::ffi::c_void, _timer_fired: BOOLEAN) {$/;"	f
can_push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    pub(crate) fn can_push(&self) -> bool {$/;"	P	implementation:WakeList
can_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^fn can_read_output(header: &Header, trailer: &Trailer, waker: &Waker) -> bool {$/;"	f
cancel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn cancel(self: Pin<&mut Self>) {$/;"	P	implementation:TimerEntry
cancel_acquire_releases_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn cancel_acquire_releases_permits() {$/;"	f
cancel_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^fn cancel_task<T: Future, S: Schedule>(core: &Core<T, S>) {$/;"	f
cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub(crate) fn cancelled(id: Id) -> JoinError {$/;"	P	implementation:JoinError
canonicalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/canonicalize.rs	/^pub async fn canonicalize(path: impl AsRef<Path>) -> io::Result<PathBuf> {$/;"	f
canonicalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod canonicalize;$/;"	n
cap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    cap: usize,$/;"	m	struct:CopyBuffer
capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:ReadBuf
capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn capacity(&self) -> usize {$/;"	P	implementation:Sender
case_insensitive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub case_insensitive: bool,$/;"	m	struct:Configuration
case_insensitivity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn case_insensitivity(&mut self, cs: bool) -> &mut Self {$/;"	P	implementation:Configuration
catch_unwind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^        fn catch_unwind<F: FnOnce() -> R, R>(f: F) -> std::thread::Result<R> {$/;"	f	method:AtomicWaker::do_register
categories	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn categories(&self) -> DashMap<ChannelId, ChannelCategory> {$/;"	P	implementation:Cache
categories	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) categories: DashMap<ChannelId, ChannelCategory>,$/;"	m	struct:Cache
category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn category<I: Into<ChannelId>>(&mut self, id: I) -> &mut Self {$/;"	P	implementation:CreateChannel
category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn category<C: Into<Option<ChannelId>>>(&mut self, category: C) -> &mut Self {$/;"	P	implementation:EditChannel
category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn category<C: Into<ChannelId>>(&self, channel_id: C) -> Option<ChannelCategory> {$/;"	P	implementation:Cache
category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub fn category(self) -> Option<ChannelCategory> {$/;"	P	implementation:Channel
category_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn category_count(&self) -> usize {$/;"	P	implementation:Cache
category_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn category_create(&self, _ctx: Context, _category: &ChannelCategory) {}$/;"	P	interface:EventHandler
category_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn category_delete(&self, _ctx: Context, _category: &ChannelCategory) {}$/;"	P	interface:EventHandler
category_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn category_id(&self, cache: impl AsRef<Cache>) -> Option<ChannelId> {$/;"	P	implementation:Message
cdn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/macros.rs	/^macro_rules! cdn {$/;"	M
cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    cell: OnceCell<Mutex<u64>>,$/;"	m	struct:StaticAtomicU64
cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod cell {$/;"	n
cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    cell: NonNull<Cell<T, S>>,$/;"	m	struct:Harness
cfg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod cfg;$/;"	n
cfg_aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_aio {$/;"	M
cfg_atomic_waker_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_atomic_waker_impl {$/;"	M
cfg_block_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_block_on {$/;"	M
cfg_coop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_coop {$/;"	M
cfg_fs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_fs {$/;"	M
cfg_has_atomic_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_has_atomic_u64 {$/;"	M
cfg_has_const_mutex_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_has_const_mutex_new {$/;"	M
cfg_io_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_blocking {$/;"	M
cfg_io_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_driver {$/;"	M
cfg_io_driver_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_driver_impl {$/;"	M
cfg_io_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_readiness {$/;"	M
cfg_io_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_std {$/;"	M
cfg_io_util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_io_util {$/;"	M
cfg_is_wasm_not_wasi	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_is_wasm_not_wasi {$/;"	M
cfg_loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_loom {$/;"	M
cfg_macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_macros {$/;"	M
cfg_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_metrics {$/;"	M
cfg_net	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_net {$/;"	M
cfg_net_or_process	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_net_or_process {$/;"	M
cfg_net_unix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_net_unix {$/;"	M
cfg_net_windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_net_windows {$/;"	M
cfg_not_coop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_coop {$/;"	M
cfg_not_has_atomic_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_has_atomic_u64 {$/;"	M
cfg_not_has_const_mutex_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_has_const_mutex_new {$/;"	M
cfg_not_io_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_io_driver {$/;"	M
cfg_not_io_util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_io_util {$/;"	M
cfg_not_loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_loom {$/;"	M
cfg_not_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_metrics {$/;"	M
cfg_not_process_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_process_driver {$/;"	M
cfg_not_rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_rt {$/;"	M
cfg_not_rt_and_metrics_and_net	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_rt_and_metrics_and_net {$/;"	M
cfg_not_rt_multi_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_rt_multi_thread {$/;"	M
cfg_not_signal_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_signal_internal {$/;"	M
cfg_not_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_sync {$/;"	M
cfg_not_test_util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_test_util {$/;"	M
cfg_not_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_time {$/;"	M
cfg_not_trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_trace {$/;"	M
cfg_not_wasi	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_not_wasi {$/;"	M
cfg_process	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_process {$/;"	M
cfg_process_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_process_driver {$/;"	M
cfg_rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_rt {$/;"	M
cfg_rt_multi_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_rt_multi_thread {$/;"	M
cfg_signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_signal {$/;"	M
cfg_signal_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_signal_internal {$/;"	M
cfg_signal_internal_and_unix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_signal_internal_and_unix {$/;"	M
cfg_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_sync {$/;"	M
cfg_test_util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_test_util {$/;"	M
cfg_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_time {$/;"	M
cfg_trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_trace {$/;"	M
cfg_unstable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_unstable {$/;"	M
cfg_windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! cfg_windows {$/;"	M
chain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^pub(super) fn chain<T, U>(first: T, second: U) -> Chain<T, U>$/;"	f
chained_steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^fn chained_steal() {$/;"	f
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: &'a chan::Tx<T, Semaphore>,$/;"	m	struct:Permit
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: Arc<chan::Chan<T, Semaphore>>,$/;"	m	struct:WeakSender
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: Option<chan::Tx<T, Semaphore>>,$/;"	m	struct:OwnedPermit
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: chan::Rx<T, Semaphore>,$/;"	m	struct:Receiver
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    chan: chan::Tx<T, Semaphore>,$/;"	m	struct:Sender
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^mod chan;$/;"	n
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    chan: Arc<chan::Chan<T, Semaphore>>,$/;"	m	struct:WeakUnboundedSender
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    chan: chan::Rx<T, Semaphore>,$/;"	m	struct:UnboundedReceiver
chan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    chan: chan::Tx<T, Semaphore>,$/;"	m	struct:UnboundedSender
change	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^mod change;$/;"	n
change_nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn change_nickname(self) -> bool {$/;"	P	implementation:Permissions
change_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn change_waker() {$/;"	f
changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub async fn changed(&mut self) -> Result<(), error::RecvError> {$/;"	P	implementation:Receiver
changes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub changes: Option<Vec<Change>>,$/;"	m	struct:AuditLogEntry
changing_rx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn changing_rx_task() {$/;"	f
changing_tx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn changing_tx_task() {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn channel<C: Into<ChannelId>>(&self, id: C) -> Option<Channel> {$/;"	P	implementation:Cache
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel(channel_id: u64) -> String {$/;"	P	implementation:Route
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn channel(&self, cache_http: impl CacheHttp) -> Result<Channel> {$/;"	P	implementation:Message
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub async fn channel(&self, cache_http: impl CacheHttp) -> Result<Channel> {$/;"	P	implementation:Reaction
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel: Channel,$/;"	m	struct:ChannelCreateEvent
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel: Channel,$/;"	m	struct:ChannelDeleteEvent
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel: Channel,$/;"	m	struct:ChannelUpdateEvent
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub channel: InviteChannel,$/;"	m	struct:Invite
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub channel: InviteChannel,$/;"	m	struct:RichInvite
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod channel;$/;"	n
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^mod channel;$/;"	n
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn channel<C: Into<ChannelId>>(&mut self, channel: C) -> &mut Self {$/;"	P	implementation:MessageBuilder
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^pub(super) fn channel() -> (Sender, Receiver) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^pub(crate) fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^pub fn channel<T: Clone>(mut capacity: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^pub fn channel<T>(buffer: usize) -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^pub(crate) fn channel<T, S: Semaphore>(semaphore: S) -> (Tx<T, S>, Rx<T, S>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^pub(crate) fn channel<T>() -> (Tx<T>, Rx<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^pub fn channel<T>() -> (Sender<T>, Receiver<T>) {$/;"	f
channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub fn channel<T>(init: T) -> (Sender<T>, Receiver<T>) {$/;"	f
channel_archived_private_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_archived_private_threads($/;"	P	implementation:Route
channel_archived_public_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_archived_public_threads($/;"	P	implementation:Route
channel_belongs_to_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^fn channel_belongs_to_guild(channel: &Channel, guild: GuildId) -> bool {$/;"	f
channel_category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod channel_category;$/;"	n
channel_category_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn channel_category_id(&self, channel_id: ChannelId) -> Option<ChannelId> {$/;"	P	implementation:Cache
channel_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn channel_create(&self, _ctx: Context, _channel: &GuildChannel) {}$/;"	P	interface:EventHandler
channel_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn channel_delete(&self, _ctx: Context, _channel: &GuildChannel) {}$/;"	P	interface:EventHandler
channel_follow_news	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_follow_news(channel_id: u64) -> String {$/;"	P	implementation:Route
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    pub fn channel_id<C: Into<ChannelId>>(&mut self, channel_id: C) -> &mut Self {$/;"	P	implementation:CreateScheduledEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_stage_instance.rs	/^    pub fn channel_id(&mut self, id: u64) -> &mut Self {$/;"	P	implementation:CreateStageInstance
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_widget.rs	/^    pub fn channel_id(&mut self, id: u64) -> &mut Self {$/;"	P	implementation:EditGuildWidget
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub fn channel_id<C: Into<ChannelId>>(&mut self, channel_id: C) -> &mut Self {$/;"	P	implementation:EditScheduledEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    channel_id: Option<u64>,$/;"	m	struct:FilterOptions
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    channel_id: Vec<ChannelId>,$/;"	m	struct:FilterOptions
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    channel_id: Option<u64>,$/;"	m	struct:FilterOptions
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    channel_id: Option<u64>,$/;"	m	struct:FilterOptions
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    channel_id: Option<u64>,$/;"	m	struct:FilterOptions
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:ApplicationCommandInteraction
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:AutocompleteInteraction
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:MessageComponentInteraction
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:ModalSubmitInteraction
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    channel_id: ChannelId,$/;"	m	struct:MessagesIter
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:Message
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:MessageReference
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:StageInstance
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod channel_id;$/;"	n
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/partial_channel.rs	/^    channel_id: ChannelId,$/;"	m	struct:FollowedChannel
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:Reaction
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:ChannelPinsUpdateEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:InviteCreateEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:InviteDeleteEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:MessageDeleteBulkEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:MessageDeleteEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:MessageUpdateEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:ReactionRemoveAllEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:TypingStartEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:WebhookUpdateEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: Option<ChannelId>,$/;"	m	struct:VoiceServerUpdateEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channel_id: bool,$/;"	m	struct:RelatedIdsForEventType
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub channel_id: Option<ChannelId>,$/;"	m	struct:Options
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    channel_id: ChannelId,$/;"	m	struct:Alert
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub channel_id: Option<ChannelId>,$/;"	m	struct:ActionExecution
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub channel_id: Option<ChannelId>,$/;"	m	struct:GuildWidget
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub channel_id: Option<ChannelId>,$/;"	m	struct:ScheduledEvent
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^            channel_id: ChannelId,$/;"	m	struct:GuildWelcomeChannel::deserialize::Helper
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    pub channel_id: ChannelId,$/;"	m	struct:GuildWelcomeChannel
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            channel_id: Option<ChannelId>,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub channel_id: Option<ChannelId>,$/;"	m	struct:VoiceState
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub channel_id: Option<ChannelId>,$/;"	m	struct:Webhook
channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn channel_id(&mut self, channel_id: ChannelId) -> &mut Self {$/;"	P	implementation:CustomMessage
channel_id_from_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn channel_id_from_name($/;"	P	implementation:Guild
channel_id_from_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn channel_id_from_name($/;"	P	implementation:PartialGuild
channel_invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_invites(channel_id: u64) -> String {$/;"	P	implementation:Route
channel_joined_private_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_joined_private_threads($/;"	P	implementation:Route
channel_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_message(channel_id: u64, message_id: u64) -> String {$/;"	P	implementation:Route
channel_message_crosspost	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_message_crosspost(channel_id: u64, message_id: u64) -> String {$/;"	P	implementation:Route
channel_message_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_message_reaction<D, T>($/;"	P	implementation:Route
channel_message_reaction_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_message_reaction_emoji<T>($/;"	P	implementation:Route
channel_message_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_message_reactions(channel_id: u64, message_id: u64) -> String {$/;"	P	implementation:Route
channel_message_reactions_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_message_reactions_list($/;"	P	implementation:Route
channel_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_messages(channel_id: u64, query: Option<&str>) -> String {$/;"	P	implementation:Route
channel_messages_bulk_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_messages_bulk_delete(channel_id: u64) -> String {$/;"	P	implementation:Route
channel_messages_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn channel_messages_field<T>($/;"	P	implementation:Cache
channel_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_permission(channel_id: u64, target_id: u64) -> String {$/;"	P	implementation:Route
channel_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_pin(channel_id: u64, message_id: u64) -> String {$/;"	P	implementation:Route
channel_pins	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_pins(channel_id: u64) -> String {$/;"	P	implementation:Route
channel_pins_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn channel_pins_update(&self, _ctx: Context, _pin: ChannelPinsUpdateEvent) {}$/;"	P	interface:EventHandler
channel_private_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_private_threads(channel_id: u64) -> String {$/;"	P	implementation:Route
channel_public_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_public_threads(channel_id: u64, message_id: u64) -> String {$/;"	P	implementation:Route
channel_thread_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_thread_member(channel_id: u64, user_id: u64) -> String {$/;"	P	implementation:Route
channel_thread_member_me	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_thread_member_me(channel_id: u64) -> String {$/;"	P	implementation:Route
channel_thread_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_thread_members(channel_id: u64) -> String {$/;"	P	implementation:Route
channel_types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn channel_types(&mut self, channel_types: &[ChannelType]) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
channel_types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub channel_types: Vec<ChannelType>,$/;"	m	struct:CommandOption
channel_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_typing(channel_id: u64) -> String {$/;"	P	implementation:Route
channel_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn channel_update(&self, _ctx: Context, _new_data: Channel) {}$/;"	P	interface:EventHandler
channel_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn channel_update(&self, _ctx: Context, _old: Option<Channel>, _new: Channel) {}$/;"	P	interface:EventHandler
channel_webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn channel_webhooks(channel_id: u64) -> String {$/;"	P	implementation:Route
channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) channels: DashMap<ChannelId, GuildChannel>,$/;"	m	struct:Cache
channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub channels: HashMap<ChannelId, PartialChannel>,$/;"	m	struct:CommandDataResolved
channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn channels($/;"	P	implementation:GuildId
channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn channels($/;"	P	implementation:Guild
channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub channels: HashMap<ChannelId, Channel>,$/;"	m	struct:Guild
channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn channels($/;"	P	implementation:PartialGuild
channels_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub channels_id: Vec<ChannelId>,$/;"	m	struct:ThreadListSyncEvent
check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub check: Option<Check>,$/;"	m	struct:TicketCounter
check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn check(&mut self, check: Check) -> &mut Self {$/;"	P	implementation:BucketBuilder
check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub(crate) check: Option<Check>,$/;"	m	struct:BucketBuilder
check	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^mod check;$/;"	n
check_command_behaviour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn check_command_behaviour($/;"	f
check_common_behaviour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn check_common_behaviour($/;"	f
check_content_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub(crate) fn check_content_length(map: &JsonMap) -> Result<()> {$/;"	P	implementation:Message
check_discrepancy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^async fn check_discrepancy($/;"	f
check_embed_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub(crate) fn check_embed_length(map: &JsonMap) -> Result<()> {$/;"	P	implementation:Message
check_heartbeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn check_heartbeat(&mut self) -> bool {$/;"	P	implementation:Shard
check_hierarchy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    fn check_hierarchy(&self, cache: impl AsRef<Cache>, other_user: UserId) -> Result<()> {$/;"	P	implementation:Guild
check_in_help	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    pub check_in_help: bool,$/;"	m	struct:Check
check_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn check_inner(&self) -> std_io::Result<()> {$/;"	P	implementation:Handle
check_last_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    async fn check_last_start(&mut self) {$/;"	P	implementation:ShardQueuer
check_lengths	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub(crate) fn check_lengths(map: &JsonMap) -> Result<()> {$/;"	P	implementation:Message
check_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_send<T: Send>() {}$/;"	f	function:bounds
check_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn check_send<T: Send>() {}$/;"	f	function:bounds
check_send_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_send_sync<T: Send + Sync>() {}$/;"	f	function:bounds
check_send_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn check_send_sync<T: Send + Sync>() {}$/;"	f	function:bounds
check_send_sync_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_send_sync_val<T: Send + Sync>(_t: T) {}$/;"	f	function:bounds
check_send_sync_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn check_send_sync_val<T: Send + Sync>(_t: T) {}$/;"	f	function:bounds
check_send_sync_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn check_send_sync_val<T: Send + Sync>(_t: T) {}$/;"	f	function:bounds
check_static	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_static<T: 'static>() {}$/;"	f	function:bounds
check_static_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_static_val<T: 'static>(_t: T) {}$/;"	f	function:bounds
check_sticker_ids_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub(crate) fn check_sticker_ids_length(map: &JsonMap) -> Result<()> {$/;"	P	implementation:Message
check_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn check_sync<T: Sync>() {}$/;"	f	function:bounds
check_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn check_unpin<T: Unpin>() {}$/;"	f	function:bounds
check_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn check_unpin<T: Unpin>() {}$/;"	f	function:bounds
check_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn check_unpin<T: Unpin>() {}$/;"	f	function:bounds
checked_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn checked_add(&self, duration: Duration) -> Option<Instant> {$/;"	P	implementation:Instant
checked_duration_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn checked_duration_since(&self, earlier: Instant) -> Option<Duration> {$/;"	P	implementation:Instant
checked_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    async fn checked_shutdown(&mut self, id: ShardId, close_code: u16) -> bool {$/;"	P	implementation:ShardRunner
checked_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    async fn checked_start(&mut self, id: u64, total: u64) {$/;"	P	implementation:ShardQueuer
checked_sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn checked_sub(&self, duration: Duration) -> Option<Instant> {$/;"	P	implementation:Instant
checks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub checks: Vec<String>,$/;"	m	struct:Command
checks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn checks(&self) -> &'static [&'static Check] {$/;"	P	implementation:CommandOptions
checks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn checks(&self) -> &'static [&'static Check] {$/;"	P	implementation:GroupOptions
checks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn checks(&self) -> &'static [&'static Check];$/;"	P	interface:CommonOptions
checks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub checks: &'static [&'static Check],$/;"	m	struct:CommandOptions
checks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub checks: &'static [&'static Check],$/;"	m	struct:GroupOptions
checks_label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub checks_label: &'static str,$/;"	m	struct:HelpOptions
child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    child: FusedChild,$/;"	m	struct:Child
child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    child: imp::Child,$/;"	m	struct:SpawnedChild
child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    child: StdChild,$/;"	m	struct:Child
child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn child() -> Self {$/;"	P	implementation:SignalKind
choices	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub choices: Vec<CommandOptionChoice>,$/;"	m	struct:CommandOption
chunk_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub chunk_count: u32,$/;"	m	struct:GuildMembersChunkEvent
chunk_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn chunk_guild($/;"	P	implementation:ShardMessenger
chunk_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn chunk_guild($/;"	P	implementation:Shard
chunk_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub chunk_index: u32,$/;"	m	struct:GuildMembersChunkEvent
clean_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    clean_channel: bool,$/;"	m	struct:ContentSafeOptions
clean_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    pub fn clean_channel(mut self, b: bool) -> Self {$/;"	P	implementation:ContentSafeOptions
clean_everyone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    clean_everyone: bool,$/;"	m	struct:ContentSafeOptions
clean_everyone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    pub fn clean_everyone(mut self, b: bool) -> Self {$/;"	P	implementation:ContentSafeOptions
clean_here	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    clean_here: bool,$/;"	m	struct:ContentSafeOptions
clean_here	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    pub fn clean_here(mut self, b: bool) -> Self {$/;"	P	implementation:ContentSafeOptions
clean_mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^fn clean_mention($/;"	f
clean_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^fn clean_mentions($/;"	f
clean_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    clean_role: bool,$/;"	m	struct:ContentSafeOptions
clean_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    pub fn clean_role(mut self, b: bool) -> Self {$/;"	P	implementation:ContentSafeOptions
clean_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    clean_user: bool,$/;"	m	struct:ContentSafeOptions
clean_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    pub fn clean_user(mut self, b: bool) -> Self {$/;"	P	implementation:ContentSafeOptions
clear	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:ReadBuf
clear_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(self) unsafe fn clear_entry(&self, entry: NonNull<TimerShared>) {$/;"	P	implementation:Handle
clear_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn clear_readiness(&self, event: ReadyEvent) {$/;"	P	implementation:Registration
clear_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(crate) fn clear_readiness(&self, event: ReadyEvent) {$/;"	P	implementation:ScheduledIo
clear_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn clear_ready(&mut self) {$/;"	P	implementation:AsyncFdReadyGuard
clear_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn clear_ready(&mut self) {$/;"	P	implementation:AsyncFdReadyMutGuard
clear_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn clear_ready(&self, ev: AioEvent) {$/;"	P	implementation:Aio
clear_wakers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(crate) fn clear_wakers(&self) {$/;"	P	implementation:ScheduledIo
client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub client: WsStream,$/;"	m	struct:Shard
client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    client: Option<Client>,$/;"	m	struct:HttpBuilder
client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn client(mut self, client: Client) -> Self {$/;"	P	implementation:HttpBuilder
client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub(crate) client: Client,$/;"	m	struct:Http
client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub mod client;$/;"	n
client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    client: Client,$/;"	m	struct:Ratelimiter
client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod client;$/;"	n
client_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    client_id: ApplicationId,$/;"	m	struct:CreateBotAuthParameters
client_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    pub fn client_id<U: Into<ApplicationId>>(&mut self, client_id: U) -> &mut Self {$/;"	P	implementation:CreateBotAuthParameters
client_status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub client_status: Option<ClientStatus>,$/;"	m	struct:Presence
clock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) clock: Clock,$/;"	m	struct:Handle
clock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn clock(&self) -> &super::Clock {$/;"	P	implementation:TimerEntry
clock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod clock;$/;"	n
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn clone(raw: *const ()) -> RawWaker {$/;"	f
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn clone(&self) -> Parker {$/;"	P	implementation:Parker
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn clone(&self) -> Steal<T> {$/;"	P	implementation:Steal
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:RawTask
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn clone(&self) -> Sender<T> {$/;"	P	implementation:Sender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Sender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:WeakSender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn clone(&self) -> Tx<T, S> {$/;"	P	implementation:Tx
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:UnboundedSender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:WeakUnboundedSender
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn clone(&self) -> OnceCell<T> {$/;"	P	implementation:OnceCell
clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Receiver
clone_arc_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn clone_arc_raw<T: Wake>(data: *const ()) -> RawWaker {$/;"	f
clone_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn clone_value(&self) -> Option<T>$/;"	P	implementation:RecvGuard
clone_w	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    unsafe fn clone_w(data: *const ()) -> RawWaker {$/;"	f	function:notify_clones_waker_before_lock
clone_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^unsafe fn clone_waker(ptr: *const ()) -> RawWaker {$/;"	f
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) fn close(&self) {$/;"	P	implementation:Handle
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn close(&self) -> bool {$/;"	P	implementation:Inject
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn close(&self) {$/;"	P	implementation:Semaphore
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn close(&mut self) {$/;"	P	implementation:Receiver
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn close(&self) {$/;"	P	implementation:Semaphore
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn close(&self);$/;"	P	interface:Semaphore
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn close(&mut self) {$/;"	P	implementation:Rx
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) fn close(&self) {$/;"	P	implementation:Tx
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn close(&mut self) {$/;"	P	implementation:UnboundedReceiver
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn close(&self) {$/;"	P	implementation:Inner
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn close(&mut self) {$/;"	P	implementation:Receiver
close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn close(&self) {$/;"	P	implementation:Semaphore
close_and_shutdown_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn close_and_shutdown_all(&self)$/;"	P	implementation:LocalOwnedTasks
close_and_shutdown_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn close_and_shutdown_all(&self)$/;"	P	implementation:OwnedTasks
close_and_shutdown_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn close_and_shutdown_all(&self) {$/;"	P	implementation:LocalState
close_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn close_channel(&self) {$/;"	P	implementation:Sender
close_codes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/constants.rs	/^pub mod close_codes {$/;"	n
close_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn close_read(&mut self) {$/;"	P	implementation:Pipe
close_semaphore_notifies_permit1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn close_semaphore_notifies_permit1() {$/;"	f
close_semaphore_notifies_permit2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn close_semaphore_notifies_permit2() {$/;"	f
close_semaphore_prevents_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn close_semaphore_prevents_acquire() {$/;"	f
close_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn close_write(&mut self) {$/;"	P	implementation:Pipe
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    closed: bool,$/;"	m	struct:OwnedTasksInner
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    closed: bool,$/;"	m	struct:Waitlist
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn closed() -> AcquireError {$/;"	P	implementation:AcquireError
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    closed: bool,$/;"	m	struct:Tail
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn closed(&self) {$/;"	P	implementation:Sender
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) async fn closed(&self) {$/;"	P	implementation:Tx
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub async fn closed(&self) {$/;"	P	implementation:UnboundedSender
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub async fn closed(&mut self) {$/;"	P	implementation:Sender
closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub async fn closed(&self) {$/;"	P	implementation:Sender
closest_to_origin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^fn closest_to_origin(origin: &str, word_a: &str, word_b: &str) -> std::cmp::Ordering {$/;"	f
closing_and_sending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_and_sending() {$/;"	f
closing_bounded_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_bounded_rx() {$/;"	f
closing_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_tx() {$/;"	f
closing_unbounded_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_unbounded_rx() {$/;"	f
closing_unbounded_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn closing_unbounded_tx() {$/;"	f
cmds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    cmds: HashMap<String, (&'static Command, Arc<CommandMap>)>,$/;"	m	struct:CommandMap
cmp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn cmp(&self, other: &Role) -> Ordering {$/;"	P	implementation:Role
cnt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^        cnt: AtomicUsize,$/;"	m	struct:test::Foo
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^            code: String,$/;"	m	struct:Http::get_guild_vanity_url::GuildVanityUrl
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub code: String,$/;"	m	struct:DiscordJsonSingleError
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub code: isize,$/;"	m	struct:DiscordJsonError
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub code: String,$/;"	m	struct:InviteCreateEvent
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub code: String,$/;"	m	struct:InviteDeleteEvent
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub code: String,$/;"	m	struct:Invite
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub code: String,$/;"	m	struct:RichInvite
code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub code: bool,$/;"	m	struct:Content
code_blocks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn code_blocks() {$/;"	f	module:test
collect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    async fn collect(mut rx: watch::Receiver<()>) -> Vec<()> {$/;"	f	module:tests
collect_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    collect_limit: Option<u32>,$/;"	m	struct:FilterOptions
collect_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    collect_limit: Option<u32>,$/;"	m	struct:FilterOptions
collect_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn collect_limit(mut self, limit: u32) -> Self {$/;"	P	implementation:EventCollectorBuilder
collect_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    collect_limit: Option<u32>,$/;"	m	struct:FilterOptions
collect_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    pub fn collect_limit(mut self, limit: u32) -> Self {$/;"	P	implementation:MessageCollectorBuilder
collect_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    collect_limit: Option<u32>,$/;"	m	struct:FilterOptions
collect_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    collect_limit: Option<u32>,$/;"	m	struct:FilterOptions
collect_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn collect_list(list: &mut LinkedList<&'_ Entry, <&'_ Entry as Link>::Target>) -> Vec<i32> {$/;"	f	module:tests
collected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    collected: u32,$/;"	m	struct:ComponentInteractionFilter
collected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    collected: u32,$/;"	m	struct:EventFilter
collected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    collected: u32,$/;"	m	struct:MessageFilter
collected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    collected: u32,$/;"	m	struct:ModalInteractionFilter
collected	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    collected: u32,$/;"	m	struct:ReactionFilter
collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod collector;$/;"	n
color	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn color(&mut self, colour: u32) -> &mut Self {$/;"	P	implementation:CreateEmbed
color	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn color<C: Into<Colour>>(&mut self, colour: C) -> &mut Self {$/;"	P	implementation:CreateEmbed
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn colour(&mut self, colour: u32) -> &mut Self {$/;"	P	implementation:CreateEmbed
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn colour<C: Into<Colour>>(&mut self, colour: C) -> &mut Self {$/;"	P	implementation:CreateEmbed
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub fn colour(&mut self, colour: u64) -> &mut Self {$/;"	P	implementation:EditRole
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub colour: Option<Colour>,$/;"	m	struct:Embed
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub colour: u32,$/;"	m	struct:Embed
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn colour(&self, cache: impl AsRef<Cache>) -> Option<Colour> {$/;"	P	implementation:Member
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub colour: Colour,$/;"	m	struct:InterimRole
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub colour: Colour,$/;"	m	struct:Role
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub colour: u32,$/;"	m	struct:InterimRole
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub colour: u32,$/;"	m	struct:Role
colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^mod colour;$/;"	n
colours	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^pub mod colours {$/;"	n
columns	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub columns: [&'s str; C],$/;"	m	struct:Metadata
columns	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn columns() -> &'static [&'static str];$/;"	P	interface:Schema
comma_separated_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub mod comma_separated_string {$/;"	n
command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^pub async fn command($/;"	f
command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub mod command;$/;"	n
command_name_if_recognised	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^                fn command_name_if_recognised(res: &Result<Invoke, ParseError>) -> Option<&str> /;"	f	function:command
command_names	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub command_names: Vec<String>,$/;"	m	struct:GroupCommandsPair
command_not_found_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub command_not_found_text: &'static str,$/;"	m	struct:HelpOptions
commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub commands: bool,$/;"	m	struct:WithWhiteSpace
commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub commands: &'static [&'static Command],$/;"	m	struct:GroupOptions
communication_disabled_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub communication_disabled_until: Option<Timestamp>,$/;"	m	struct:GuildMemberUpdateEvent
communication_disabled_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub communication_disabled_until: Option<Timestamp>,$/;"	m	struct:InterimMember
communication_disabled_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub communication_disabled_until: Option<Timestamp>,$/;"	m	struct:Member
compact	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn compact(&mut self) {$/;"	P	implementation:Slab
compact_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn compact_all() {$/;"	f	module:test
compare_exchange	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn compare_exchange($/;"	P	implementation:AtomicU64
compare_exchange_weak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn compare_exchange_weak($/;"	P	implementation:AtomicU64
compare_exchange_weak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) fn compare_exchange_weak($/;"	P	implementation:StaticAtomicU64
competing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn competing<N>(name: N) -> Activity$/;"	P	implementation:Activity
complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn complete(self) {$/;"	f
complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn complete(&self) -> bool {$/;"	P	implementation:Inner
complete_block_on_under_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn complete_block_on_under_load() {$/;"	f	module:group_b
complete_inflight	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    async fn complete_inflight(&mut self) {$/;"	P	implementation:Inner
component	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub mod component;$/;"	n
component_interaction_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^pub mod component_interaction_collector;$/;"	n
component_interaction_filters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    component_interaction_filters: Vec<ComponentInteractionFilter>,$/;"	m	struct:ShardRunner
component_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub component_type: ComponentType,$/;"	m	struct:MessageComponentInteractionData
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn components<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateInteractionResponseData
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn components<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateInteractionResponseFollowup
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn components<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateMessage
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    pub fn components<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditInteractionResponse
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn components<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditMessage
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_webhook_message.rs	/^    pub fn components<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditWebhookMessage
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn components<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:ExecuteWebhook
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub components: Vec<ActionRowComponent>,$/;"	m	struct:ActionRow
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub components: Vec<ActionRow>,$/;"	m	struct:ModalSubmitInteractionData
components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub components: Vec<ActionRow>,$/;"	m	struct:Message
concurrent_cancel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn concurrent_cancel() {$/;"	f
concurrent_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn concurrent_close() {$/;"	f
concurrent_read_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_rwlock.rs	/^fn concurrent_read_write() {$/;"	f
concurrent_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_rwlock.rs	/^fn concurrent_write() {$/;"	f
condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    condvar: Condvar,$/;"	m	struct:Inner
condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    condvar: Condvar,$/;"	m	struct:Inner
condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    condvar: Condvar,$/;"	m	struct:Inner
config	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    config: Configuration,$/;"	m	struct:StandardFramework
config	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    config: Config,$/;"	m	struct:Shared
config	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    config: Config,$/;"	m	struct:Shared
configuration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^mod configuration;$/;"	n
configure	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn configure<F>(mut self, f: F) -> Self$/;"	P	implementation:StandardFramework
configure_client_backend	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^fn configure_client_backend(builder: ClientBuilder) -> ClientBuilder {$/;"	f
conjure_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub fn conjure_value<T>() -> T {$/;"	f
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^async fn connect(base_url: &str) -> Result<WsStream> {$/;"	f
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn connect(self) -> bool {$/;"	P	implementation:Permissions
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub async fn connect(self, addr: SocketAddr) -> io::Result<TcpStream> {$/;"	P	implementation:TcpSocket
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn connect<A: ToSocketAddrs>(&self, addr: A) -> io::Result<()> {$/;"	P	implementation:UdpSocket
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn connect<P: AsRef<Path>>(&self, path: P) -> io::Result<()> {$/;"	P	implementation:UnixDatagram
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn connect<P>(path: P) -> io::Result<UnixStream>$/;"	P	implementation:UnixStream
connect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn connect(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeServer
connection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod connection;$/;"	n
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^    pub(crate) const fn const_new(t: T) -> Mutex<T> {$/;"	P	implementation:Mutex
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) const fn const_new(t: T) -> Mutex<T> {$/;"	P	implementation:Mutex
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) const fn const_new(mut permits: usize) -> Self {$/;"	P	implementation:Semaphore
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub const fn const_new(t: T) -> Self$/;"	P	implementation:Mutex
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub const fn const_new() -> Notify {$/;"	P	implementation:Notify
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub const fn const_new() -> Self {$/;"	P	implementation:OnceCell
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub const fn const_new(value: T) -> RwLock<T>$/;"	P	implementation:RwLock
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub const fn const_new(permits: usize) -> Self {$/;"	P	implementation:Semaphore
const_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn const_new() {$/;"	f	module:tests
const_with_max_readers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub const fn const_with_max_readers(value: T, mut max_reads: u32) -> RwLock<T>$/;"	P	implementation:RwLock
constants	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod constants;$/;"	n
construct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub(crate) fn construct(self) -> Bucket {$/;"	P	implementation:BucketBuilder
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn consume(mut self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:u8
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:Cursor
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	f
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize);$/;"	P	interface:AsyncBufRead
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:BufReader
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:BufStream
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:BufWriter
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	f
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn consume(self: Pin<&mut Self>, _: usize) {}$/;"	P	implementation:Empty
consume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    fn consume(self: Pin<&mut Self>, amt: usize) {$/;"	P	implementation:Take
consume_budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/consume_budget.rs	/^pub async fn consume_budget() {$/;"	f
consume_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn consume_value(&self) -> Option<T> {$/;"	P	implementation:Inner
contains	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub fn contains(&self, value: &T) -> bool$/;"	P	implementation:RelatedId
contains	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^        fn contains(substring: &str, case_sensitive: bool, name: &str) -> bool {$/;"	f	method:Guild::members_containing
contains	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub(crate) fn contains<T: Into<Self>>(self, other: T) -> bool {$/;"	P	implementation:Ready
contains_case_insensitive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^fn contains_case_insensitive(to_look_at: &str, to_find: &str) -> bool {$/;"	f
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn content<D: ToString>(&mut self, content: D) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn content<D: ToString>(&mut self, content: D) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn content<D: ToString>(&mut self, content: D) -> &mut Self {$/;"	P	implementation:CreateMessage
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    pub fn content<D: ToString>(&mut self, content: D) -> &mut Self {$/;"	P	implementation:EditInteractionResponse
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn content<D: ToString>(&mut self, content: D) -> &mut Self {$/;"	P	implementation:EditMessage
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_webhook_message.rs	/^    pub fn content<D: ToString>(&mut self, content: D) -> &mut Self {$/;"	P	implementation:EditWebhookMessage
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn content<S: ToString>(&mut self, content: S) -> &mut Self {$/;"	P	implementation:ExecuteWebhook
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub content: String,$/;"	m	struct:Message
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub content: Option<String>,$/;"	m	struct:MessageUpdateEvent
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub content: String,$/;"	m	struct:ActionExecution
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn content<T: ToString>(&mut self, s: T) -> &mut Self {$/;"	P	implementation:CustomMessage
content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn content() {$/;"	f	module:test
content_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn content_safe(&self, cache: impl AsRef<Cache>) -> String {$/;"	P	implementation:Message
content_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^pub fn content_safe($/;"	f
content_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^mod content_safe;$/;"	n
content_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub content_type: Option<String>,$/;"	m	struct:Attachment
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^fn context($/;"	f
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^mod context;$/;"	n
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^pub(crate) mod context;$/;"	n
context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    context: Context,$/;"	m	struct:CoreGuard
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/_template.rs	/^    async fn convert($/;"	P	implementation:PLACEHOLDER
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    async fn convert($/;"	P	implementation:Channel
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    async fn convert($/;"	P	implementation:ChannelCategory
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    async fn convert($/;"	P	implementation:GuildChannel
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^    async fn convert($/;"	P	implementation:Emoji
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/guild.rs	/^    async fn convert($/;"	P	implementation:Guild
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^    async fn convert($/;"	P	implementation:Member
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^    async fn convert($/;"	P	implementation:Message
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^    async fn convert($/;"	P	implementation:T
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^    async fn convert($/;"	P	interface:ArgumentConvert
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^    async fn convert($/;"	P	implementation:Role
convert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^    async fn convert($/;"	P	implementation:User
convert_address	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^fn convert_address(address: socket2::SockAddr) -> io::Result<SocketAddr> {$/;"	f
convert_to_stdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) fn convert_to_stdio(io: ChildStdio) -> io::Result<Stdio> {$/;"	f
convert_to_stdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(crate) fn convert_to_stdio(child_stdio: ChildStdio) -> io::Result<Stdio> {$/;"	f
convert_ws_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^pub(crate) fn convert_ws_message(message: Option<Message>) -> Result<Option<Value>> {$/;"	f
coop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^pub(crate) mod coop;$/;"	n
copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/copy.rs	/^pub async fn copy(from: impl AsRef<Path>, to: impl AsRef<Path>) -> Result<u64, std::io::Error> {$/;"	f
copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod copy;$/;"	n
copy_bidirectional	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^pub async fn copy_bidirectional<A, B>(a: &mut A, b: &mut B) -> Result<(u64, u64), std::io::Error/;"	f
copy_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn copy_from(&mut self, src: &[u8]) -> usize {$/;"	P	implementation:Buf
copy_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn copy_to(&mut self, dst: &mut ReadBuf<'_>) -> usize {$/;"	P	implementation:Buf
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    core: AtomicCell<Core>,$/;"	m	struct:CurrentThread
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    core: RefCell<Option<Box<Core>>>,$/;"	m	struct:Context
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    core: AtomicCell<Core>,$/;"	m	struct:Worker
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    core: RefCell<Option<Box<Core>>>,$/;"	m	struct:Context
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) core: Core<T, S>,$/;"	m	struct:Cell
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^            core: &'a Core<T, S>,$/;"	m	struct:poll_future::Guard
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn core(&self) -> &Core<T, S> {$/;"	f
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod core;$/;"	n
core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    core: TryLock<Core>,$/;"	m	struct:Inner
count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub count: u64,$/;"	m	struct:MessageReaction
count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub count: Option<u64>,$/;"	m	struct:Options
count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/select.rs	/^macro_rules! count {$/;"	M
cover_image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub cover_image: Option<String>,$/;"	m	struct:MessageApplication
cover_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub fn cover_sticker(&self) -> Option<&Sticker> {$/;"	P	implementation:StickerPack
cover_sticker_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub cover_sticker_id: Option<StickerId>,$/;"	m	struct:StickerPack
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create($/;"	P	implementation:Guild
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub async fn create<F>($/;"	P	implementation:Invite
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    pub async fn create(&self, path: impl AsRef<Path>) -> io::Result<()> {$/;"	P	implementation:DirBuilder
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn create(path: impl AsRef<Path>) -> io::Result<File> {$/;"	P	implementation:File
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn create(&mut self, create: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn create(&self, addr: impl AsRef<OsStr>) -> io::Result<NamedPipeServer> {$/;"	P	implementation:ServerOptions
create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^pub(super) fn create($/;"	f
create	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn create(self, pool: E) -> CrudFut<'e, Self> {$/;"	P	interface:Crud
create_action_row	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn create_action_row<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateComponents
create_allowed_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_allowed_mentions;$/;"	n
create_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn create_application_command<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateApplicationCommands
create_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn create_application_command<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateApplicationCommandsPermissions
create_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_application_command;$/;"	n
create_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_application_command<F>($/;"	P	implementation:GuildId
create_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_application_command<F>($/;"	P	implementation:Guild
create_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn create_application_command<F>($/;"	P	implementation:PartialGuild
create_application_command_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_application_command_permission;$/;"	n
create_application_command_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_application_command_permission<F>($/;"	P	implementation:GuildId
create_application_command_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_application_command_permission<F>($/;"	P	implementation:Guild
create_application_command_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn create_application_command_permission<F>($/;"	P	implementation:PartialGuild
create_autocomplete_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub async fn create_autocomplete_response<F>(&self, http: impl AsRef<Http>, f: F) -> Result</;"	P	implementation:AutocompleteInteraction
create_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_automod_rule(&self, guild_id: u64, map: &JsonMap) -> Result<Rule> {$/;"	P	implementation:Http
create_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_automod_rule($/;"	P	implementation:GuildId
create_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_automod_rule($/;"	P	implementation:Guild
create_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn create_automod_rule($/;"	P	implementation:PartialGuild
create_blocking_pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^pub(crate) fn create_blocking_pool(builder: &Builder, thread_cap: usize) -> BlockingPool {$/;"	f
create_button	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn create_button<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateActionRow
create_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_channel;$/;"	n
create_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_channel($/;"	P	implementation:Http
create_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_channel($/;"	P	implementation:GuildId
create_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_channel($/;"	P	implementation:Guild
create_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn create_channel($/;"	P	implementation:PartialGuild
create_client	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^pub(crate) async fn create_client(url: Url) -> Result<WsStream> {$/;"	f
create_command_group_commands_pair_from_groups	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn create_command_group_commands_pair_from_groups<'a>($/;"	f
create_components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_components;$/;"	n
create_customised_help_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub async fn create_customised_help_data<'a>($/;"	f
create_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/create_dir.rs	/^pub async fn create_dir(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
create_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod create_dir;$/;"	n
create_dir_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/create_dir_all.rs	/^pub async fn create_dir_all(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
create_dir_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod create_dir_all;$/;"	n
create_dm_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn create_dm_channel(&self, cache_http: impl CacheHttp) -> Result<PrivateChannel> /;"	P	implementation:User
create_dm_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn create_dm_channel(self, cache_http: impl CacheHttp) -> Result<PrivateChannel> {$/;"	P	implementation:UserId
create_drop1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn create_drop1() {$/;"	f
create_drop2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn create_drop2() {$/;"	f
create_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_embed;$/;"	n
create_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_emoji($/;"	P	implementation:Http
create_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_emoji($/;"	P	implementation:GuildId
create_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_emoji($/;"	P	implementation:Guild
create_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn create_emoji($/;"	P	implementation:PartialGuild
create_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_followup_message($/;"	P	implementation:Http
create_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn create_followup_message<'a, F>($/;"	P	implementation:ApplicationCommandInteraction
create_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn create_followup_message<'a, F>($/;"	P	implementation:MessageComponentInteraction
create_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub async fn create_followup_message<'a, F>($/;"	P	implementation:ModalSubmitInteraction
create_followup_message_with_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_followup_message_with_files($/;"	P	implementation:Http
create_global_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_global_application_command(&self, map: &Value) -> Result<Command> {$/;"	P	implementation:Http
create_global_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub async fn create_global_application_command<F>($/;"	P	implementation:Command
create_global_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_global_application_commands(&self, map: &Value) -> Result<Vec<Command>> /;"	P	implementation:Http
create_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_guild(&self, map: &Value) -> Result<PartialGuild> {$/;"	P	implementation:Http
create_guild_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_guild_application_command($/;"	P	implementation:Http
create_guild_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_guild_application_commands($/;"	P	implementation:Http
create_guild_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_guild_integration($/;"	P	implementation:Http
create_input_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn create_input_text<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateActionRow
create_instant_invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn create_instant_invite(self) -> bool {$/;"	P	implementation:Permissions
create_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_integration($/;"	P	implementation:GuildId
create_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_integration<I>($/;"	P	implementation:Guild
create_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn create_integration($/;"	P	implementation:PartialGuild
create_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_interaction_response;$/;"	n
create_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_interaction_response($/;"	P	implementation:Http
create_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn create_interaction_response<'a, F>($/;"	P	implementation:ApplicationCommandInteraction
create_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn create_interaction_response<'a, F>($/;"	P	implementation:MessageComponentInteraction
create_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub async fn create_interaction_response<'a, F>($/;"	P	implementation:ModalSubmitInteraction
create_interaction_response_followup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_interaction_response_followup;$/;"	n
create_interaction_response_with_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_interaction_response_with_files($/;"	P	implementation:Http
create_invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_invite;$/;"	n
create_invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_invite($/;"	P	implementation:Http
create_invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn create_invite<F>(&self, http: impl AsRef<Http>, f: F) -> Result<RichInvite>$/;"	P	implementation:ChannelId
create_invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn create_invite<F>(&self, cache_http: impl CacheHttp, f: F) -> Result<RichInvite>$/;"	P	implementation:GuildChannel
create_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_message;$/;"	n
create_new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn create_new(&mut self, create_new: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
create_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn create_option<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateApplicationCommand
create_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn create_option<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateSelectMenuOptions
create_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn create_permission<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateApplicationCommandPermissionsData
create_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_permission($/;"	P	implementation:Http
create_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub async fn create_permission($/;"	P	implementation:ChannelCategory
create_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn create_permission($/;"	P	implementation:ChannelId
create_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn create_permission($/;"	P	implementation:GuildChannel
create_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn create_permissions<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateApplicationCommandPermissions
create_private_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_private_channel(&self, map: &Value) -> Result<PrivateChannel> {$/;"	P	implementation:Http
create_private_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_private_thread($/;"	P	implementation:Http
create_private_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn create_private_thread<F>($/;"	P	implementation:ChannelId
create_private_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn create_private_thread<F>($/;"	P	implementation:GuildChannel
create_private_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn create_private_threads(self) -> bool {$/;"	P	implementation:Permissions
create_public_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_public_thread($/;"	P	implementation:Http
create_public_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn create_public_thread<F>($/;"	P	implementation:ChannelId
create_public_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn create_public_thread<F>($/;"	P	implementation:GuildChannel
create_public_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn create_public_threads(self) -> bool {$/;"	P	implementation:Permissions
create_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_reaction($/;"	P	implementation:Http
create_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn create_reaction($/;"	P	implementation:ChannelId
create_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn create_reaction($/;"	P	implementation:PrivateChannel
create_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_role($/;"	P	implementation:Http
create_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_role<F>(self, http: impl AsRef<Http>, f: F) -> Result<Role>$/;"	P	implementation:GuildId
create_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_role<F>(&self, cache_http: impl CacheHttp, f: F) -> Result<Role>$/;"	P	implementation:Guild
create_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn create_role<F>(&self, http: impl AsRef<Http>, f: F) -> Result<Role>$/;"	P	implementation:PartialGuild
create_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_scheduled_event;$/;"	n
create_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_scheduled_event($/;"	P	implementation:Http
create_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_scheduled_event<F>($/;"	P	implementation:GuildId
create_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_scheduled_event<F>($/;"	P	implementation:Guild
create_select_menu	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn create_select_menu<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateActionRow
create_shutdown1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn create_shutdown1() {$/;"	f
create_shutdown2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn create_shutdown2() {$/;"	f
create_single_group	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn create_single_group($/;"	f
create_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_stage_instance;$/;"	n
create_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_stage_instance(&self, map: &Value) -> Result<StageInstance> {$/;"	P	implementation:Http
create_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn create_stage_instance<F>($/;"	P	implementation:ChannelId
create_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn create_stage_instance<F>($/;"	P	implementation:GuildChannel
create_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_sticker;$/;"	n
create_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_sticker<'a>($/;"	P	implementation:Http
create_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn create_sticker<'a, F>(self, http: impl AsRef<Http>, f: F) -> Result<Sticker>$/;"	P	implementation:GuildId
create_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn create_sticker<'a, F>(&self, cache_http: impl CacheHttp, f: F) -> Result<Sticke/;"	P	implementation:Guild
create_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn create_sticker<'a, F>(&self, cache_http: impl CacheHttp, f: F) -> Result<Sticke/;"	P	implementation:PartialGuild
create_sub_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn create_sub_option<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateApplicationCommandOption
create_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod create_thread;$/;"	n
create_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub create_timestamp: Option<Timestamp>,$/;"	m	struct:ThreadMetadata
create_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn create_webhook($/;"	P	implementation:Http
create_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn create_webhook($/;"	P	implementation:ChannelId
create_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn create_webhook($/;"	P	implementation:GuildChannel
create_webhook_with_avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn create_webhook_with_avatar<'a>($/;"	P	implementation:ChannelId
create_webhook_with_avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn create_webhook_with_avatar<'a>($/;"	P	implementation:GuildChannel
create_welcome_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^    pub fn create_welcome_channel<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditGuildWelcomeScreen
create_with_security_attributes_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub unsafe fn create_with_security_attributes_raw($/;"	P	implementation:ServerOptions
created_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub created_at: Timestamp,$/;"	m	struct:RichInvite
created_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub created_at: String,$/;"	m	struct:Incident
created_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub created_at: String,$/;"	m	struct:IncidentUpdate
created_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn created_at(&self) -> Timestamp {$/;"	P	implementation:User
creator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub creator: Option<User>,$/;"	m	struct:ScheduledEvent
creator_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub creator_id: UserId,$/;"	m	struct:Rule
creator_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub creator_id: Option<UserId>,$/;"	m	struct:ScheduledEvent
crosspost	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn crosspost($/;"	P	implementation:ChannelId
crosspost	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn crosspost(&self, cache_http: impl CacheHttp) -> Result<Message> {$/;"	P	implementation:Message
crosspost_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn crosspost_message(&self, channel_id: u64, message_id: u64) -> Result<Message> {$/;"	P	implementation:Http
css	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub mod css {$/;"	n	module:colours
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_break() -> io::Result<CtrlBreak> {$/;"	f
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_break() -> io::Result<RxFuture> {$/;"	f
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_break: EventInfo,$/;"	m	struct:OsStorage
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_break() {$/;"	f	module:tests
ctrl_break	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_break() -> io::Result<RxFuture> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/ctrl_c.rs	/^pub async fn ctrl_c() -> io::Result<()> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^mod ctrl_c;$/;"	n
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) fn ctrl_c() -> io::Result<Signal> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_c() -> io::Result<CtrlC> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_c() -> io::Result<RxFuture> {$/;"	f
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_c: EventInfo,$/;"	m	struct:OsStorage
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_c() {$/;"	f	module:tests
ctrl_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_c() -> io::Result<RxFuture> {$/;"	f
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_close() -> io::Result<CtrlClose> {$/;"	f
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_close() -> io::Result<RxFuture> {$/;"	f
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_close: EventInfo,$/;"	m	struct:OsStorage
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_close() {$/;"	f	module:tests
ctrl_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_close() -> io::Result<RxFuture> {$/;"	f
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_logoff() -> io::Result<CtrlLogoff> {$/;"	f
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_logoff() -> io::Result<RxFuture> {$/;"	f
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_logoff: EventInfo,$/;"	m	struct:OsStorage
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_logoff() {$/;"	f	module:tests
ctrl_logoff	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_logoff() -> io::Result<RxFuture> {$/;"	f
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^pub fn ctrl_shutdown() -> io::Result<CtrlShutdown> {$/;"	f
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/stub.rs	/^pub(super) fn ctrl_shutdown() -> io::Result<RxFuture> {$/;"	f
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    ctrl_shutdown: EventInfo,$/;"	m	struct:OsStorage
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn ctrl_shutdown() {$/;"	f	module:tests
ctrl_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^pub(super) fn ctrl_shutdown() -> io::Result<RxFuture> {$/;"	f
ctx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    ctx: trace::AsyncOpTracingCtx,$/;"	m	struct:Waiter
ctx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    ctx: RcCell<Context>,$/;"	m	struct:LocalData
ctx_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                ctx_ref: &'a RcCell<Context>,$/;"	m	struct:LocalSet::with::Reset
ctx_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                ctx_ref: &'a RcCell<Context>,$/;"	m	struct:LocalSet::with_if_possible::Reset
curr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    curr: usize,$/;"	m	struct:WakeList
current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn current(&mut self) -> Option<&str> {$/;"	P	implementation:Iter
current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn current(&self) -> Option<&str> {$/;"	P	implementation:Args
current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn current() -> Self {$/;"	P	implementation:Handle
current_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn current_dir<P: AsRef<Path>>(&mut self, dir: P) -> &mut Command {$/;"	P	implementation:Command
current_presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    current_presence: CurrentPresence,$/;"	m	struct:Shard
current_presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn current_presence(&self) -> &CurrentPresence {$/;"	P	implementation:Shard
current_task_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    current_task_id: Cell<Option<Id>>,$/;"	m	struct:Context
current_thread_park_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^pub(crate) fn current_thread_park_count() -> usize {$/;"	f
current_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn current_user(&self) -> CurrentUser {$/;"	P	implementation:Cache
current_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub current_user: CurrentUser,$/;"	m	struct:UserUpdateEvent
current_user_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn current_user_field<Ret: Clone, Fun>(&self, field_selector: Fun) -> Ret$/;"	P	implementation:Cache
current_user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn current_user_id(&self) -> UserId {$/;"	P	implementation:Cache
custom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub custom: bool,$/;"	m	struct:VoiceRegion
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn custom_id<D: ToString>(&mut self, id: D) -> &mut Self {$/;"	P	implementation:CreateButton
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn custom_id<D: ToString>(&mut self, id: D) -> &mut Self {$/;"	P	implementation:CreateInputText
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn custom_id<D: ToString>(&mut self, id: D) -> &mut Self {$/;"	P	implementation:CreateSelectMenu
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn custom_id<D: ToString>(&mut self, id: D) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub custom_id: Option<String>,$/;"	m	struct:Button
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub custom_id: Option<String>,$/;"	m	struct:SelectMenu
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub custom_id: String,$/;"	m	struct:InputText
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub custom_id: String,$/;"	m	struct:MessageComponentInteractionData
custom_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub custom_id: String,$/;"	m	struct:ModalSubmitInteractionData
custom_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^mod custom_message;$/;"	n
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub data: &'a Arc<RwLock<TypeMap>>,$/;"	m	struct:ShardManagerOptions
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub data: Arc<RwLock<TypeMap>>,$/;"	m	struct:ShardQueuer
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    data: Arc<RwLock<TypeMap>>,$/;"	m	struct:ShardRunner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub data: Arc<RwLock<TypeMap>>,$/;"	m	struct:ShardRunnerOptions
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub data: Arc<RwLock<TypeMap>>,$/;"	m	struct:Context
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    data: Option<TypeMap>,$/;"	m	struct:ClientBuilder
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub data: Arc<RwLock<TypeMap>>,$/;"	m	struct:Client
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub data: CommandData,$/;"	m	struct:ApplicationCommandInteraction
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub data: CommandData,$/;"	m	struct:AutocompleteInteraction
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub data: MessageComponentInteractionData,$/;"	m	struct:MessageComponentInteraction
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub data: ModalSubmitInteractionData,$/;"	m	struct:ModalSubmitInteraction
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    pub(crate) async fn data(&self, client: &Client) -> Result<Vec<u8>> {$/;"	P	implementation:AttachmentType
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    data: *mut T,$/;"	m	struct:MappedMutexGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    data: *mut T,$/;"	m	struct:MappedMutexGuardInner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    data: *mut U,$/;"	m	struct:OwnedMappedMutexGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    data: *mut U,$/;"	m	struct:OwnedMappedMutexGuardInner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    data: *const U,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub(super) data: *const U,$/;"	m	struct:OwnedRwLockReadGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    data: *const T,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) data: *mut T,$/;"	m	struct:OwnedRwLockWriteGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    data: *const U,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) data: *mut U,$/;"	m	struct:OwnedRwLockMappedWriteGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    data: *const T,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub(super) data: *const T,$/;"	m	struct:RwLockReadGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    data: *mut T,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) data: *mut T,$/;"	m	struct:RwLockWriteGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    data: *mut T,$/;"	m	struct:Inner
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) data: *mut T,$/;"	m	struct:RwLockMappedWriteGuard
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    data: AtomicPtr<T>,$/;"	m	struct:AtomicCell
data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    data: UnsafeCell<T>,$/;"	m	struct:TryLock
datagram	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub mod datagram;$/;"	n
days	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^            days: u64,$/;"	m	struct:Http::get_guild_prune_count::GetGuildPruneCountRequest
db	/home/trey/code/sqlx-crud/examples/serenity/src/main.rs	/^    db: Pool<Sqlite>,$/;"	m	struct:Handler
deadline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    deadline: Instant,$/;"	m	struct:TimerEntry
deadline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn deadline(&self) -> Instant {$/;"	P	implementation:TimerEntry
deadline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) deadline: u64,$/;"	m	struct:Expiration
deadline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub fn deadline(&self) -> Instant {$/;"	P	implementation:Sleep
deadline_to_tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn deadline_to_tick(&self, t: Instant) -> u64 {$/;"	P	implementation:TimeSource
deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub deaf: bool,$/;"	m	struct:GuildMemberUpdateEvent
deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub deaf: bool,$/;"	m	struct:InterimMember
deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub deaf: bool,$/;"	m	struct:Member
deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub deaf: bool,$/;"	m	struct:PartialMember
deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            deaf: bool,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub deaf: bool,$/;"	m	struct:VoiceState
deafen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/add_member.rs	/^    pub fn deafen(&mut self, deafen: bool) -> &mut Self {$/;"	P	implementation:AddMember
deafen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn deafen(&mut self, deafen: bool) -> &mut Self {$/;"	P	implementation:EditMember
deafen_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn deafen_members(self) -> bool {$/;"	P	implementation:Permissions
dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn dealloc(self) {$/;"	f
dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) dealloc: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn dealloc(self) {$/;"	P	implementation:RawTask
dealloc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn dealloc<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
debug	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^fn debug<T>(fmt: &mut fmt::Formatter<'_>, name: &str, pages: &[Arc<Page<T>>]) -> fmt::Result {$/;"	f
dec_fd_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(crate) fn dec_fd_count(&self) {$/;"	P	implementation:IoDriverMetrics
dec_num_idle_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn dec_num_idle_threads(&self) -> usize {$/;"	P	implementation:SpawnerMetrics
dec_num_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn dec_num_searching(cell: &AtomicUsize) -> bool {$/;"	P	implementation:State
dec_num_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn dec_num_threads(&self) {$/;"	P	implementation:SpawnerMetrics
dec_num_unparked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn dec_num_unparked(cell: &AtomicUsize, is_searching: bool) -> bool {$/;"	P	implementation:State
dec_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn dec_queue_depth(&self) {$/;"	P	implementation:SpawnerMetrics
decode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod decode {$/;"	n
deconstruct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn deconstruct(&self) -> (LightMethod, Route, Cow<'_, str>) {$/;"	P	implementation:RouteInfo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    fn default() -> CreateAllowedMentions {$/;"	P	implementation:CreateAllowedMentions
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    fn default() -> Self {$/;"	P	implementation:CreateChannel
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    fn default() -> Self {$/;"	P	implementation:CreateButton
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    fn default() -> CreateEmbed {$/;"	P	implementation:CreateEmbed
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    fn default() -> CreateAutocompleteResponse {$/;"	P	implementation:CreateAutocompleteResponse
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    fn default() -> CreateInteractionResponse<'a> {$/;"	P	implementation:CreateInteractionResponse
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^    fn default() -> CreateInvite {$/;"	P	implementation:CreateInvite
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    fn default() -> CreateMessage<'a> {$/;"	P	implementation:CreateMessage
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    fn default() -> Self {$/;"	P	implementation:CreateScheduledEvent
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^    fn default() -> Self {$/;"	P	implementation:EditAutoModRule
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    fn default() -> ExecuteWebhook<'a> {$/;"	P	implementation:ExecuteWebhook
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn default() -> Cache {$/;"	P	implementation:Cache
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fn default() -> Self {$/;"	P	implementation:FilterOptions
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    fn default() -> Configuration {$/;"	P	implementation:Configuration
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    fn default() -> Self {$/;"	P	implementation:WithWhiteSpace
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    fn default() -> Self {$/;"	P	implementation:BucketBuilder
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    fn default() -> Self {$/;"	P	implementation:LimitedFor
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn default() -> Self {$/;"	P	implementation:OnlyIn
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    fn default() -> Self {$/;"	P	implementation:Ratelimit
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub default: bool,$/;"	m	struct:SelectMenuOption
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    fn default() -> Self {$/;"	P	implementation:ActivityType
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/premium_tier.rs	/^    fn default() -> Self {$/;"	P	implementation:PremiumTier
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn default() -> OnlineStatus {$/;"	P	implementation:OnlineStatus
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn default() -> Self {$/;"	P	implementation:User
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn default() -> Colour {$/;"	P	implementation:Colour
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn default() {$/;"	f	module:test
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    fn default() -> Self {$/;"	P	implementation:ContentSafeOptions
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    fn default() -> Self {$/;"	P	implementation:CustomMessage
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    fn default() -> Self {$/;"	P	implementation:OpenOptions
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    fn default() -> AtomicU64 {$/;"	P	implementation:AtomicU64
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn default() -> OpenOptions {$/;"	P	implementation:OpenOptions
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    fn default() -> ScheduledIo {$/;"	P	implementation:ScheduledIo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn default() -> Self {$/;"	P	implementation:ParkThread
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn default() -> Self {$/;"	P	implementation:StateCell
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn default() -> Self {$/;"	P	implementation:EventInfo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn default() -> SignalInfo {$/;"	P	implementation:SignalInfo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn default() -> Self {$/;"	f
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn default() -> Notify {$/;"	P	implementation:Notify
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn default() -> OnceCell<T> {$/;"	P	implementation:OnceCell
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn default() -> Self {$/;"	f
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn default() -> Self {$/;"	P	implementation:AtomicWaker
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn default() -> Self {$/;"	P	implementation:JoinSet
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn default() -> LocalSet {$/;"	P	implementation:LocalSet
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    fn default() -> Self {$/;"	P	implementation:MissedTickBehavior
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn default() -> Self {$/;"	P	implementation:LinkedList
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^        fn default() -> Foo {$/;"	P	implementation:test::Foo
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn default() -> CachedPage<T> {$/;"	P	implementation:CachedPage
default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn default() -> Page<T> {$/;"	P	implementation:Page
default_auto_archive_duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub default_auto_archive_duration: Option<u64>,$/;"	m	struct:GuildChannel
default_avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn default_avatar_url(&self) -> String {$/;"	P	implementation:CurrentUser
default_avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn default_avatar_url(&self) -> String {$/;"	P	implementation:User
default_avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^fn default_avatar_url(discriminator: u16) -> String {$/;"	f
default_avatars	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        fn default_avatars() {$/;"	f	module:test::model
default_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn default_channel(&self, cache: impl AsRef<Cache>) -> Option<GuildChannel> {$/;"	P	implementation:Member
default_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn default_channel(&self, uid: UserId) -> Option<&GuildChannel> {$/;"	P	implementation:Guild
default_channel_guaranteed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn default_channel_guaranteed(&self) -> Option<&GuildChannel> {$/;"	P	implementation:Guild
default_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub default_command: Option<&'static Command>,$/;"	m	struct:GroupOptions
default_member_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn default_member_permissions(&mut self, permissions: Permissions) -> &mut Self {$/;"	P	implementation:CreateApplicationCommand
default_member_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub default_member_permissions: Option<Permissions>,$/;"	m	struct:Command
default_message_notifications	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn default_message_notifications($/;"	P	implementation:EditGuild
default_message_notifications	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub default_message_notifications: DefaultMessageNotificationLevel,$/;"	m	struct:Guild
default_message_notifications	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub default_message_notifications: DefaultMessageNotificationLevel,$/;"	m	struct:PartialGuild
default_option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn default_option(&mut self, default: bool) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
default_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn default_permission(&mut self, default_permission: bool) -> &mut Self {$/;"	P	implementation:CreateApplicationCommand
default_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub default_permission: bool,$/;"	m	struct:Command
default_permission_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^fn default_permission_value() -> bool {$/;"	f
default_selection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn default_selection(&mut self, disabled: bool) -> &mut Self {$/;"	P	implementation:CreateSelectMenuOption
default_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    default_timeout: u32,$/;"	m	struct:ServerOptions
default_true	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn default_true() -> bool {$/;"	f
defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn defer(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:ApplicationCommandInteraction
defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn defer(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:MessageComponentInteraction
defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub async fn defer(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:ModalSubmitInteraction
defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    defer: RefCell<Option<Defer>>,$/;"	m	struct:Context
defer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    pub(crate) fn defer(&mut self, waker: Waker) {$/;"	P	implementation:Defer
deferred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    deferred: Vec<Waker>,$/;"	m	struct:Defer
define_event_related_id_methods	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^macro_rules! define_event_related_id_methods {$/;"	M
define_related_ids_for_event_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^macro_rules! define_related_ids_for_event_type {$/;"	M
delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub delay: Duration,$/;"	m	struct:Ratelimit
delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn delay(&mut self, secs: u64) -> &mut Self {$/;"	P	implementation:BucketBuilder
delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub(crate) delay: Duration,$/;"	m	struct:BucketBuilder
delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    delay: Pin<Box<Sleep>>,$/;"	m	struct:Interval
delay_action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub delay_action: Option<DelayHook>,$/;"	m	struct:TicketCounter
delay_action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn delay_action(&mut self, action: DelayHook) -> &mut Self {$/;"	P	implementation:BucketBuilder
delay_action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub(crate) delay_action: Option<DelayHook>,$/;"	m	struct:BucketBuilder
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub async fn delete(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:ChannelCategory
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn delete(self, http: impl AsRef<Http>) -> Result<Channel> {$/;"	P	implementation:ChannelId
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn delete(&self, cache_http: impl CacheHttp) -> Result<Channel> {$/;"	P	implementation:GuildChannel
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn delete(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Message
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub async fn delete(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Channel
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn delete(&self, http: impl AsRef<Http>) -> Result<Channel> {$/;"	P	implementation:PrivateChannel
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub async fn delete(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Reaction
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub async fn delete<T: AsRef<Cache> + AsRef<Http>>(&self, cache_http: T) -> Result<()> {$/;"	P	implementation:Emoji
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn delete(self, http: impl AsRef<Http>) -> Result<PartialGuild> {$/;"	P	implementation:GuildId
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn delete(&self, cache_http: impl CacheHttp) -> Result<PartialGuild> {$/;"	P	implementation:Guild
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn delete(&self, http: impl AsRef<Http>) -> Result<PartialGuild> {$/;"	P	implementation:PartialGuild
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub async fn delete(&mut self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:Role
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub async fn delete(&self, cache_http: impl CacheHttp) -> Result<Invite> {$/;"	P	implementation:Invite
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub async fn delete(&self, cache_http: impl CacheHttp) -> Result<Invite> {$/;"	P	implementation:RichInvite
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub async fn delete(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:Sticker
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_id.rs	/^    pub async fn delete(&self, http: impl AsRef<Http>, guild_id: impl Into<GuildId>) -> Result<(/;"	P	implementation:StickerId
delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn delete(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:Webhook
delete	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn delete(self, pool: E) -> CrudFut<'e, ()> {$/;"	P	interface:Crud
delete_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub async fn delete_all(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Reaction
delete_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn delete_application_command($/;"	P	implementation:GuildId
delete_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn delete_application_command($/;"	P	implementation:Guild
delete_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn delete_application_command($/;"	P	implementation:PartialGuild
delete_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_automod_rule(&self, guild_id: u64, rule_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn delete_automod_rule($/;"	P	implementation:GuildId
delete_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn delete_automod_rule($/;"	P	implementation:Guild
delete_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn delete_automod_rule($/;"	P	implementation:PartialGuild
delete_avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn delete_avatar(&mut self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:Webhook
delete_by_id_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub delete_by_id_sql: &'s str,$/;"	m	struct:Metadata
delete_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn delete_by_id_sql() -> &'static str;$/;"	P	interface:Schema
delete_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_channel(&self, channel_id: u64) -> Result<Channel> {$/;"	P	implementation:Http
delete_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_emoji(&self, guild_id: u64, emoji_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn delete_emoji($/;"	P	implementation:GuildId
delete_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn delete_emoji($/;"	P	implementation:Guild
delete_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn delete_emoji($/;"	P	implementation:PartialGuild
delete_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_followup_message($/;"	P	implementation:Http
delete_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn delete_followup_message<M: Into<MessageId>>($/;"	P	implementation:ApplicationCommandInteraction
delete_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn delete_followup_message<M: Into<MessageId>>($/;"	P	implementation:MessageComponentInteraction
delete_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub async fn delete_followup_message<M: Into<MessageId>>($/;"	P	implementation:ModalSubmitInteraction
delete_global_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_global_application_command(&self, command_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_global_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub async fn delete_global_application_command($/;"	P	implementation:Command
delete_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_guild(&self, guild_id: u64) -> Result<PartialGuild> {$/;"	P	implementation:Http
delete_guild_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_guild_application_command($/;"	P	implementation:Http
delete_guild_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_guild_integration(&self, guild_id: u64, integration_id: u64) -> Result<(/;"	P	implementation:Http
delete_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn delete_integration($/;"	P	implementation:GuildId
delete_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn delete_integration($/;"	P	implementation:Guild
delete_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn delete_integration($/;"	P	implementation:PartialGuild
delete_invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_invite(&self, code: &str) -> Result<Invite> {$/;"	P	implementation:Http
delete_member_days	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub delete_member_days: Option<u64>,$/;"	m	struct:Options
delete_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_message(&self, channel_id: u64, message_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn delete_message($/;"	P	implementation:ChannelId
delete_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn delete_message($/;"	P	implementation:Webhook
delete_message_reaction_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_message_reaction_emoji($/;"	P	implementation:Http
delete_message_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_message_reactions(&self, channel_id: u64, message_id: u64) -> Result<()>/;"	P	implementation:Http
delete_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_messages(&self, channel_id: u64, map: &Value) -> Result<()> {$/;"	P	implementation:Http
delete_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn delete_messages<T, It>(self, http: impl AsRef<Http>, message_ids: It) -> Result/;"	P	implementation:ChannelId
delete_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn delete_messages<T, It>($/;"	P	implementation:GuildChannel
delete_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn delete_messages<T, It>($/;"	P	implementation:PrivateChannel
delete_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_original_interaction_response($/;"	P	implementation:Http
delete_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn delete_original_interaction_response(&self, http: impl AsRef<Http>) -> Result<(/;"	P	implementation:ApplicationCommandInteraction
delete_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn delete_original_interaction_response(&self, http: impl AsRef<Http>) -> Result<(/;"	P	implementation:MessageComponentInteraction
delete_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub async fn delete_original_interaction_response(&self, http: impl AsRef<Http>) -> Result<(/;"	P	implementation:ModalSubmitInteraction
delete_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_permission(&self, channel_id: u64, target_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub async fn delete_permission($/;"	P	implementation:ChannelCategory
delete_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn delete_permission($/;"	P	implementation:ChannelId
delete_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn delete_permission($/;"	P	implementation:GuildChannel
delete_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn delete_permission($/;"	P	implementation:PrivateChannel
delete_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_reaction($/;"	P	implementation:Http
delete_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn delete_reaction($/;"	P	implementation:ChannelId
delete_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn delete_reaction($/;"	P	implementation:GuildChannel
delete_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn delete_reaction($/;"	P	implementation:PrivateChannel
delete_reaction_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn delete_reaction_emoji($/;"	P	implementation:ChannelId
delete_reaction_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn delete_reaction_emoji($/;"	P	implementation:Message
delete_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn delete_reactions(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Message
delete_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_role(&self, guild_id: u64, role_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn delete_role($/;"	P	implementation:GuildId
delete_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn delete_role($/;"	P	implementation:Guild
delete_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn delete_role($/;"	P	implementation:PartialGuild
delete_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_scheduled_event(&self, guild_id: u64, event_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn delete_scheduled_event($/;"	P	implementation:GuildId
delete_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn delete_scheduled_event($/;"	P	implementation:Guild
delete_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_stage_instance(&self, channel_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn delete_stage_instance(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:ChannelId
delete_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn delete_stage_instance(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:GuildChannel
delete_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_sticker($/;"	P	implementation:Http
delete_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn delete_sticker($/;"	P	implementation:GuildId
delete_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn delete_sticker($/;"	P	implementation:Guild
delete_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn delete_sticker($/;"	P	implementation:PartialGuild
delete_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_webhook(&self, webhook_id: u64) -> Result<()> {$/;"	P	implementation:Http
delete_webhook_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_webhook_message($/;"	P	implementation:Http
delete_webhook_with_token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn delete_webhook_with_token(&self, webhook_id: u64, token: &str) -> Result<()> {$/;"	P	implementation:Http
delimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn delimiter<I: Into<Delimiter>>(&mut self, delimiter: I) -> &mut Self {$/;"	P	implementation:Configuration
delimiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub delimiters: Vec<Delimiter>,$/;"	m	struct:Configuration
delimiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn delimiters<T, It>(&mut self, delimiters: It) -> &mut Self$/;"	P	implementation:Configuration
delimiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub delimiters: &'static [&'static str],$/;"	m	struct:CommandOptions
deny	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    deny: Permissions,$/;"	m	struct:PermissionOverwriteData
deny	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub deny: Permissions,$/;"	m	struct:PermissionOverwrite
deprecated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub deprecated: bool,$/;"	m	struct:VoiceRegion
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:LazyArc
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn deref(&self) -> &E {$/;"	P	implementation:Aio
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    fn deref(&self) -> &E {$/;"	P	implementation:PollEvented
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:AtomicU16
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:AtomicU32
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:AtomicUsize
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:MutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockReadGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^    fn deref(&self) -> &Waker {$/;"	P	implementation:WakerRef
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Globals
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:MappedMutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:MutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:OwnedMappedMutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:OwnedMutexGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    fn deref(&self) -> &U {$/;"	P	implementation:OwnedRwLockReadGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:OwnedRwLockWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn deref(&self) -> &U {$/;"	P	implementation:OwnedRwLockMappedWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockReadGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:RwLockMappedWriteGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:Ref
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:Ref
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    fn deref(&self) -> &T {$/;"	P	implementation:LockGuard
deref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    fn deref(&self) -> &Waker {$/;"	P	implementation:WakerRef
deref_async_buf_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^macro_rules! deref_async_buf_read {$/;"	M
deref_async_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^macro_rules! deref_async_read {$/;"	M
deref_async_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^macro_rules! deref_async_seek {$/;"	M
deref_async_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^macro_rules! deref_async_write {$/;"	M
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn deref_mut(&mut self) -> &mut E {$/;"	P	implementation:Aio
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:AtomicUsize
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:MutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:RwLockWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:MappedMutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:MutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:OwnedMappedMutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:OwnedMutexGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:OwnedRwLockWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn deref_mut(&mut self) -> &mut U {$/;"	P	implementation:OwnedRwLockMappedWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:RwLockWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:RwLockMappedWriteGuard
deref_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	P	implementation:LockGuard
deregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn deregister(&mut self);$/;"	P	interface:AioSource
deregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn deregister(&mut self, _registry: &Registry) -> io::Result<()> {$/;"	P	implementation:MioSource
deregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn deregister(&mut self, registry: &mio::Registry) -> io::Result<()> {$/;"	P	implementation:Pipe
deregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn deregister(&mut self, io: &mut impl Source) -> io::Result<()> {$/;"	P	implementation:Registration
deregister_shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/voice/mod.rs	/^    async fn deregister_shard(&self, shard_id: u64);$/;"	P	interface:VoiceGatewayManager
deregister_source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(super) fn deregister_source(&self, source: &mut impl mio::event::Source) -> io::Result<(/;"	P	implementation:Handle
desc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub desc: Option<&'static str>,$/;"	m	struct:CommandOptions
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn description<D: ToString>(&mut self, description: D) -> &mut Self {$/;"	P	implementation:CreateApplicationCommand
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn description<D: ToString>(&mut self, description: D) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn description<D: ToString>(&mut self, description: D) -> &mut Self {$/;"	P	implementation:CreateSelectMenuOption
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn description<D: ToString>(&mut self, description: D) -> &mut Self {$/;"	P	implementation:CreateEmbed
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    pub fn description<S: ToString>(&mut self, description: S) -> &mut Self {$/;"	P	implementation:CreateScheduledEvent
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_sticker.rs	/^    pub fn description<S: ToString>(&mut self, description: S) -> &mut Self {$/;"	P	implementation:CreateSticker
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn description<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:EditGuild
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^    pub fn description<D: ToString>(&mut self, description: D) -> &mut Self {$/;"	P	implementation:CreateGuildWelcomeChannel
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^    pub fn description<D: ToString>(&mut self, description: D) -> &mut Self {$/;"	P	implementation:EditGuildWelcomeScreen
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub fn description<S: ToString>(&mut self, description: S) -> &mut Self {$/;"	P	implementation:EditScheduledEvent
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_sticker.rs	/^    pub fn description<S: ToString>(&mut self, description: S) -> &mut Self {$/;"	P	implementation:EditSticker
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub description: Option<&'static str>,$/;"	m	struct:Command
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub description: Option<&'static str>,$/;"	m	struct:GroupOptions
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub description: String,$/;"	m	struct:CurrentApplicationInfo
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub description: String,$/;"	m	struct:Command
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub description: String,$/;"	m	struct:CommandOption
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub description: Option<String>,$/;"	m	struct:SelectMenuOption
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub description: Option<String>,$/;"	m	struct:Embed
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub description: String,$/;"	m	struct:MessageApplication
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    pub description: String,$/;"	m	struct:Sticker
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub description: Option<String>,$/;"	m	struct:GuildPreview
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub description: String,$/;"	m	struct:IntegrationApplication
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub description: Option<String>,$/;"	m	struct:Guild
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub description: Option<String>,$/;"	m	struct:PartialGuild
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub description: Option<String>,$/;"	m	struct:ScheduledEvent
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^            description: String,$/;"	m	struct:GuildWelcomeChannel::deserialize::Helper
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    pub description: Option<String>,$/;"	m	struct:GuildWelcomeScreen
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    pub description: String,$/;"	m	struct:GuildWelcomeChannel
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub description: String,$/;"	m	struct:Maintenance
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub description: Option<String>,$/;"	m	struct:Sticker
description	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub description: String,$/;"	m	struct:StickerPack
description_label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub description_label: &'static str,$/;"	m	struct:HelpOptions
description_localizations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub description_localizations: Option<HashMap<String, String>>,$/;"	m	struct:Command
description_localizations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub description_localizations: Option<std::collections::HashMap<String, String>>,$/;"	m	struct:CommandOption
description_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn description_localized<D: ToString, E: ToString>($/;"	P	implementation:CreateApplicationCommand
description_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn description_localized<D: ToString, E: ToString>($/;"	P	implementation:CreateApplicationCommandOption
description_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub description_localized: Option<String>,$/;"	m	struct:Command
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> Result<Self, D::Error> {$/;"	P	implementation:ActionRowComponent
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:ApplicationCommandInteraction
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:CommandData
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:CommandDataOption
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:AutocompleteInteraction
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:MessageComponentInteraction
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> Result<Self, D::Error> {$/;"	P	implementation:Interaction
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:ModalSubmitInteraction
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    fn deserialize<D: Deserializer<'de>>($/;"	P	implementation:PermissionOverwrite
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:Channel
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:Reaction
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:ReactionType
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:GatewayEvent
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:GuildMembersChunkEvent
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:GuildRoleCreateEvent
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:GuildRoleUpdateEvent
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn deserialize<D>(deserializer: D) -> StdResult<Self, D::Error>$/;"	P	implementation:EventType
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:Action
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> Result<Self, D::Error> {$/;"	P	implementation:Change
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:optional_string
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:users
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:webhooks
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> Result<Self, D::Error> {$/;"	P	implementation:Action
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> Result<Self, D::Error> {$/;"	P	implementation:Trigger
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:Guild
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:PartialGuild
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>(deserializer: D) -> Result<bool, D::Error> {$/;"	f	module:premium_subscriber
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> Result<Self, D::Error> {$/;"	P	implementation:GuildWelcomeChannel
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>(deserializer: D) -> Result<u64, D::Error> {$/;"	f	module:snowflake
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> Result<Self, D::Error> {$/;"	P	implementation:Permissions
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:discriminator::option
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>(deserializer: D) -> Result<u16, D::Error> {$/;"	f	module:discriminator
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^        fn deserialize<D: Deserializer<'de>>(deserializer: D) -> StdResult<Self, D::Error> {$/;"	P	implementation:deserialize_guild_channels::TryDeserialize
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:comma_separated_string
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:emojis
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:presences
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:private_channels
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:roles
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>($/;"	f	module:stickers
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn deserialize<'de, D: Deserializer<'de>>(deserializer: D) -> Result<User, D::Error> {$/;"	f	module:single_recipient
deserialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    fn deserialize<D: Deserializer<'de>>(deserializer: D) -> Result<Self, D::Error> {$/;"	P	implementation:VoiceState
deserialize_buttons	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn deserialize_buttons<'de, D: Deserializer<'de>>($/;"	f
deserialize_errors	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/utils.rs	/^pub fn deserialize_errors<'de, D: Deserializer<'de>>($/;"	f
deserialize_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn deserialize_event<'de, D: Deserializer<'de>>(deserializer: D) -> Result<Role, D::Erro/;"	f	module:roles
deserialize_event_with_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^pub fn deserialize_event_with_type(kind: EventType, v: Value) -> Result<Event> {$/;"	f
deserialize_guild_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn deserialize_guild_channels<'de, D: Deserializer<'de>>($/;"	f
deserialize_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn deserialize_members<'de, D: Deserializer<'de>>($/;"	f
deserialize_options_with_resolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn deserialize_options_with_resolved<'de, D: Deserializer<'de>>($/;"	f
deserialize_variants	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^        macro_rules! deserialize_variants {$/;"	M	method:ChangeVisitor::visit_map
deserialize_voice_states	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn deserialize_voice_states<'de, D: Deserializer<'de>>($/;"	f
desktop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub desktop: Option<OnlineStatus>,$/;"	m	struct:ClientStatus
detach_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn detach_all(&mut self) {$/;"	P	implementation:JoinSet
details	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub details: Option<String>,$/;"	m	struct:Activity
device	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn device(&self) -> io::Result<Option<Vec<u8>>> {$/;"	P	implementation:TcpSocket
device	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn device(&self) -> io::Result<Option<Vec<u8>>> {$/;"	P	implementation:UdpSocket
did_defer_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^fn did_defer_tasks() -> bool {$/;"	f
did_defer_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^fn did_defer_tasks() -> bool {$/;"	f
did_wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    did_wake: AtomicBool,$/;"	m	struct:Inner
dimensions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub fn dimensions(&self) -> Option<(u64, u64)> {$/;"	P	implementation:Attachment
dir_builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod dir_builder;$/;"	n
direct_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn direct_message<'a, F>(&self, cache_http: impl CacheHttp, f: F) -> Result<Messag/;"	P	implementation:User
direct_message_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn direct_message_reactions(self) -> bool {$/;"	P	implementation:GatewayIntents
direct_message_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn direct_message_typing(self) -> bool {$/;"	P	implementation:GatewayIntents
direct_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn direct_messages(self) -> bool {$/;"	P	implementation:GatewayIntents
disable_communication_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn disable_communication_until(&mut self, time: String) -> &mut Self {$/;"	P	implementation:EditMember
disable_communication_until_datetime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn disable_communication_until_datetime(&mut self, time: Timestamp) -> &mut Self {$/;"	P	implementation:EditMember
disable_communication_until_datetime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn disable_communication_until_datetime($/;"	P	implementation:Member
disable_guild_select	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    disable_guild_select: bool,$/;"	m	struct:CreateBotAuthParameters
disable_guild_select	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    pub fn disable_guild_select(&mut self, disable: bool) -> &mut Self {$/;"	P	implementation:CreateBotAuthParameters
disable_lifo_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) disable_lifo_slot: bool,$/;"	m	struct:Builder
disable_lifo_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) disable_lifo_slot: bool,$/;"	m	struct:Config
disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn disabled(&mut self, disabled: bool) -> &mut Self {$/;"	P	implementation:CreateButton
disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn disabled(&mut self, disabled: bool) -> &mut Self {$/;"	P	implementation:CreateSelectMenu
disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub disabled: bool,$/;"	m	struct:Button
disabled_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub disabled_commands: HashSet<String>,$/;"	m	struct:Configuration
disabled_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn disabled_commands(&mut self, commands: HashSet<String>) -> &mut Self {$/;"	P	implementation:Configuration
disarm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn disarm(&mut self) {$/;"	P	implementation:test_combination::Output
discard_buffer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn discard_buffer(self: Pin<&mut Self>) {$/;"	P	implementation:BufReader
disconnect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn disconnect(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeServer
disconnect_from_voice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn disconnect_from_voice(&self, http: impl AsRef<Http>) -> Result<Member> {$/;"	P	implementation:Member
disconnect_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn disconnect_member(&mut self) -> &mut Self {$/;"	P	implementation:EditMember
disconnect_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn disconnect_member($/;"	P	implementation:GuildId
discovery_splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn discovery_splash(&mut self, splash: Option<&str>) -> &mut Self {$/;"	P	implementation:EditGuild
discovery_splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub discovery_splash: Option<String>,$/;"	m	struct:GuildPreview
discovery_splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub discovery_splash: Option<String>,$/;"	m	struct:Guild
discovery_splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub discovery_splash: Option<String>,$/;"	m	struct:PartialGuild
discriminator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub discriminator: Option<u16>,$/;"	m	struct:PresenceUser
discriminator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^            discriminator: Option<u16>,$/;"	m	struct:test::test_discriminator_serde::UserOpt
discriminator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^            discriminator: u16,$/;"	m	struct:test::test_discriminator_serde::User
discriminator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub discriminator: u16,$/;"	m	struct:CurrentUser
discriminator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub discriminator: u16,$/;"	m	struct:User
discriminator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^pub(crate) mod discriminator {$/;"	n
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    async fn dispatch(&self, event: DispatchEvent) {$/;"	P	implementation:ShardRunner
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^pub(crate) fn dispatch<'rec>($/;"	f
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^mod dispatch;$/;"	n
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/mod.rs	/^    async fn dispatch(&self, _: Context, _: Message);$/;"	P	interface:Framework
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/mod.rs	/^    async fn dispatch(&self, ctx: Context, msg: Message) {$/;"	f
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    async fn dispatch(&self, mut ctx: Context, msg: Message) {$/;"	P	implementation:StandardFramework
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    dispatch: Option<DispatchHook>,$/;"	m	struct:StandardFramework
dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn dispatch(resources: &mut Slab<ScheduledIo>, tick: u8, token: mio::Token, ready: Ready) {$/;"	P	implementation:Driver
dispatch_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^async fn dispatch_message($/;"	f
display_as_member_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    pub fn display_as_member_from<G: Into<GuildId>>(mut self, guild: G) -> Self {$/;"	P	implementation:ContentSafeOptions
display_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub display_at: String,$/;"	m	struct:IncidentUpdate
display_in_help	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    pub display_in_help: bool,$/;"	m	struct:Check
display_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn display_name(&self) -> Cow<'_, String> {$/;"	P	implementation:Member
distance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn distance(&self, other_index: usize) -> usize {$/;"	P	implementation:Block
distinct	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn distinct(&self) -> String {$/;"	P	implementation:Member
dm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn dm<'a, F>(&self, cache_http: impl CacheHttp, f: F) -> Result<Message>$/;"	P	implementation:User
dm_and_guild_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub dm_and_guild_text: &'static str,$/;"	m	struct:HelpOptions
dm_only_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub dm_only_text: &'static str,$/;"	m	struct:HelpOptions
dm_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn dm_permission(&mut self, enabled: bool) -> &mut Self {$/;"	P	implementation:CreateApplicationCommand
dm_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub dm_permission: Option<bool>,$/;"	m	struct:Command
dnd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn dnd(&self) {$/;"	P	implementation:Context
do_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    fn do_init(&self, init: impl FnOnce() -> T) {$/;"	P	implementation:OnceCell
do_register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn do_register<W>(&self, waker: W)$/;"	P	implementation:AtomicWaker
doc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod doc;$/;"	n
doc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^mod doc {$/;"	n
doctest_setup	/home/trey/code/sqlx-crud/src/lib.rs	/^macro_rules! doctest_setup {$/;"	M
does_not_register_signal_if_queue_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn does_not_register_signal_if_queue_empty() {$/;"	f	module:test
does_nothing_if_signal_could_not_be_registered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn does_nothing_if_signal_could_not_be_registered() {$/;"	f	module:test
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn downgrade(&self) -> WeakSender<T> {$/;"	P	implementation:Sender
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(super) fn downgrade(&self) -> Arc<Chan<T, S>> {$/;"	P	implementation:Tx
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn downgrade(&self) -> WeakUnboundedSender<T> {$/;"	P	implementation:UnboundedSender
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn downgrade(self) -> OwnedRwLockReadGuard<T> {$/;"	P	implementation:OwnedRwLockWriteGuard
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn downgrade(self) -> RwLockReadGuard<'a, T> {$/;"	P	implementation:RwLockWriteGuard
downgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_rwlock.rs	/^fn downgrade() {$/;"	f
downgrade_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn downgrade_map<F, U: ?Sized>(this: Self, f: F) -> OwnedRwLockReadGuard<T, U>$/;"	P	implementation:OwnedRwLockWriteGuard
downgrade_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn downgrade_map<F, U: ?Sized>(this: Self, f: F) -> RwLockReadGuard<'a, U>$/;"	P	implementation:RwLockWriteGuard
download	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub async fn download(&self) -> Result<Vec<u8>> {$/;"	P	implementation:Attachment
drain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn drain<F: FnMut(T)>(&mut self, func: F) {$/;"	P	implementation:IdleNotifiedSet
drain_attempts_a_single_reap_of_all_queued_orphans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn drain_attempts_a_single_reap_of_all_queued_orphans() {$/;"	f	module:test
drain_orphan_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^fn drain_orphan_queue<T>(mut queue: MutexGuard<'_, Vec<T>>)$/;"	f
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^mod driver;$/;"	n
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    driver: Option<Driver>,$/;"	m	struct:Core
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) driver: driver::Handle,$/;"	m	struct:Handle
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/mod.rs	/^    pub(crate) fn driver(&self) -> &driver::Handle {$/;"	P	implementation:Handle
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) driver: driver::Handle,$/;"	m	struct:Handle
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    driver: TryLock<Driver>,$/;"	m	struct:Shared
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    driver: scheduler::Handle,$/;"	m	struct:TimerEntry
driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn driver(&self) -> &super::Handle {$/;"	P	implementation:TimerEntry
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ShardManager
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ComponentInteractionCollector
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn drop(&mut self) {$/;"	P	implementation:EventCollector
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MessageCollector
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ModalInteractionCollector
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ReactionCollector
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AsyncFd
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    fn drop(&mut self) {$/;"	P	implementation:PollEvented
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Guard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn drop(&mut self) {$/;"	P	implementation:DuplexStream
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^            fn drop(&mut self) {$/;"	P	implementation:ScopedKey::set::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedWriteHalf
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedWriteHalf
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ChildDropGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Waiting
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn drop(&mut self) {$/;"	P	implementation:BlockingPool
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^        fn drop(&mut self) {$/;"	P	implementation:with_budget::ResetGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Registration
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ScheduledIo
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Runtime
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn drop(&mut self) {$/;"	P	implementation:CoreGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Local
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^        fn drop(&mut self) {$/;"	P	implementation:block_in_place::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^        fn drop(&mut self) {$/;"	P	implementation:run::AbortOnPanic
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AbortHandle
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TaskIdGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^            fn drop(&mut self) {$/;"	P	implementation:poll_future::Guard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Inject
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    fn drop(&mut self) {$/;"	P	implementation:JoinHandle
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Task
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:UnownedTask
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        fn drop(&mut self) {$/;"	P	implementation:atomic_take::AtomicTake
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^        fn drop(&mut self) {$/;"	P	implementation:spawn_during_shutdown::SpawnOnDrop
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^        fn drop(&mut self) {$/;"	P	implementation:with::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AssertDrop
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn drop(&mut self) {$/;"	P	implementation:test_combination::FutWrapper
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn drop(&mut self) {$/;"	P	implementation:test_combination::Output
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TimerEntry
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ReusableBoxFuture
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Acquire
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Receiver
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Recv
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RecvGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Sender
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedPermit
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Permit
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Chan
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Rx
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Tx
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MappedMutexGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MutexGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedMappedMutexGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedMutexGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Notified
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn drop(&mut self) {$/;"	P	implementation:NotifyWaitersList
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OnceCell
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Inner
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Receiver
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Sender
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedRwLockReadGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedRwLockWriteGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedRwLockMappedWriteGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RwLockReadGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RwLockWriteGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn drop(&mut self) {$/;"	P	implementation:RwLockMappedWriteGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OwnedSemaphorePermit
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    fn drop(&mut self) {$/;"	P	implementation:SemaphorePermit
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Receiver
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Sender
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn drop(&mut self) {$/;"	P	implementation:JoinSet
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                fn drop(&mut self) {$/;"	P	implementation:LocalSet::with::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                fn drop(&mut self) {$/;"	P	implementation:LocalSet::with_if_possible::Reset
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn drop(&mut self) {$/;"	P	implementation:LocalEnterGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn drop(&mut self) {$/;"	P	implementation:LocalSet
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            fn drop(&mut self) {$/;"	P	implementation:LocalKey::scope_inner::Guard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TaskLocalFuture
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    fn drop(&mut self) {$/;"	P	implementation:AtomicCell
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^            fn drop(&mut self) {$/;"	P	implementation:IdleNotifiedSet::drain::AllEntries
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    fn drop(&mut self) {$/;"	P	implementation:IdleNotifiedSet
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    fn drop(&mut self) {$/;"	P	implementation:OnceCell
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Ref
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    fn drop(&mut self) {$/;"	P	implementation:LockGuard
drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    fn drop(&mut self) {$/;"	P	implementation:WakeList
drop_abort_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) drop_abort_handle: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
drop_abort_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn drop_abort_handle(self) {$/;"	P	implementation:RawTask
drop_abort_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn drop_abort_handle<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
drop_abort_handle1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn drop_abort_handle1() {$/;"	f
drop_abort_handle2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn drop_abort_handle2() {$/;"	f
drop_arc_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn drop_arc_raw<T: Wake>(data: *const ()) {$/;"	f
drop_enqueues_orphan_if_wait_fails	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn drop_enqueues_orphan_if_wait_fails() {$/;"	f	module:test
drop_future_or_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn drop_future_or_output(&self) {$/;"	P	implementation:Core
drop_join_handle_fast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn drop_join_handle_fast(&self) -> Result<(), ()> {$/;"	P	implementation:State
drop_join_handle_slow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn drop_join_handle_slow(self) {$/;"	f
drop_join_handle_slow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) drop_join_handle_slow: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
drop_join_handle_slow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn drop_join_handle_slow(self) {$/;"	P	implementation:RawTask
drop_join_handle_slow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn drop_join_handle_slow<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
drop_multiple_rx_with_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn drop_multiple_rx_with_overflow() {$/;"	f
drop_reaps_if_possible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn drop_reaps_if_possible() {$/;"	f	module:test
drop_reference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn drop_reference(self) {$/;"	P	implementation:RawTask
drop_reference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn drop_reference(self) {$/;"	f
drop_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^fn drop_rx() {$/;"	f
drop_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn drop_task(&self) {$/;"	P	implementation:Task
drop_timer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn drop_timer() {$/;"	f
drop_w	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    unsafe fn drop_w(data: *const ()) {$/;"	f	function:notify_clones_waker_before_lock
drop_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn drop_waker(raw: *const ()) {$/;"	f
drop_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^unsafe fn drop_waker(ptr: *const ()) {$/;"	f
dropping_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn dropping_tx() {$/;"	f
dropping_unbounded_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn dropping_unbounded_tx() {$/;"	f
dummy_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^fn dummy_message() -> Message {$/;"	f
dupe_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub fn dupe_value<T>(_t: &T) -> T {$/;"	f
duplex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^pub fn duplex(max_buf_size: usize) -> (DuplexStream, DuplexStream) {$/;"	f
duplicate_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^fn duplicate_handle<T: AsRawHandle>(io: &T) -> io::Result<StdFile> {$/;"	f
duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    duration: u64,$/;"	m	struct:Timeout
duration_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn duration_since(&self, earlier: Instant) -> Duration {$/;"	P	implementation:Instant
dynamic_prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn dynamic_prefix(&mut self, dynamic_prefix: DynamicPrefixHook) -> &mut Self {$/;"	P	implementation:Configuration
dynamic_prefixes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub dynamic_prefixes: Vec<DynamicPrefixHook>,$/;"	m	struct:Configuration
easy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub fn easy(data: Arc<RwLock<TypeMap>>, shard_id: u64, http: Arc<Http>) -> Context {$/;"	P	implementation:Context
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub async fn edit<F>(&mut self, cache_http: impl CacheHttp, f: F) -> Result<()>$/;"	P	implementation:ChannelCategory
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn edit<F>(self, http: impl AsRef<Http>, f: F) -> Result<GuildChannel>$/;"	P	implementation:ChannelId
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn edit<F>(&mut self, cache_http: impl CacheHttp, f: F) -> Result<()>$/;"	P	implementation:GuildChannel
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn edit<'a, F>(&mut self, cache_http: impl CacheHttp, f: F) -> Result<()>$/;"	P	implementation:Message
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub async fn edit<T: AsRef<Cache> + AsRef<Http>>($/;"	P	implementation:Emoji
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit<F>(&mut self, http: impl AsRef<Http>, f: F) -> Result<PartialGuild>$/;"	P	implementation:GuildId
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn edit<F>(&self, http: impl AsRef<Http>, f: F) -> Result<Member>$/;"	P	implementation:Member
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit<F>(&mut self, cache_http: impl CacheHttp, f: F) -> Result<()>$/;"	P	implementation:Guild
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit<F>(&mut self, http: impl AsRef<Http>, f: F) -> Result<()>$/;"	P	implementation:PartialGuild
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub async fn edit($/;"	P	implementation:Role
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub async fn edit<F>(&self, http: impl AsRef<Http>, f: F) -> Result<Sticker>$/;"	P	implementation:Sticker
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_id.rs	/^    pub async fn edit<F>($/;"	P	implementation:StickerId
edit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn edit<F>(&mut self, http: impl AsRef<Http>, f: F) -> Result<()>$/;"	P	implementation:CurrentUser
edit_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_application_command<F>($/;"	P	implementation:GuildId
edit_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_application_command<F>($/;"	P	implementation:Guild
edit_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_application_command<F>($/;"	P	implementation:PartialGuild
edit_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_automod_rule;$/;"	n
edit_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_automod_rule($/;"	P	implementation:Http
edit_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_automod_rule($/;"	P	implementation:GuildId
edit_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_automod_rule($/;"	P	implementation:Guild
edit_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_automod_rule($/;"	P	implementation:PartialGuild
edit_avatar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn edit_avatar<'a>($/;"	P	implementation:Webhook
edit_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_channel;$/;"	n
edit_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_channel($/;"	P	implementation:Http
edit_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_emoji($/;"	P	implementation:Http
edit_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_emoji($/;"	P	implementation:GuildId
edit_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_emoji($/;"	P	implementation:Guild
edit_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_emoji($/;"	P	implementation:PartialGuild
edit_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_followup_message($/;"	P	implementation:Http
edit_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn edit_followup_message<'a, F, M: Into<MessageId>>($/;"	P	implementation:ApplicationCommandInteraction
edit_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn edit_followup_message<'a, F, M: Into<MessageId>>($/;"	P	implementation:MessageComponentInteraction
edit_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub async fn edit_followup_message<'a, F, M: Into<MessageId>>($/;"	P	implementation:ModalSubmitInteraction
edit_followup_message_and_attachments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_followup_message_and_attachments($/;"	P	implementation:Http
edit_global_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_global_application_command($/;"	P	implementation:Http
edit_global_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub async fn edit_global_application_command<F>($/;"	P	implementation:Command
edit_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_guild;$/;"	n
edit_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_guild($/;"	P	implementation:Http
edit_guild_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_guild_application_command($/;"	P	implementation:Http
edit_guild_application_command_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_guild_application_command_permissions($/;"	P	implementation:Http
edit_guild_application_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_guild_application_commands_permissions($/;"	P	implementation:Http
edit_guild_channel_positions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_guild_channel_positions(&self, guild_id: u64, value: &Value) -> Result<()>/;"	P	implementation:Http
edit_guild_welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_guild_welcome_screen;$/;"	n
edit_guild_welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_guild_welcome_screen($/;"	P	implementation:Http
edit_guild_widget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_guild_widget;$/;"	n
edit_guild_widget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_guild_widget(&self, guild_id: u64, map: &Value) -> Result<GuildWidget> {$/;"	P	implementation:Http
edit_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_interaction_response;$/;"	n
edit_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_member;$/;"	n
edit_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_member($/;"	P	implementation:Http
edit_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_member<F>($/;"	P	implementation:GuildId
edit_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_member<F>($/;"	P	implementation:Guild
edit_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_member<F>($/;"	P	implementation:PartialGuild
edit_member_me	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_member_me(&self, guild_id: u64, map: &JsonMap) -> Result<Member> {$/;"	P	implementation:Http
edit_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_message;$/;"	n
edit_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_message($/;"	P	implementation:Http
edit_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn edit_message<'a, F>($/;"	P	implementation:ChannelId
edit_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn edit_message<'a, F>($/;"	P	implementation:GuildChannel
edit_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn edit_message<'a, F>($/;"	P	implementation:PrivateChannel
edit_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn edit_message<F>($/;"	P	implementation:Webhook
edit_message_and_attachments	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_message_and_attachments($/;"	P	implementation:Http
edit_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn edit_name(&mut self, http: impl AsRef<Http>, name: &str) -> Result<()> {$/;"	P	implementation:Webhook
edit_nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_nickname(&self, guild_id: u64, new_nickname: Option<&str>) -> Result<()> {$/;"	P	implementation:Http
edit_nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_nickname($/;"	P	implementation:GuildId
edit_nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_nickname($/;"	P	implementation:Guild
edit_nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_nickname($/;"	P	implementation:PartialGuild
edit_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_original_interaction_response($/;"	P	implementation:Http
edit_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn edit_original_interaction_response<F>($/;"	P	implementation:ApplicationCommandInteraction
edit_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn edit_original_interaction_response<F>($/;"	P	implementation:MessageComponentInteraction
edit_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub async fn edit_original_interaction_response<F>($/;"	P	implementation:ModalSubmitInteraction
edit_own_voice_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn edit_own_voice_state<F>(&self, http: impl AsRef<Http>, f: F) -> Result<()>$/;"	P	implementation:GuildChannel
edit_profile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_profile;$/;"	n
edit_profile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_profile(&self, map: &JsonMap) -> Result<CurrentUser> {$/;"	P	implementation:Http
edit_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_role;$/;"	n
edit_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_role($/;"	P	implementation:Http
edit_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_role<F>($/;"	P	implementation:GuildId
edit_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_role<F>($/;"	P	implementation:Guild
edit_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_role<F>($/;"	P	implementation:PartialGuild
edit_role_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_role_position($/;"	P	implementation:Http
edit_role_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_role_position($/;"	P	implementation:GuildId
edit_role_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_role_position($/;"	P	implementation:Guild
edit_role_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_role_position($/;"	P	implementation:PartialGuild
edit_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_scheduled_event;$/;"	n
edit_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_scheduled_event($/;"	P	implementation:Http
edit_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_scheduled_event<F>($/;"	P	implementation:GuildId
edit_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_scheduled_event<F>($/;"	P	implementation:Guild
edit_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_stage_instance;$/;"	n
edit_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_stage_instance(&self, channel_id: u64, map: &Value) -> Result<StageInstanc/;"	P	implementation:Http
edit_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn edit_stage_instance<F>($/;"	P	implementation:ChannelId
edit_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn edit_stage_instance<F>($/;"	P	implementation:GuildChannel
edit_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_sticker;$/;"	n
edit_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_sticker($/;"	P	implementation:Http
edit_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_sticker<F>($/;"	P	implementation:GuildId
edit_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_sticker<F>($/;"	P	implementation:Guild
edit_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_sticker<F>($/;"	P	implementation:PartialGuild
edit_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_thread;$/;"	n
edit_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_thread(&self, channel_id: u64, map: &JsonMap) -> Result<GuildChannel> {$/;"	P	implementation:Http
edit_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn edit_thread<F>(&self, http: impl AsRef<Http>, f: F) -> Result<GuildChannel>$/;"	P	implementation:ChannelId
edit_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn edit_thread<F>(&self, http: impl AsRef<Http>, f: F) -> Result<GuildChannel>$/;"	P	implementation:GuildChannel
edit_voice_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_voice_state;$/;"	n
edit_voice_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_voice_state(&self, guild_id: u64, user_id: u64, map: &JsonMap) -> Result<(/;"	P	implementation:Http
edit_voice_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn edit_voice_state<F>($/;"	P	implementation:GuildChannel
edit_voice_state_me	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_voice_state_me(&self, guild_id: u64, map: &JsonMap) -> Result<()> {$/;"	P	implementation:Http
edit_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_webhook($/;"	P	implementation:Http
edit_webhook_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod edit_webhook_message;$/;"	n
edit_webhook_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_webhook_message($/;"	P	implementation:Http
edit_webhook_with_token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn edit_webhook_with_token($/;"	P	implementation:Http
edit_welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_welcome_screen<F>($/;"	P	implementation:GuildId
edit_welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_welcome_screen<F>($/;"	P	implementation:Guild
edit_welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_welcome_screen<F>($/;"	P	implementation:PartialGuild
edit_widget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn edit_widget<F>(&self, http: impl AsRef<Http>, f: F) -> Result<GuildWidget>$/;"	P	implementation:GuildId
edit_widget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn edit_widget<F>(&self, http: impl AsRef<Http>, f: F) -> Result<GuildWidget>$/;"	P	implementation:Guild
edit_widget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn edit_widget<F>(&self, http: impl AsRef<Http>, f: F) -> Result<GuildWidget>$/;"	P	implementation:PartialGuild
edited_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub edited_timestamp: Option<Timestamp>,$/;"	m	struct:Message
edited_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub edited_timestamp: Option<Timestamp>,$/;"	m	struct:MessageUpdateEvent
edited_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn edited_timestamp<T: Into<Timestamp>>(&mut self, timestamp: T) -> &mut Self {$/;"	P	implementation:CustomMessage
elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    elapsed: u64,$/;"	m	struct:InnerState
elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    elapsed: u64,$/;"	m	struct:Wheel
elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn elapsed(&self) -> u64 {$/;"	P	implementation:Wheel
elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn elapsed(&self) -> Duration {$/;"	P	implementation:Instant
email	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_profile.rs	/^    pub fn email(&mut self, email: &str) -> &mut Self {$/;"	P	implementation:EditProfile
email	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub email: Option<String>,$/;"	m	struct:PresenceUser
email	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub email: Option<String>,$/;"	m	struct:CurrentUser
embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn embed<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateInteractionResponseData
embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn embed<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateInteractionResponseFollowup
embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn embed<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateMessage
embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    pub fn embed<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditInteractionResponse
embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn embed<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:EditMessage
embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod embed;$/;"	n
embed_error_colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub embed_error_colour: Colour,$/;"	m	struct:HelpOptions
embed_links	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn embed_links(self) -> bool {$/;"	P	implementation:Permissions
embed_success_colour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub embed_success_colour: Colour,$/;"	m	struct:HelpOptions
embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_webhook_message.rs	/^    pub fn embeds(&mut self, embeds: Vec<Value>) -> &mut Self {$/;"	P	implementation:EditWebhookMessage
embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn embeds(&mut self, embeds: Vec<Value>) -> &mut Self {$/;"	P	implementation:ExecuteWebhook
embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub embeds: Vec<Embed>,$/;"	m	struct:Message
embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub embeds: Option<Vec<Embed>>,$/;"	m	struct:MessageUpdateEvent
embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn embeds<It>(&mut self, embeds: It) -> &mut Self$/;"	P	implementation:CustomMessage
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn emoji<R: Into<ReactionType>>(&mut self, emoji: R) -> &mut Self {$/;"	P	implementation:CreateButton
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn emoji<R: Into<ReactionType>>(&mut self, emoji: R) -> &mut Self {$/;"	P	implementation:CreateSelectMenuOption
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^    pub fn emoji(&mut self, emoji: GuildWelcomeChannelEmoji) -> &mut Self {$/;"	P	implementation:CreateGuildWelcomeChannel
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub emoji: Option<ReactionType>,$/;"	m	struct:Button
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub emoji: Option<ReactionType>,$/;"	m	struct:SelectMenuOption
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub emoji: ReactionType,$/;"	m	struct:Reaction
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub emoji: Option<ActivityEmoji>,$/;"	m	struct:Activity
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn emoji(&self, http: impl AsRef<Http>, emoji_id: EmojiId) -> Result<Emoji> {$/;"	P	implementation:GuildId
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn emoji(&self, http: impl AsRef<Http>, emoji_id: EmojiId) -> Result<Emoji> {$/;"	P	implementation:Guild
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod emoji;$/;"	n
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn emoji(&self, http: impl AsRef<Http>, emoji_id: EmojiId) -> Result<Emoji> {$/;"	P	implementation:PartialGuild
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    pub emoji: Option<GuildWelcomeChannelEmoji>,$/;"	m	struct:GuildWelcomeChannel
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^mod emoji;$/;"	n
emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn emoji(&mut self, emoji: &Emoji) -> &mut Self {$/;"	P	implementation:MessageBuilder
emoji_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^            emoji_id: Option<EmojiId>,$/;"	m	struct:GuildWelcomeChannel::deserialize::Helper
emoji_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^            emoji_name: Option<String>,$/;"	m	struct:GuildWelcomeChannel::deserialize::Helper
emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub emojis: HashMap<EmojiId, Emoji>,$/;"	m	struct:GuildEmojisUpdateEvent
emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn emojis(&self, http: impl AsRef<Http>) -> Result<Vec<Emoji>> {$/;"	P	implementation:GuildId
emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub emojis: Vec<Emoji>,$/;"	m	struct:GuildPreview
emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn emojis(&self, http: impl AsRef<Http>) -> Result<Vec<Emoji>> {$/;"	P	implementation:Guild
emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub emojis: HashMap<EmojiId, Emoji>,$/;"	m	struct:Guild
emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn emojis(&self, http: impl AsRef<Http>) -> Result<Vec<Emoji>> {$/;"	P	implementation:PartialGuild
emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub emojis: HashMap<EmojiId, Emoji>,$/;"	m	struct:PartialGuild
emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub mod emojis {$/;"	n
empty_or_any	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^        fn empty_or_any<T, F>(slice: &[T], f: F) -> bool$/;"	f	method:EventFilter::is_passing_constraints
empty_parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    pub fn empty_parse(&mut self) -> &mut Self {$/;"	P	implementation:CreateAllowedMentions
empty_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    pub fn empty_roles(&mut self) -> &mut Self {$/;"	P	implementation:CreateAllowedMentions
empty_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    pub fn empty_users(&mut self) -> &mut Self {$/;"	P	implementation:CreateAllowedMentions
enable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn enable(self: Pin<&mut Self>) -> bool {$/;"	P	implementation:Notified
enable_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn enable_all(&mut self) -> &mut Self {$/;"	P	implementation:Builder
enable_communication	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn enable_communication(&mut self) -> &mut Self {$/;"	P	implementation:EditMember
enable_communication	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn enable_communication(&mut self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:Member
enable_emoticons	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub enable_emoticons: Option<bool>,$/;"	m	struct:Integration
enable_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    enable_io: bool,$/;"	m	struct:Builder
enable_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) enable_io: bool,$/;"	m	struct:Cfg
enable_pause_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) enable_pause_time: bool,$/;"	m	struct:Cfg
enable_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    enable_time: bool,$/;"	m	struct:Builder
enable_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) enable_time: bool,$/;"	m	struct:Cfg
enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^    pub fn enabled(&mut self, enabled: bool) -> &mut Self {$/;"	P	implementation:EditAutoModRule
enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^    pub fn enabled(&mut self, enabled: bool) -> &mut Self {$/;"	P	implementation:EditGuildWelcomeScreen
enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_widget.rs	/^    pub fn enabled(&mut self, enabled: bool) -> &mut Self {$/;"	P	implementation:EditGuildWidget
enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub enabled: bool,$/;"	m	struct:Rule
enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub enabled: bool,$/;"	m	struct:Integration
enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub enabled: bool,$/;"	m	struct:GuildWidget
encode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod encode {$/;"	n
encode_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^fn encode_addr(addr: impl AsRef<OsStr>) -> Box<[u16]> {$/;"	f
encode_image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub(crate) fn encode_image(raw: &[u8]) -> String {$/;"	f
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub end: Option<u64>,$/;"	m	struct:ActivityTimestamps
end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub end: PipeEnd,$/;"	m	struct:PipeInfo
end_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    pub fn end_time<T: Into<Timestamp>>(&mut self, timestamp: T) -> &mut Self {$/;"	P	implementation:CreateScheduledEvent
end_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub fn end_time<T: Into<Timestamp>>(&mut self, timestamp: T) -> &mut Self {$/;"	P	implementation:EditScheduledEvent
end_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub end_time: Option<Timestamp>,$/;"	m	struct:ScheduledEvent
endpoint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub endpoint: Option<String>,$/;"	m	struct:VoiceServerUpdateEvent
ensure_capacity_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn ensure_capacity_for(&mut self, bytes: &ReadBuf<'_>) {$/;"	P	implementation:Buf
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn enter(&self) -> EnterGuard<'_> {$/;"	P	implementation:Handle
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn enter(&self) -> EnterGuard<'_> {$/;"	P	implementation:Runtime
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn enter<F, R>(self, f: F) -> R$/;"	P	implementation:CoreGuard
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn enter<R>(&self, core: Box<Core>, f: impl FnOnce() -> R) -> (Box<Core>, R) {$/;"	P	implementation:Context
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    fn enter(id: Id) -> Self {$/;"	P	implementation:TaskIdGuard
enter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub fn enter(&self) -> LocalEnterGuard {$/;"	P	implementation:LocalSet
entity_type_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    fn entity_type_variant() {$/;"	f	module:tests
entries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub entries: Vec<AuditLogEntry>,$/;"	m	struct:AuditLogs
entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod entry;$/;"	n
entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    entry: Arc<ListEntry<T>>,$/;"	m	struct:EntryInOneOfTheLists
entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn entry(val: i32) -> Pin<Box<Entry>> {$/;"	f	module:tests
enum_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/macros.rs	/^macro_rules! enum_number {$/;"	M
env	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn env<K, V>(&mut self, key: K, val: V) -> &mut Command$/;"	P	implementation:Command
env_clear	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn env_clear(&mut self) -> &mut Command {$/;"	P	implementation:Command
env_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn env_remove<K: AsRef<OsStr>>(&mut self, key: K) -> &mut Command {$/;"	P	implementation:Command
envs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn envs<I, K, V>(&mut self, vars: I) -> &mut Command$/;"	P	implementation:Command
eof	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^fn eof() -> io::Error {$/;"	f
ephemeral	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn ephemeral(&mut self, ephemeral: bool) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
ephemeral	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn ephemeral(&mut self, ephemeral: bool) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
ephemeral	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub ephemeral: bool,$/;"	m	struct:Attachment
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Check
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn eq(&self, other: &Command) -> bool {$/;"	P	implementation:Command
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn eq(&self, other: &HelpCommand) -> bool {$/;"	P	implementation:HelpCommand
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn eq(&self, other: &Role) -> bool {$/;"	P	implementation:Role
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:User
eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn eq(&self, other: &OnceCell<T>) -> bool {$/;"	P	implementation:OnceCell
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub error: DiscordJsonError,$/;"	m	struct:ErrorResponse
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn error() -> Ready {$/;"	f	module:sys
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^pub mod error {$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^pub mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^pub mod error {$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^pub mod error {$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^pub mod error;$/;"	n
error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod error;$/;"	n
errors	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub errors: Vec<DiscordJsonSingleError>,$/;"	m	struct:DiscordJsonError
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^mod event;$/;"	n
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^pub mod event;$/;"	n
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub event: ScheduledEvent,$/;"	m	struct:GuildScheduledEventCreateEvent
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub event: ScheduledEvent,$/;"	m	struct:GuildScheduledEventDeleteEvent
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub event: ScheduledEvent,$/;"	m	struct:GuildScheduledEventUpdateEvent
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod event;$/;"	n
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    event: Option<ReadyEvent>,$/;"	m	struct:AsyncFdReadyGuard
event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    event: Option<ReadyEvent>,$/;"	m	struct:AsyncFdReadyMutGuard
event_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^pub mod event_collector;$/;"	n
event_filters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    event_filters: Vec<EventFilter>,$/;"	m	struct:ShardRunner
event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub event_handler: &'a Option<Arc<dyn EventHandler>>,$/;"	m	struct:ShardManagerOptions
event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub event_handler: Option<Arc<dyn EventHandler>>,$/;"	m	struct:ShardQueuer
event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    event_handler: Option<Arc<dyn EventHandler>>,$/;"	m	struct:ShardRunner
event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub event_handler: Option<Arc<dyn EventHandler>>,$/;"	m	struct:ShardRunnerOptions
event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    event_handler: Option<Arc<dyn EventHandler>>,$/;"	m	struct:ClientBuilder
event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn event_handler<H: EventHandler + 'static>(mut self, event_handler: H) -> Self {$/;"	P	implementation:ClientBuilder
event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^mod event_handler;$/;"	n
event_handler_arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn event_handler_arc<H: EventHandler + 'static>($/;"	P	implementation:ClientBuilder
event_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub event_id: ScheduledEventId,$/;"	m	struct:ScheduledEventUser
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn event_info(&self, id: EventId) -> Option<&EventInfo> {$/;"	P	implementation:Vec
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn event_info(&self, id: EventId) -> Option<&EventInfo>;$/;"	P	interface:Storage
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    event_info: EventInfo,$/;"	m	struct:SignalInfo
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn event_info(&self, id: EventId) -> Option<&EventInfo> {$/;"	P	implementation:OsStorage
event_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn event_info(&self, id: EventId) -> Option<&EventInfo> {$/;"	P	implementation:OsStorage
event_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn event_interval(&mut self, val: u32) -> &mut Self {$/;"	P	implementation:Builder
event_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) event_interval: u32,$/;"	m	struct:Builder
event_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) event_interval: u32,$/;"	m	struct:Config
event_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^    pub fn event_type(&mut self, event_type: EventType) -> &mut Self {$/;"	P	implementation:EditAutoModRule
event_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub fn event_type(&self) -> EventType {$/;"	P	implementation:Event
event_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub event_type: EventType,$/;"	m	struct:Rule
event_types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    event_types: Vec<EventType>,$/;"	m	struct:FilterOptions
events	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    events: mio::Events,$/;"	m	struct:Driver
examples	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub examples: &'static [&'static str],$/;"	m	struct:CommandOptions
execute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn execute<'a, F>($/;"	P	implementation:Webhook
execute_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod execute_webhook;$/;"	n
execute_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn execute_webhook($/;"	P	implementation:Http
execute_webhook_with_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn execute_webhook_with_files<'a, T, It: IntoIterator<Item = T>>($/;"	P	implementation:Http
execution	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub execution: ActionExecution,$/;"	m	struct:AutoModerationActionExecutionEvent
exempt_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^    pub fn exempt_channels<I>(&mut self, channels: I) -> &mut Self$/;"	P	implementation:EditAutoModRule
exempt_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub exempt_channels: Vec<ChannelId>,$/;"	m	struct:Rule
exempt_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^    pub fn exempt_roles<I>(&mut self, roles: I) -> &mut Self$/;"	P	implementation:EditAutoModRule
exempt_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub exempt_roles: Vec<RoleId>,$/;"	m	struct:Rule
exhausted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^fn exhausted() -> ! {$/;"	f
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReactionType::deserialize::ReactionTypeVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            fn expecting(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:EventType::deserialize::EventTypeVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:GuildMembersChunkEvent::deserialize::GuildMembersChunkVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ChangeVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:optional_string::OptionalStringVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Action::deserialize::Visitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^        fn expecting(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:premium_subscriber::NullValueVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:snowflake::SnowflakeVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Permissions::deserialize::StringVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:discriminator::option::OptionalDiscriminatorVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:discriminator::DiscriminatorVisitor
expecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
expire_behaviour	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub expire_behaviour: Option<IntegrationExpireBehaviour>,$/;"	m	struct:Integration
expire_grace_period	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub expire_grace_period: Option<u64>,$/;"	m	struct:Integration
expires_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub expires_at: Option<Timestamp>,$/;"	m	struct:Invite
explicit_content_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn explicit_content_filter(&mut self, level: Option<ExplicitContentFilter>) -> &mut Self/;"	P	implementation:EditGuild
explicit_content_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub explicit_content_filter: ExplicitContentFilter,$/;"	m	struct:Guild
extend_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn extend_expiration(&self, new_timestamp: u64) -> Result<(), ()> {$/;"	P	implementation:StateCell
extend_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn extend_expiration(&self, t: u64) -> Result<(), ()> {$/;"	P	implementation:TimerShared
external_emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn external_emojis(self) -> bool {$/;"	P	implementation:Permissions
extra	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    extra: OsExtraData,$/;"	m	struct:Globals
f	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^    f: F,$/;"	m	struct:PollFn
face	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn face(&self) -> String {$/;"	P	implementation:Member
face	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn face(&self) -> String {$/;"	P	implementation:CurrentUser
face	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn face(&self) -> String {$/;"	P	implementation:User
fake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub fn fake<F>(f: F) -> Value$/;"	P	implementation:Embed
far_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub(crate) fn far_future() -> Instant {$/;"	P	implementation:Instant
far_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub(crate) fn far_future(location: Option<&'static Location<'static>>) -> Sleep {$/;"	P	implementation:Sleep
fastrand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    fn fastrand(&self) -> u32 {$/;"	P	implementation:FastRand
fastrand_n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    pub(crate) fn fastrand_n(&self, n: u32) -> u32 {$/;"	P	implementation:FastRand
fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fd: File,$/;"	m	struct:Pipe
fd_deregistered_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(super) fd_deregistered_count: AtomicU64,$/;"	m	struct:IoDriverMetrics
fd_registered_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(super) fd_registered_count: AtomicU64,$/;"	m	struct:IoDriverMetrics
feature	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/cfg.rs	/^macro_rules! feature {$/;"	M
feature_cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/macros.rs	/^macro_rules! feature_cache {$/;"	M
features	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn features(&mut self, features: Vec<String>) -> &mut Self {$/;"	P	implementation:EditGuild
features	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub features: Vec<String>,$/;"	m	struct:GuildPreview
features	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub features: Vec<String>,$/;"	m	struct:Guild
features	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub features: Vec<String>,$/;"	m	struct:PartialGuild
fetch_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn fetch_add(&self, val: u64, _: Ordering) -> u64 {$/;"	P	implementation:AtomicU64
fetch_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) fn fetch_add(&self, val: u64, order: Ordering) -> u64 {$/;"	P	implementation:StaticAtomicU64
fetch_all_eligible_commands_in_group	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn fetch_all_eligible_commands_in_group<'rec, 'a: 'rec>($/;"	f
fetch_or	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn fetch_or(&self, val: u64, _: Ordering) -> u64 {$/;"	P	implementation:AtomicU64
fetch_single_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn fetch_single_command<'a>($/;"	f
fetch_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn fetch_update<F>(&self, mut f: F) -> Result<Snapshot, Snapshot>$/;"	P	implementation:State
fetch_update_action	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn fetch_update_action<F, T>(&self, mut f: F) -> T$/;"	P	implementation:State
field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn field<T, U>(&mut self, name: T, value: U, inline: bool) -> &mut Self$/;"	P	implementation:CreateEmbed
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn fields<T, U, It>(&mut self, fields: It) -> &mut Self$/;"	P	implementation:CreateEmbed
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/multipart.rs	/^    pub fields: Vec<(Cow<'static, str>, Cow<'static, str>)>,$/;"	m	struct:Multipart
fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub fields: Vec<EmbedField>,$/;"	m	struct:Embed
file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_sticker.rs	/^    pub fn file<T: Into<AttachmentType<'a>>>(&mut self, file: T) -> &mut Self {$/;"	P	implementation:CreateSticker
file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod file;$/;"	n
file_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub fn file_name(&self) -> OsString {$/;"	P	implementation:DirEntry
file_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    file_type: Option<FileType>,$/;"	m	struct:DirEntry
file_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub async fn file_type(&self) -> io::Result<FileType> {$/;"	P	implementation:DirEntry
filename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub filename: String,$/;"	m	struct:Attachment
filename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    pub(crate) fn filename(&self) -> Result<Option<String>> {$/;"	P	implementation:AttachmentType
files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn files<T: Into<AttachmentType<'a>>, It: IntoIterator<Item = T>>($/;"	P	implementation:CreateInteractionResponseData
files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn files<T: Into<AttachmentType<'a>>, It: IntoIterator<Item = T>>($/;"	P	implementation:CreateInteractionResponseFollowup
files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn files<T: Into<AttachmentType<'a>>, It: IntoIterator<Item = T>>($/;"	P	implementation:CreateMessage
files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn files<T: Into<AttachmentType<'a>>, It: IntoIterator<Item = T>>($/;"	P	implementation:ExecuteWebhook
files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/multipart.rs	/^    pub files: Vec<AttachmentType<'a>>,$/;"	m	struct:Multipart
fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/fill_buf.rs	/^pub(crate) fn fill_buf<R>(reader: &mut R) -> FillBuf<'_, R>$/;"	f
fill_eligible_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn fill_eligible_commands<'a>($/;"	f
filled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    filled: usize,$/;"	m	struct:ReadBuf
filled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn filled(&self) -> &[u8] {$/;"	P	implementation:ReadBuf
filled_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn filled_mut(&mut self) -> &mut [u8] {$/;"	P	implementation:ReadBuf
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    filter: Option<Arc<dyn Fn(&Arc<MessageComponentInteraction>) -> bool + 'static + Send + Sync/;"	m	struct:FilterOptions
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:CollectComponentInteraction
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:ComponentInteractionCollectorBuilder
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    filter: Option<FilterFn>,$/;"	m	struct:FilterOptions
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:EventCollectorBuilder
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn filter<F: Fn(&Arc<Event>) -> bool + 'static + Send + Sync>($/;"	P	implementation:EventCollectorBuilder
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    filter: Option<Arc<dyn Fn(&Arc<Message>) -> bool + 'static + Send + Sync>>,$/;"	m	struct:FilterOptions
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:CollectReply
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:MessageCollectorBuilder
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    filter: Option<Arc<dyn Fn(&Arc<ModalSubmitInteraction>) -> bool + 'static + Send + Sync>>,$/;"	m	struct:FilterOptions
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:CollectModalInteraction
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:ModalInteractionCollectorBuilder
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    filter: Option<Arc<dyn Fn(&Arc<Reaction>) -> bool + 'static + Send + Sync>>,$/;"	m	struct:FilterOptions
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:CollectReaction
filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    filter: Option<FilterOptions>,$/;"	m	struct:ReactionCollectorBuilder
filter_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    filter_limit: Option<u32>,$/;"	m	struct:FilterOptions
filter_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    filter_limit: Option<u32>,$/;"	m	struct:FilterOptions
filter_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn filter_limit(mut self, limit: u32) -> Self {$/;"	P	implementation:EventCollectorBuilder
filter_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    filter_limit: Option<u32>,$/;"	m	struct:FilterOptions
filter_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    filter_limit: Option<u32>,$/;"	m	struct:FilterOptions
filter_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    filter_limit: Option<u32>,$/;"	m	struct:FilterOptions
filtered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    filtered: u32,$/;"	m	struct:ComponentInteractionFilter
filtered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    filtered: u32,$/;"	m	struct:EventFilter
filtered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    filtered: u32,$/;"	m	struct:MessageFilter
filtered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    filtered: u32,$/;"	m	struct:ModalInteractionFilter
filtered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    filtered: u32,$/;"	m	struct:ReactionFilter
find	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn find<T: FromStr>(&mut self) -> Result<T, T::Err> {$/;"	P	implementation:Args
find_block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn find_block(&self, slot_index: usize) -> NonNull<Block<T>> {$/;"	P	implementation:Tx
find_guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub fn find_guild_id(&self, cache: impl AsRef<Cache>) -> Option<GuildId> {$/;"	P	implementation:Emoji
find_n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn find_n<T: FromStr>(&mut self) -> Result<T, T::Err> {$/;"	P	implementation:Args
find_prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^async fn find_prefix<'a>($/;"	f
finish_string_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^pub(super) fn finish_string_read($/;"	f
fire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn fire<T: DeserializeOwned>(&self, req: Request<'_>) -> Result<T> {$/;"	P	implementation:Http
fire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn fire(self, completed_state: TimerResult) -> Option<Waker> {$/;"	P	implementation:TimerHandle
fire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn fire(&self, result: TimerResult) -> Option<Waker> {$/;"	P	implementation:StateCell
first_pipe_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    first_pipe_instance: bool,$/;"	m	struct:ServerOptions
first_pipe_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn first_pipe_instance(&mut self, first: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
fits_256	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn fits_256() {$/;"	f
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn flags(&mut self, flags: MessageFlags) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn flags(&mut self, flags: MessageFlags) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn flags(&mut self, flags: MessageFlags) -> &mut Self {$/;"	P	implementation:CreateMessage
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn flags(&mut self, flags: MessageFlags) -> &mut Self {$/;"	P	implementation:EditMessage
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn flags(&mut self, flags: MessageFlags) -> &mut Self {$/;"	P	implementation:ExecuteWebhook
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub flags: ApplicationFlags,$/;"	m	struct:PartialCurrentApplicationInfo
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub flags: Option<MessageFlags>,$/;"	m	struct:Message
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub flags: Option<MessageFlags>,$/;"	m	struct:MessageUpdateEvent
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub flags: Option<ActivityFlags>,$/;"	m	struct:Activity
flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub flags: ThreadMemberFlags,$/;"	m	struct:ThreadMember
flatten_group_to_plain_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn flatten_group_to_plain_string($/;"	f
flatten_group_to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn flatten_group_to_string($/;"	f
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:MockFile
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/flush.rs	/^pub(super) fn flush<A>(a: &mut A) -> Flush<'_, A>$/;"	f
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Pipe
flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:ArcFile
flush_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn flush_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufWriter
flush_while_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn flush_while_idle() {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ShardId
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FilterOptions
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FilterFn
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FilterOptions
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FilterOptions
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:FilterOptions
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RevertBucket
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Check
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Reason
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Command
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:HelpCommand
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ConnectionStage
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Http
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Ratelimiter
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/oauth.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Scope
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:GuildChannel
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Channel
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ChannelParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PrivateChannel
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReactionConversionError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReactionType
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:VoiceServerUpdateEvent
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Emoji
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:GuildWidgetStyle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Member
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Role
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RoleParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Mention
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MentionParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:EmojiIdentifierParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Permissions
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:InvalidTimestamp
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:User
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:VoiceState
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Webhook
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/_template.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PLACEHOLDERParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ChannelCategoryParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ChannelParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:GuildChannelParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/emoji.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:EmojiParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/guild.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:GuildParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/member.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MemberParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MessageParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RoleParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UserParseError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MessageBuilder
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/token.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:InvalidToken
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:File
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PollFn
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:AsyncFd
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:AsyncFdReadyGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:AsyncFdReadyMutGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Aio
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Interest
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PollEvented
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReadBuf
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Ready
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReadHalf
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:WriteHalf
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BufReader
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BufWriter
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Empty
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Sink
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AtomicU16
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AtomicU32
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AtomicUsize
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RwLockReadGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RwLockWriteGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TcpListener
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TcpSocket
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReuniteError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TcpStream
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UdpSocket
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnixDatagram
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnixListener
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:SocketAddr
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReuniteError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnixStream
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Child
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ChildStdio
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:GlobalOrphanQueue
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Child
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BlockingPool
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Spawner
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Builder
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryCurrentError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryCurrentErrorKind
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Driver
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Handle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:CurrentThread
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Handle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Handle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:State
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MultiThread
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AbortHandle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:JoinError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Id
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Notified
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Task
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Snapshot
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:State
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:StateCell
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:TimerShared
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Handle
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Inner
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Level
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ReusableBoxFuture
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AcquireError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Semaphore
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryAcquireError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::RecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::SendError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::TryRecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Receiver
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Sender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OwnedPermit
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Permit
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Receiver
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Sender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:WeakSender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Rx
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RxFields
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Tx
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:RecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:SendError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryRecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TrySendError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Rx
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Tx
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnboundedReceiver
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:UnboundedSender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:WeakUnboundedSender
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MappedMutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:MutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OwnedMappedMutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OwnedMutexGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TryLockError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:SetError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OnceCell
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::RecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::TryRecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Inner
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:State
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AtomicWaker
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::RecvError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:error::SendError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Shared
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Builder
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:JoinSet
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:LocalEnterGuard
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:LocalSet
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:fmt::TransparentOption
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:AccessError
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:LocalKey
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Elapsed
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Instant
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Pack
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:LinkedList
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Pointers
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Allocator
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Ref
fmt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Slab
focused	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub focused: bool,$/;"	m	struct:CommandDataOption
follow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn follow($/;"	P	implementation:ChannelId
follow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn follow($/;"	P	implementation:GuildChannel
follow_news_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn follow_news_channel($/;"	P	implementation:Http
footer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn footer<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateEmbed
footer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub footer: Option<EmbedFooter>,$/;"	m	struct:Embed
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn for_each<'a, F>(&'a self, f: F)$/;"	P	implementation:Vec
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn for_each<'a, F>(&'a self, f: F)$/;"	P	interface:Storage
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn for_each<'a, F>(&'a self, f: F)$/;"	P	implementation:OsStorage
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn for_each<'a, F>(&'a self, mut f: F)$/;"	P	implementation:OsStorage
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn for_each<F: FnMut(&mut T)>(&mut self, mut func: F) {$/;"	P	implementation:IdleNotifiedSet
for_each	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn for_each(&mut self, mut f: impl FnMut(&T)) {$/;"	P	implementation:Slab
forget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn forget(mut self) {$/;"	P	implementation:OwnedWriteHalf
forget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn forget(mut self) {$/;"	P	implementation:OwnedWriteHalf
forget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn forget(mut self) {$/;"	P	implementation:OwnedSemaphorePermit
forget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn forget(mut self) {$/;"	P	implementation:SemaphorePermit
format_command_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^macro_rules! format_command_name {$/;"	M
format_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    pub format_type: StickerFormatType,$/;"	m	struct:Sticker
format_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub format_type: StickerFormatType,$/;"	m	struct:Sticker
format_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_item.rs	/^    pub format_type: StickerFormatType,$/;"	m	struct:StickerItem
framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub framework: &'a Arc<dyn Framework + Send + Sync>,$/;"	m	struct:ShardManagerOptions
framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub framework: Arc<dyn Framework + Send + Sync>,$/;"	m	struct:ShardQueuer
framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    framework: Arc<dyn Framework + Send + Sync>,$/;"	m	struct:ShardRunner
framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub framework: Arc<dyn Framework + Send + Sync>,$/;"	m	struct:ShardRunnerOptions
framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    framework: Option<Arc<dyn Framework + Send + Sync + 'static>>,$/;"	m	struct:ClientBuilder
framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn framework<F>(mut self, framework: F) -> Self$/;"	P	implementation:ClientBuilder
framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod framework;$/;"	n
framework_arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn framework_arc<T: Framework + Send + Sync + 'static>($/;"	P	implementation:ClientBuilder
free_blocks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(super) unsafe fn free_blocks(&mut self) {$/;"	P	implementation:Rx
free_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    free_head: NonNull<Block<T>>,$/;"	m	struct:Rx
friend_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub friend_sync: bool,$/;"	m	struct:Connection
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    fn from(embed: Embed) -> Self {$/;"	P	implementation:CreateEmbed
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: FormatError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: GatewayError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: HttpError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: InvalidHeaderValue) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: IoError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: JsonError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: ModelError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: ReqwestError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: TungsteniteError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn from(e: simd_json::Error) -> Self {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn from(c: char) -> Delimiter {$/;"	P	implementation:Delimiter
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn from(e: E) -> Self {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn from(s: &'a String) -> Delimiter {$/;"	P	implementation:Delimiter
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn from(s: &'a str) -> Delimiter {$/;"	P	implementation:Delimiter
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn from(s: String) -> Delimiter {$/;"	P	implementation:Delimiter
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    fn from((prefixes, groups): (bool, bool)) -> Self {$/;"	P	implementation:WithWhiteSpace
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    fn from((prefixes, groups, commands): (bool, bool, bool)) -> Self {$/;"	P	implementation:WithWhiteSpace
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    fn from(b: bool) -> Self {$/;"	P	implementation:WithWhiteSpace
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    fn from(error: ErrorResponse) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    fn from(error: InvalidHeaderValue) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    fn from(error: ReqwestError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    fn from(error: UrlError) -> Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    fn from(req: Request<'a>) -> Self {$/;"	P	implementation:RatelimitedRequest
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    fn from(id: &RoleId) -> Self {$/;"	P	implementation:CommandPermissionId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    fn from(id: &UserId) -> Self {$/;"	P	implementation:CommandPermissionId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    fn from(id: CommandPermissionId) -> Self {$/;"	P	implementation:RoleId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    fn from(id: CommandPermissionId) -> Self {$/;"	P	implementation:UserId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    fn from(id: RoleId) -> Self {$/;"	P	implementation:CommandPermissionId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    fn from(id: UserId) -> Self {$/;"	P	implementation:CommandPermissionId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    fn from(component: Button) -> Self {$/;"	P	implementation:ActionRowComponent
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    fn from(component: SelectMenu) -> Self {$/;"	P	implementation:ActionRowComponent
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn from(id: &MessageId) -> Self {$/;"	P	implementation:TargetId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn from(id: &UserId) -> Self {$/;"	P	implementation:TargetId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn from(id: MessageId) -> Self {$/;"	P	implementation:TargetId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn from(id: TargetId) -> Self {$/;"	P	implementation:MessageId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn from(id: TargetId) -> Self {$/;"	P	implementation:UserId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    fn from(id: UserId) -> Self {$/;"	P	implementation:TargetId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    fn from(f: (&'a File, &str)) -> AttachmentType<'a> {$/;"	P	implementation:AttachmentType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    fn from(params: (&'a [u8], &str)) -> AttachmentType<'a> {$/;"	P	implementation:AttachmentType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    fn from(path: &'a Path) -> AttachmentType<'_> {$/;"	P	implementation:AttachmentType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    fn from(pathbuf: &'a PathBuf) -> AttachmentType<'_> {$/;"	P	implementation:AttachmentType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    fn from(s: &'a str) -> AttachmentType<'_> {$/;"	P	implementation:AttachmentType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    fn from(channel: &Channel) -> ChannelId {$/;"	P	implementation:ChannelId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    fn from(channel: Channel) -> ChannelId {$/;"	P	implementation:ChannelId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    fn from(private_channel: &PrivateChannel) -> ChannelId {$/;"	P	implementation:ChannelId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    fn from(private_channel: PrivateChannel) -> ChannelId {$/;"	P	implementation:ChannelId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    fn from(public_channel: &GuildChannel) -> ChannelId {$/;"	P	implementation:ChannelId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    fn from(public_channel: GuildChannel) -> ChannelId {$/;"	P	implementation:ChannelId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    fn from(m: &Message) -> Self {$/;"	P	implementation:MessageReference
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    fn from(message: &Message) -> MessageId {$/;"	P	implementation:MessageId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    fn from(message: Message) -> MessageId {$/;"	P	implementation:MessageId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    fn from(pair: (ChannelId, MessageId)) -> Self {$/;"	P	implementation:MessageReference
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn from(ch: char) -> ReactionType {$/;"	P	implementation:ReactionType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn from(emoji: Emoji) -> ReactionType {$/;"	P	implementation:ReactionType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn from(emoji_id: EmojiId) -> ReactionType {$/;"	P	implementation:ReactionType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn from(emoji_id: EmojiIdentifier) -> ReactionType {$/;"	P	implementation:ReactionType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn from(event: &Event) -> EventType {$/;"	P	implementation:EventType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn from(value: Option<T>) -> Self {$/;"	P	implementation:RelatedId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn from(value: ActionType) -> Self {$/;"	P	implementation:u8
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn from(value: EventType) -> Self {$/;"	P	implementation:u8
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn from(value: KeywordPresetType) -> Self {$/;"	P	implementation:u8
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn from(value: TriggerType) -> Self {$/;"	P	implementation:u8
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn from(value: u8) -> Self {$/;"	P	implementation:ActionType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn from(value: u8) -> Self {$/;"	P	implementation:EventType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn from(value: u8) -> Self {$/;"	P	implementation:KeywordPresetType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn from(value: u8) -> Self {$/;"	P	implementation:TriggerType
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    fn from(emoji: &Emoji) -> EmojiId {$/;"	P	implementation:EmojiId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    fn from(emoji: Emoji) -> EmojiId {$/;"	P	implementation:EmojiId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn from(guild: &PartialGuild) -> GuildId {$/;"	P	implementation:GuildId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn from(guild: PartialGuild) -> GuildId {$/;"	P	implementation:GuildId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn from(guild_info: &GuildInfo) -> GuildId {$/;"	P	implementation:GuildId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn from(guild_info: GuildInfo) -> GuildId {$/;"	P	implementation:GuildId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn from(invite_guild: &InviteGuild) -> GuildId {$/;"	P	implementation:GuildId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn from(invite_guild: InviteGuild) -> GuildId {$/;"	P	implementation:GuildId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn from(live_guild: &Guild) -> GuildId {$/;"	P	implementation:GuildId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn from(live_guild: Guild) -> GuildId {$/;"	P	implementation:GuildId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    fn from(integration: Integration) -> IntegrationId {$/;"	P	implementation:IntegrationId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    fn from(m: InterimMember) -> Self {$/;"	P	implementation:Member
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    fn from(guild: PartialGuild) -> GuildContainer {$/;"	P	implementation:GuildContainer
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    fn from(guild_id: GuildId) -> GuildContainer {$/;"	P	implementation:GuildContainer
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    fn from(id: u64) -> GuildContainer {$/;"	P	implementation:GuildContainer
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    fn from(guild: Guild) -> Self {$/;"	P	implementation:PartialGuild
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn from(r: InterimRole) -> Self {$/;"	P	implementation:Role
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn from(role: &Role) -> RoleId {$/;"	P	implementation:RoleId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn from(role: Role) -> RoleId {$/;"	P	implementation:RoleId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^    fn from(s: &'a str) -> Self {$/;"	P	implementation:Timestamp
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^    fn from(s: String) -> Self {$/;"	P	implementation:Timestamp
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^    fn from(ts: &Timestamp) -> Self {$/;"	P	implementation:Timestamp
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn from(current_user: &CurrentUser) -> UserId {$/;"	P	implementation:UserId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn from(current_user: CurrentUser) -> UserId {$/;"	P	implementation:UserId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn from(member: &Member) -> UserId {$/;"	P	implementation:UserId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn from(member: Member) -> UserId {$/;"	P	implementation:UserId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn from(user: &'a CurrentUser) -> Self {$/;"	P	implementation:User
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn from(user: &User) -> UserId {$/;"	P	implementation:UserId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn from(user: CurrentUser) -> Self {$/;"	P	implementation:User
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn from(user: User) -> UserId {$/;"	P	implementation:UserId
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn from((red, green, blue): (u8, u8, u8)) -> Self {$/;"	P	implementation:Colour
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn from() {$/;"	f	module:test
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn from(value: i32) -> Colour {$/;"	P	implementation:Colour
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn from(value: u32) -> Colour {$/;"	P	implementation:Colour
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn from(value: u64) -> Colour {$/;"	P	implementation:Colour
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn from(t: T) -> Content {$/;"	P	implementation:Content
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn from(std: StdFile) -> Self {$/;"	P	implementation:File
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    fn from(options: StdOpenOptions) -> OpenOptions {$/;"	P	implementation:OpenOptions
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn from(b: BufReader<BufWriter<RW>>) -> Self {$/;"	P	implementation:BufStream
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn from(b: BufWriter<BufReader<RW>>) -> Self {$/;"	P	implementation:BufStream
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn from(std: StdCommand) -> Command {$/;"	P	implementation:Command
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn from(fd: T) -> Self {$/;"	P	implementation:Pipe
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn from(e: SpawnError) -> Self {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn from(src: State) -> usize {$/;"	P	implementation:usize
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn from(src: usize) -> State {$/;"	P	implementation:State
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    fn from(src: JoinError) -> io::Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn from(kind: SignalKind) -> Self {$/;"	P	implementation:c_int
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn from(signum: std::os::raw::c_int) -> Self {$/;"	P	implementation:SignalKind
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/error.rs	/^    fn from(src: SendError<T>) -> TrySendError<T> {$/;"	P	implementation:TrySendError
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn from(s: T) -> Self {$/;"	P	implementation:Mutex
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn from(value: T) -> Self {$/;"	P	implementation:OnceCell
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    fn from(s: T) -> Self {$/;"	P	implementation:RwLock
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn from(_: std::cell::BorrowMutError) -> Self {$/;"	P	implementation:ScopeInnerErr
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn from(_: std::thread::AccessError) -> Self {$/;"	P	implementation:ScopeInnerErr
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    fn from(_err: Elapsed) -> std::io::Error {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    fn from(k: Kind) -> Self {$/;"	P	implementation:Error
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn from(time: Instant) -> std::time::Instant {$/;"	P	implementation:Instant
from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn from(time: std::time::Instant) -> Instant {$/;"	P	implementation:Instant
from_c_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn from_c_int() {$/;"	f	module:tests
from_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn from_file(mut file: File) -> io::Result<Receiver> {$/;"	P	implementation:Receiver
from_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn from_file(mut file: File) -> io::Result<Sender> {$/;"	P	implementation:Sender
from_file_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn from_file_unchecked(file: File) -> io::Result<Receiver> {$/;"	P	implementation:Receiver
from_file_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn from_file_unchecked(file: File) -> io::Result<Sender> {$/;"	P	implementation:Sender
from_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn from_id(http: impl AsRef<Http>, webhook_id: impl Into<WebhookId>) -> Result<Sel/;"	P	implementation:Webhook
from_id_with_token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn from_id_with_token($/;"	P	implementation:Webhook
from_mio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub(crate) fn from_mio(event: &mio::event::Event) -> Ready {$/;"	P	implementation:Ready
from_mio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn from_mio(mio_rx: mio_pipe::Receiver) -> io::Result<Receiver> {$/;"	P	implementation:Receiver
from_mio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn from_mio(mio_tx: mio_pipe::Sender) -> io::Result<Sender> {$/;"	P	implementation:Sender
from_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub(crate) fn from_number(n: impl ToNumber) -> Value {$/;"	f
from_pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    fn from_pair(s: u32, r: u32) -> Self {$/;"	P	implementation:RngSeed
from_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub(super) fn from_parts($/;"	P	implementation:Runtime
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    unsafe fn from_raw(ptr: *const ()) -> Arc<Inner> {$/;"	P	implementation:Inner
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) unsafe fn from_raw(ptr: NonNull<Header>) -> Harness<T, S> {$/;"	f
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    unsafe fn from_raw(ptr: NonNull<Header>) -> Task<S> {$/;"	P	implementation:Task
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) unsafe fn from_raw(ptr: NonNull<Header>) -> RawTask {$/;"	P	implementation:RawTask
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn from_raw(ptr: NonNull<Self::Target>) -> Self::Handle {$/;"	P	implementation:TimerShared
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn from_raw(signum: std::os::raw::c_int) -> Self {$/;"	P	implementation:SignalKind
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    unsafe fn from_raw(ptr: NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    unsafe fn from_raw(ptr: NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    unsafe fn from_raw(ptr: NonNull<Waiter>) -> NonNull<Waiter> {$/;"	P	implementation:Waiter
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^fn from_raw<T>(val: *mut T) -> Option<Box<T>> {$/;"	f
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    unsafe fn from_raw(ptr: NonNull<ListEntry<T>>) -> Arc<ListEntry<T>> {$/;"	P	implementation:ListEntry
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        unsafe fn from_raw(ptr: NonNull<Entry>) -> Pin<&'a Entry> {$/;"	P	implementation:tests::Entry
from_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    unsafe fn from_raw(ptr: NonNull<Self::Target>) -> Self::Handle;$/;"	P	interface:Link
from_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    unsafe fn from_raw_fd(fd: std::os::unix::io::RawFd) -> Self {$/;"	P	implementation:File
from_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    unsafe fn from_raw_fd(fd: RawFd) -> TcpSocket {$/;"	P	implementation:TcpSocket
from_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            unsafe fn from_raw_handle(handle: RawHandle) -> Self;$/;"	P	interface:windows::io::FromRawHandle
from_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub unsafe fn from_raw_handle(handle: RawHandle) -> io::Result<Self> {$/;"	P	implementation:NamedPipeClient
from_raw_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub unsafe fn from_raw_handle(handle: RawHandle) -> io::Result<Self> {$/;"	P	implementation:NamedPipeServer
from_raw_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            unsafe fn from_raw_socket(sock: RawSocket) -> Self;$/;"	P	interface:windows::io::FromRawSocket
from_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub async fn from_response(r: Response) -> Self {$/;"	P	implementation:Error
from_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub async fn from_response(r: Response) -> Self {$/;"	P	implementation:ErrorResponse
from_rgb	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn from_rgb() {$/;"	f	module:test
from_rgb	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub const fn from_rgb(red: u8, green: u8, blue: u8) -> Colour {$/;"	P	implementation:Colour
from_shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn from_shared(version: Version, shared: Arc<Shared<T>>) -> Self {$/;"	P	implementation:Receiver
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub fn from_std(std: StdFile) -> File {$/;"	P	implementation:File
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn from_std(listener: net::TcpListener) -> io::Result<TcpListener> {$/;"	P	implementation:TcpListener
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn from_std(stream: std::net::TcpStream) -> io::Result<TcpStream> {$/;"	P	implementation:TcpStream
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn from_std(socket: net::UdpSocket) -> io::Result<UdpSocket> {$/;"	P	implementation:UdpSocket
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn from_std(datagram: net::UnixDatagram) -> io::Result<UnixDatagram> {$/;"	P	implementation:UnixDatagram
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn from_std(listener: net::UnixListener) -> io::Result<UnixListener> {$/;"	P	implementation:UnixListener
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn from_std(stream: net::UnixStream) -> io::Result<UnixStream> {$/;"	P	implementation:UnixStream
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn from_std(inner: std::process::ChildStderr) -> io::Result<Self> {$/;"	P	implementation:ChildStderr
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn from_std(inner: std::process::ChildStdin) -> io::Result<Self> {$/;"	P	implementation:ChildStdin
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn from_std(inner: std::process::ChildStdout) -> io::Result<Self> {$/;"	P	implementation:ChildStdout
from_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn from_std(std: std::time::Instant) -> Instant {$/;"	P	implementation:Instant
from_std_stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn from_std_stream(std_stream: std::net::TcpStream) -> TcpSocket {$/;"	P	implementation:TcpSocket
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn from_str<CRL>(_cache: CRL, s: &str) -> Result<Self, Self::Err>$/;"	P	implementation:F
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn from_str<CRL>(cache: CRL, s: &str) -> Result<Self, Self::Err>$/;"	P	interface:FromStrAndCache
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub(crate) fn from_str<'a, T>(s: &'a mut str) -> Result<T>$/;"	f
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    fn from_str<C>(cache: C, s: &str) -> StdResult<Self, Self::Err>$/;"	P	implementation:Channel
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn from_str(s: &str) -> std::result::Result<Self, Self::Err> {$/;"	P	implementation:ReactionType
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn from_str<CRL>(cache: CRL, s: &str) -> StdResult<Self, Self::Err>$/;"	P	implementation:Role
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    fn from_str(s: &str) -> StdResult<Self, Self::Err> {$/;"	P	implementation:Mention
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    fn from_str(s: &str) -> StdResult<Self, Self::Err> {$/;"	P	implementation:EmojiIdentifier
from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Timestamp
from_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    fn from_u64(seed: u64) -> Self {$/;"	P	implementation:RngSeed
from_unix_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^    fn from_unix_timestamp() {$/;"	f	module:tests
from_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn from_url(http: impl AsRef<Http>, url: &str) -> Result<Self> {$/;"	P	implementation:Webhook
from_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub(crate) fn from_usize(val: usize) -> Ready {$/;"	P	implementation:Ready
from_usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn from_usize(src: usize) -> Address {$/;"	P	implementation:Address
from_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub(crate) fn from_value<T>(v: Value) -> Result<T>$/;"	f
from_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub fn from_value(value: u8) -> Option<Action> {$/;"	P	implementation:Action
fun	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub fun: CommandFn,$/;"	m	struct:Command
fun	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub fun: HelpCommandFn,$/;"	m	struct:HelpCommand
func	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^    func: Option<T>,$/;"	m	struct:BlockingTask
func	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^            func: F,$/;"	m	struct:IdleNotifiedSet::drain::AllEntries
function	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    pub function: CheckFunction,$/;"	m	struct:Check
fut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    fut: Option<BoxFuture<'static, Result<Client>>>,$/;"	m	struct:ClientBuilder
fut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    fut: Option<BoxFuture<'static, Option<Arc<MessageComponentInteraction>>>>,$/;"	m	struct:CollectComponentInteraction
fut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    fut: Option<BoxFuture<'static, Option<Arc<Message>>>>,$/;"	m	struct:CollectReply
fut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    fut: Option<BoxFuture<'static, Option<Arc<ModalSubmitInteraction>>>>,$/;"	m	struct:CollectModalInteraction
fut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fut: Option<BoxFuture<'static, Option<Arc<ReactionAction>>>>,$/;"	m	struct:CollectReaction
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^mod future;$/;"	n
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod future {$/;"	n
future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    future: Option<F>,$/;"	m	struct:TaskLocalFuture
fuzz	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod fuzz;$/;"	n
fuzz_linked_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub fn fuzz_linked_list(ops: &[u8]) {$/;"	f	module:tests
g	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn g() {$/;"	f	module:test
g	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub const fn g(self) -> u8 {$/;"	P	implementation:Colour
gated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^fn gated() -> impl Future<Output = &'static str> {$/;"	f
gated2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^fn gated2(thread: bool) -> impl Future<Output = &'static str> {$/;"	f
gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/mod.rs	/^pub mod gateway;$/;"	n
gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn gateway() -> &'static str {$/;"	P	implementation:Route
gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod gateway;$/;"	n
gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod gateway;$/;"	n
gateway_bot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn gateway_bot() -> &'static str {$/;"	P	implementation:Route
gen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^        fn gen() -> Guild {$/;"	f	module:test::model
gen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    macro_rules! gen {$/;"	M	module:test
gen_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^        fn gen_member() -> Member {$/;"	f	module:test::model
gen_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn gen_ref(&self, idx: usize, page: &Arc<Page<T>>) -> Ref<T> {$/;"	P	implementation:Slots
gen_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^        fn gen_user() -> User {$/;"	f	module:test::model
generate_addr_of_methods	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/addr_of.rs	/^macro_rules! generate_addr_of_methods {$/;"	M
generate_get_permission_names	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^macro_rules! generate_get_permission_names {$/;"	M
generation	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(crate) fn generation(&self) -> usize {$/;"	P	implementation:ScheduledIo
generation	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    generation: usize,$/;"	m	struct:BarrierState
generic_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    generic_read: bool,$/;"	m	struct:ClientOptions
generic_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    generic_write: bool,$/;"	m	struct:ClientOptions
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn get(&self, n: &str) -> Option<Self::Storage>;$/;"	P	interface:ParseMap
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn get(&self, name: &str) -> Option<Self::Storage> {$/;"	P	implementation:CommandMap
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn get(&self, name: &str) -> Option<Self::Storage> {$/;"	P	implementation:GroupMap
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn get(http: impl AsRef<Http>, guild_id: impl Into<GuildId>) -> Result<PartialGuil/;"	P	implementation:Guild
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn get(http: impl AsRef<Http>, guild_id: impl Into<GuildId>) -> Result<PartialGuil/;"	P	implementation:PartialGuild
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub async fn get($/;"	P	implementation:Invite
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    fn get() -> Budget {$/;"	f	module:test
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn get(&self) -> Option<&T> {$/;"	P	implementation:OnceCell
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn get(&'static self) -> T {$/;"	P	implementation:LocalKey
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    pub(crate) fn get(&self, init: impl FnOnce() -> T) -> &T {$/;"	P	implementation:OnceCell
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) fn get(&self) -> Option<Rc<T>> {$/;"	P	implementation:RcCell
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn get(&self, idx: usize) -> &T {$/;"	P	implementation:CachedPage
get	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn get(&mut self, addr: Address) -> Option<&T> {$/;"	P	implementation:Slab
get_active_maintenances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_active_maintenances(&self) -> Result<Vec<Maintenance>> {$/;"	P	implementation:Http
get_active_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn get_active_threads(&self, http: impl AsRef<Http>) -> Result<ThreadsData> {$/;"	P	implementation:GuildId
get_active_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn get_active_threads(&self, http: impl AsRef<Http>) -> Result<ThreadsData> {$/;"	P	implementation:Guild
get_active_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn get_active_threads(&self, http: impl AsRef<Http>) -> Result<ThreadsData> {$/;"	P	implementation:PartialGuild
get_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn get_application_command($/;"	P	implementation:GuildId
get_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn get_application_command($/;"	P	implementation:Guild
get_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn get_application_command($/;"	P	implementation:PartialGuild
get_application_command_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn get_application_command_permissions($/;"	P	implementation:GuildId
get_application_command_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn get_application_command_permissions($/;"	P	implementation:Guild
get_application_command_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn get_application_command_permissions($/;"	P	implementation:PartialGuild
get_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn get_application_commands(&self, http: impl AsRef<Http>) -> Result<Vec<Command>>/;"	P	implementation:GuildId
get_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn get_application_commands(&self, http: impl AsRef<Http>) -> Result<Vec<Command>>/;"	P	implementation:Guild
get_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn get_application_commands(&self, http: impl AsRef<Http>) -> Result<Vec<Command>>/;"	P	implementation:PartialGuild
get_application_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn get_application_commands_permissions($/;"	P	implementation:GuildId
get_application_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn get_application_commands_permissions($/;"	P	implementation:Guild
get_application_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn get_application_commands_permissions($/;"	P	implementation:PartialGuild
get_application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_application_id(&self) -> Option<ApplicationId> {$/;"	P	implementation:ClientBuilder
get_archived_private_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn get_archived_private_threads($/;"	P	implementation:ChannelId
get_archived_public_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn get_archived_public_threads($/;"	P	implementation:ChannelId
get_audit_logs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_audit_logs($/;"	P	implementation:Http
get_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_automod_rule(&self, guild_id: u64, rule_id: u64) -> Result<Rule> {$/;"	P	implementation:Http
get_automod_rules	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_automod_rules(&self, guild_id: u64) -> Result<Vec<Rule>> {$/;"	P	implementation:Http
get_bans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_bans(&self, guild_id: u64) -> Result<Vec<Ban>> {$/;"	P	implementation:Http
get_bot_gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_bot_gateway(&self) -> Result<BotGateway> {$/;"	P	implementation:Http
get_cache_settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_cache_settings(&self) -> Option<&CacheSettings> {$/;"	P	implementation:ClientBuilder
get_cfg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    fn get_cfg(&self) -> driver::Cfg {$/;"	P	implementation:Builder
get_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_channel(&self, channel_id: u64) -> Result<Channel> {$/;"	P	implementation:Http
get_channel_archived_private_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_channel_archived_private_threads($/;"	P	implementation:Http
get_channel_archived_public_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_channel_archived_public_threads($/;"	P	implementation:Http
get_channel_invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_channel_invites(&self, channel_id: u64) -> Result<Vec<RichInvite>> {$/;"	P	implementation:Http
get_channel_joined_archived_private_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_channel_joined_archived_private_threads($/;"	P	implementation:Http
get_channel_thread_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_channel_thread_members(&self, channel_id: u64) -> Result<Vec<ThreadMember>>/;"	P	implementation:Http
get_channel_webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_channel_webhooks(&self, channel_id: u64) -> Result<Vec<Webhook>> {$/;"	P	implementation:Http
get_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_channels(&self, guild_id: u64) -> Result<Vec<GuildChannel>> {$/;"	P	implementation:Http
get_core_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^const fn get_core_offset(header_size: usize, core_align: usize) -> usize {$/;"	f
get_current_application_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_current_application_info(&self) -> Result<CurrentApplicationInfo> {$/;"	P	implementation:Http
get_current_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_current_user(&self) -> Result<CurrentUser> {$/;"	P	implementation:Http
get_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_emoji(&self, guild_id: u64, emoji_id: u64) -> Result<Emoji> {$/;"	P	implementation:Http
get_emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_emojis(&self, guild_id: u64) -> Result<Vec<Emoji>> {$/;"	P	implementation:Http
get_event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_event_handler(&self) -> Option<Arc<dyn EventHandler>> {$/;"	P	implementation:ClientBuilder
get_file_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn get_file_flags(file: &File) -> io::Result<libc::c_int> {$/;"	f
get_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn get_flags(&self) -> u32 {$/;"	P	implementation:ClientOptions
get_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_followup_message($/;"	P	implementation:Http
get_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn get_followup_message<M: Into<MessageId>>($/;"	P	implementation:ApplicationCommandInteraction
get_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn get_followup_message<M: Into<MessageId>>($/;"	P	implementation:MessageComponentInteraction
get_framework	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_framework(&self) -> Option<Arc<dyn Framework + Send + Sync>> {$/;"	P	implementation:ClientBuilder
get_gateway	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_gateway(&self) -> Result<Gateway> {$/;"	P	implementation:Http
get_global_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_global_application_command(&self, command_id: u64) -> Result<Command> {$/;"	P	implementation:Http
get_global_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub async fn get_global_application_command($/;"	P	implementation:Command
get_global_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_global_application_commands(&self) -> Result<Vec<Command>> {$/;"	P	implementation:Http
get_global_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub async fn get_global_application_commands(http: impl AsRef<Http>) -> Result<Vec<Command>>/;"	P	implementation:Command
get_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild(&self, guild_id: u64) -> Result<PartialGuild> {$/;"	P	implementation:Http
get_guild_active_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_active_threads(&self, guild_id: u64) -> Result<ThreadsData> {$/;"	P	implementation:Http
get_guild_application_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_application_command($/;"	P	implementation:Http
get_guild_application_command_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_application_command_permissions($/;"	P	implementation:Http
get_guild_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_application_commands(&self, guild_id: u64) -> Result<Vec<Command>> {$/;"	P	implementation:Http
get_guild_application_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_application_commands_permissions($/;"	P	implementation:Http
get_guild_integrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_integrations(&self, guild_id: u64) -> Result<Vec<Integration>> {$/;"	P	implementation:Http
get_guild_invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_invites(&self, guild_id: u64) -> Result<Vec<RichInvite>> {$/;"	P	implementation:Http
get_guild_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_members($/;"	P	implementation:Http
get_guild_preview	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_preview(&self, guild_id: u64) -> Result<GuildPreview> {$/;"	P	implementation:Http
get_guild_prune_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_prune_count(&self, guild_id: u64, map: &Value) -> Result<GuildPrune> /;"	P	implementation:Http
get_guild_regions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_regions(&self, guild_id: u64) -> Result<Vec<VoiceRegion>> {$/;"	P	implementation:Http
get_guild_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_roles(&self, guild_id: u64) -> Result<Vec<Role>> {$/;"	P	implementation:Http
get_guild_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_sticker(&self, guild_id: u64, sticker_id: u64) -> Result<Sticker> {$/;"	P	implementation:Http
get_guild_stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_stickers(&self, guild_id: u64) -> Result<Vec<Sticker>> {$/;"	P	implementation:Http
get_guild_vanity_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_vanity_url(&self, guild_id: u64) -> Result<String> {$/;"	P	implementation:Http
get_guild_webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_webhooks(&self, guild_id: u64) -> Result<Vec<Webhook>> {$/;"	P	implementation:Http
get_guild_welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_welcome_screen(&self, guild_id: u64) -> Result<GuildWelcomeScreen> {$/;"	P	implementation:Http
get_guild_widget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_widget(&self, guild_id: u64) -> Result<GuildWidget> {$/;"	P	implementation:Http
get_guild_with_counts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guild_with_counts(&self, guild_id: u64) -> Result<PartialGuild> {$/;"	P	implementation:Http
get_guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_guilds($/;"	P	implementation:Http
get_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_id(me: NonNull<Header>) -> Id {$/;"	P	implementation:Header
get_id_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^const fn get_id_offset($/;"	f
get_id_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_id_ptr(me: NonNull<Header>) -> NonNull<Id> {$/;"	P	implementation:Header
get_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_inner(&self) -> &'a Inner {$/;"	P	implementation:AsyncFdReadyGuard
get_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_inner(&self) -> &Inner {$/;"	P	implementation:AsyncFdReadyMutGuard
get_inner_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_inner_mut(&mut self) -> &mut Inner {$/;"	P	implementation:AsyncFdReadyMutGuard
get_intents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_intents(&self) -> GatewayIntents {$/;"	P	implementation:ClientBuilder
get_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub async fn get_interaction_response(&self, http: impl AsRef<Http>) -> Result<Message> {$/;"	P	implementation:ApplicationCommandInteraction
get_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub async fn get_interaction_response(&self, http: impl AsRef<Http>) -> Result<Message> {$/;"	P	implementation:MessageComponentInteraction
get_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub async fn get_interaction_response(&self, http: impl AsRef<Http>) -> Result<Message> {$/;"	P	implementation:ModalSubmitInteraction
get_invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_invite($/;"	P	implementation:Http
get_joined_archived_private_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn get_joined_archived_private_threads($/;"	P	implementation:ChannelId
get_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_member(&self, guild_id: u64, user_id: u64) -> Result<Member> {$/;"	P	implementation:Http
get_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_message(&self, channel_id: u64, message_id: u64) -> Result<Message> {$/;"	P	implementation:Http
get_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn get_message($/;"	P	implementation:Webhook
get_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/mod.rs	/^mod get_messages;$/;"	n
get_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_messages(&self, channel_id: u64, query: &str) -> Result<Vec<Message>> {$/;"	P	implementation:Http
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_mut(&mut self) -> &mut AsyncFd<Inner> {$/;"	P	implementation:AsyncFdReadyMutGuard
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:AsyncFd
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	P	implementation:BufReader
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn get_mut(&mut self) -> &mut RW {$/;"	P	implementation:BufStream
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn get_mut(&mut self) -> &mut W {$/;"	P	implementation:BufWriter
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    pub fn get_mut(&mut self) -> (&mut T, &mut U) {$/;"	f
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	f
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn get_mut(&mut self) -> &mut R {$/;"	P	implementation:Take
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:Mutex
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:Mutex
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn get_mut(&mut self) -> Option<&mut T> {$/;"	P	implementation:OnceCell
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:RwLock
get_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:Timeout
get_new_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn get_new_task(&self) -> Task<S> {$/;"	f
get_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^fn get_next(header: NonNull<task::Header>) -> Option<NonNull<task::Header>> {$/;"	f
get_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn get_next(&self) -> Option<NonNull<T>> {$/;"	P	implementation:Pointers
get_nitro_stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_nitro_stickers(&self) -> Result<Vec<StickerPack>> {$/;"	P	implementation:Http
get_num_notify_waiters_calls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn get_num_notify_waiters_calls(data: usize) -> usize {$/;"	f
get_or_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub async fn get_or_init<F, Fut>(&self, f: F) -> &T$/;"	P	implementation:OnceCell
get_or_try_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub async fn get_or_try_init<E, F, Fut>(&self, f: F) -> Result<&T, E>$/;"	P	implementation:OnceCell
get_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_original_interaction_response($/;"	P	implementation:Http
get_owner_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn get_owner_id(&self) -> u64 {$/;"	P	implementation:Header
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_bsd
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_linux
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_macos
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_netbsd
get_peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub(crate) fn get_peer_cred(sock: &UnixStream) -> io::Result<super::UCred> {$/;"	f	module:impl_solaris
get_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn get_pin(&mut self) -> Pin<&mut (dyn Future<Output = T> + Send)> {$/;"	P	implementation:ReusableBoxFuture
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut R> {$/;"	P	implementation:BufReader
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut RW> {$/;"	P	implementation:BufStream
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut W> {$/;"	P	implementation:BufWriter
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>) {$/;"	f
get_pin_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut R> {$/;"	P	implementation:Take
get_pins	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_pins(&self, channel_id: u64) -> Result<Vec<Message>> {$/;"	P	implementation:Http
get_prev	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn get_prev(&self) -> Option<NonNull<T>> {$/;"	P	implementation:Pointers
get_preview	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn get_preview(&self, http: impl AsRef<Http>) -> Result<GuildPreview> {$/;"	P	implementation:GuildId
get_ptrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^        fn get_ptrs<T>(list: &mut LinkedList<T>, ptrs: &mut Vec<*mut T>) {$/;"	f	method:IdleNotifiedSet::for_each
get_raw_event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_raw_event_handler(&self) -> Option<Arc<dyn RawEventHandler>> {$/;"	P	implementation:ClientBuilder
get_reaction_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_reaction_users($/;"	P	implementation:Http
get_read_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn get_read_buf<'a>(&'a mut self) -> ReadBuf<'a> {$/;"	f
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_ref(&self) -> &'a AsyncFd<Inner> {$/;"	P	implementation:AsyncFdReadyGuard
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_ref(&self) -> &AsyncFd<Inner> {$/;"	P	implementation:AsyncFdReadyMutGuard
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn get_ref(&self) -> &T {$/;"	P	implementation:AsyncFd
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn get_ref(&self) -> &R {$/;"	P	implementation:BufReader
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn get_ref(&self) -> &RW {$/;"	P	implementation:BufStream
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn get_ref(&self) -> &W {$/;"	P	implementation:BufWriter
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    pub fn get_ref(&self) -> (&T, &U) {$/;"	f
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub fn get_ref(&mut self) -> &R {$/;"	f
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn get_ref(&self) -> &R {$/;"	P	implementation:Take
get_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    pub fn get_ref(&self) -> &T {$/;"	P	implementation:Timeout
get_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_scheduled_event($/;"	P	implementation:Http
get_scheduled_event_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_scheduled_event_users($/;"	P	implementation:Http
get_scheduled_events	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_scheduled_events($/;"	P	implementation:Http
get_scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_scheduler<S>(me: NonNull<Header>) -> NonNull<S> {$/;"	P	implementation:Header
get_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_stage_instance(&self, channel_id: u64) -> Result<StageInstance> {$/;"	P	implementation:Http
get_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn get_stage_instance(&self, http: impl AsRef<Http>) -> Result<StageInstance> {$/;"	P	implementation:ChannelId
get_stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn get_stage_instance(&self, http: impl AsRef<Http>) -> Result<StageInstance> {$/;"	P	implementation:GuildChannel
get_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn get_state(data: usize) -> usize {$/;"	f
get_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_sticker(&self, sticker_id: u64) -> Result<Sticker> {$/;"	P	implementation:Http
get_thread_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn get_thread_members(&self, http: impl AsRef<Http>) -> Result<Vec<ThreadMember>> /;"	P	implementation:ChannelId
get_token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_token(&self) -> Option<&str> {$/;"	P	implementation:ClientBuilder
get_tracing_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_tracing_id(me: &NonNull<Header>) -> Option<&tracing::Id> {$/;"	P	implementation:Header
get_trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn get_trailer(me: NonNull<Header>) -> NonNull<Trailer> {$/;"	P	implementation:Header
get_trailer_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^const fn get_trailer_offset($/;"	f
get_type_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_type_map(&self) -> Option<&TypeMap> {$/;"	P	implementation:ClientBuilder
get_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    unsafe fn get_unchecked(&self) -> &T {$/;"	P	implementation:OnceCell
get_unchecked_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    unsafe fn get_unchecked_mut(&mut self) -> &mut T {$/;"	P	implementation:OnceCell
get_unresolved_incidents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_unresolved_incidents(&self) -> Result<Vec<Incident>> {$/;"	P	implementation:Http
get_upcoming_maintenances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_upcoming_maintenances(&self) -> Result<Vec<Maintenance>> {$/;"	P	implementation:Http
get_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_user(&self, user_id: u64) -> Result<User> {$/;"	P	implementation:Http
get_user_connections	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_user_connections(&self) -> Result<Vec<Connection>> {$/;"	P	implementation:Http
get_user_dm_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_user_dm_channels(&self) -> Result<Vec<PrivateChannel>> {$/;"	P	implementation:Http
get_voice_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn get_voice_manager(&self) -> Option<Arc<dyn VoiceGatewayManager + Send + Sync>> {$/;"	P	implementation:ClientBuilder
get_voice_regions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_voice_regions(&self) -> Result<Vec<VoiceRegion>> {$/;"	P	implementation:Http
get_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_webhook(&self, webhook_id: u64) -> Result<Webhook> {$/;"	P	implementation:Http
get_webhook_from_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_webhook_from_url(&self, url: &str) -> Result<Webhook> {$/;"	P	implementation:Http
get_webhook_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_webhook_message($/;"	P	implementation:Http
get_webhook_with_token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn get_webhook_with_token(&self, webhook_id: u64, token: &str) -> Result<Webhook> /;"	P	implementation:Http
get_welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn get_welcome_screen(&self, http: impl AsRef<Http>) -> Result<GuildWelcomeScreen>/;"	P	implementation:GuildId
get_widget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn get_widget(&self, http: impl AsRef<Http>) -> Result<GuildWidget> {$/;"	P	implementation:GuildId
gid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    gid: unix::gid_t,$/;"	m	struct:UCred
gid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub fn gid(&self) -> unix::gid_t {$/;"	P	implementation:UCred
gid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn gid(&mut self, id: u32) -> &mut Command {$/;"	P	implementation:Command
gid_from_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^fn gid_from_channel(c: &Channel) -> RelatedId<GuildId> {$/;"	f
gid_t	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub type gid_t = u32;$/;"	t
give	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub async fn give(&mut self, ctx: &Context, msg: &Message) {$/;"	P	implementation:Bucket
give	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub async fn give(&mut self, ctx: &Context, msg: &Message, id: u64) {$/;"	P	implementation:TicketCounter
global	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    global: Arc<Mutex<()>>,$/;"	m	struct:Ratelimiter
global_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^fn global_init() -> io::Result<()> {$/;"	f
global_queue_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn global_queue_interval(&mut self, val: u32) -> &mut Self {$/;"	P	implementation:Builder
global_queue_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) global_queue_interval: u32,$/;"	m	struct:Builder
global_queue_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) global_queue_interval: u32,$/;"	m	struct:Config
globals	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^pub(crate) fn globals() -> &'static Globals$/;"	f
globals_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^fn globals_init() -> Globals$/;"	f
gone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^fn gone() -> io::Error {$/;"	f
greater_member_hierarchy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn greater_member_hierarchy($/;"	P	implementation:Guild
greater_member_hierarchy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn greater_member_hierarchy($/;"	P	implementation:PartialGuild
group	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn group(mut self, group: &'static CommandGroup) -> Self {$/;"	P	implementation:StandardFramework
group_a	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod group_a {$/;"	n
group_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn group_add(&mut self, group: &'static CommandGroup) {$/;"	P	implementation:StandardFramework
group_b	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod group_b {$/;"	n
group_c	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod group_c {$/;"	n
group_d	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^mod group_d {$/;"	n
group_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub group_name: &'static str,$/;"	m	struct:Command
group_prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub group_prefix: &'static str,$/;"	m	struct:HelpOptions
group_prefixes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub group_prefixes: &'a [&'static str],$/;"	m	struct:Command
group_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn group_remove(&mut self, group: &'static CommandGroup) {$/;"	P	implementation:StandardFramework
grouped_commands_to_plain_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn grouped_commands_to_plain_string($/;"	f
grouped_label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub grouped_label: &'static str,$/;"	m	struct:HelpOptions
groups	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub groups: bool,$/;"	m	struct:WithWhiteSpace
groups	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    groups: Vec<(&'static CommandGroup, Map)>,$/;"	m	struct:StandardFramework
groups	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    groups: HashMap<&'static str, (&'static CommandGroup, Arc<GroupMap>, Arc<CommandMap>)>,$/;"	m	struct:GroupMap
grow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn grow(&self) -> NonNull<Block<T>> {$/;"	P	implementation:Block
guess_mime_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/multipart.rs	/^fn guess_mime_str(part: Part, filename: &str) -> Result<Part> {$/;"	f
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild<G: Into<GuildId>>(&self, id: G) -> Option<Guild> {$/;"	P	implementation:Cache
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild(guild_id: u64) -> String {$/;"	P	implementation:Route
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn guild(&self, cache: impl AsRef<Cache>) -> Option<Guild> {$/;"	P	implementation:GuildChannel
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn guild(&self, cache: impl AsRef<Cache>) -> Option<Guild> {$/;"	P	implementation:Message
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub fn guild(self) -> Option<GuildChannel> {$/;"	P	implementation:Channel
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild: Guild,$/;"	m	struct:GuildCreateEvent
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild: PartialGuild,$/;"	m	struct:GuildUpdateEvent
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild: UnavailableGuild,$/;"	m	struct:GuildDeleteEvent
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub guild: Option<InviteGuild>,$/;"	m	struct:Invite
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub guild: Option<InviteGuild>,$/;"	m	struct:RichInvite
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod guild;$/;"	n
guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^mod guild;$/;"	n
guild_audit_logs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_audit_logs($/;"	P	implementation:Route
guild_automod_rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_automod_rule(guild_id: u64, rule_id: u64) -> String {$/;"	P	implementation:Route
guild_automod_rules	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_automod_rules(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_ban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_ban(guild_id: u64, user_id: u64) -> String {$/;"	P	implementation:Route
guild_ban_addition	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_ban_addition(&self, _ctx: Context, _guild_id: GuildId, _banned_user: User) {}$/;"	P	interface:EventHandler
guild_ban_optioned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_ban_optioned(guild_id: u64, user_id: u64, delete_message_days: u8) -> String {$/;"	P	implementation:Route
guild_ban_removal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_ban_removal(&self, _ctx: Context, _guild_id: GuildId, _unbanned_user: User) {/;"	P	interface:EventHandler
guild_bans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_bans(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_bans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_bans(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_categories	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild_categories($/;"	P	implementation:Cache
guild_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild_channel<C: Into<ChannelId>>(&self, id: C) -> Option<GuildChannel> {$/;"	P	implementation:Cache
guild_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^        fn guild_channel() -> GuildChannel {$/;"	f	module:test::model_utils
guild_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod guild_channel;$/;"	n
guild_channel_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild_channel_count(&self) -> usize {$/;"	P	implementation:Cache
guild_channel_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild_channel_field<Ret, Fun>($/;"	P	implementation:Cache
guild_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild_channels($/;"	P	implementation:Cache
guild_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_channels(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild_count(&self) -> usize {$/;"	P	implementation:Cache
guild_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_create(&self, _ctx: Context, _guild: Guild) {}$/;"	P	interface:EventHandler
guild_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_create(&self, _ctx: Context, _guild: Guild, _is_new: bool) {}$/;"	P	interface:EventHandler
guild_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_delete($/;"	P	interface:EventHandler
guild_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_delete(&self, _ctx: Context, _incomplete: UnavailableGuild) {}$/;"	P	interface:EventHandler
guild_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_emoji(guild_id: u64, emoji_id: u64) -> String {$/;"	P	implementation:Route
guild_emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_emojis(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_emojis_and_stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_emojis_and_stickers(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_emojis_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_emojis_update($/;"	P	interface:EventHandler
guild_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild_field<Ret, Fun>(&self, id: impl Into<GuildId>, field_selector: Fun) -> Option<R/;"	P	implementation:Cache
guild_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn guild_field<Ret, Fun>($/;"	P	implementation:Message
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    guild_id: GuildId,$/;"	m	struct:CreateBotAuthParameters
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    pub fn guild_id<G: Into<GuildId>>(&mut self, guild_id: G) -> &mut Self {$/;"	P	implementation:CreateBotAuthParameters
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    guild_id: Option<u64>,$/;"	m	struct:FilterOptions
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    guild_id: Vec<GuildId>,$/;"	m	struct:FilterOptions
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    guild_id: Option<u64>,$/;"	m	struct:FilterOptions
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    guild_id: Option<u64>,$/;"	m	struct:FilterOptions
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    guild_id: Option<u64>,$/;"	m	struct:FilterOptions
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub guild_id: GuildId,$/;"	m	struct:CommandPermission
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:Command
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:ApplicationCommandInteraction
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:CommandData
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:AutocompleteInteraction
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:MessageComponentInteraction
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:ModalSubmitInteraction
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub guild_id: GuildId,$/;"	m	struct:ChannelCategory
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildChannel
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub guild_id: GuildId,$/;"	m	struct:PartialGuildChannel
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub guild_id: GuildId,$/;"	m	struct:ChannelMention
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:Message
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:MessageReference
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub guild_id: GuildId,$/;"	m	struct:StageInstance
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:Reaction
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    guild_id: GuildId,$/;"	m	struct:GuildScheduledEventUserAddEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    guild_id: GuildId,$/;"	m	struct:GuildScheduledEventUserRemoveEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildBanAddEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildBanRemoveEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildEmojisUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildIntegrationsUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildMemberRemoveEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildMemberUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildMembersChunkEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildRoleDeleteEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildStickersUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:GuildUnavailableEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:IntegrationDeleteEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:ThreadListSyncEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:ThreadMembersUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:WebhookUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:ChannelPinsUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:InviteCreateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:InviteDeleteEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:MessageDeleteBulkEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:MessageDeleteEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:MessageUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:ReactionRemoveAllEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:TypingStartEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:VoiceServerUpdateEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub guild_id: bool,$/;"	m	struct:RelatedIdsForEventType
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:Presence
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub guild_id: GuildId,$/;"	m	struct:ActionExecution
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub guild_id: GuildId,$/;"	m	struct:Rule
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    guild_id: GuildId,$/;"	m	struct:MembersIter
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub guild_id: GuildId,$/;"	m	struct:Integration
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub guild_id: GuildId,$/;"	m	struct:InterimMember
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub guild_id: GuildId,$/;"	m	struct:Member
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:PartialMember
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod guild_id;$/;"	n
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub guild_id: GuildId,$/;"	m	struct:InterimRole
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub guild_id: GuildId,$/;"	m	struct:Role
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub guild_id: GuildId,$/;"	m	struct:ScheduledEvent
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:Sticker
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^            guild_id: GuildId,$/;"	m	struct:roles::deserialize_event::Event
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            guild_id: Option<GuildId>,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:VoiceState
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub guild_id: Option<GuildId>,$/;"	m	struct:Webhook
guild_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn guild_id(&mut self, guild_id: GuildId) -> &mut Self {$/;"	P	implementation:CustomMessage
guild_integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_integration(guild_id: u64, integration_id: u64) -> String {$/;"	P	implementation:Route
guild_integration_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_integration_sync(guild_id: u64, integration_id: u64) -> String {$/;"	P	implementation:Route
guild_integrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_integrations(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_integrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_integrations(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_integrations_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_integrations_update(&self, _ctx: Context, _guild_id: GuildId) {}$/;"	P	interface:EventHandler
guild_invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_invites(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_invites(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_kick_optioned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_kick_optioned(guild_id: u64, user_id: u64) -> String {$/;"	P	implementation:Route
guild_locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub guild_locale: Option<String>,$/;"	m	struct:ApplicationCommandInteraction
guild_locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub guild_locale: Option<String>,$/;"	m	struct:AutocompleteInteraction
guild_locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub guild_locale: Option<String>,$/;"	m	struct:MessageComponentInteraction
guild_locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn guild_locale(&self) -> Option<&str> {$/;"	P	implementation:Interaction
guild_locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub guild_locale: Option<String>,$/;"	m	struct:ModalSubmitInteraction
guild_locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/ping.rs	/^    pub guild_locale: Option<String>,$/;"	m	struct:PingInteraction
guild_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_member(guild_id: u64, user_id: u64) -> String {$/;"	P	implementation:Route
guild_member_addition	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_member_addition(&self, _ctx: Context, _new_member: Member) {}$/;"	P	interface:EventHandler
guild_member_me	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_member_me(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_member_removal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_member_removal($/;"	P	interface:EventHandler
guild_member_removal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_member_removal(&self, _ctx: Context, _guild_id: GuildId, _kicked: User) {}$/;"	P	interface:EventHandler
guild_member_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_member_role(guild_id: u64, user_id: u64, role_id: u64) -> String {$/;"	P	implementation:Route
guild_member_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_member_update($/;"	P	interface:EventHandler
guild_member_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_member_update(&self, _ctx: Context, _new: GuildMemberUpdateEvent) {}$/;"	P	interface:EventHandler
guild_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_members(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_members(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_members_chunk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_members_chunk(&self, _ctx: Context, _chunk: GuildMembersChunkEvent) {}$/;"	P	interface:EventHandler
guild_members_optioned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_members_optioned(guild_id: u64, after: Option<u64>, limit: Option<u64>) -> Stri/;"	P	implementation:Route
guild_members_search	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_members_search(guild_id: u64, query: &str, limit: Option<u64>) -> String {$/;"	P	implementation:Route
guild_message_reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_message_reactions(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_message_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_message_typing(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_nickname(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_only_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub guild_only_text: &'static str,$/;"	m	struct:HelpOptions
guild_presences	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_presences(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_preview	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_preview(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_preview	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod guild_preview;$/;"	n
guild_prune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_prune(guild_id: u64, days: u64) -> String {$/;"	P	implementation:Route
guild_reference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    guild_reference: Option<GuildId>,$/;"	m	struct:ContentSafeOptions
guild_regions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_regions(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_role(guild_id: u64, role_id: u64) -> String {$/;"	P	implementation:Route
guild_role_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_role_create(&self, _ctx: Context, _new: Role) {}$/;"	P	interface:EventHandler
guild_role_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_role_delete($/;"	P	interface:EventHandler
guild_role_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_role_delete(&self, _ctx: Context, _guild_id: GuildId, _removed_role_id: RoleI/;"	P	interface:EventHandler
guild_role_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_role_update($/;"	P	interface:EventHandler
guild_role_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_role_update(&self, _ctx: Context, _new_data: Role) {}$/;"	P	interface:EventHandler
guild_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guild_roles(&self, guild_id: impl Into<GuildId>) -> Option<HashMap<RoleId, Role>> {$/;"	P	implementation:Cache
guild_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_roles(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_scheduled_event($/;"	P	implementation:Route
guild_scheduled_event_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_scheduled_event_create(&self, _ctx: Context, _event: ScheduledEvent) {}$/;"	P	interface:EventHandler
guild_scheduled_event_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_scheduled_event_delete(&self, _ctx: Context, _event: ScheduledEvent) {}$/;"	P	interface:EventHandler
guild_scheduled_event_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_scheduled_event_update(&self, _ctx: Context, _event: ScheduledEvent) {}$/;"	P	interface:EventHandler
guild_scheduled_event_user_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_scheduled_event_user_add($/;"	P	interface:EventHandler
guild_scheduled_event_user_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_scheduled_event_user_remove($/;"	P	interface:EventHandler
guild_scheduled_event_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_scheduled_event_users($/;"	P	implementation:Route
guild_scheduled_events	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_scheduled_events(guild_id: u64, with_user_count: Option<bool>) -> String {$/;"	P	implementation:Route
guild_scheduled_events	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_scheduled_events(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_sticker(guild_id: u64, sticker_id: u64) -> String {$/;"	P	implementation:Route
guild_stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_stickers(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_stickers_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_stickers_update($/;"	P	interface:EventHandler
guild_threads_active	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_threads_active(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_unavailable(&self, _ctx: Context, _guild_id: GuildId) {}$/;"	P	interface:EventHandler
guild_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_update($/;"	P	interface:EventHandler
guild_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn guild_update(&self, _ctx: Context, _new_but_incomplete_data: PartialGuild) {}$/;"	P	interface:EventHandler
guild_vanity_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_vanity_url(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_voice_states	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_voice_states(guild_id: u64, user_id: u64) -> String {$/;"	P	implementation:Route
guild_voice_states	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_voice_states(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_voice_states_me	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_voice_states_me(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_webhooks(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guild_webhooks(self) -> bool {$/;"	P	implementation:GatewayIntents
guild_welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_welcome_screen(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_widget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_widget(guild_id: u64) -> String {$/;"	P	implementation:Route
guild_with_counts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guild_with_counts(guild_id: u64) -> String {$/;"	P	implementation:Route
guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn guilds(&self) -> Vec<GuildId> {$/;"	P	implementation:Cache
guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) guilds: DashMap<GuildId, Guild>,$/;"	m	struct:Cache
guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn guilds() -> &'static str {$/;"	P	implementation:Route
guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn guilds(self) -> bool {$/;"	P	implementation:GatewayIntents
guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub guilds: Vec<UnavailableGuild>,$/;"	m	struct:Ready
guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn guilds(&self, http: impl AsRef<Http>) -> Result<Vec<GuildInfo>> {$/;"	P	implementation:CurrentUser
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^    handle: Handle,$/;"	m	struct:BlockingSchedule
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    handle: RefCell<Option<scheduler::Handle>>,$/;"	m	struct:Context
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    fn handle(&self) -> &Handle {$/;"	P	implementation:Registration
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    handle: Handle,$/;"	m	struct:RuntimeMetrics
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    handle: Handle,$/;"	m	struct:Runtime
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn handle(&self) -> &Handle {$/;"	P	implementation:Runtime
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    handle: Arc<Handle>,$/;"	m	struct:Context
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^mod handle;$/;"	n
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    handle: Arc<Handle>,$/;"	m	struct:Worker
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn handle(&self) -> Handle {$/;"	P	implementation:Driver
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn handle(&self) -> TimerHandle {$/;"	P	implementation:TimerShared
handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod handle;$/;"	n
handle_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^async fn handle_command<'a>($/;"	f
handle_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^async fn handle_event($/;"	f
handle_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub(crate) fn handle_event($/;"	P	implementation:Shard
handle_filters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    fn handle_filters(&mut self, event: &Event) {$/;"	P	implementation:ShardRunner
handle_gateway_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    fn handle_gateway_closed($/;"	P	implementation:Shard
handle_gateway_dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    fn handle_gateway_dispatch(&mut self, seq: u64, event: &Event) -> Option<ShardAction> {$/;"	P	implementation:Shard
handle_group	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^async fn handle_group<'a>($/;"	f
handle_heartbeat_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    fn handle_heartbeat_event(&mut self, s: u64) -> ShardAction {$/;"	P	implementation:Shard
handle_rx_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    async fn handle_rx_value(&mut self, value: InterMessage) -> bool {$/;"	P	implementation:ShardRunner
handle_voice_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    async fn handle_voice_event(&self, event: &Event) {$/;"	P	implementation:ShardRunner
handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^unsafe extern "system" fn handler(ty: u32) -> BOOL {$/;"	f
hangup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn hangup() -> Self {$/;"	P	implementation:SignalKind
hard_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/hard_link.rs	/^pub async fn hard_link(src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()> {$/;"	f
hard_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod hard_link;$/;"	n
harness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod harness;$/;"	n
has	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub async fn has(&self, shard_id: ShardId) -> bool {$/;"	P	implementation:ShardManager
has_all_requirements	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub fn has_all_requirements(cache: impl AsRef<Cache>, cmd: &CommandOptions, msg: &Message) -> bo/;"	f
has_budget_remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) fn has_budget_remaining() -> bool {$/;"	f
has_changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    has_changed: bool,$/;"	m	struct:Ref
has_changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn has_changed(&self) -> Result<bool, error::RecvError> {$/;"	P	implementation:Receiver
has_changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn has_changed(&self) -> bool {$/;"	P	implementation:Ref
has_correct_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^pub(crate) fn has_correct_permissions($/;"	f
has_correct_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^pub(crate) fn has_correct_roles($/;"	f
has_more	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub has_more: bool,$/;"	m	struct:ThreadsData
has_permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub fn has_permission(&self, permission: Permissions) -> bool {$/;"	P	implementation:Role
has_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub fn has_permissions(&self, permissions: Permissions, precise: bool) -> bool {$/;"	P	implementation:Role
has_perms	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    async fn has_perms(&self, cache_http: impl CacheHttp, mut permissions: Permissions) -> bool /;"	P	implementation:Guild
has_perms	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    async fn has_perms(&self, cache_http: impl CacheHttp, mut permissions: Permissions) -> bool /;"	P	implementation:PartialGuild
has_read_access	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn has_read_access(flags: libc::c_int) -> bool {$/;"	f
has_remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    fn has_remaining(self) -> bool {$/;"	P	implementation:Budget
has_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn has_role($/;"	P	implementation:User
has_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn has_tasks(&self) -> bool {$/;"	P	implementation:Local
has_write_access	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn has_write_access(flags: libc::c_int) -> bool {$/;"	f
hash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn hash<H: Hasher>(&self, hasher: &mut H) {$/;"	P	implementation:User
hashmap_to_json_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub fn hashmap_to_json_map<H, T>(map: HashMap<T, Value, H>) -> JsonMap$/;"	f
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            head: UnsignedLong,$/;"	m	struct:Local::push_overflow::BatchTaskIter
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    head: AtomicUnsignedLong,$/;"	m	struct:Inner
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    head: Option<NonNull<task::Header>>,$/;"	m	struct:Pointers
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    head: NonNull<Block<T>>,$/;"	m	struct:Rx
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    head: Option<NonNull<T>>,$/;"	m	struct:LinkedList
head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    head: usize,$/;"	m	struct:Slots
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) header: Header,$/;"	m	struct:Cell
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn header(&self) -> &Header {$/;"	f
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn header(&self) -> &Header {$/;"	P	implementation:Notified
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn header(&self) -> &Header {$/;"	P	implementation:Task
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn header(&self) -> &Header {$/;"	P	implementation:RawTask
header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    header: BlockHeader<T>,$/;"	m	struct:Block
header_lte_cache_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^fn header_lte_cache_line() {$/;"	f
header_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn header_ptr(&self) -> NonNull<Header> {$/;"	f
header_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn header_ptr(&self) -> NonNull<Header> {$/;"	P	implementation:Task
header_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn header_ptr(&self) -> NonNull<Header> {$/;"	P	implementation:RawTask
headers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    fn headers() -> HeaderMap {$/;"	f	module:tests
headers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    headers: Option<Headers>,$/;"	m	struct:RequestBuilder
headers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn headers(&mut self, headers: Option<Headers>) -> &mut Self {$/;"	P	implementation:RequestBuilder
headers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub(super) headers: Option<Headers>,$/;"	m	struct:Request
headers_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn headers_mut(&mut self) -> &mut Option<Headers> {$/;"	P	implementation:Request
headers_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn headers_ref(&self) -> &Option<Headers> {$/;"	P	implementation:Request
heartbeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn heartbeat(&mut self) -> Result<()> {$/;"	P	implementation:Shard
heartbeat_instants	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    heartbeat_instants: (Option<Instant>, Option<Instant>),$/;"	m	struct:Shard
heartbeat_instants	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn heartbeat_instants(&self) -> &(Option<Instant>, Option<Instant>) {$/;"	P	implementation:Shard
heartbeat_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    heartbeat_interval: Option<u64>,$/;"	m	struct:Shard
heartbeat_interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn heartbeat_interval(&self) -> Option<&u64> {$/;"	P	implementation:Shard
height	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub height: Option<u64>,$/;"	m	struct:Attachment
height	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub height: Option<u64>,$/;"	m	struct:EmbedImage
height	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub height: Option<u64>,$/;"	m	struct:EmbedThumbnail
height	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub height: Option<u64>,$/;"	m	struct:EmbedVideo
help	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    help: Option<&'static HelpCommand>,$/;"	m	struct:StandardFramework
help	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn help(mut self, h: &'static HelpCommand) -> Self {$/;"	P	implementation:StandardFramework
help_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn help_available(&self) -> bool {$/;"	P	implementation:CommandOptions
help_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn help_available(&self) -> bool {$/;"	P	implementation:GroupOptions
help_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn help_available(&self) -> bool;$/;"	P	interface:CommonOptions
help_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub help_available: bool,$/;"	m	struct:CommandOptions
help_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub help_available: bool,$/;"	m	struct:GroupOptions
help_behaviour_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn help_behaviour_eq() {$/;"	f	module:levenshtein_tests
help_behaviour_hide	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn help_behaviour_hide() {$/;"	f	module:levenshtein_tests
help_behaviour_nothing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn help_behaviour_nothing() {$/;"	f	module:levenshtein_tests
help_behaviour_strike	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    fn help_behaviour_strike() {$/;"	f	module:levenshtein_tests
help_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^pub mod help_commands;$/;"	n
hex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub fn hex(self) -> String {$/;"	P	implementation:Colour
highest_role_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn highest_role_info(&self, cache: impl AsRef<Cache>) -> Option<(RoleId, i64)> {$/;"	P	implementation:Member
hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod hint {$/;"	n
hit_zero	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    hit_zero: bool,$/;"	m	struct:BudgetDecrement
hoist	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub fn hoist(&mut self, hoist: bool) -> &mut Self {$/;"	P	implementation:EditRole
hoist	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub hoist: bool,$/;"	m	struct:InterimRole
hoist	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub hoist: bool,$/;"	m	struct:Role
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub http: Arc<Http>,$/;"	m	struct:Context
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    http: Option<Http>,$/;"	m	struct:ClientBuilder
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    http: Option<Arc<Http>>,$/;"	m	struct:Shard
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn http(&self) -> &Http {$/;"	P	implementation:CacheAndHttp
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn http(&self) -> &Http {$/;"	P	implementation:Context
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn http(&self) -> &Http {$/;"	P	implementation:Http
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn http(&self) -> &Http {$/;"	f
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    fn http(&self) -> &Http;$/;"	P	interface:CacheHttp
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^    pub http: Arc<Http>,$/;"	m	struct:CacheAndHttp
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod http;$/;"	n
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    http: H,$/;"	m	struct:MessagesIter
http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    http: H,$/;"	m	struct:MembersIter
hup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn hup() -> Ready {$/;"	f	module:sys
i	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            i: UnsignedLong,$/;"	m	struct:Local::push_overflow::BatchTaskIter
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn icon(&mut self, icon: Option<&str>) -> &mut Self {$/;"	P	implementation:EditGuild
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub async fn icon<'a>($/;"	P	implementation:EditRole
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub icon: Option<String>,$/;"	m	struct:CurrentApplicationInfo
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub icon: Option<String>,$/;"	m	struct:Team
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub icon: Option<String>,$/;"	m	struct:MessageApplication
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub icon: Option<String>,$/;"	m	struct:GuildPreview
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub icon: Option<String>,$/;"	m	struct:IntegrationApplication
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub icon: Option<String>,$/;"	m	struct:Guild
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub icon: Option<String>,$/;"	m	struct:GuildInfo
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub icon: Option<String>,$/;"	m	struct:PartialGuild
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub icon: Option<String>,$/;"	m	struct:Role
icon	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub icon: Option<String>,$/;"	m	struct:InviteGuild
icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn icon_url<S: ToString>(&mut self, icon_url: S) -> &mut Self {$/;"	P	implementation:CreateEmbedAuthor
icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn icon_url<S: ToString>(&mut self, icon_url: S) -> &mut Self {$/;"	P	implementation:CreateEmbedFooter
icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub icon_url: Option<String>,$/;"	m	struct:EmbedAuthor
icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub icon_url: Option<String>,$/;"	m	struct:EmbedFooter
icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn icon_url(&self) -> Option<String> {$/;"	P	implementation:Guild
icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn icon_url(&self) -> Option<String> {$/;"	P	implementation:GuildInfo
icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn icon_url(&self) -> Option<String> {$/;"	P	implementation:PartialGuild
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn id(&mut self, application_command_id: u64) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandPermissions
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn id(&mut self, id: u64) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandPermissionData
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^    pub fn id(&mut self, id: u64) -> &mut Self {$/;"	P	implementation:CreateGuildWelcomeChannel
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub id: ApplicationId,$/;"	m	struct:CurrentApplicationInfo
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub id: ApplicationId,$/;"	m	struct:PartialCurrentApplicationInfo
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub id: u64,$/;"	m	struct:Team
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub id: CommandId,$/;"	m	struct:Command
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub id: CommandId,$/;"	m	struct:CommandPermission
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub id: CommandPermissionId,$/;"	m	struct:CommandPermissionData
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub id: CommandId,$/;"	m	struct:CommandData
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub id: InteractionId,$/;"	m	struct:ApplicationCommandInteraction
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub id: InteractionId,$/;"	m	struct:AutocompleteInteraction
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub id: InteractionId,$/;"	m	struct:MessageComponentInteraction
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn id(&self) -> InteractionId {$/;"	P	implementation:Interaction
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub id: InteractionId,$/;"	m	struct:MessageInteraction
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub id: InteractionId,$/;"	m	struct:ModalSubmitInteraction
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/ping.rs	/^    pub id: InteractionId,$/;"	m	struct:PingInteraction
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub id: AttachmentId,$/;"	m	struct:Attachment
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub id: ChannelId,$/;"	m	struct:ChannelCategory
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub id: ChannelId,$/;"	m	struct:GuildChannel
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub id: ChannelId,$/;"	m	struct:PartialGuildChannel
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub id: ApplicationId,$/;"	m	struct:MessageApplication
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub id: ChannelId,$/;"	m	struct:ChannelMention
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub id: MessageId,$/;"	m	struct:Message
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    id: u64,$/;"	m	struct:PermissionOverwriteData
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub fn id(&self) -> ChannelId {$/;"	P	implementation:Channel
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub id: StageInstanceId,$/;"	m	struct:StageInstance
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/partial_channel.rs	/^    pub id: ChannelId,$/;"	m	struct:PartialChannel
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub id: ChannelId,$/;"	m	struct:PrivateChannel
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    pub id: StickerId,$/;"	m	struct:Sticker
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub id: String,$/;"	m	struct:Connection
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub id: ChannelId,$/;"	m	struct:ThreadMembersUpdateEvent
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub id: IntegrationId,$/;"	m	struct:IntegrationDeleteEvent
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub id: MessageId,$/;"	m	struct:MessageUpdateEvent
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub id: Option<EmojiId>,$/;"	m	struct:ActivityEmoji
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub id: Option<String>,$/;"	m	struct:ActivityParty
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub id: UserId,$/;"	m	struct:PresenceUser
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub id: AuditLogEntryId,$/;"	m	struct:AuditLogEntry
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub id: Option<GenericId>,$/;"	m	struct:Options
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    pub id: RoleId,$/;"	m	struct:AffectedRole
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub id: RuleId,$/;"	m	struct:Rule
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub id: EmojiId,$/;"	m	struct:Emoji
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub id: GuildId,$/;"	m	struct:GuildPreview
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub id: ApplicationId,$/;"	m	struct:IntegrationApplication
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub id: IntegrationId,$/;"	m	struct:Integration
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub id: String,$/;"	m	struct:IntegrationAccount
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub id: Option<ChannelId>,$/;"	m	struct:ThreadMember
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub id: GuildId,$/;"	m	struct:Guild
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub id: GuildId,$/;"	m	struct:GuildInfo
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub id: GuildId,$/;"	m	struct:UnavailableGuild
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub id: GuildId,$/;"	m	struct:PartialGuild
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub id: RoleId,$/;"	m	struct:InterimRole
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub id: RoleId,$/;"	m	struct:Role
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub id: ScheduledEventId,$/;"	m	struct:ScheduledEvent
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^            id: Option<GuildId>,$/;"	m	struct:tests::test_id_serde::Opt
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^            id: u64,$/;"	m	struct:tests::test_id_serde::S
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub id: ChannelId,$/;"	m	struct:InviteChannel
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub id: GuildId,$/;"	m	struct:InviteGuild
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub id: EmojiId,$/;"	m	struct:EmojiIdentifier
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub id: String,$/;"	m	struct:Incident
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub id: String,$/;"	m	struct:IncidentUpdate
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub id: String,$/;"	m	struct:Maintenance
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod id;$/;"	n
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub id: StickerId,$/;"	m	struct:Sticker
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_item.rs	/^    pub id: StickerId,$/;"	m	struct:StickerItem
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub id: StickerPackId,$/;"	m	struct:StickerPack
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub id: UserId,$/;"	m	struct:CurrentUser
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub id: UserId,$/;"	m	struct:User
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub id: String,$/;"	m	struct:VoiceRegion
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub id: WebhookId,$/;"	m	struct:Webhook
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn id(&mut self, id: MessageId) -> &mut Self {$/;"	P	implementation:CustomMessage
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/trace.rs	/^    fn id(&self) -> Option<tracing::Id> {$/;"	P	implementation:Instrumented
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/trace.rs	/^    fn id(&self) -> Option<tracing::Id>;$/;"	P	interface:InstrumentedFuture
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn id(&self) -> Option<u32> {$/;"	P	implementation:Child
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn id(&self) -> u32 {$/;"	P	implementation:StdChild
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    pub(crate) fn id(&self) -> u32 {$/;"	P	implementation:Child
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn id(&self) -> u32 {$/;"	P	implementation:test::MockWait
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn id(&self) -> u32 {$/;"	P	implementation:T
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn id(&self) -> u32;$/;"	P	interface:Wait
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn id(&self) -> u32 {$/;"	P	implementation:test::MockWait
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    pub(crate) fn id(&self) -> u32 {$/;"	P	implementation:Child
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    pub fn id(&self) -> super::Id {$/;"	P	implementation:AbortHandle
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn id(&self) -> Id {$/;"	P	implementation:JoinError
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^pub fn id() -> Id {$/;"	f
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub fn id(&self) -> super::Id {$/;"	P	implementation:JoinHandle
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    id: u64,$/;"	m	struct:LocalOwnedTasks
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    id: u64,$/;"	m	struct:OwnedTasks
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod id;$/;"	n
id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^        id: AtomicUsize,$/;"	m	struct:test::Foo
id	/home/trey/code/sqlx-crud/examples/serenity/src/main.rs	/^    id: i64,$/;"	m	struct:User
id	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn id(&self) -> Self::Id;$/;"	P	interface:Schema
id_column	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub id_column: &'s str,$/;"	m	struct:Metadata
id_column	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn id_column() -> &'static str;$/;"	P	interface:Schema
id_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) id_offset: usize,$/;"	m	struct:Vtable
id_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^macro_rules! id_u64 {$/;"	M
identify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn identify(&mut self) -> Result<()> {$/;"	P	implementation:Shard
idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn idle(&self) {$/;"	P	implementation:Context
idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^mod idle;$/;"	n
idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    idle: Idle,$/;"	m	struct:Shared
idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    idle: LinkedList<T>,$/;"	m	struct:ListsInner
ids	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub ids: Vec<MessageId>,$/;"	m	struct:MessageDeleteBulkEvent
if_loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/loom.rs	/^macro_rules! if_loom {$/;"	M
ignore_bots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn ignore_bots(&mut self, ignore_bots: bool) -> &mut Self {$/;"	P	implementation:Configuration
ignore_bots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub ignore_bots: bool,$/;"	m	struct:Configuration
ignore_webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn ignore_webhooks(&mut self, ignore_webhooks: bool) -> &mut Self {$/;"	P	implementation:Configuration
ignore_webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub ignore_webhooks: bool,$/;"	m	struct:Configuration
image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn image<S: ToString>(&mut self, url: S) -> &mut Self {$/;"	P	implementation:CreateEmbed
image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    pub async fn image<'a>($/;"	P	implementation:CreateScheduledEvent
image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub async fn image<'a>($/;"	P	implementation:EditScheduledEvent
image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub image: Option<EmbedImage>,$/;"	m	struct:Embed
image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub image: Option<String>,$/;"	m	struct:ScheduledEvent
image_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub fn image_url(&self) -> Option<String> {$/;"	P	implementation:Sticker
image_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_item.rs	/^    pub fn image_url(&self) -> Option<String> {$/;"	P	implementation:StickerItem
imp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^mod imp;$/;"	n
imp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^mod imp;$/;"	n
impact	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub impact: String,$/;"	m	struct:Incident
impl_bsd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_bsd {$/;"	n
impl_component_interaction_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^macro_rules! impl_component_interaction_collector {$/;"	M
impl_from_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^macro_rules! impl_from_str {$/;"	M
impl_linux	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_linux {$/;"	n
impl_macos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_macos {$/;"	n
impl_message_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^macro_rules! impl_message_collector {$/;"	M
impl_modal_interaction_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^macro_rules! impl_modal_interaction_collector {$/;"	M
impl_netbsd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_netbsd {$/;"	n
impl_reaction_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^macro_rules! impl_reaction_collector {$/;"	M
impl_solaris	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^pub(crate) mod impl_solaris {$/;"	n
in_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    in_buffer_size: u32,$/;"	m	struct:ServerOptions
in_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn in_buffer_size(&mut self, buffer: u32) -> &mut Self {$/;"	P	implementation:ServerOptions
in_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub in_buffer_size: u32,$/;"	m	struct:PipeInfo
inc_budget_forced_yield_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(crate) fn inc_budget_forced_yield_count(&self) {$/;"	P	implementation:SchedulerMetrics
inc_local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn inc_local_schedule_count(&mut self) {$/;"	P	implementation:MetricsBatch
inc_local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn inc_local_schedule_count(&mut self) {}$/;"	P	implementation:MetricsBatch
inc_num_idle_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn inc_num_idle_threads(&self) {$/;"	P	implementation:SpawnerMetrics
inc_num_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    fn inc_num_messages(&self) -> bool {$/;"	P	implementation:UnboundedSender
inc_num_notify_waiters_calls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn inc_num_notify_waiters_calls(data: usize) -> usize {$/;"	f
inc_num_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn inc_num_searching(cell: &AtomicUsize, ordering: Ordering) {$/;"	P	implementation:State
inc_num_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn inc_num_threads(&self) {$/;"	P	implementation:SpawnerMetrics
inc_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn inc_queue_depth(&self) {$/;"	P	implementation:SpawnerMetrics
inc_ref_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn inc_ref_count<T: Wake>(data: *const ()) {$/;"	f
inc_remote_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn inc_remote_schedule_count(&self) {}$/;"	P	implementation:SchedulerMetrics
inc_remote_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(crate) fn inc_remote_schedule_count(&self) {$/;"	P	implementation:SchedulerMetrics
incident_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub incident_id: String,$/;"	m	struct:IncidentUpdate
incident_updates	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub incident_updates: Vec<IncidentUpdate>,$/;"	m	struct:Incident
incidents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^            incidents: Vec<Incident>,$/;"	m	struct:Http::get_unresolved_incidents::StatusResponse
incomplete_flush_followed_by_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn incomplete_flush_followed_by_write() {$/;"	f
incomplete_partial_read_followed_by_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn incomplete_partial_read_followed_by_write() {$/;"	f
incomplete_read_followed_by_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn incomplete_read_followed_by_flush() {$/;"	f
incomplete_read_followed_by_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn incomplete_read_followed_by_write() {$/;"	f
incr_fd_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(crate) fn incr_fd_count(&self) {$/;"	P	implementation:IoDriverMetrics
incr_poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn incr_poll_count(&mut self) {$/;"	P	implementation:MetricsBatch
incr_poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn incr_poll_count(&mut self) {}$/;"	P	implementation:MetricsBatch
incr_ready_count_by	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(crate) fn incr_ready_count_by(&self, amt: u64) {$/;"	P	implementation:IoDriverMetrics
increment_version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn increment_version(&self) {$/;"	P	implementation:state::AtomicState
indention_prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub indention_prefix: &'static str,$/;"	m	struct:HelpOptions
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    index: usize,$/;"	m	struct:Worker
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    fn index(&self, index: usize) -> &Self::Output {$/;"	P	implementation:Values
index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    index: usize,$/;"	m	struct:Rx
index_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn index_for(&self, slot: *const Value<T>) -> usize {$/;"	P	implementation:Slots
individual_command_tip	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub individual_command_tip: &'static str,$/;"	m	struct:HelpOptions
info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn info(&self) -> io::Result<PipeInfo> {$/;"	P	implementation:NamedPipeClient
info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn info(&self) -> io::Result<PipeInfo> {$/;"	P	implementation:NamedPipeServer
info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn info() -> Self {$/;"	P	implementation:SignalKind
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn init() {$/;"	f	module:test
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    init: u64,$/;"	m	struct:StaticAtomicU64
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn init() -> Self;$/;"	P	interface:Init
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn init() -> Self {$/;"	P	implementation:OsExtraData
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn init() -> Self {$/;"	P	implementation:OsStorage
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    init: Once,$/;"	m	struct:SignalInfo
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn init() -> Self {$/;"	P	implementation:OsExtraData
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn init() -> Self {$/;"	P	implementation:OsStorage
init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    init: usize,$/;"	m	struct:CachedPage
initial	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    const fn initial() -> Budget {$/;"	P	implementation:Budget
initial	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn initial() -> Self {$/;"	P	implementation:state::Version
initialise	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/voice/mod.rs	/^    async fn initialise(&self, shard_count: u64, user_id: UserId);$/;"	P	interface:VoiceGatewayManager
initialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub fn initialize(&mut self) -> Result<()> {$/;"	P	implementation:ShardManager
initialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn initialize(&mut self) -> Result<WsStream> {$/;"	P	implementation:Shard
initialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    unsafe fn initialize(_value: NonNull<Values<T>>) {$/;"	P	implementation:Values
initialize_unfilled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn initialize_unfilled(&mut self) -> &mut [u8] {$/;"	P	implementation:ReadBuf
initialize_unfilled_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn initialize_unfilled_to(&mut self, n: usize) -> &mut [u8] {$/;"	P	implementation:ReadBuf
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub initialized: bool,$/;"	m	struct:StandardFramework
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    initialized: usize,$/;"	m	struct:ReadBuf
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn initialized(&self) -> &[u8] {$/;"	P	implementation:ReadBuf
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    initialized: usize,$/;"	m	struct:ReadBufParts
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    initialized: AtomicBool,$/;"	m	struct:SignalInfo
initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn initialized(&self) -> bool {$/;"	P	implementation:OnceCell
initialized_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn initialized_mut(&mut self) -> &mut [u8] {$/;"	P	implementation:ReadBuf
initialized_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn initialized_mut(&mut self) -> bool {$/;"	P	implementation:OnceCell
inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn inject(&self) -> &Inject<Arc<Handle>> {$/;"	P	implementation:Worker
inject	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    inject: Inject<Arc<Handle>>,$/;"	m	struct:Shared
injection_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn injection_queue_depth(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
inline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub inline: bool,$/;"	m	struct:EmbedField
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub inner: String,$/;"	m	struct:Content
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    inner: Mutex<Inner>,$/;"	m	struct:File
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    inner: Option<T>,$/;"	m	struct:AsyncFd
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    inner: Option<T>,$/;"	m	struct:Blocking
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    inner: &'a Inner<T>,$/;"	m	struct:Guard
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    inner: W,$/;"	m	struct:SplitByUtf8BoundaryIfWindows
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    inner: UnsafeCell<std::sync::atomic::AtomicU16>,$/;"	m	struct:AtomicU16
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    inner: UnsafeCell<std::sync::atomic::AtomicU32>,$/;"	m	struct:AtomicU32
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    inner: Mutex<u64>,$/;"	m	struct:AtomicU64
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    fn inner(&self) -> &Mutex<u64> {$/;"	P	implementation:StaticAtomicU64
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    inner: UnsafeCell<std::sync::atomic::AtomicUsize>,$/;"	m	struct:AtomicUsize
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^    pub(crate) inner: &'static LocalKey<Cell<*const ()>>,$/;"	m	struct:ScopedKey
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    inner: Arc<TcpStream>,$/;"	m	struct:OwnedReadHalf
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    inner: Arc<TcpStream>,$/;"	m	struct:OwnedWriteHalf
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    inner: Arc<UnixStream>,$/;"	m	struct:OwnedReadHalf
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    inner: Arc<UnixStream>,$/;"	m	struct:OwnedWriteHalf
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    inner: T,$/;"	m	struct:ChildDropGuard
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    inner: imp::ChildStdio,$/;"	m	struct:ChildStderr
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    inner: imp::ChildStdio,$/;"	m	struct:ChildStdin
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    inner: imp::ChildStdio,$/;"	m	struct:ChildStdout
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    inner: PollEvented<Pipe>,$/;"	m	struct:ChildStdio
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    inner: Reaper<StdChild, GlobalOrphanQueue, Signal>,$/;"	m	struct:Child
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn inner(&self) -> &W {$/;"	f
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    inner: Option<W>,$/;"	m	struct:Reaper
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    inner: Arc<Inner>,$/;"	m	struct:Spawner
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    inner: TimeDriver,$/;"	m	struct:Driver
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub(crate) inner: scheduler::Handle,$/;"	m	struct:Handle
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    inner: Arc<Inner>,$/;"	m	struct:ParkThread
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    inner: Arc<Inner>,$/;"	m	struct:UnparkThread
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    inner: Arc<Inner>,$/;"	m	struct:Parker
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    inner: Arc<Inner>,$/;"	m	struct:Unparker
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    inner: Arc<Inner<T>>,$/;"	m	struct:Local
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    inner: Arc<()>,$/;"	m	struct:Driver
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    inner: Weak<()>,$/;"	m	struct:Handle
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    inner: Mutex<OwnedTasksInner<S>>,$/;"	m	struct:OwnedTasks
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    inner: UnsafeCell<OwnedTasksInner<S>>,$/;"	m	struct:LocalOwnedTasks
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    inner: Arc<Inner<T>>,$/;"	m	struct:Receiver
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    inner: Arc<Inner<T>>,$/;"	m	struct:Sender
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        inner: MaybeUninit<T>,$/;"	m	struct:atomic_take::AtomicTake
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        inner: F,$/;"	m	struct:test_combination::FutWrapper
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn inner(&self) -> &TimerShared {$/;"	P	implementation:TimerEntry
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    inner: NonNull<TimerShared>,$/;"	m	struct:TimerHandle
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    inner: StdUnsafeCell<TimerShared>,$/;"	m	struct:TimerEntry
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(super) inner: super::Inner,$/;"	m	struct:Handle
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^    inner: ReusableBoxFuture<Receiver<()>>,$/;"	m	struct:RxFuture
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    inner: RxFuture,$/;"	m	struct:Signal
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlBreak
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlC
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlClose
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlLogoff
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    inner: RxFuture,$/;"	m	struct:CtrlShutdown
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    inner: Arc<Chan<T, S>>,$/;"	m	struct:Rx
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    inner: Arc<Chan<T, S>>,$/;"	m	struct:Tx
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    inner: Option<Arc<Inner<T>>>,$/;"	m	struct:Receiver
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    inner: Option<Arc<Inner<T>>>,$/;"	m	struct:Sender
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        inner: [Notify; 8],$/;"	m	struct:big_notify::BigNotify
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    inner: RwLockReadGuard<'a, T>,$/;"	m	struct:Ref
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    inner: IdleNotifiedSet<JoinHandle<T>>,$/;"	m	struct:JoinSet
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub inner: thread::LocalKey<RefCell<Option<T>>>,$/;"	m	struct:LocalKey
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    inner: UnsafeCell<PointersInner<T>>,$/;"	m	struct:Pointers
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    inner: UnsafeCell<Option<Rc<T>>>,$/;"	m	struct:RcCell
inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    inner: [MaybeUninit<Waker>; NUM_WAKERS],$/;"	m	struct:WakeList
inner_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub unsafe fn inner_mut(&mut self) -> &mut [MaybeUninit<u8>] {$/;"	P	implementation:ReadBuf
inner_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    pub(crate) fn inner_mut(&mut self) -> &mut W {$/;"	f
insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) unsafe fn insert($/;"	P	implementation:Wheel
insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn insert(&mut self, jh: JoinHandle<T>) -> AbortHandle {$/;"	P	implementation:JoinSet
insert_args	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn insert_args(self) -> <E::Database as HasArguments<'e>>::Arguments;$/;"	P	interface:Crud
insert_drop_reverse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn insert_drop_reverse() {$/;"	f	module:test
insert_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn insert_idle(&mut self, value: T) -> EntryInOneOfTheLists<'_, T> {$/;"	P	implementation:IdleNotifiedSet
insert_many	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn insert_many() {$/;"	f	module:test
insert_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn insert_remove() {$/;"	f	module:test
insert_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub insert_sql: &'s str,$/;"	m	struct:Metadata
insert_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn insert_sql() -> &'static str;$/;"	P	interface:Schema
instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub instance: Option<bool>,$/;"	m	struct:Activity
instant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod instant;$/;"	n
instant_to_tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn instant_to_tick(&self, t: Instant) -> u64 {$/;"	P	implementation:TimeSource
integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub integration: Integration,$/;"	m	struct:IntegrationCreateEvent
integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub integration: Integration,$/;"	m	struct:IntegrationUpdateEvent
integration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod integration;$/;"	n
integration_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn integration_create(&self, _ctx: Context, _integration: Integration) {}$/;"	P	interface:EventHandler
integration_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn integration_delete($/;"	P	interface:EventHandler
integration_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub integration_id: Option<IntegrationId>,$/;"	m	struct:RoleTags
integration_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn integration_update(&self, _ctx: Context, _integration: Integration) {}$/;"	P	interface:EventHandler
integrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub integrations: Vec<Integration>,$/;"	m	struct:Connection
integrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn integrations(self, http: impl AsRef<Http>) -> Result<Vec<Integration>> {$/;"	P	implementation:GuildId
integrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn integrations(&self, http: impl AsRef<Http>) -> Result<Vec<Integration>> {$/;"	P	implementation:Guild
integrations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn integrations(&self, http: impl AsRef<Http>) -> Result<Vec<Integration>> {$/;"	P	implementation:PartialGuild
intents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub intents: GatewayIntents,$/;"	m	struct:ShardManagerOptions
intents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub intents: GatewayIntents,$/;"	m	struct:ShardQueuer
intents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    intents: GatewayIntents,$/;"	m	struct:ClientBuilder
intents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn intents(mut self, intents: GatewayIntents) -> Self {$/;"	P	implementation:ClientBuilder
intents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub intents: GatewayIntents,$/;"	m	struct:Shard
interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub mod interaction;$/;"	n
interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub interaction: Option<MessageInteraction>,$/;"	m	struct:Message
interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub interaction: Interaction,$/;"	m	struct:InteractionCreateEvent
interaction_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn interaction_create(&self, _ctx: Context, _interaction: Interaction) {}$/;"	P	interface:EventHandler
interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn interaction_response<D: Display>(application_id: u64, token: D) -> String {$/;"	P	implementation:Route
interaction_response_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn interaction_response_data<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateInteractionResponse
interactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod interactions;$/;"	n
internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^mod internal;$/;"	n
internal_interval_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^fn internal_interval_at($/;"	f
interrupt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn interrupt() -> Self {$/;"	P	implementation:SignalKind
interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^pub fn interval(period: Duration) -> Interval {$/;"	f
interval	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod interval;$/;"	n
interval_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^pub fn interval_at(start: Instant, period: Duration) -> Interval {$/;"	f
into_c_int	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn into_c_int() {$/;"	f	module:tests
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn into_inner(mut self) -> T {$/;"	P	implementation:AsyncFd
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn into_inner(self) -> E {$/;"	P	implementation:Aio
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn into_inner(mut self) -> io::Result<E> {$/;"	P	implementation:PollEvented
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:BufReader
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn into_inner(self) -> RW {$/;"	P	implementation:BufStream
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn into_inner(self) -> W {$/;"	P	implementation:BufWriter
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    pub fn into_inner(self) -> (T, U) {$/;"	f
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub fn into_inner(self) -> R {$/;"	f
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:Take
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn into_inner(self) -> T {$/;"	P	implementation:Track
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn into_inner(self) -> T$/;"	P	implementation:Mutex
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn into_inner(mut self) -> Option<T> {$/;"	P	implementation:OnceCell
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn into_inner(self) -> T$/;"	P	implementation:RwLock
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Timeout
into_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^    pub(crate) fn into_inner(self) -> T {$/;"	P	implementation:SyncWrapper
into_mapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn into_mapped(this: Self) -> OwnedRwLockMappedWriteGuard<T> {$/;"	P	implementation:OwnedRwLockWriteGuard
into_mapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn into_mapped(this: Self) -> RwLockMappedWriteGuard<'a, T> {$/;"	P	implementation:RwLockWriteGuard
into_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(super) fn into_notified(self) -> Notified<S> {$/;"	P	implementation:UnownedTask
into_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn into_panic(self) -> Box<dyn Any + Send + 'static> {$/;"	P	implementation:JoinError
into_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn into_raw(this: Arc<Inner>) -> *const () {$/;"	P	implementation:Inner
into_raw_fd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn into_raw_fd(self) -> RawFd {$/;"	P	implementation:TcpSocket
into_raw_socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^            fn into_raw_socket(self) -> RawSocket;$/;"	P	interface:windows::io::IntoRawSocket
into_read_buf_parts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^pub(crate) fn into_read_buf_parts(rb: ReadBuf<'_>) -> ReadBufParts {$/;"	f
into_split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn into_split(self) -> (OwnedReadHalf, OwnedWriteHalf) {$/;"	P	implementation:TcpStream
into_split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn into_split(self) -> (OwnedReadHalf, OwnedWriteHalf) {$/;"	P	implementation:UnixStream
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn into_std(mut self) -> StdFile {$/;"	P	implementation:File
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn into_std(self) -> io::Result<std::net::TcpListener> {$/;"	P	implementation:TcpListener
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn into_std(self) -> io::Result<std::net::TcpStream> {$/;"	P	implementation:TcpStream
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn into_std(self) -> io::Result<std::net::UdpSocket> {$/;"	P	implementation:UdpSocket
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn into_std(self) -> io::Result<std::os::unix::net::UnixDatagram> {$/;"	P	implementation:UnixDatagram
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn into_std(self) -> io::Result<std::os::unix::net::UnixListener> {$/;"	P	implementation:UnixListener
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn into_std(self) -> io::Result<std::os::unix::net::UnixStream> {$/;"	P	implementation:UnixStream
into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn into_std(self) -> std::time::Instant {$/;"	P	implementation:Instant
into_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn into_task(self) -> Task<S> {$/;"	P	implementation:UnownedTask
into_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn into_user(self) -> Option<User> {$/;"	P	implementation:PresenceUser
into_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn into_waker(self) -> Waker {$/;"	P	implementation:UnparkThread
into_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn into_waker(self) -> Waker {$/;"	P	implementation:Waker
into_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn into_waker(self) -> Waker;$/;"	P	interface:WakerRef
invalid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn invalid() -> Error {$/;"	P	implementation:Error
invisible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn invisible(&self) {$/;"	P	implementation:Context
invitable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_thread.rs	/^    pub fn invitable(&mut self, invitable: bool) -> &mut Self {$/;"	P	implementation:EditThread
invitable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub invitable: bool,$/;"	m	struct:ThreadMetadata
invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn invite(code: &str) -> String {$/;"	P	implementation:Route
invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod invite;$/;"	n
invite_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn invite_create(&self, _ctx: Context, _data: InviteCreateEvent) {}$/;"	P	interface:EventHandler
invite_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn invite_delete(&self, _ctx: Context, _data: InviteDeleteEvent) {}$/;"	P	interface:EventHandler
invite_optioned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn invite_optioned($/;"	P	implementation:Route
invite_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn invite_url($/;"	P	implementation:CurrentUser
invite_url_with_oauth2_scopes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn invite_url_with_oauth2_scopes($/;"	P	implementation:CurrentUser
inviter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub inviter: Option<User>,$/;"	m	struct:InviteCreateEvent
inviter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub inviter: Option<User>,$/;"	m	struct:Invite
inviter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub inviter: Option<User>,$/;"	m	struct:RichInvite
invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn invites(self, http: impl AsRef<Http>) -> Result<Vec<RichInvite>> {$/;"	P	implementation:ChannelId
invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn invites(&self, http: impl AsRef<Http>) -> Result<Vec<RichInvite>> {$/;"	P	implementation:GuildChannel
invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn invites(self, http: impl AsRef<Http>) -> Result<Vec<RichInvite>> {$/;"	P	implementation:GuildId
invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn invites(&self, cache_http: impl CacheHttp) -> Result<Vec<RichInvite>> {$/;"	P	implementation:Guild
invites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn invites(&self, http: impl AsRef<Http>) -> Result<Vec<RichInvite>> {$/;"	P	implementation:PartialGuild
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^    pub mod io {$/;"	n	module:windows
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    io: MioSource<E>,$/;"	m	struct:Aio
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod io;$/;"	n
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    io: PollEvented<mio_pipe::Receiver>,$/;"	m	struct:Receiver
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    io: PollEvented<mio_pipe::Sender>,$/;"	m	struct:Sender
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    io: PollEvented<mio_windows::NamedPipe>,$/;"	m	struct:NamedPipeClient
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    io: PollEvented<mio_windows::NamedPipe>,$/;"	m	struct:NamedPipeServer
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    io: Blocking<ArcFile>,$/;"	m	struct:ChildStdio
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) io: IoHandle,$/;"	m	struct:Handle
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    io: io::Driver,$/;"	m	struct:Driver
io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn io() -> Self {$/;"	P	implementation:SignalKind
io_dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    io_dispatch: RwLock<IoDispatcher>,$/;"	m	struct:Handle
is_added	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn is_added(&self) -> bool {$/;"	P	implementation:ReactionAction
is_already_init_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn is_already_init_err(&self) -> bool {$/;"	P	implementation:SetError
is_at_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn is_at_capacity(&self) -> bool {$/;"	P	implementation:Error
is_at_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn is_at_index(&self, index: usize) -> bool {$/;"	P	implementation:Block
is_cache_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/error.rs	/^    pub fn is_cache_err(&self) -> bool {$/;"	P	implementation:Error
is_cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn is_cancelled(&self) -> bool {$/;"	P	implementation:JoinError
is_cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_cancelled(self) -> bool {$/;"	P	implementation:Snapshot
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    is_closed: bool,$/;"	m	struct:Pipe
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    is_closed: bool,$/;"	m	struct:Pointers
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:Inject
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:LocalOwnedTasks
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:Semaphore
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:TryAcquireError
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Sender
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn is_closed(&self) -> bool {$/;"	P	implementation:Semaphore
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn is_closed(&self) -> bool;$/;"	P	interface:Semaphore
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn is_closed(&self) -> bool {$/;"	P	implementation:Tx
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:UnboundedSender
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn is_closed(self) -> bool {$/;"	P	implementation:State
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Sender
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Semaphore
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn is_closed(self) -> bool {$/;"	P	implementation:state::StateSnapshot
is_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn is_closed(&self) -> bool {$/;"	P	implementation:Sender
is_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_complete(self) -> bool {$/;"	P	implementation:Snapshot
is_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn is_complete(self) -> bool {$/;"	P	implementation:State
is_connecting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^    pub fn is_connecting(self) -> bool {$/;"	P	implementation:ConnectionStage
is_debug	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^fn is_debug<T: fmt::Debug>(_: &T) {}$/;"	f
is_dropped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    is_dropped: Arc<AtomicBool>,$/;"	m	struct:AssertDrop
is_dropped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    is_dropped: Arc<AtomicBool>,$/;"	m	struct:AssertDropHandle
is_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn is_elapsed(&self) -> bool {$/;"	P	implementation:TimerEntry
is_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub fn is_elapsed(&self) -> bool {$/;"	P	implementation:Sleep
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Args
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:CommandMap
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:GroupMap
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn is_empty(&self) -> bool;$/;"	P	interface:ParseMap
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Buf
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_empty(self) -> bool {$/;"	P	implementation:Ready
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Defer
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:Inner
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Steal
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Inject
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:LocalOwnedTasks
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:OwnedTasks
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn is_empty(&self) -> bool {$/;"	P	implementation:Runtime
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Receiver
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Sender
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    is_empty: bool,$/;"	m	struct:NotifyWaitersList
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:JoinSet
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:IdleNotifiedSet
is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:LinkedList
is_ending_quote	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn is_ending_quote(self, c: char) -> bool {$/;"	P	implementation:QuoteKind
is_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^        macro_rules! is_err {$/;"	M	function:tests::test_parse_header_errors
is_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn is_error(_: Ready) -> bool {$/;"	f	module:sys
is_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn is_error(ready: Ready) -> bool {$/;"	f	module:sys
is_false	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn is_false(v: &bool) -> bool {$/;"	f
is_fifo	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn is_fifo(file: &File) -> io::Result<bool> {$/;"	f
is_final	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn is_final(&self) -> bool {$/;"	P	implementation:Block
is_finished	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    pub fn is_finished(&self) -> bool {$/;"	P	implementation:AbortHandle
is_finished	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub fn is_finished(&self) -> bool {$/;"	P	implementation:JoinHandle
is_first_try	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub is_first_try: bool,$/;"	m	struct:RateLimitInfo
is_first_try	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub is_first_try: bool,$/;"	m	struct:UnitRatelimit
is_hup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn is_hup(_: Ready) -> bool {$/;"	f	module:sys
is_hup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^    pub(crate) fn is_hup(ready: Ready) -> bool {$/;"	f	module:sys
is_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_idle(self) -> bool {$/;"	P	implementation:Snapshot
is_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn is_idle(&self) -> bool {$/;"	P	implementation:Semaphore
is_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn is_idle(&self) -> bool;$/;"	P	interface:Semaphore
is_initializing_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn is_initializing_err(&self) -> bool {$/;"	P	implementation:SetError
is_invalid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn is_invalid(&self) -> bool {$/;"	P	implementation:Error
is_invalid_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub fn is_invalid_header(&self) -> bool {$/;"	P	implementation:Error
is_join_interested	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_join_interested(self) -> bool {$/;"	P	implementation:Snapshot
is_join_waker_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_join_waker_set(self) -> bool {$/;"	P	implementation:Snapshot
is_large	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn is_large(&self) -> bool {$/;"	P	implementation:Guild
is_leader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    pub fn is_leader(&self) -> bool {$/;"	P	implementation:BarrierWaitResult
is_matching_event_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn is_matching_event_type(&self, event: &Event) -> bool {$/;"	P	implementation:EventFilter
is_missing_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn is_missing_context(&self) -> bool {$/;"	P	implementation:TryCurrentError
is_no_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn is_no_permits(&self) -> bool {$/;"	P	implementation:TryAcquireError
is_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_notified(self) -> bool {$/;"	P	implementation:Snapshot
is_nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub fn is_nsfw(&self) -> bool {$/;"	P	implementation:ChannelCategory
is_nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn is_nsfw(&self) -> bool {$/;"	P	implementation:GuildChannel
is_nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub fn is_nsfw(&self) -> bool {$/;"	P	implementation:Channel
is_nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub fn is_nsfw(&self) -> bool {$/;"	P	implementation:PrivateChannel
is_own	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn is_own(&self, cache: impl AsRef<Cache>) -> bool {$/;"	P	implementation:Message
is_pair_of	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    pub fn is_pair_of(&self, other: &ReadHalf<T>) -> bool {$/;"	P	implementation:WriteHalf
is_pair_of	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    pub fn is_pair_of(&self, other: &WriteHalf<T>) -> bool {$/;"	P	implementation:ReadHalf
is_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn is_panic(&self) -> bool {$/;"	P	implementation:JoinError
is_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn is_parked(&self, worker_id: usize) -> bool {$/;"	P	implementation:Idle
is_passing_constraints	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    fn is_passing_constraints($/;"	P	implementation:ComponentInteractionFilter
is_passing_constraints	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn is_passing_constraints(&mut self, event: &mut LazyArc<'_, Event>) -> bool {$/;"	P	implementation:EventFilter
is_passing_constraints	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    fn is_passing_constraints(&self, message: &Message) -> bool {$/;"	P	implementation:MessageFilter
is_passing_constraints	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    fn is_passing_constraints($/;"	P	implementation:ModalInteractionFilter
is_passing_constraints	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fn is_passing_constraints(&self, reaction: &mut LazyReactionAction<'_>) -> bool {$/;"	P	implementation:ReactionFilter
is_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn is_pending(&self) -> bool {$/;"	P	implementation:StateCell
is_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn is_pending(&self) -> bool {$/;"	P	implementation:TimerHandle
is_private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn is_private(&self) -> bool {$/;"	P	implementation:Message
is_privileged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn is_privileged(self) -> bool {$/;"	P	implementation:GatewayIntents
is_quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^fn is_quoted(s: &str) -> bool {$/;"	f
is_read_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_read_closed(self) -> bool {$/;"	P	implementation:Ready
is_readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub const fn is_readable(self) -> bool {$/;"	P	implementation:Interest
is_readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_readable(self) -> bool {$/;"	P	implementation:Ready
is_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^fn is_ready(bits: usize, slot: usize) -> bool {$/;"	f
is_removed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn is_removed(&self) -> bool {$/;"	P	implementation:ReactionAction
is_running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn is_running(self) -> bool {$/;"	P	implementation:Snapshot
is_rx_task_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn is_rx_task_set(self) -> bool {$/;"	P	implementation:State
is_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    is_searching: bool,$/;"	m	struct:Core
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    is_shutdown: bool,$/;"	m	struct:IoDispatcher
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    is_shutdown: bool,$/;"	m	struct:ReadyEvent
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    is_shutdown: bool,$/;"	m	struct:Core
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(super) fn is_shutdown(&self) -> bool {$/;"	P	implementation:Handle
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(super) fn is_shutdown(&self) -> bool {$/;"	P	implementation:Inner
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(super) is_shutdown: AtomicBool,$/;"	m	struct:Inner
is_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn is_shutdown(&self) -> bool {$/;"	P	implementation:Error
is_stealable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn is_stealable(&self) -> bool {$/;"	P	implementation:Local
is_surrounded_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^fn is_surrounded_with(s: &str, begin: char, end: char) -> bool {$/;"	f
is_temporary_os_thread_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^fn is_temporary_os_thread_error(error: &std::io::Error) -> bool {$/;"	f
is_text_based	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn is_text_based(&self) -> bool {$/;"	P	implementation:GuildChannel
is_thread_local_destroyed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn is_thread_local_destroyed(&self) -> bool {$/;"	P	implementation:TryCurrentError
is_tx_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^fn is_tx_closed(bits: usize) -> bool {$/;"	f
is_tx_task_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn is_tx_task_set(self) -> bool {$/;"	P	implementation:State
is_unnamed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/socketaddr.rs	/^    pub fn is_unnamed(&self) -> bool {$/;"	P	implementation:SocketAddr
is_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^fn is_unpin<T: Unpin>() {}$/;"	f
is_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^        fn is_unpin<T: Unpin>() {}$/;"	f	method:Acquire::project
is_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^fn is_unpin<T: Unpin>() {}$/;"	f
is_unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn is_unpin<T: Unpin>() {}$/;"	f
is_unrecognised	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^fn is_unrecognised<T>(res: &Result<T, ParseError>) -> bool {$/;"	f
is_unsuccessful_request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub fn is_unsuccessful_request(&self) -> bool {$/;"	P	implementation:Error
is_url_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub fn is_url_error(&self) -> bool {$/;"	P	implementation:Error
is_within_limits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    fn is_within_limits(&self) -> bool {$/;"	P	implementation:ComponentInteractionFilter
is_within_limits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn is_within_limits(&self) -> bool {$/;"	P	implementation:EventFilter
is_within_limits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    fn is_within_limits(&self) -> bool {$/;"	P	implementation:MessageFilter
is_within_limits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    fn is_within_limits(&self) -> bool {$/;"	P	implementation:ModalInteractionFilter
is_within_limits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fn is_within_limits(&self) -> bool {$/;"	P	implementation:ReactionFilter
is_writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub const fn is_writable(self) -> bool {$/;"	P	implementation:Interest
is_writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_writable(self) -> bool {$/;"	P	implementation:Ready
is_write_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    pub fn is_write_closed(self) -> bool {$/;"	P	implementation:Ready
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:Cursor
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:Vec
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	interface:AsyncWrite
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	f
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:BufReader
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:BufStream
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:BufWriter
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:WriteHalf
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:OwnedWriteHalf
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:TcpStream
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:Sender
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:WriteHalf
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:OwnedWriteHalf
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:UnixStream
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:ChildStdin
is_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:ChildStdio
issue_3014	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn issue_3014() {$/;"	f	module:test
italic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub italic: bool,$/;"	m	struct:Content
iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn iter<T: FromStr>(&mut self) -> Iter<'_, T> {$/;"	P	implementation:Args
join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub fn join(&self, separator: &str) -> String {$/;"	P	implementation:Suggestions
join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub join: Option<String>,$/;"	m	struct:ActivitySecrets
join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/join.rs	/^macro_rules! join {$/;"	M
join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod join;$/;"	n
join_handle_cancel_on_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_shutdown_join.rs	/^fn join_handle_cancel_on_shutdown() {$/;"	f
join_multicast_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn join_multicast_v4(&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()> /;"	P	implementation:UdpSocket
join_multicast_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn join_multicast_v6(&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
join_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub async fn join_next(&mut self) -> Option<Result<T, JoinError>> {$/;"	P	implementation:JoinSet
join_next_with_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub async fn join_next_with_id(&mut self) -> Option<Result<(Id, T), JoinError>> {$/;"	P	implementation:JoinSet
join_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn join_output() {$/;"	f	module:group_b
join_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn join_thread(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:ChannelId
join_thread_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn join_thread_channel(&self, channel_id: u64) -> Result<()> {$/;"	P	implementation:Http
join_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub join_timestamp: Timestamp,$/;"	m	struct:ThreadMember
joined_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub joined_at: Timestamp,$/;"	m	struct:GuildMemberUpdateEvent
joined_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub joined_at: Option<Timestamp>,$/;"	m	struct:InterimMember
joined_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub joined_at: Option<Timestamp>,$/;"	m	struct:Member
joined_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub joined_at: Option<Timestamp>,$/;"	m	struct:PartialMember
joined_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub joined_at: Timestamp,$/;"	m	struct:Guild
joinset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    joinset: &'a mut JoinSet<T>,$/;"	m	struct:Builder
json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod json;$/;"	n
keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    keep_alive: Duration,$/;"	m	struct:Inner
keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) keep_alive: Option<Duration>,$/;"	m	struct:Builder
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    pub fn key(&self) -> Cow<'_, str> {$/;"	P	implementation:Change
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    key: F,$/;"	m	struct:SequenceToMapVisitor
key	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^            key: &'static LocalKey<Cell<*const ()>>,$/;"	m	struct:ScopedKey::set::Reset
keyword_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    keyword_filter: Option<Cow<'a, [String]>>,$/;"	m	struct:InterimTriggerMetadata
keyword_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    keyword_filter: Option<Vec<String>>,$/;"	m	struct:TriggerMetadata
kick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn kick(self, http: impl AsRef<Http>, user_id: impl Into<UserId>) -> Result<()> {$/;"	P	implementation:GuildId
kick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn kick(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Member
kick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn kick(&self, http: impl AsRef<Http>, user_id: impl Into<UserId>) -> Result<()> {$/;"	P	implementation:Guild
kick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn kick(&self, http: impl AsRef<Http>, user_id: impl Into<UserId>) -> Result<()> {$/;"	P	implementation:PartialGuild
kick_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn kick_member(&self, guild_id: u64, user_id: u64) -> Result<()> {$/;"	P	implementation:Http
kick_member_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn kick_member_with_reason($/;"	P	implementation:Http
kick_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn kick_members(self) -> bool {$/;"	P	implementation:Permissions
kick_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn kick_with_reason($/;"	P	implementation:GuildId
kick_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn kick_with_reason(&self, cache_http: impl CacheHttp, reason: &str) -> Result<()>/;"	P	implementation:Member
kick_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn kick_with_reason($/;"	P	implementation:Guild
kick_with_reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn kick_with_reason($/;"	P	implementation:PartialGuild
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/kill.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:T
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/kill.rs	/^    fn kill(&mut self) -> io::Result<()>;$/;"	P	interface:Kill
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:test::Mock
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:ChildDropGuard
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub async fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:Child
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^mod kill;$/;"	n
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:Child
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:StdChild
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:test::MockWait
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	f
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn kill() {$/;"	f	module:test
kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn kill(&mut self) -> io::Result<()> {$/;"	P	implementation:Child
kill_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    kill_on_drop: bool,$/;"	m	struct:ChildDropGuard
kill_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    kill_on_drop: bool,$/;"	m	struct:Command
kill_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn kill_on_drop(&mut self, kill_on_drop: bool) -> &mut Command {$/;"	P	implementation:Command
kills_on_drop_if_specified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn kills_on_drop_if_specified() {$/;"	f	module:test
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn kind(&mut self, kind: CommandOptionType) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn kind(&mut self, kind: CommandType) -> &mut Self {$/;"	P	implementation:CreateApplicationCommand
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn kind(&mut self, kind: CommandPermissionType) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandPermissionData
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn kind(&mut self, kind: ChannelType) -> &mut Self {$/;"	P	implementation:CreateChannel
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn kind(&mut self, kind: InteractionResponseType) -> &mut Self {$/;"	P	implementation:CreateInteractionResponse
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    pub fn kind(&mut self, kind: ScheduledEventType) -> &mut Self {$/;"	P	implementation:CreateScheduledEvent
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_thread.rs	/^    pub fn kind(&mut self, kind: ChannelType) -> &mut Self {$/;"	P	implementation:CreateThread
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub fn kind(&mut self, kind: ScheduledEventType) -> &mut Self {$/;"	P	implementation:EditScheduledEvent
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    kind: TokenKind,$/;"	m	struct:Token
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub kind: CommandOptionType,$/;"	m	struct:CommandOption
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub kind: CommandPermissionType,$/;"	m	struct:CommandPermissionData
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub kind: CommandType,$/;"	m	struct:Command
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub kind: ComponentType,$/;"	m	struct:ActionRow
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub kind: ComponentType,$/;"	m	struct:Button
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub kind: ComponentType,$/;"	m	struct:InputText
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub kind: ComponentType,$/;"	m	struct:SelectMenu
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub kind: CommandOptionType,$/;"	m	struct:CommandDataOption
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub kind: CommandType,$/;"	m	struct:CommandData
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub kind: InteractionType,$/;"	m	struct:ApplicationCommandInteraction
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub kind: InteractionType,$/;"	m	struct:AutocompleteInteraction
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub kind: InteractionType,$/;"	m	struct:MessageComponentInteraction
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn kind(&self) -> InteractionType {$/;"	P	implementation:Interaction
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub kind: InteractionType,$/;"	m	struct:MessageInteraction
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub kind: InteractionType,$/;"	m	struct:ModalSubmitInteraction
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/ping.rs	/^    pub kind: InteractionType,$/;"	m	struct:PingInteraction
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub kind: ChannelType,$/;"	m	struct:ChannelCategory
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub kind: Option<String>,$/;"	m	struct:Embed
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub kind: ChannelType,$/;"	m	struct:GuildChannel
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub kind: ChannelType,$/;"	m	struct:PartialGuildChannel
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub kind: ChannelType,$/;"	m	struct:ChannelMention
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub kind: MessageActivityKind,$/;"	m	struct:MessageActivity
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub kind: MessageType,$/;"	m	struct:Message
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    kind: u8,$/;"	m	struct:PermissionOverwriteData
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub kind: PermissionOverwriteType,$/;"	m	struct:PermissionOverwrite
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/partial_channel.rs	/^    pub kind: ChannelType,$/;"	m	struct:PartialChannel
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub kind: ChannelType,$/;"	m	struct:PrivateChannel
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub kind: String,$/;"	m	struct:Connection
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub kind: Option<MessageType>,$/;"	m	struct:MessageUpdateEvent
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub kind: String,$/;"	m	struct:UnknownEvent
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub kind: ActivityType,$/;"	m	struct:Activity
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub kind: Option<String>,$/;"	m	struct:Options
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    kind: TriggerType,$/;"	m	struct:InterimTrigger
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub fn kind(&self) -> ActionType {$/;"	P	implementation:Action
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub fn kind(&self) -> TriggerType {$/;"	P	implementation:Trigger
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub kind: String,$/;"	m	struct:Integration
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub kind: ScheduledEventType,$/;"	m	struct:ScheduledEvent
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub kind: ChannelType,$/;"	m	struct:InviteChannel
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub kind: StickerType,$/;"	m	struct:Sticker
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub kind: WebhookType,$/;"	m	struct:Webhook
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn kind(&mut self, kind: MessageType) -> &mut Self {$/;"	P	implementation:CustomMessage
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    kind: Kind,$/;"	m	struct:Builder
kind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    kind: TryCurrentErrorKind,$/;"	m	struct:TryCurrentError
label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn label<D: ToString>(&mut self, label: D) -> &mut Self {$/;"	P	implementation:CreateButton
label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn label<D: ToString>(&mut self, label: D) -> &mut Self {$/;"	P	implementation:CreateInputText
label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn label<D: ToString>(&mut self, label: D) -> &mut Self {$/;"	P	implementation:CreateSelectMenuOption
label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub label: Option<String>,$/;"	m	struct:Button
label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub label: String,$/;"	m	struct:SelectMenuOption
label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub label: String,$/;"	m	struct:ActivityButton
lacking_conditions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub lacking_conditions: HelpBehaviour,$/;"	m	struct:HelpOptions
lacking_ownership	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub lacking_ownership: HelpBehaviour,$/;"	m	struct:HelpOptions
lacking_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub lacking_permissions: HelpBehaviour,$/;"	m	struct:HelpOptions
lacking_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub lacking_role: HelpBehaviour,$/;"	m	struct:HelpOptions
large	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub large: bool,$/;"	m	struct:Guild
large_image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub large_image: Option<String>,$/;"	m	struct:ActivityAssets
large_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub large_text: Option<String>,$/;"	m	struct:ActivityAssets
last	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn last(&self) -> Option<&L::Target> {$/;"	P	implementation:LinkedList
last_exiting_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    last_exiting_thread: Option<thread::JoinHandle<()>>,$/;"	m	struct:Shared
last_heartbeat_ack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn last_heartbeat_ack(&self) -> Option<&Instant> {$/;"	P	implementation:Shard
last_heartbeat_acknowledged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    last_heartbeat_acknowledged: bool,$/;"	m	struct:Shard
last_heartbeat_acknowledged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn last_heartbeat_acknowledged(&self) -> bool {$/;"	P	implementation:Shard
last_heartbeat_sent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn last_heartbeat_sent(&self) -> Option<&Instant> {$/;"	P	implementation:Shard
last_message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub last_message_id: Option<MessageId>,$/;"	m	struct:GuildChannel
last_message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub last_message_id: Option<MessageId>,$/;"	m	struct:PrivateChannel
last_pin_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub last_pin_timestamp: Option<Timestamp>,$/;"	m	struct:GuildChannel
last_pin_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub last_pin_timestamp: Option<Timestamp>,$/;"	m	struct:PrivateChannel
last_pin_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub last_pin_timestamp: Option<Timestamp>,$/;"	m	struct:ChannelPinsUpdateEvent
last_resume_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    last_resume_time: Instant,$/;"	m	struct:MetricsBatch
last_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub last_start: Option<Instant>,$/;"	m	struct:ShardQueuer
last_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub last_time: Option<Instant>,$/;"	m	struct:UnitRatelimit
last_write_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    last_write_err: Option<io::ErrorKind>,$/;"	m	struct:Inner
latency	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    pub latency: Option<StdDuration>,$/;"	m	struct:ShardRunnerInfo
latency	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn latency(&self) -> Option<StdDuration> {$/;"	P	implementation:Shard
launch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(crate) fn launch(mut self) {$/;"	P	implementation:Launch
least_significant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) const fn least_significant(width: u32) -> Pack {$/;"	P	implementation:Pack
leave	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn leave(self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:GuildId
leave	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn leave(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:Guild
leave	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn leave(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:PartialGuild
leave_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn leave_guild(&self, guild_id: u64) -> Result<()> {$/;"	P	implementation:Http
leave_multicast_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn leave_multicast_v4(&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>/;"	P	implementation:UdpSocket
leave_multicast_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn leave_multicast_v6(&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
leave_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn leave_thread(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:ChannelId
leave_thread_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn leave_thread_channel(&self, channel_id: u64) -> Result<()> {$/;"	P	implementation:Http
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Args
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    pub(in super::super) fn len() -> usize {$/;"	f	module:pool
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn len(&self) -> usize {$/;"	P	implementation:Buf
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    len: usize,$/;"	m	struct:ReadBufParts
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:OrphanQueueImpl
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn len(&self) -> UnsignedShort {$/;"	P	implementation:Inner
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    len: AtomicUsize,$/;"	m	struct:Inject
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn len(&self) -> usize {$/;"	P	implementation:Inject
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Receiver
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Sender
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:JoinSet
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn len(&self) -> usize {$/;"	P	implementation:IdleNotifiedSet
len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    len: usize,$/;"	m	struct:Page
length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    length: usize,$/;"	m	struct:IdleNotifiedSet
level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    level: usize,$/;"	m	struct:Level
level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) level: usize,$/;"	m	struct:Expiration
level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^mod level;$/;"	n
level_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn level_for(&self, when: u64) -> usize {$/;"	P	implementation:Wheel
level_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^fn level_for(elapsed: u64, when: u64) -> usize {$/;"	f
level_range	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^fn level_range(level: usize) -> u64 {$/;"	f
levels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    levels: Vec<Level>,$/;"	m	struct:Wheel
levenshtein_distance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub levenshtein_distance: usize,$/;"	m	struct:SuggestedCommandName
levenshtein_tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^mod levenshtein_tests {$/;"	n
lex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^fn lex(stream: &mut Stream<'_>, delims: &[Cow<'_, str>]) -> Option<Token> {$/;"	f
lifo_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    lifo_slot: Option<Notified>,$/;"	m	struct:Core
limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/get_messages.rs	/^    pub fn limit(&mut self, limit: u64) -> &mut Self {$/;"	P	implementation:GetMessages
limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn limit(&mut self, n: u32) -> &mut Self {$/;"	P	implementation:BucketBuilder
limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub limit: Option<(Duration, u32)>,$/;"	m	struct:Ratelimit
limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub(crate) limit: u32,$/;"	m	struct:BucketBuilder
limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    limit: i64,$/;"	m	struct:Ratelimit
limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub fn limit(&self) -> i64 {$/;"	P	implementation:Ratelimit
limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn limit(&self) -> u64 {$/;"	P	implementation:Take
limit_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn limit_for(&mut self, target: LimitedFor) -> &mut Self {$/;"	P	implementation:BucketBuilder
limited_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub(crate) limited_for: LimitedFor,$/;"	m	struct:BucketBuilder
lines	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^pub(crate) fn lines<R>(reader: R) -> Lines<R>$/;"	f
linger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn linger(&self) -> io::Result<Option<Duration>> {$/;"	P	implementation:TcpSocket
link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn link(&self) -> String {$/;"	P	implementation:Message
link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn link(&self, channel_id: ChannelId, guild_id: Option<GuildId>) -> String {$/;"	P	implementation:MessageId
link_ensured	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn link_ensured($/;"	P	implementation:MessageId
link_ensured	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn link_ensured(&self, cache_http: impl CacheHttp) -> String {$/;"	P	implementation:Message
linked_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod linked_list;$/;"	n
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    list: WaitList,$/;"	m	struct:Waiters
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    list: LinkedList<Task<S>, <Task<S> as Link>::Target>,$/;"	m	struct:OwnedTasksInner
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod list;$/;"	n
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    list: list::Rx<T>,$/;"	m	struct:RxFields
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^pub(super) mod list;$/;"	n
list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    list: GuardedWaitList,$/;"	m	struct:NotifyWaitersList
listen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn listen(self, backlog: u32) -> io::Result<TcpListener> {$/;"	P	implementation:TcpSocket
listener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/mod.rs	/^pub(crate) mod listener;$/;"	n
listener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub(crate) mod listener;$/;"	n
listening	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn listening<N>(name: N) -> Activity$/;"	P	implementation:Activity
lists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    lists: Arc<Lists<T>>,$/;"	m	struct:IdleNotifiedSet
ll_sem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    ll_sem: ll::Semaphore,$/;"	m	struct:Semaphore
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn load(&self, _: Ordering) -> u64 {$/;"	P	implementation:AtomicU64
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) fn load(&self, order: Ordering) -> u64 {$/;"	P	implementation:StaticAtomicU64
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn load(cell: &AtomicUsize, ordering: Ordering) -> State {$/;"	P	implementation:State
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn load(&self) -> Snapshot {$/;"	P	implementation:State
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn load(cell: &AtomicUsize, order: Ordering) -> State {$/;"	P	implementation:State
load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn load(&self) -> StateSnapshot {$/;"	P	implementation:state::AtomicState
load_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn load_next(&self, ordering: Ordering) -> Option<NonNull<Block<T>>> {$/;"	P	implementation:Block
local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^pub(crate) fn local<T: 'static>() -> (Steal<T>, Local<T>) {$/;"	f
local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            local: &'static LocalKey<T>,$/;"	m	struct:LocalKey::scope_inner::Guard
local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    local: &'static LocalKey<T>,$/;"	m	struct:TaskLocalFuture
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:TcpListener
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:TcpSocket
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:ReadHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:WriteHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedReadHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedWriteHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:TcpStream
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixDatagram
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixListener
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:ReadHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:WriteHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedReadHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedWriteHalf
local_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn local_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixStream
local_current_thread_scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn local_current_thread_scheduler() {$/;"	f	module:tests
local_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    local_queue: UnsafeCell<VecDeque<task::Notified<Arc<Shared>>>>,$/;"	m	struct:LocalState
local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    local_schedule_count: u64,$/;"	m	struct:MetricsBatch
local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) local_schedule_count: AtomicU64,$/;"	m	struct:WorkerMetrics
local_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    local_state: LocalState,$/;"	m	struct:Shared
locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub locale: String,$/;"	m	struct:ApplicationCommandInteraction
locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub locale: String,$/;"	m	struct:AutocompleteInteraction
locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub locale: String,$/;"	m	struct:MessageComponentInteraction
locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub locale: String,$/;"	m	struct:ModalSubmitInteraction
location	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    pub fn location<S: ToString>(&mut self, location: S) -> &mut Self {$/;"	P	implementation:CreateScheduledEvent
location	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub fn location<S: ToString>(&mut self, location: S) -> &mut Self {$/;"	P	implementation:EditScheduledEvent
location	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub location: String,$/;"	m	struct:ScheduledEventMetadata
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^        pub(crate) fn lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:sync::Mutex
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^    pub(crate) fn lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:Mutex
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:Mutex
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(super) fn lock(&self) -> crate::loom::sync::MutexGuard<'_, InnerState> {$/;"	P	implementation:Inner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: &'a Mutex<T>,$/;"	m	struct:MutexGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: &'a Mutex<T>,$/;"	m	struct:MutexGuardInner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: Arc<Mutex<T>>,$/;"	m	struct:OwnedMappedMutexGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: Arc<Mutex<T>>,$/;"	m	struct:OwnedMappedMutexGuardInner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: Arc<Mutex<T>>,$/;"	m	struct:OwnedMutexGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    lock: Arc<Mutex<T>>,$/;"	m	struct:OwnedMutexGuardInner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub async fn lock(&self) -> MutexGuard<'_, T> {$/;"	P	implementation:Mutex
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    lock: Arc<RwLock<T>>,$/;"	m	struct:Inner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub(super) lock: Arc<RwLock<T>>,$/;"	m	struct:OwnedRwLockReadGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    lock: Arc<RwLock<T>>,$/;"	m	struct:Inner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) lock: Arc<RwLock<T>>,$/;"	m	struct:OwnedRwLockWriteGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    lock: Arc<RwLock<T>>,$/;"	m	struct:Inner
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) lock: Arc<RwLock<T>>,$/;"	m	struct:OwnedRwLockMappedWriteGuard
lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    lock: &'a TryLock<T>,$/;"	m	struct:LockGuard
lock_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub async fn lock_owned(self: Arc<Self>) -> OwnedMutexGuard<T> {$/;"	P	implementation:Mutex
locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_thread.rs	/^    pub fn locked(&mut self, lock: bool) -> &mut Self {$/;"	P	implementation:EditThread
locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub locked: bool,$/;"	m	struct:ThreadMetadata
locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    locked: AtomicBool,$/;"	m	struct:Inner
locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    locked: AtomicBool,$/;"	m	struct:TryLock
lookup_by_global_cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/user.rs	/^fn lookup_by_global_cache(ctx: &Context, s: &str) -> Option<User> {$/;"	f
lookup_channel_global	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^async fn lookup_channel_global($/;"	f
loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^mod loom;$/;"	n
loom	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod loom;$/;"	n
loop_errors	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/utils.rs	/^fn loop_errors(value: &Value, errors: &mut Vec<DiscordJsonSingleError>, path: &[String]) {$/;"	f
loop_resolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^fn loop_resolved(options: &mut CommandDataOption, resolved: &CommandDataResolved) {$/;"	f
ls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        ls: Option<crate::task::LocalSet>,$/;"	m	struct:test_combination::Rt
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^pub mod macros {$/;"	n
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/mod.rs	/^pub mod macros;$/;"	n
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^mod macros;$/;"	n
macros	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod macros;$/;"	n
main	/home/trey/code/sqlx-crud/examples/serenity/src/main.rs	/^async fn main() {$/;"	f
maintenance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn maintenance(&mut self, worker: &Worker) {$/;"	P	implementation:Core
maintenance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn maintenance(&self, mut core: Box<Core>) -> Box<Core> {$/;"	P	implementation:Context
make_fixed_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^fn make_fixed_size<T>(buffer: Box<[T]>) -> Box<[T; LOCAL_QUEUE_CAPACITY]> {$/;"	f
make_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^async fn make_future(mut rx: Receiver<()>) -> Receiver<()> {$/;"	f
manage_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_channels(self) -> bool {$/;"	P	implementation:Permissions
manage_emojis_and_stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_emojis_and_stickers(self) -> bool {$/;"	P	implementation:Permissions
manage_events	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_events(self) -> bool {$/;"	P	implementation:Permissions
manage_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_guild(self) -> bool {$/;"	P	implementation:Permissions
manage_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_messages(self) -> bool {$/;"	P	implementation:Permissions
manage_nicknames	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_nicknames(self) -> bool {$/;"	P	implementation:Permissions
manage_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_roles(self) -> bool {$/;"	P	implementation:Permissions
manage_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_threads(self) -> bool {$/;"	P	implementation:Permissions
manage_webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn manage_webhooks(self) -> bool {$/;"	P	implementation:Permissions
managed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub managed: bool,$/;"	m	struct:Emoji
managed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub managed: bool,$/;"	m	struct:InterimRole
managed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub managed: bool,$/;"	m	struct:Role
manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^    pub manager: Arc<Mutex<ShardManager>>,$/;"	m	struct:ShardManagerMonitor
manager_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub manager_tx: Sender<ShardManagerMessage>,$/;"	m	struct:ShardQueuer
manager_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    manager_tx: Sender<ShardManagerMessage>,$/;"	m	struct:ShardRunner
manager_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub manager_tx: Sender<ShardManagerMessage>,$/;"	m	struct:ShardRunnerOptions
mandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    mandatory: Mandatory,$/;"	m	struct:Task
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^pub mod map;$/;"	n
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn map<S, F>(mut this: Self, f: F) -> OwnedMappedMutexGuard<T, S>$/;"	P	implementation:OwnedMappedMutexGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn map<U, F>(mut this: Self, f: F) -> MappedMutexGuard<'a, U>$/;"	P	implementation:MappedMutexGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn map<U, F>(mut this: Self, f: F) -> MappedMutexGuard<'a, U>$/;"	P	implementation:MutexGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn map<U, F>(mut this: Self, f: F) -> OwnedMappedMutexGuard<T, U>$/;"	P	implementation:OwnedMutexGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub fn map<F, V: ?Sized>(this: Self, f: F) -> OwnedRwLockReadGuard<T, V>$/;"	P	implementation:OwnedRwLockReadGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn map<F, U: ?Sized>(mut this: Self, f: F) -> OwnedRwLockMappedWriteGuard<T, U>$/;"	P	implementation:OwnedRwLockWriteGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub fn map<F, V: ?Sized>(mut this: Self, f: F) -> OwnedRwLockMappedWriteGuard<T, V>$/;"	P	implementation:OwnedRwLockMappedWriteGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub fn map<F, U: ?Sized>(this: Self, f: F) -> RwLockReadGuard<'a, U>$/;"	P	implementation:RwLockReadGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn map<F, U: ?Sized>(mut this: Self, f: F) -> RwLockMappedWriteGuard<'a, U>$/;"	P	implementation:RwLockWriteGuard
map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub fn map<F, U: ?Sized>(mut this: Self, f: F) -> RwLockMappedWriteGuard<'a, U>$/;"	P	implementation:RwLockMappedWriteGuard
mark_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn mark_pending(&self, not_after: u64) -> Result<(), u64> {$/;"	P	implementation:TimerHandle
mark_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn mark_pending(&self, not_after: u64) -> Result<(), u64> {$/;"	P	implementation:StateCell
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    marker: PhantomData<V>,$/;"	m	struct:SequenceToMapVisitor
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    marker: PhantomData<&'a mut T>,$/;"	m	struct:MappedMutexGuard
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub(super) marker: PhantomData<&'a T>,$/;"	m	struct:RwLockReadGuard
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) marker: PhantomData<&'a mut T>,$/;"	m	struct:RwLockWriteGuard
marker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) marker: PhantomData<&'a mut T>,$/;"	m	struct:RwLockMappedWriteGuard
mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub(crate) fn mask(self) -> Ready {$/;"	P	implementation:Interest
mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(super) fn mask(self) -> Ready {$/;"	P	implementation:Direction
mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    mask: usize,$/;"	m	struct:Shared
mask	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    mask: usize,$/;"	m	struct:Pack
mask_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^pub(crate) const fn mask_for(n: u32) -> usize {$/;"	f
match_	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub match_: Option<String>,$/;"	m	struct:ActivitySecrets
match_borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    fn match_borrow(self) -> Self::Matched {$/;"	P	interface:MatchBorrowExt
matched_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub matched_content: Option<String>,$/;"	m	struct:ActionExecution
matched_keyword	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub matched_keyword: Option<String>,$/;"	m	struct:ActionExecution
max_age	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^    pub fn max_age(&mut self, max_age: u64) -> &mut Self {$/;"	P	implementation:CreateInvite
max_age	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub max_age: u64,$/;"	m	struct:InviteCreateEvent
max_age	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub max_age: u64,$/;"	m	struct:RichInvite
max_args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub max_args: Option<u16>,$/;"	m	struct:CommandOptions
max_blocking_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    max_blocking_threads: usize,$/;"	m	struct:Builder
max_blocking_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn max_blocking_threads(&mut self, val: usize) -> &mut Self {$/;"	P	implementation:Builder
max_buf_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    max_buf_size: usize,$/;"	m	struct:Pipe
max_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn max_capacity(&self) -> usize {$/;"	P	implementation:Sender
max_delays	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub max_delays: u32,$/;"	m	struct:RateLimitInfo
max_instances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    max_instances: u32,$/;"	m	struct:ServerOptions
max_instances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn max_instances(&mut self, instances: usize) -> &mut Self {$/;"	P	implementation:ServerOptions
max_instances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub max_instances: u32,$/;"	m	struct:PipeInfo
max_int_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn max_int_value(&mut self, value: impl ToNumber) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
max_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn max_length(&mut self, value: u16) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
max_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn max_length(&mut self, max: u64) -> &mut Self {$/;"	P	implementation:CreateInputText
max_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn max_length(&self) -> usize {$/;"	P	implementation:CommandMap
max_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn max_length(&self) -> usize {$/;"	P	implementation:GroupMap
max_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn max_length(&self) -> usize;$/;"	P	interface:ParseMap
max_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    max_length: usize,$/;"	m	struct:CommandMap
max_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    max_length: usize,$/;"	m	struct:GroupMap
max_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub max_length: Option<u16>,$/;"	m	struct:CommandOption
max_levenshtein_distance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub max_levenshtein_distance: usize,$/;"	m	struct:HelpOptions
max_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub max_members: Option<u64>,$/;"	m	struct:Guild
max_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub max_members: Option<u64>,$/;"	m	struct:PartialGuild
max_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/settings.rs	/^    pub fn max_messages(&mut self, max: usize) -> &mut Self {$/;"	P	implementation:Settings
max_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/settings.rs	/^    pub max_messages: usize,$/;"	m	struct:Settings
max_number_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn max_number_value(&mut self, value: f64) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
max_permits_doesnt_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn max_permits_doesnt_panic() {$/;"	f
max_presences	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub max_presences: Option<u64>,$/;"	m	struct:Guild
max_presences	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub max_presences: Option<u64>,$/;"	m	struct:PartialGuild
max_uses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^    pub fn max_uses(&mut self, max_uses: u64) -> &mut Self {$/;"	P	implementation:CreateInvite
max_uses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub max_uses: u64,$/;"	m	struct:InviteCreateEvent
max_uses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub max_uses: u64,$/;"	m	struct:RichInvite
max_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub max_value: Option<serde_json::Number>,$/;"	m	struct:CommandOption
max_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) const fn max_value(&self) -> usize {$/;"	P	implementation:Pack
max_values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn max_values(&mut self, max: u64) -> &mut Self {$/;"	P	implementation:CreateSelectMenu
max_values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub max_values: Option<u64>,$/;"	m	struct:SelectMenu
max_video_channel_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub max_video_channel_users: Option<u64>,$/;"	m	struct:Guild
max_video_channel_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub max_video_channel_users: Option<u64>,$/;"	m	struct:PartialGuild
maybe_changed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^fn maybe_changed<T>($/;"	f
maybe_done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^pub fn maybe_done<Fut: Future>(future: Fut) -> MaybeDone<Fut> {$/;"	f
maybe_done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/mod.rs	/^pub(crate) mod maybe_done;$/;"	n
me	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub me: bool,$/;"	m	struct:MessageReaction
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn member<G, U>(&self, guild_id: G, user_id: U) -> Option<Member>$/;"	P	implementation:Cache
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub member: Option<Member>,$/;"	m	struct:ApplicationCommandInteraction
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub member: Option<Member>,$/;"	m	struct:AutocompleteInteraction
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub member: Option<Member>,$/;"	m	struct:MessageComponentInteraction
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub member: Option<Member>,$/;"	m	struct:ModalSubmitInteraction
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub member: Option<ThreadMember>,$/;"	m	struct:GuildChannel
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn member(&self, cache_http: impl CacheHttp) -> Result<Member> {$/;"	P	implementation:Message
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub member: Option<PartialMember>,$/;"	m	struct:Message
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub member: Option<PartialMember>,$/;"	m	struct:Reaction
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub member: Member,$/;"	m	struct:GuildMemberAddEvent
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub member: ThreadMember,$/;"	m	struct:ThreadMemberUpdateEvent
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn member($/;"	P	implementation:GuildId
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn member($/;"	P	implementation:Guild
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod member;$/;"	n
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn member($/;"	P	implementation:PartialGuild
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub member: Option<Member>,$/;"	m	struct:ScheduledEventUser
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            member: Option<InterimMember>,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub member: Option<Member>,$/;"	m	struct:VoiceState
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^mod member;$/;"	n
member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn member(&mut self, member: PartialMember) -> &mut Self {$/;"	P	implementation:CustomMessage
member_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub member_count: Option<u8>,$/;"	m	struct:GuildChannel
member_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub member_count: u8,$/;"	m	struct:ThreadMembersUpdateEvent
member_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub member_count: u64,$/;"	m	struct:Guild
member_field	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn member_field<Ret, Fun>($/;"	P	implementation:Cache
member_named	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn member_named(&self, name: &str) -> Option<&Member> {$/;"	P	implementation:Guild
member_named_nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^        fn member_named_nickname() {$/;"	f	module:test::model
member_named_username	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^        fn member_named_username() {$/;"	f	module:test::model
member_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn member_permissions($/;"	P	implementation:Guild
member_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn member_permissions($/;"	P	implementation:PartialGuild
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub members: Vec<TeamMember>,$/;"	m	struct:Team
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub members: HashMap<UserId, PartialMember>,$/;"	m	struct:CommandDataResolved
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn members(&self, cache: impl AsRef<Cache>) -> Result<Vec<Member>> {$/;"	P	implementation:GuildChannel
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub members: Vec<ThreadMember>,$/;"	m	struct:ThreadsData
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub members: HashMap<UserId, Member>,$/;"	m	struct:GuildMembersChunkEvent
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub members: Vec<ThreadMember>,$/;"	m	struct:ThreadListSyncEvent
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn members($/;"	P	implementation:GuildId
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn members($/;"	P	implementation:Guild
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub members: HashMap<UserId, Member>,$/;"	m	struct:Guild
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn members($/;"	P	implementation:PartialGuild
members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    members: Vec<PartialMember>,$/;"	m	struct:InviteStageInstance
members_containing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn members_containing($/;"	P	implementation:Guild
members_iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn members_iter<H: AsRef<Http>>(self, http: H) -> impl Stream<Item = Result<Member>> {$/;"	P	implementation:GuildId
members_nick_containing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn members_nick_containing($/;"	P	implementation:Guild
members_removed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub members_removed: Option<u64>,$/;"	m	struct:Options
members_starting_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn members_starting_with($/;"	P	implementation:Guild
members_username_containing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn members_username_containing($/;"	P	implementation:Guild
members_with_status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn members_with_status(&self, status: OnlineStatus) -> Vec<&Member> {$/;"	P	implementation:Guild
membership_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub membership_state: MembershipState,$/;"	m	struct:TeamMember
memchr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^pub(crate) fn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {$/;"	f
memchr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod memchr;$/;"	n
memchr_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^    fn memchr_all() {$/;"	f	module:tests
memchr_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^    fn memchr_empty() {$/;"	f	module:tests
memchr_test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^    fn memchr_test() {$/;"	f	module:tests
mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^pub fn mention<'a>(stream: &mut Stream<'a>, config: &Configuration) -> Option<&'a str> {$/;"	f
mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    fn mention(&self) -> Mention {$/;"	f
mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    fn mention(&self) -> Mention;$/;"	P	interface:Mentionable
mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^macro_rules! mention {$/;"	M
mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod mention;$/;"	n
mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn mention<M: Mentionable>(&mut self, item: &M) -> &mut Self {$/;"	P	implementation:MessageBuilder
mention_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub mention_channels: Vec<ChannelMention>,$/;"	m	struct:Message
mention_everyone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub mention_everyone: bool,$/;"	m	struct:Message
mention_everyone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub mention_everyone: Option<bool>,$/;"	m	struct:MessageUpdateEvent
mention_everyone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn mention_everyone(self) -> bool {$/;"	P	implementation:Permissions
mention_everyone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn mention_everyone(&mut self, mentions: bool) -> &mut Self {$/;"	P	implementation:CustomMessage
mention_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub mention_roles: Vec<RoleId>,$/;"	m	struct:Message
mention_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub mention_roles: Option<Vec<RoleId>>,$/;"	m	struct:MessageUpdateEvent
mention_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn mention_roles<It>(&mut self, roles: It) -> &mut Self$/;"	P	implementation:CustomMessage
mentionable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub fn mentionable(&mut self, mentionable: bool) -> &mut Self {$/;"	P	implementation:EditRole
mentionable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub mentionable: bool,$/;"	m	struct:InterimRole
mentionable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub mentionable: bool,$/;"	m	struct:Role
mentionable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^macro_rules! mentionable {$/;"	M
mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub mentions: Vec<User>,$/;"	m	struct:Message
mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub mentions: Option<Vec<User>>,$/;"	m	struct:MessageUpdateEvent
mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn mentions<It>(&mut self, mentions: It) -> &mut Self$/;"	P	implementation:CustomMessage
mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn mentions() {$/;"	f	module:test
mentions_me	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn mentions_me(&self, cache_http: impl CacheHttp) -> Result<bool> {$/;"	P	implementation:Message
mentions_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn mentions_user(&self, user: &User) -> bool {$/;"	P	implementation:Message
mentions_user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn mentions_user_id(&self, id: impl Into<UserId>) -> bool {$/;"	P	implementation:Message
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn merge(&mut self, mut other: Self) {$/;"	P	implementation:OwnedSemaphorePermit
merge	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn merge(&mut self, mut other: Self) {$/;"	P	implementation:SemaphorePermit
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn message<C, M>(&self, channel_id: C, message_id: M) -> Option<Message>$/;"	P	implementation:Cache
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn message(&self, _ctx: Context, _new_message: Message) {}$/;"	P	interface:EventHandler
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    message: String,$/;"	m	struct:Args
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn message(&self) -> &str {$/;"	P	implementation:Args
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub message: String,$/;"	m	struct:DiscordJsonError
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub message: String,$/;"	m	struct:DiscordJsonSingleError
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub message: Message,$/;"	m	struct:MessageComponentInteraction
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub message: Option<Message>,$/;"	m	struct:ModalSubmitInteraction
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn message($/;"	P	implementation:ChannelId
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn message($/;"	P	implementation:GuildChannel
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod message;$/;"	n
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn message($/;"	P	implementation:PrivateChannel
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub async fn message(&self, http: impl AsRef<Http>) -> Result<Message> {$/;"	P	implementation:Reaction
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub message: Message,$/;"	m	struct:MessageCreateEvent
message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^mod message;$/;"	n
message	/home/trey/code/sqlx-crud/examples/serenity/src/main.rs	/^    async fn message(&self, _ctx: Context, _msg: serenity::model::channel::Message) {$/;"	P	implementation:Handler
message_builder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^mod message_builder;$/;"	n
message_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^pub mod message_collector;$/;"	n
message_component	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn message_component(self) -> Option<MessageComponentInteraction> {$/;"	P	implementation:Interaction
message_component	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub mod message_component;$/;"	n
message_component	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub mod message_component {$/;"	n
message_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn message_content(self) -> bool {$/;"	P	implementation:GatewayIntents
message_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn message_content() {$/;"	f	module:test
message_content_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn message_content_safe() {$/;"	f	module:test
message_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub message_count: Option<u8>,$/;"	m	struct:GuildChannel
message_count_patch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^fn message_count_patch<'de, D: serde::Deserializer<'de>>($/;"	f
message_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn message_delete($/;"	P	interface:EventHandler
message_delete_bulk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn message_delete_bulk($/;"	P	interface:EventHandler
message_filters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    message_filters: Vec<MessageFilter>,$/;"	m	struct:ShardRunner
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    message_id: Option<u64>,$/;"	m	struct:FilterOptions
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    message_id: Vec<MessageId>,$/;"	m	struct:FilterOptions
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    message_id: Option<u64>,$/;"	m	struct:FilterOptions
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    message_id: Option<u64>,$/;"	m	struct:FilterOptions
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub message_id: Option<MessageId>,$/;"	m	struct:MessageReference
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub message_id: MessageId,$/;"	m	struct:Reaction
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub message_id: MessageId,$/;"	m	struct:MessageDeleteEvent
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub message_id: MessageId,$/;"	m	struct:ReactionRemoveAllEvent
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub message_id: bool,$/;"	m	struct:RelatedIdsForEventType
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub message_id: Option<MessageId>,$/;"	m	struct:Options
message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub message_id: Option<MessageId>,$/;"	m	struct:ActionExecution
message_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) message_queue: DashMap<ChannelId, VecDeque<MessageId>>,$/;"	m	struct:Cache
message_reference	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub message_reference: Option<MessageReference>,$/;"	m	struct:Message
message_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn message_update($/;"	P	interface:EventHandler
message_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn message_update(&self, _ctx: Context, _new_data: MessageUpdateEvent) {}$/;"	P	interface:EventHandler
messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) messages: MessageCache,$/;"	m	struct:Cache
messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub messages: HashMap<MessageId, Message>,$/;"	m	struct:CommandDataResolved
messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn messages<F>(self, http: impl AsRef<Http>, builder: F) -> Result<Vec<Message>>$/;"	P	implementation:ChannelId
messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn messages<F>(&self, http: impl AsRef<Http>, builder: F) -> Result<Vec<Message>>$/;"	P	implementation:GuildChannel
messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn messages<F>(&self, http: impl AsRef<Http>, builder: F) -> Result<Vec<Message>>$/;"	P	implementation:PrivateChannel
messages_iter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub fn messages_iter<H: AsRef<Http>>(self, http: H) -> impl Stream<Item = Result<Message>> {$/;"	P	implementation:ChannelId
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    metadata: InterimTriggerMetadata<'a>,$/;"	m	struct:InterimTrigger
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub metadata: Option<ScheduledEventMetadata>,$/;"	m	struct:ScheduledEvent
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn metadata(&self) -> io::Result<Metadata> {$/;"	P	implementation:File
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/metadata.rs	/^pub async fn metadata(path: impl AsRef<Path>) -> io::Result<Metadata> {$/;"	f
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod metadata;$/;"	n
metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub async fn metadata(&self) -> io::Result<Metadata> {$/;"	P	implementation:DirEntry
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    metrics: SpawnerMetrics,$/;"	m	struct:Inner
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) metrics: IoDriverMetrics,$/;"	m	struct:Handle
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^mod metrics;$/;"	n
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    metrics: MetricsBatch,$/;"	m	struct:Core
metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    metrics: MetricsBatch,$/;"	m	struct:Core
mfa_enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub mfa_enabled: Option<bool>,$/;"	m	struct:PresenceUser
mfa_enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub mfa_enabled: bool,$/;"	m	struct:CurrentUser
mfa_level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub mfa_level: MfaLevel,$/;"	m	struct:Guild
mfa_level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub mfa_level: MfaLevel,$/;"	m	struct:PartialGuild
might_be_registered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn might_be_registered(&self) -> bool {$/;"	P	implementation:StateCell
might_be_registered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn might_be_registered(&self) -> bool {$/;"	P	implementation:TimerShared
migrate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! migrate {$/;"	M
min_args	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub min_args: Option<u16>,$/;"	m	struct:CommandOptions
min_int_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn min_int_value(&mut self, value: impl ToNumber) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
min_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn min_length(&mut self, value: u16) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
min_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn min_length(&mut self, min: u64) -> &mut Self {$/;"	P	implementation:CreateInputText
min_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn min_length(&self) -> usize {$/;"	P	implementation:CommandMap
min_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn min_length(&self) -> usize {$/;"	P	implementation:GroupMap
min_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    fn min_length(&self) -> usize;$/;"	P	interface:ParseMap
min_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    min_length: usize,$/;"	m	struct:CommandMap
min_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    min_length: usize,$/;"	m	struct:GroupMap
min_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub min_length: Option<u16>,$/;"	m	struct:CommandOption
min_number_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn min_number_value(&mut self, value: f64) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
min_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub min_value: Option<serde_json::Number>,$/;"	m	struct:CommandOption
min_values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn min_values(&mut self, min: u64) -> &mut Self {$/;"	P	implementation:CreateSelectMenu
min_values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub min_values: Option<u64>,$/;"	m	struct:SelectMenu
mio_windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub(super) mod mio_windows {$/;"	n	module:doc
misc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod misc;$/;"	n
missed_tick_behavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    missed_tick_behavior: MissedTickBehavior,$/;"	m	struct:Interval
missed_tick_behavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn missed_tick_behavior(&self) -> MissedTickBehavior {$/;"	P	implementation:Interval
mk_pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^fn mk_pool(num_threads: usize) -> Runtime {$/;"	f
mk_runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn mk_runtime(num_threads: usize) -> Runtime {$/;"	f
mk_runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_yield.rs	/^fn mk_runtime(num_threads: usize) -> Runtime {$/;"	f
mobile	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub mobile: Option<OnlineStatus>,$/;"	m	struct:ClientStatus
mock_open_options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^mod mock_open_options;$/;"	n
mocked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mod.rs	/^mod mocked;$/;"	n
mocks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod mocks;$/;"	n
modal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub mod modal;$/;"	n
modal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub mod modal {$/;"	n
modal_interaction_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^pub mod modal_interaction_collector;$/;"	n
modal_interaction_filters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    modal_interaction_filters: Vec<ModalInteractionFilter>,$/;"	m	struct:ShardRunner
modal_submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn modal_submit(self) -> Option<ModalSubmitInteraction> {$/;"	P	implementation:Interaction
mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    pub(super) mode: Option<u32>,$/;"	m	struct:DirBuilder
mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub mode: PipeMode,$/;"	m	struct:PipeInfo
model	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod model;$/;"	n
model	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    mod model {$/;"	n	module:test
model	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    mod model {$/;"	n	module:test
model	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn model(f: impl Fn() + Send + Sync + 'static) {$/;"	f
model_utils	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    mod model_utils {$/;"	n	module:test
moderate_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn moderate_members(self) -> bool {$/;"	P	implementation:Permissions
monitor_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    monitor_tx: Sender<ShardManagerMessage>,$/;"	m	struct:ShardManager
monitoring_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub monitoring_at: Option<String>,$/;"	m	struct:Incident
move_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn move_member($/;"	P	implementation:GuildId
move_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn move_member($/;"	P	implementation:Guild
move_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn move_member($/;"	P	implementation:PartialGuild
move_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn move_members(self) -> bool {$/;"	P	implementation:Permissions
move_to_new_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^unsafe fn move_to_new_list<T>(from: &mut LinkedList<T>, to: &mut LinkedList<T>) {$/;"	f
move_to_voice_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn move_to_voice_channel($/;"	P	implementation:Member
mr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    mr: u32,$/;"	m	struct:RwLock
msg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    msg: &'a str,$/;"	m	struct:RawArguments
msg	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    msg: Message,$/;"	m	struct:CustomMessage
multi_stealer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^fn multi_stealer() {$/;"	f
multicast_loop_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn multicast_loop_v4(&self) -> io::Result<bool> {$/;"	P	implementation:UdpSocket
multicast_loop_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn multicast_loop_v6(&self) -> io::Result<bool> {$/;"	P	implementation:UdpSocket
multicast_ttl_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn multicast_ttl_v4(&self) -> io::Result<u32> {$/;"	P	implementation:UdpSocket
multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub mod multipart;$/;"	n
multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    multipart: Option<Multipart<'a>>,$/;"	m	struct:RequestBuilder
multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn multipart(&mut self, multipart: Option<Multipart<'a>>) -> &mut Self {$/;"	P	implementation:RequestBuilder
multipart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub(super) multipart: Option<Multipart<'a>>,$/;"	m	struct:Request
mut_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^fn mut_load(this: &mut AtomicUsize) -> usize {$/;"	f
mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/add_member.rs	/^    pub fn mute(&mut self, mute: bool) -> &mut Self {$/;"	P	implementation:AddMember
mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn mute(&mut self, mute: bool) -> &mut Self {$/;"	P	implementation:EditMember
mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub mute: bool,$/;"	m	struct:GuildMemberUpdateEvent
mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub mute: bool,$/;"	m	struct:InterimMember
mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub mute: bool,$/;"	m	struct:Member
mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub mute: bool,$/;"	m	struct:PartialMember
mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            mute: bool,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub mute: bool,$/;"	m	struct:VoiceState
mute_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn mute_members(self) -> bool {$/;"	P	implementation:Permissions
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod mutex;$/;"	n
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    mutex: Mutex<()>,$/;"	m	struct:Inner
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    mutex: Mutex<()>,$/;"	m	struct:Inner
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn mutex(this: &Self) -> &'a Mutex<T> {$/;"	P	implementation:MutexGuard
mutex	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn mutex(this: &Self) -> &Arc<Mutex<T>> {$/;"	P	implementation:OwnedMutexGuard
my_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    my_list: UnsafeCell<List>,$/;"	m	struct:ListEntry
my_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^    async fn my_task(mut signal: Signals, task: CombiTask, out: CombiOutput) -> Output {$/;"	f	function:test_combination
n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    n: usize,$/;"	m	struct:Barrier
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn name<D: ToString>(&mut self, name: D) -> &mut Self {$/;"	P	implementation:CreateApplicationCommand
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn name<D: ToString>(&mut self, name: D) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn name<D: ToString>(&mut self, name: D) -> &mut Self {$/;"	P	implementation:CreateChannel
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn name<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:CreateEmbedAuthor
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    pub fn name<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:CreateScheduledEvent
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_sticker.rs	/^    pub fn name<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:CreateSticker
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_thread.rs	/^    pub fn name<D: ToString>(&mut self, name: D) -> &mut Self {$/;"	P	implementation:CreateThread
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^    pub fn name<D: ToString>(&mut self, name: D) -> &mut Self {$/;"	P	implementation:EditAutoModRule
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn name<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:EditChannel
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn name<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:EditGuild
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub fn name<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:EditRole
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub fn name<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:EditScheduledEvent
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_sticker.rs	/^    pub fn name<S: ToString>(&mut self, name: S) -> &mut Self {$/;"	P	implementation:EditSticker
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_thread.rs	/^    pub fn name<D: ToString>(&mut self, name: D) -> &mut Self {$/;"	P	implementation:EditThread
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub name: &'static str,$/;"	m	struct:Command
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub name: &'static str,$/;"	m	struct:GroupCommandsPair
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub name: String,$/;"	m	struct:SuggestedCommandName
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/check.rs	/^    pub name: &'static str,$/;"	m	struct:Check
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub name: &'static str,$/;"	m	struct:CommandGroup
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub name: String,$/;"	m	struct:CurrentApplicationInfo
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub name: String,$/;"	m	struct:Team
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub name: String,$/;"	m	struct:Command
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub name: String,$/;"	m	struct:CommandOption
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub name: String,$/;"	m	struct:CommandOptionChoice
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub name: String,$/;"	m	struct:CommandData
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub name: String,$/;"	m	struct:CommandDataOption
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub name: String,$/;"	m	struct:MessageInteraction
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:ChannelCategory
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub name: String,$/;"	m	struct:ChannelCategory
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn name(self, cache: impl AsRef<Cache>) -> Option<String> {$/;"	P	implementation:ChannelId
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub name: Option<String>,$/;"	m	struct:EmbedProvider
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub name: String,$/;"	m	struct:EmbedAuthor
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub name: String,$/;"	m	struct:EmbedField
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:GuildChannel
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub name: String,$/;"	m	struct:GuildChannel
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub name: String,$/;"	m	struct:ChannelMention
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub name: String,$/;"	m	struct:MessageApplication
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:ChannelType
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/partial_channel.rs	/^    pub name: Option<String>,$/;"	m	struct:PartialChannel
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub fn name(&self) -> String {$/;"	P	implementation:PrivateChannel
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    pub name: String,$/;"	m	struct:Sticker
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub name: String,$/;"	m	struct:Connection
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub fn name(&self) -> Option<&str> {$/;"	P	implementation:EventType
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub name: Option<String>,$/;"	m	struct:PresenceUser
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub name: String,$/;"	m	struct:Activity
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub name: String,$/;"	m	struct:ActivityEmoji
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    pub name: String,$/;"	m	struct:AffectedRole
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub name: String,$/;"	m	struct:Rule
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub name: String,$/;"	m	struct:Emoji
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn name(self, cache: impl AsRef<Cache>) -> Option<String> {$/;"	P	implementation:GuildId
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub name: String,$/;"	m	struct:GuildPreview
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub name: String,$/;"	m	struct:Integration
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub name: String,$/;"	m	struct:IntegrationAccount
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub name: String,$/;"	m	struct:IntegrationApplication
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub name: String,$/;"	m	struct:Guild
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub name: String,$/;"	m	struct:GuildInfo
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub name: String,$/;"	m	struct:PartialGuild
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub name: String,$/;"	m	struct:InterimRole
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub name: String,$/;"	m	struct:Role
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub name: String,$/;"	m	struct:ScheduledEvent
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub name: String,$/;"	m	struct:InviteChannel
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub name: String,$/;"	m	struct:InviteGuild
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub name: String,$/;"	m	struct:AffectedComponent
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub name: String,$/;"	m	struct:EmojiIdentifier
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub name: String,$/;"	m	struct:Incident
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub name: String,$/;"	m	struct:Maintenance
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub name: String,$/;"	m	struct:Sticker
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_item.rs	/^    pub name: String,$/;"	m	struct:StickerItem
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub name: String,$/;"	m	struct:StickerPack
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:OnlineStatus
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn name(self) -> Result<String> {$/;"	P	implementation:DefaultAvatar
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub name: String,$/;"	m	struct:CurrentUser
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub name: String,$/;"	m	struct:User
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub name: String,$/;"	m	struct:VoiceRegion
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:WebhookType
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub name: Option<String>,$/;"	m	struct:Webhook
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    name: Option<&'a str>,$/;"	m	struct:Builder
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn name(&self, name: &'a str) -> Self {$/;"	P	implementation:Builder
name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn name(self, name: &'a str) -> Self {$/;"	P	implementation:Builder
name	/home/trey/code/sqlx-crud/examples/serenity/src/main.rs	/^    name: String,$/;"	m	struct:User
name_localizations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub name_localizations: Option<HashMap<String, String>>,$/;"	m	struct:Command
name_localizations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub name_localizations: Option<std::collections::HashMap<String, String>>,$/;"	m	struct:CommandOption
name_localizations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub name_localizations: Option<std::collections::HashMap<String, String>>,$/;"	m	struct:CommandOptionChoice
name_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn name_localized<D: ToString, E: ToString>(&mut self, locale: E, name: D) -> &mut Self /;"	P	implementation:CreateApplicationCommand
name_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn name_localized<D: ToString, E: ToString>(&mut self, locale: E, name: D) -> &mut Self /;"	P	implementation:CreateApplicationCommandOption
name_localized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub name_localized: Option<String>,$/;"	m	struct:Command
named_pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/mod.rs	/^pub mod named_pipe;$/;"	n
named_pipe_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^unsafe fn named_pipe_info(handle: RawHandle) -> io::Result<PipeInfo> {$/;"	f
names	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub names: &'static [&'static str],$/;"	m	struct:CommandOptions
names	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub names: &'static [&'static str],$/;"	m	struct:HelpOptions
need_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    need_flush: bool,$/;"	m	struct:Blocking
need_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    need_flush: bool,$/;"	m	struct:CopyBuffer
nested_commands_search	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn nested_commands_search<'rec, 'a: 'rec>($/;"	f
nested_group_command_search	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn nested_group_command_search<'rec, 'a: 'rec>($/;"	f
net	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod net;$/;"	n
nevents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    nevents: usize,$/;"	m	struct:Builder
nevents	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) nevents: usize,$/;"	m	struct:Cfg
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn new<L: ToString, V: ToString>(label: L, value: V) -> Self {$/;"	P	implementation:CreateSelectMenuOption
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub fn new(role: &Role) -> Self {$/;"	P	implementation:EditRole
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Cache
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/settings.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Settings
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/event.rs	/^    pub new: ConnectionStage,$/;"	m	struct:ShardStageUpdateEvent
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub async fn new(opt: ShardManagerOptions<'_>) -> (Arc<Mutex<Self>>, ShardManagerMonitor) {$/;"	P	implementation:ShardManager
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn new(tx: Sender<InterMessage>) -> Self {$/;"	P	implementation:ShardMessenger
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub fn new(opt: ShardRunnerOptions) -> Self {$/;"	P	implementation:ShardRunner
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub(crate) fn new($/;"	P	implementation:Context
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn new(token: impl AsRef<str>, intents: GatewayIntents) -> Self {$/;"	P	implementation:ClientBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    fn new(options: FilterOptions) -> (Self, Receiver<Arc<MessageComponentInteraction>>) {$/;"	P	implementation:ComponentInteractionFilter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:CollectComponentInteraction
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:ComponentInteractionCollectorBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn new(options: FilterOptions) -> Result<(Self, Receiver<Arc<Event>>)> {$/;"	P	implementation:EventFilter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:EventCollectorBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    fn new(options: FilterOptions) -> (Self, Receiver<Arc<Message>>) {$/;"	P	implementation:MessageFilter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:CollectReply
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:MessageCollectorBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^    pub fn new(value: &'a T) -> Self {$/;"	P	implementation:LazyArc
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    fn new(options: FilterOptions) -> (Self, Receiver<Arc<ModalSubmitInteraction>>) {$/;"	P	implementation:ModalInteractionFilter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:CollectModalInteraction
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:ModalInteractionCollectorBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fn new(options: FilterOptions) -> (Self, Receiver<Arc<ReactionAction>>) {$/;"	P	implementation:ReactionFilter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn new(reaction: &'a Reaction, added: bool) -> Self {$/;"	P	implementation:LazyReactionAction
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:CollectReaction
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn new(shard_messenger: impl AsRef<ShardMessenger>) -> Self {$/;"	P	implementation:ReactionCollectorBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn new(c: char) -> Option<Self> {$/;"	P	implementation:QuoteKind
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn new(kind: TokenKind, start: usize, end: usize) -> Self {$/;"	P	implementation:Token
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn new(message: &str, possible_delimiters: &[Delimiter]) -> Self {$/;"	P	implementation:Args
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn new() -> Self {$/;"	P	implementation:StandardFramework
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    pub fn new(cmds: &[&'static Command], conf: &Configuration) -> Self {$/;"	P	implementation:CommandMap
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/map.rs	/^    pub fn new(groups: &[&'static CommandGroup], conf: &Configuration) -> Self {$/;"	P	implementation:GroupMap
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    fn new(creation_time: Instant) -> Self {$/;"	P	implementation:UnitRatelimit
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn new($/;"	P	implementation:Shard
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn new(token: &str) -> Self {$/;"	P	implementation:Http
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn new(token: impl AsRef<str>) -> Self {$/;"	P	implementation:HttpBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub fn new(client: Client, token: impl Into<String>) -> Self {$/;"	P	implementation:Ratelimiter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn new(builder: RequestBuilder<'a>) -> Self {$/;"	P	implementation:Request
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn new(route_info: RouteInfo<'a>) -> Self {$/;"	P	implementation:RequestBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    fn new(http: H, channel_id: ChannelId) -> MessagesIter<H> {$/;"	P	implementation:MessagesIter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub fn new<T, U>(name: T, value: U, inline: bool) -> Self$/;"	P	implementation:EmbedField
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    fn new(name: String, kind: ActivityType) -> Self {$/;"	P	implementation:Activity
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    fn new(guild_id: GuildId, http: H) -> MembersIter<H> {$/;"	P	implementation:MembersIter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn new(key: F) -> Self {$/;"	P	implementation:SequenceToMapVisitor
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn new() {$/;"	f	module:test
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub const fn new(value: u32) -> Colour {$/;"	P	implementation:Colour
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ContentSafeOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn new() -> Self {$/;"	P	implementation:CustomMessage
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn new() -> MessageBuilder {$/;"	P	implementation:MessageBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    pub fn new(_arg: &U) -> Self {$/;"	P	implementation:WrapSame
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    pub fn new(t: T, _u: &U) -> (T, Self) {$/;"	P	implementation:MatchBorrow
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    pub fn new() -> Self {$/;"	P	implementation:DirBuilder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn new() -> OpenOptions {$/;"	P	implementation:OpenOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn new(inner: T) -> io::Result<Self>$/;"	P	implementation:AsyncFd
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn new(io: E) -> io::Result<Self> {$/;"	P	implementation:PollEvented
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn new(buf: &'a mut [u8]) -> ReadBuf<'a> {$/;"	P	implementation:ReadBuf
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn new() -> Self {$/;"	P	implementation:tests::LoggingMockWriter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    pub(crate) fn new(inner: W) -> Self {$/;"	P	implementation:SplitByUtf8BoundaryIfWindows
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn new(inner: R) -> Self {$/;"	P	implementation:BufReader
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn new(stream: RW) -> BufStream<RW> {$/;"	P	implementation:BufStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn new(inner: W) -> Self {$/;"	P	implementation:BufWriter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    pub(super) fn new() -> Self {$/;"	P	implementation:CopyBuffer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn new(max_buf_size: usize) -> Self {$/;"	P	implementation:Pipe
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn new(mut vec: V) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^        pub(crate) fn new(t: T) -> Mutex<T> {$/;"	P	implementation:sync::Mutex
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    pub(crate) const fn new(val: u16) -> AtomicU16 {$/;"	P	implementation:AtomicU16
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    pub(crate) const fn new(val: u32) -> AtomicU32 {$/;"	P	implementation:AtomicU32
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_const_new.rs	/^    pub(crate) const fn new(val: u64) -> Self {$/;"	P	implementation:AtomicU64
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) const fn new(val: u64) -> StaticAtomicU64 {$/;"	P	implementation:StaticAtomicU64
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_static_once_cell.rs	/^    pub(crate) fn new(val: u64) -> Self {$/;"	P	implementation:AtomicU64
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    pub(crate) const fn new(val: usize) -> AtomicUsize {$/;"	P	implementation:AtomicUsize
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^    pub(crate) fn new(t: T) -> Mutex<T> {$/;"	P	implementation:Mutex
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn new() -> Condvar {$/;"	P	implementation:Condvar
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn new(t: T) -> Mutex<T> {$/;"	P	implementation:Mutex
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn new(t: T) -> RwLock<T> {$/;"	P	implementation:RwLock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^    pub(crate) const fn new(data: T) -> UnsafeCell<T> {$/;"	P	implementation:UnsafeCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    fn new(domain: socket2::Domain) -> io::Result<TcpSocket> {$/;"	P	implementation:TcpSocket
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(crate) fn new(connected: mio::net::TcpStream) -> io::Result<TcpStream> {$/;"	P	implementation:TcpStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn new(socket: mio::net::UdpSocket) -> io::Result<UdpSocket> {$/;"	P	implementation:UdpSocket
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn new(socket: mio::net::UnixDatagram) -> io::Result<UnixDatagram> {$/;"	P	implementation:UnixDatagram
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn new() -> OpenOptions {$/;"	P	implementation:OpenOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(crate) fn new(stream: mio::net::UnixStream) -> io::Result<UnixStream> {$/;"	P	implementation:UnixStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ClientOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn new() -> ServerOptions {$/;"	P	implementation:ServerOptions
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn new() -> Self {$/;"	P	implementation:test::Mock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn new<S: AsRef<OsStr>>(program: S) -> Command {$/;"	P	implementation:Command
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn new(num_wait_until_status: usize) -> Self {$/;"	P	implementation:test::MockWait
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        pub(crate) fn new() -> Self {$/;"	P	implementation:test::MockQueue
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn new(status: ExitStatus, num_wait_until_status: usize) -> Self {$/;"	P	implementation:test::MockWait
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn new(values: Vec<Option<()>>) -> Self {$/;"	P	implementation:test::MockStream
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    pub(crate) fn new(inner: W, orphan_queue: Q, signal: S) -> Self {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn new(builder: &Builder, thread_cap: usize) -> BlockingPool {$/;"	P	implementation:BlockingPool
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn new(task: task::UnownedTask<BlockingSchedule>, mandatory: Mandatory) -> Task {$/;"	P	implementation:Task
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^    pub(crate) fn new(handle: &Handle) -> Self {$/;"	P	implementation:BlockingSchedule
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^    pub(crate) fn new(func: T) -> BlockingTask<T> {$/;"	P	implementation:BlockingTask
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(crate) fn new(kind: Kind, global_queue_interval: u32, event_interval: u32) -> Builder {$/;"	P	implementation:Builder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    pub(crate) fn new() -> Defer {$/;"	P	implementation:Defer
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn new(cfg: Cfg) -> io::Result<(Self, Handle)> {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn new(allocator: slab::Allocator<ScheduledIo>) -> Self {$/;"	P	implementation:IoDispatcher
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn new(nevents: usize) -> io::Result<(Driver, Handle)> {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn new() -> MetricsBatch {$/;"	P	implementation:MetricsBatch
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:MetricsBatch
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:SchedulerMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:WorkerMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub(crate) fn new(handle: Handle) -> RuntimeMetrics {$/;"	P	implementation:RuntimeMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(crate) fn new() -> SchedulerMetrics {$/;"	P	implementation:SchedulerMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) fn new() -> WorkerMetrics {$/;"	P	implementation:WorkerMetrics
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn new() -> CachedParkThread {$/;"	P	implementation:CachedParkThread
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:ParkThread
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    pub(crate) fn new(park: SignalDriver) -> Self {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn new($/;"	P	implementation:CurrentThread
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn new(num_workers: usize) -> State {$/;"	P	implementation:State
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn new(num_workers: usize) -> Idle {$/;"	P	implementation:Idle
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^    pub(crate) fn new($/;"	P	implementation:MultiThread
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn new(driver: Driver) -> Parker {$/;"	P	implementation:Parker
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn new(io: io::Driver, io_handle: &io::Handle) -> std_io::Result<Self> {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    pub(super) fn new(raw: RawTask) -> Self {$/;"	P	implementation:AbortHandle
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn new(future: T, scheduler: S, state: State, task_id: Id) -> Box<Cell<T, S>> {$/;"	P	implementation:Cell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn new() -> Inject<T> {$/;"	P	implementation:Inject
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub(super) fn new(raw: RawTask) -> JoinHandle<T> {$/;"	P	implementation:JoinHandle
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:LocalOwnedTasks
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:OwnedTasks
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn new<T, S>(task: T, scheduler: S, id: Id) -> RawTask$/;"	P	implementation:RawTask
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn new() -> State {$/;"	P	implementation:State
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        pub(super) fn new(value: T) -> Self {$/;"	P	implementation:atomic_take::AtomicTake
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn new(sender: oneshot::Sender<T>) -> Self {$/;"	P	implementation:AtomicOneshot
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn new() -> (Self, AssertDropHandle) {$/;"	P	implementation:AssertDrop
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn new(rt: CombiRuntime, ls: CombiLocalSet) -> Self {$/;"	P	implementation:test_combination::Rt
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn new() -> Self {$/;"	P	implementation:StateCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn new(handle: &scheduler::Handle, deadline: Instant) -> Self {$/;"	P	implementation:TimerEntry
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn new() -> Self {$/;"	P	implementation:TimerShared
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(crate) fn new(park: IoStack, clock: &Clock) -> (Driver, Handle) {$/;"	P	implementation:Driver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn new(clock: &Clock) -> Self {$/;"	P	implementation:TimeSource
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) fn new(level: usize) -> Level {$/;"	P	implementation:Level
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn new() -> Wheel {$/;"	P	implementation:Wheel
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^    fn new(rx: Receiver<()>) -> Self {$/;"	P	implementation:RxFuture
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn new(storage: S) -> Self {$/;"	P	implementation:Registry
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn new<F>(future: F) -> Self$/;"	P	implementation:ReusableBoxFuture
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^fn new(signum: u32) -> io::Result<RxFuture> {$/;"	f
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    pub fn new(mut n: usize) -> Barrier {$/;"	P	implementation:Barrier
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn new($/;"	P	implementation:Waiter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn new(semaphore: &'a Semaphore, num_permits: u32) -> Self {$/;"	P	implementation:Acquire
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn new(permits: usize) -> Self {$/;"	P	implementation:Semaphore
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn new(receiver: &'a mut Receiver<T>) -> Recv<'a, T> {$/;"	P	implementation:Recv
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn new(start_index: usize) -> Box<Block<T>> {$/;"	P	implementation:Block
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub(crate) fn new(chan: chan::Rx<T, Semaphore>) -> Receiver<T> {$/;"	P	implementation:Receiver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub(crate) fn new(chan: chan::Tx<T, Semaphore>) -> Sender<T> {$/;"	P	implementation:Sender
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn new(chan: Arc<Chan<T, S>>) -> Rx<T, S> {$/;"	P	implementation:Rx
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn new(chan: Arc<Chan<T, S>>) -> Tx<T, S> {$/;"	P	implementation:Tx
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub(crate) fn new(chan: chan::Rx<T, Semaphore>) -> UnboundedReceiver<T> {$/;"	P	implementation:UnboundedReceiver
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub(crate) fn new(chan: chan::Tx<T, Semaphore>) -> UnboundedSender<T> {$/;"	P	implementation:UnboundedSender
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn new(t: T) -> Self$/;"	P	implementation:Mutex
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn new($/;"	P	implementation:NotifyWaitersList
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn new() -> Waiter {$/;"	P	implementation:Waiter
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn new() -> Notify {$/;"	P	implementation:Notify
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn new() -> Self {$/;"	P	implementation:OnceCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn new() -> State {$/;"	P	implementation:State
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn new(value: T) -> RwLock<T>$/;"	P	implementation:RwLock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn new(permits: usize) -> Self {$/;"	P	implementation:Semaphore
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    pub(crate) fn new() -> AtomicWaker {$/;"	P	implementation:AtomicWaker
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^    fn new(tx: &'a mut oneshot::Sender<i32>) -> Self {$/;"	P	implementation:OnClose
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn new() -> Self {$/;"	P	implementation:big_notify::BigNotify
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn new() -> Self {$/;"	P	implementation:state::AtomicState
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Builder
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn new() -> Self {$/;"	P	implementation:JoinSet
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub fn new() -> LocalSet {$/;"	P	implementation:LocalSet
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:Elapsed
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    pub(crate) fn new(data: Option<Box<T>>) -> AtomicCell<T> {$/;"	P	implementation:AtomicCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:IdleNotifiedSet
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) const fn new() -> LinkedList<L, T> {$/;"	P	implementation:LinkedList
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn new() -> Pointers<T> {$/;"	P	implementation:Pointers
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    pub(crate) const fn new() -> Self {$/;"	P	implementation:OnceCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:RngSeed
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    pub(crate) fn new(seed: RngSeed) -> FastRand {$/;"	P	implementation:FastRand
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) const fn new() -> Self {$/;"	P	implementation:RcCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:RcCell
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pub(crate) fn new() -> Slab<T> {$/;"	P	implementation:Slab
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^    pub(crate) fn new(value: T) -> Self {$/;"	P	implementation:SyncWrapper
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    pub(crate) const fn new(data: T) -> TryLock<T> {$/;"	P	implementation:TryLock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    pub(crate) fn new(data: T) -> TryLock<T> {$/;"	P	implementation:TryLock
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^macro_rules! new {$/;"	M
new	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:WakeList
new_category	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn new_category() -> Self {$/;"	P	implementation:BucketBuilder
new_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn new_channel() -> Self {$/;"	P	implementation:BucketBuilder
new_current_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn new_current_thread() -> Builder {$/;"	P	implementation:Builder
new_for_aio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn new_for_aio(io: E) -> io::Result<Self> {$/;"	P	implementation:Aio
new_for_lio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn new_for_lio(io: E) -> io::Result<Self> {$/;"	P	implementation:Aio
new_global	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn new_global() -> Self {$/;"	P	implementation:BucketBuilder
new_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn new_guild() -> Self {$/;"	P	implementation:BucketBuilder
new_no_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub(crate) fn new_no_context() -> Self {$/;"	P	implementation:TryCurrentError
new_password	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_profile.rs	/^    pub fn new_password(&mut self, new_password: &str) -> &mut Self {$/;"	P	implementation:EditProfile
new_receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^fn new_receiver<T>(shared: Arc<Shared<T>>) -> Receiver<T> {$/;"	f
new_thread_local_destroyed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub(crate) fn new_thread_local_destroyed() -> Self {$/;"	P	implementation:TryCurrentError
new_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub(crate) fn new_timeout($/;"	P	implementation:Sleep
new_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn new_user() -> Self {$/;"	P	implementation:BucketBuilder
new_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn new_v4() -> io::Result<TcpSocket> {$/;"	P	implementation:TcpSocket
new_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn new_v6() -> io::Result<TcpSocket> {$/;"	P	implementation:TcpSocket
new_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn new_with(value: Option<T>) -> Self {$/;"	P	implementation:OnceCell
new_with_application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn new_with_application_id(token: &str, application_id: u64) -> Self {$/;"	P	implementation:Http
new_with_delay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    pub(crate) fn new_with_delay(value: T, delay: Sleep) -> Timeout<T> {$/;"	P	implementation:Timeout
new_with_handle_and_interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub(crate) fn new_with_handle_and_interest($/;"	P	implementation:AsyncFd
new_with_http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn new_with_http(http: Http, intents: GatewayIntents) -> Self {$/;"	P	implementation:ClientBuilder
new_with_interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn new_with_interest(io: E, interest: Interest) -> io::Result<Self> {$/;"	P	implementation:Aio
new_with_interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn new_with_interest(io: E, interest: Interest) -> io::Result<Self> {$/;"	P	implementation:PollEvented
new_with_interest_and_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn new_with_interest_and_handle($/;"	P	implementation:PollEvented
new_with_interest_and_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn new_with_interest_and_handle($/;"	P	implementation:Registration
new_with_settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn new_with_settings(settings: Settings) -> Self {$/;"	P	implementation:Cache
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:MessageIterator
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Iter
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:RawArguments
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^            fn next(&mut self) -> Option<task::Notified<T>> {$/;"	P	implementation:Local::push_overflow::BatchTaskIter
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^    pub(crate) fn next() -> Self {$/;"	P	implementation:Id
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/thread_id.rs	/^    pub(crate) fn next() -> Self {$/;"	P	implementation:ThreadId
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    next: u64,$/;"	m	struct:Receiver
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    next: AtomicPtr<Block<T>>,$/;"	m	struct:BlockHeader
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        next: AtomicUsize,$/;"	m	struct:big_notify::BigNotify
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    next: Option<NonNull<T>>,$/;"	m	struct:PointersInner
next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    next: u32,$/;"	m	struct:Slot
next_chunk	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    fn next_chunk(buf: &mut VecDeque<io::Result<DirEntry>>, std: &mut StdReadDir) {$/;"	P	implementation:ReadDir
next_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub async fn next_entry(&mut self) -> io::Result<Option<DirEntry>> {$/;"	P	implementation:ReadDir
next_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) fn next_expiration(&self, now: u64) -> Option<Expiration> {$/;"	P	implementation:Level
next_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn next_expiration(&self) -> Option<Expiration> {$/;"	P	implementation:Wheel
next_expiration_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(super) fn next_expiration_time(&self) -> Option<u64> {$/;"	P	implementation:Wheel
next_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub async fn next_line(&mut self) -> io::Result<Option<String>> {$/;"	f
next_local_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn next_local_task(&mut self) -> Option<Notified> {$/;"	P	implementation:Core
next_occupied_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    fn next_occupied_slot(&self, now: u64) -> Option<usize> {$/;"	P	implementation:Level
next_segment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^    pub async fn next_segment(&mut self) -> io::Result<Option<Vec<u8>>> {$/;"	f
next_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn next_task(&mut self, worker: &Worker) -> Option<Notified> {$/;"	P	implementation:Core
next_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn next_task(&self) -> task::Notified<Runtime> {$/;"	P	implementation:Runtime
next_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn next_task(&self) -> Option<task::LocalNotified<Arc<Shared>>> {$/;"	P	implementation:LocalSet
next_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    fn next_timeout(&self, timeout: Instant, now: Instant, period: Duration) -> Instant {$/;"	P	implementation:MissedTickBehavior
next_wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    next_wake: Option<NonZeroU64>,$/;"	m	struct:InnerState
nick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub nick: Option<String>,$/;"	m	struct:GuildMemberUpdateEvent
nick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub nick: Option<String>,$/;"	m	struct:InterimMember
nick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub nick: Option<String>,$/;"	m	struct:Member
nick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub nick: Option<String>,$/;"	m	struct:PartialMember
nick_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn nick_in($/;"	P	implementation:User
nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/add_member.rs	/^    pub fn nickname(&mut self, nickname: impl ToString) -> &mut Self {$/;"	P	implementation:AddMember
nickname	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn nickname<S: ToString>(&mut self, nickname: S) -> &mut Self {$/;"	P	implementation:EditMember
no_compaction_if_page_still_in_use	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn no_compaction_if_page_still_in_use() {$/;"	f	module:test
no_dm_prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn no_dm_prefix(&mut self, b: bool) -> &mut Self {$/;"	P	implementation:Configuration
no_dm_prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub no_dm_prefix: bool,$/;"	m	struct:Configuration
no_expirations_before	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn no_expirations_before(&self, start_level: usize, before: u64) -> bool {$/;"	P	implementation:Wheel
no_free_formatting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn no_free_formatting() {$/;"	f	module:test
no_help_available_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub no_help_available_text: &'static str,$/;"	m	struct:HelpOptions
no_kill_if_already_killed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn no_kill_if_already_killed() {$/;"	f	module:test
no_kill_if_reaped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn no_kill_if_reaped() {$/;"	f	module:test
no_kill_on_drop_by_default	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn no_kill_on_drop_by_default() {$/;"	f	module:test
no_reap_if_no_signal_received	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn no_reap_if_no_signal_received() {$/;"	f	module:test
no_reap_if_signal_lock_held	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn no_reap_if_signal_lock_held() {$/;"	f	module:test
node	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    node: Waiter,$/;"	m	struct:Acquire
nodelay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn nodelay(&self) -> io::Result<bool> {$/;"	P	implementation:TcpStream
non_premium_subscriber_role_serde	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn non_premium_subscriber_role_serde() {$/;"	f	module:tests
non_privileged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub const fn non_privileged() -> GatewayIntents {$/;"	P	implementation:GatewayIntents
nonce	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub nonce: Value,$/;"	m	struct:Message
nonce	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub nonce: Option<String>,$/;"	m	struct:GuildMembersChunkEvent
nonce	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub nonce: Option<String>,$/;"	m	struct:MessageUpdateEvent
noop_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    noop_count: u64,$/;"	m	struct:MetricsBatch
noop_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) noop_count: AtomicU64,$/;"	m	struct:WorkerMetrics
noop_scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^mod noop_scheduler {$/;"	n
normal_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    normal_message: Option<NormalMessageHook>,$/;"	m	struct:StandardFramework
normal_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn normal_message(mut self, f: NormalMessageHook) -> Self {$/;"	P	implementation:StandardFramework
normal_or_miri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^const fn normal_or_miri(normal: usize, miri: usize) -> usize {$/;"	f
normal_or_miri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn normal_or_miri<T>(normal: T, miri: T) -> T {$/;"	f
normal_or_miri	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    const fn normal_or_miri(normal: usize, miri: usize) -> usize {$/;"	f	module:test
normalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn normalize() {$/;"	f	module:test
normalize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^fn normalize(text: &str) -> String {$/;"	f
notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    notified: Option<NotificationType>,$/;"	m	struct:Waiter
notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn notified(&self) -> Notified<'_> {$/;"	P	implementation:Notify
notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn notified(&self) -> Notified<'_> {$/;"	P	implementation:big_notify::BigNotify
notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    notified: LinkedList<T>,$/;"	m	struct:ListsInner
notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    notify: Notify,$/;"	m	struct:CurrentThread
notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    notify: Notify,$/;"	m	struct:Inner
notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    notify: &'a Notify,$/;"	m	struct:Notified
notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    notify: &'a Notify,$/;"	m	struct:NotifyWaitersList
notify_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn notify_all(&self) {$/;"	P	implementation:Condvar
notify_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn notify_all(&self) {$/;"	P	implementation:Handle
notify_clones_waker_before_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^fn notify_clones_waker_before_lock() {$/;"	f
notify_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_drop() {$/;"	f
notify_if_work_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn notify_if_work_pending(&self) {$/;"	P	implementation:Handle
notify_locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn notify_locked(waiters: &mut WaitList, state: &AtomicUsize, curr: usize) -> Option<Waker> {$/;"	f
notify_multi	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_multi() {$/;"	f
notify_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn notify_one(&self) {$/;"	P	implementation:Condvar
notify_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn notify_one(&self) {$/;"	P	implementation:Notify
notify_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_one() {$/;"	f
notify_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn notify_parked(&self) {$/;"	P	implementation:Handle
notify_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn notify_rx(&mut self) {$/;"	P	implementation:Tail
notify_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    notify_rx: big_notify::BigNotify,$/;"	m	struct:Shared
notify_rx_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    notify_rx_closed: Notify,$/;"	m	struct:Chan
notify_should_wakeup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn notify_should_wakeup(&self) -> bool {$/;"	P	implementation:Idle
notify_simple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^fn notify_simple() {$/;"	f
notify_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    notify_tx: Notify,$/;"	m	struct:Shared
notify_waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pub fn notify_waiters(&self) {$/;"	P	implementation:Notify
notify_waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters() {$/;"	f
notify_waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn notify_waiters(&self) {$/;"	P	implementation:big_notify::BigNotify
notify_waiters_and_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_and_one() {$/;"	f
notify_waiters_calls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    notify_waiters_calls: usize,$/;"	m	struct:Notified
notify_waiters_handles_panicking_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^fn notify_waiters_handles_panicking_waker() {$/;"	f
notify_waiters_is_atomic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_is_atomic() {$/;"	f
notify_waiters_is_atomic_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^    fn notify_waiters_is_atomic_variant(tested_fut_index: usize) {$/;"	f	function:notify_waiters_is_atomic
notify_waiters_poll_consistency	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_poll_consistency() {$/;"	f
notify_waiters_poll_consistency_many	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_poll_consistency_many() {$/;"	f
notify_waiters_poll_consistency_many_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^    fn notify_waiters_poll_consistency_many_variant(order: [usize; 2]) {$/;"	f	function:notify_waiters_poll_consistency_many
notify_waiters_poll_consistency_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^    fn notify_waiters_poll_consistency_variant(poll_setting: [bool; 2]) {$/;"	f	function:notify_waiters_poll_consistency
notify_waiters_sequential_notified_await	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_notify.rs	/^fn notify_waiters_sequential_notified_await() {$/;"	f
now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn now(&self, clock: &Clock) -> u64 {$/;"	P	implementation:TimeSource
now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn now() -> Instant {$/;"	P	implementation:Instant
now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub(super) fn now() -> Instant {$/;"	f	module:variant
nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn nsfw(&mut self, b: bool) -> &mut Self {$/;"	P	implementation:CreateChannel
nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn nsfw(&mut self, nsfw: bool) -> &mut Self {$/;"	P	implementation:EditChannel
nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub nsfw: bool,$/;"	m	struct:ChannelCategory
nsfw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub nsfw: bool,$/;"	m	struct:GuildChannel
nsfw_checks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^        fn nsfw_checks() {$/;"	f	module:test::model_utils
nsfw_level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub nsfw_level: NsfwLevel,$/;"	m	struct:Guild
nsfw_level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub nsfw_level: NsfwLevel,$/;"	m	struct:PartialGuild
num	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub fn num(self) -> u8 {$/;"	P	implementation:Action
num	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^    num: AtomicUsize,$/;"	m	struct:Chan
num_blocking_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn num_blocking_threads(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
num_cpus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    pub(crate) fn num_cpus() -> usize {$/;"	f	module:sys
num_cpus	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    pub(crate) fn num_cpus() -> usize {$/;"	f	module:sys
num_idle_blocking_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn num_idle_blocking_threads(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
num_idle_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn num_idle_threads(&self) -> usize {$/;"	P	implementation:SpawnerMetrics
num_idle_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    num_idle_threads: AtomicUsize,$/;"	m	struct:SpawnerMetrics
num_initialized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    num_initialized: usize,$/;"	m	struct:VecWithInitialized
num_kills	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        num_kills: usize,$/;"	m	struct:test::Mock
num_notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    num_notify: u32,$/;"	m	struct:Shared
num_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    num_permits: u32,$/;"	m	struct:Acquire
num_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        num_polls: usize,$/;"	m	struct:test::Mock
num_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    num_polls: Arc<AtomicUsize>,$/;"	m	struct:BlockedFuture
num_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn num_searching(self) -> usize {$/;"	P	implementation:State
num_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn num_threads(&self) -> usize {$/;"	P	implementation:SpawnerMetrics
num_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    num_threads: AtomicUsize,$/;"	m	struct:SpawnerMetrics
num_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    num_tx: AtomicUsize,$/;"	m	struct:Shared
num_unparked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn num_unparked(self) -> usize {$/;"	P	implementation:State
num_wait_until_status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        num_wait_until_status: usize,$/;"	m	struct:test::MockWait
num_wait_until_status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        num_wait_until_status: usize,$/;"	m	struct:test::MockWait
num_workers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn num_workers(&self) -> usize {$/;"	P	implementation:RuntimeMetrics
num_workers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    num_workers: usize,$/;"	m	struct:Idle
oauth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^pub mod oauth;$/;"	n
oauth2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod oauth2 {$/;"	n
oauth2_application_current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn oauth2_application_current() -> &'static str {$/;"	P	implementation:Route
observed_tail_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    observed_tail_position: UnsafeCell<usize>,$/;"	m	struct:BlockHeader
observed_tail_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) fn observed_tail_position(&self) -> Option<usize> {$/;"	P	implementation:Block
occupied	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    occupied: u64,$/;"	m	struct:Level
occupied_bit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^fn occupied_bit(slot: usize) -> u64 {$/;"	f
offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    offset: usize,$/;"	m	struct:Args
offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^pub(crate) fn offset(slot_index: usize) -> usize {$/;"	f
old	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/event.rs	/^    pub old: ConnectionStage,$/;"	m	struct:ShardStageUpdateEvent
on_dispatch_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn on_dispatch_error(mut self, f: DispatchHook) -> Self {$/;"	P	implementation:StandardFramework
on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        on_drop: Option<oneshot::Sender<()>>,$/;"	m	struct:test_combination::FutWrapper
on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        on_drop: Option<oneshot::Sender<()>>,$/;"	m	struct:test_combination::Output
on_first_poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        on_first_poll: Option<oneshot::Sender<()>>,$/;"	m	struct:test_combination::Signals
on_mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn on_mention(&mut self, id_to_mention: Option<UserId>) -> &mut Self {$/;"	P	implementation:Configuration
on_mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub on_mention: Option<String>,$/;"	m	struct:Configuration
on_output_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        on_output_drop: Option<oneshot::Sender<()>>,$/;"	m	struct:test_combination::Signals
on_thread_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn on_thread_park<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
on_thread_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn on_thread_start<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
on_thread_stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn on_thread_stop<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
on_thread_unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn on_thread_unpark<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
once	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    once: Once,$/;"	m	struct:OnceCell
once_cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod once_cell;$/;"	n
one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    one: Cell<u32>,$/;"	m	struct:FastRand
online	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn online(&self) {$/;"	P	implementation:Context
only_blocking_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn only_blocking_inner(first_pending: bool) {$/;"	f	module:group_a
only_blocking_with_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn only_blocking_with_pending() {$/;"	f	module:group_a
only_blocking_without_pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn only_blocking_without_pending() {$/;"	f	module:group_a
only_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn only_in(&self) -> OnlyIn {$/;"	P	implementation:CommandOptions
only_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn only_in(&self) -> OnlyIn {$/;"	P	implementation:GroupOptions
only_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn only_in(&self) -> OnlyIn;$/;"	P	interface:CommonOptions
only_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub only_in: OnlyIn,$/;"	m	struct:CommandOptions
only_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub only_in: OnlyIn,$/;"	m	struct:GroupOptions
open	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn open(path: impl AsRef<Path>) -> io::Result<File> {$/;"	P	implementation:File
open	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub async fn open(&self, path: impl AsRef<Path>) -> io::Result<File> {$/;"	P	implementation:OpenOptions
open	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn open(&self, path: &Path, pipe_end: PipeEnd) -> io::Result<File> {$/;"	P	implementation:OpenOptions
open	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn open(&self, addr: impl AsRef<OsStr>) -> io::Result<NamedPipeClient> {$/;"	P	implementation:ClientOptions
open_options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod open_options;$/;"	n
open_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn open_read() {$/;"	f
open_receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn open_receiver<P: AsRef<Path>>(&self, path: P) -> io::Result<Receiver> {$/;"	P	implementation:OpenOptions
open_sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn open_sender<P: AsRef<Path>>(&self, path: P) -> io::Result<Sender> {$/;"	P	implementation:OpenOptions
open_set_len_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn open_set_len_err() {$/;"	f
open_set_len_ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn open_set_len_ok() {$/;"	f
open_with_security_attributes_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub unsafe fn open_with_security_attributes_raw($/;"	P	implementation:ClientOptions
open_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn open_write() {$/;"	f
opt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^            opt: Option<u64>,$/;"	m	struct:tests::optional_string_module::T
optimal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub optimal: bool,$/;"	m	struct:VoiceRegion
option	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub(crate) mod option {$/;"	n	module:discriminator
optional_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^pub mod optional_string {$/;"	n
optional_string_module	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^    fn optional_string_module() {$/;"	f	module:tests
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn options<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:CreateSelectMenu
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    options: FilterOptions,$/;"	m	struct:ComponentInteractionFilter
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    options: FilterOptions,$/;"	m	struct:EventFilter
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    options: FilterOptions,$/;"	m	struct:MessageFilter
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    options: FilterOptions,$/;"	m	struct:ModalInteractionFilter
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    options: FilterOptions,$/;"	m	struct:ReactionFilter
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub options: &'static CommandOptions,$/;"	m	struct:Command
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub options: &'static GroupOptions,$/;"	m	struct:CommandGroup
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub options: &'static HelpOptions,$/;"	m	struct:HelpCommand
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub options: Vec<CommandOption>,$/;"	m	struct:Command
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub options: Vec<CommandOption>,$/;"	m	struct:CommandOption
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub options: Vec<SelectMenuOption>,$/;"	m	struct:SelectMenu
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub options: Vec<CommandDataOption>,$/;"	m	struct:CommandData
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub options: Vec<CommandDataOption>,$/;"	m	struct:CommandDataOption
options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub options: Option<Options>,$/;"	m	struct:AuditLogEntry
orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) mod orphan;$/;"	n
orphan_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    orphan_queue: Q,$/;"	m	struct:Reaper
os	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/mod.rs	/^pub mod os;$/;"	n
os	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^mod os {$/;"	n
out_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    out_buffer_size: u32,$/;"	m	struct:ServerOptions
out_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn out_buffer_size(&mut self, buffer: u32) -> &mut Self {$/;"	P	implementation:ServerOptions
out_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub out_buffer_size: u32,$/;"	m	struct:PipeInfo
output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn output(&mut self) -> impl Future<Output = io::Result<Output>> {$/;"	P	implementation:Command
output_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    pub fn output_mut(self: Pin<&mut Self>) -> Option<&mut Fut::Output> {$/;"	P	implementation:MaybeDone
overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn overflow() {$/;"	f
overflow_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    overflow_count: u64,$/;"	m	struct:MetricsBatch
overflow_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) overflow_count: AtomicU64,$/;"	m	struct:WorkerMetrics
overflow_length	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub fn overflow_length(content: &str) -> Option<usize> {$/;"	P	implementation:Message
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    owned: OwnedTasks<Arc<Handle>>,$/;"	m	struct:Shared
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) owned: OwnedTasks<Arc<Handle>>,$/;"	m	struct:Shared
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) owned: linked_list::Pointers<Header>,$/;"	m	struct:Trailer
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    owned: OwnedTasks<Runtime>,$/;"	m	struct:Inner
owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    owned: LocalOwnedTasks<Arc<Shared>>,$/;"	m	struct:LocalState
owned_is_empty	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn owned_is_empty(&self) -> bool {$/;"	P	implementation:LocalState
owned_read_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod owned_read_guard;$/;"	n
owned_write_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod owned_write_guard;$/;"	n
owned_write_guard_mapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod owned_write_guard_mapped;$/;"	n
owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn owner<U: Into<UserId>>(&mut self, user_id: U) -> &mut Self {$/;"	P	implementation:EditGuild
owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub owner: User,$/;"	m	struct:CurrentApplicationInfo
owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub owner: bool,$/;"	m	struct:GuildInfo
owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub owner: bool,$/;"	m	struct:PartialGuild
owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    owner: ThreadId,$/;"	m	struct:LocalState
owner_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub owner_id: UserId,$/;"	m	struct:Guild
owner_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub owner_id: UserId,$/;"	m	struct:PartialGuild
owner_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) owner_id: UnsafeCell<u64>,$/;"	m	struct:Header
owner_privilege	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn owner_privilege(&self) -> bool {$/;"	P	implementation:CommandOptions
owner_privilege	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn owner_privilege(&self) -> bool {$/;"	P	implementation:GroupOptions
owner_privilege	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn owner_privilege(&self) -> bool;$/;"	P	interface:CommonOptions
owner_privilege	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub owner_privilege: bool,$/;"	m	struct:CommandOptions
owner_privilege	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub owner_privilege: bool,$/;"	m	struct:GroupOptions
owner_user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub owner_user_id: UserId,$/;"	m	struct:Team
owners	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn owners(&mut self, user_ids: HashSet<UserId>) -> &mut Self {$/;"	P	implementation:Configuration
owners	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub owners: HashSet<UserId>,$/;"	m	struct:Configuration
owners_only	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn owners_only(&self) -> bool {$/;"	P	implementation:CommandOptions
owners_only	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn owners_only(&self) -> bool {$/;"	P	implementation:GroupOptions
owners_only	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn owners_only(&self) -> bool;$/;"	P	interface:CommonOptions
owners_only	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub owners_only: bool,$/;"	m	struct:CommandOptions
owners_only	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub owners_only: bool,$/;"	m	struct:GroupOptions
pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^fn pack(steal: UnsignedShort, real: UnsignedShort) -> UnsignedLong {$/;"	f
pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) fn pack(&self, value: usize, base: usize) -> usize {$/;"	P	implementation:Pack
pack_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    pub pack_id: Option<StickerPackId>,$/;"	m	struct:Sticker
pack_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub pack_id: Option<StickerPackId>,$/;"	m	struct:Sticker
pack_lossy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) fn pack_lossy(&self, value: usize, base: usize) -> usize {$/;"	P	implementation:Pack
page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn page(self) -> usize {$/;"	P	implementation:Address
page	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    page: *const Page<T>,$/;"	m	struct:Value
page_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub page_id: String,$/;"	m	struct:Incident
paged	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn paged(_pool: E) -> TryCollectFut<'e, Self> {$/;"	P	interface:Crud
pages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pages: [Arc<Page<T>>; NUM_PAGES],$/;"	m	struct:Allocator
pages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    pages: [Arc<Page<T>>; NUM_PAGES],$/;"	m	struct:Slab
pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)> {$/;"	P	implementation:UnixDatagram
pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn pair() -> io::Result<(UnixStream, UnixStream)> {$/;"	P	implementation:UnixStream
panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub(crate) fn panic(id: Id, err: Box<dyn Any + Send + 'static>) -> JoinError {$/;"	P	implementation:JoinError
panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn panic(&self) -> ! {$/;"	P	implementation:ScopeInnerErr
panic_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        panic_on_drop: bool,$/;"	m	struct:test_combination::FutWrapper
panic_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        panic_on_drop: bool,$/;"	m	struct:test_combination::Output
parent	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    parent: Arc<Lists<T>>,$/;"	m	struct:ListEntry
parent_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub parent_id: Option<ChannelId>,$/;"	m	struct:ChannelCategory
parent_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub parent_id: ChannelId,$/;"	m	struct:PartialGuildChannel
parent_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub parent_id: Option<ChannelId>,$/;"	m	struct:GuildChannel
parent_task_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    parent_task_id: Option<Id>,$/;"	m	struct:TaskIdGuard
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn park(&mut self, handle: &Handle) {$/;"	P	implementation:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn park(&mut self, rt_handle: &driver::Handle) {$/;"	P	implementation:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^pub(crate) mod park;$/;"	n
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn park(&self) {$/;"	P	implementation:Inner
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn park(&mut self) {$/;"	P	implementation:CachedParkThread
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn park(&mut self) {$/;"	P	implementation:ParkThread
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    park: SignalDriver,$/;"	m	struct:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    pub(crate) fn park(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn park(&self, mut core: Box<Core>, handle: &Handle) -> Box<Core> {$/;"	P	implementation:Context
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^mod park;$/;"	n
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn park(&self, handle: &driver::Handle) {$/;"	P	implementation:Inner
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn park(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Parker
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn park(&self, mut core: Box<Core>) -> Box<Core> {$/;"	P	implementation:Context
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    park: Option<Parker>,$/;"	m	struct:Core
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn park(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    park: IoStack,$/;"	m	struct:Driver
park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(crate) fn park(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
park_condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn park_condvar(&self) {$/;"	P	implementation:Inner
park_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    park_count: u64,$/;"	m	struct:MetricsBatch
park_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) park_count: AtomicU64,$/;"	m	struct:WorkerMetrics
park_driver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn park_driver(&self, driver: &mut Driver, handle: &driver::Handle) {$/;"	P	implementation:Inner
park_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    fn park_internal(&mut self, rt_handle: &driver::Handle, limit: Option<Duration>) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &Handle, duration: Duration) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn park_timeout(&mut self, rt_handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn park_timeout(&self, dur: Duration) {$/;"	P	implementation:Inner
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn park_timeout(&mut self, duration: Duration) {$/;"	P	implementation:CachedParkThread
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn park_timeout(&mut self, duration: Duration) {$/;"	P	implementation:ParkThread
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Parker
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn park_timeout(&self, mut core: Box<Core>, duration: Option<Duration>) -> Box<Core> {$/;"	P	implementation:Context
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Driver
park_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(crate) fn park_timeout(&mut self, handle: &driver::Handle, duration: Duration) {$/;"	P	implementation:Driver
park_yield	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn park_yield(&self, mut core: Box<Core>, handle: &Handle) -> Box<Core> {$/;"	P	implementation:Context
parking_lot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod parking_lot;$/;"	n
parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    pub fn parse(&mut self, value: ParseValue) -> &mut Self {$/;"	P	implementation:CreateAllowedMentions
parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn parse(&mut self) -> Result<T, T::Err> {$/;"	P	implementation:Iter
parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn parse<T: FromStr>(&self) -> Result<T, T::Err> {$/;"	P	implementation:Args
parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^mod parse;$/;"	n
parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/token.rs	/^pub fn parse(token: impl AsRef<str>) -> Option<(UserId, i64)> {$/;"	f
parse_cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn parse_cached<CRL, F: FromStrAndCache>(&self, cache: CRL) -> Result<F, F::Err>$/;"	P	implementation:str
parse_cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn parse_cached<CRL, F: FromStrAndCache>(&self, cache: CRL) -> Result<F, F::Err>$/;"	P	interface:StrExt
parse_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn parse_channel(mention: impl AsRef<str>) -> Option<u64> {$/;"	f
parse_cmd	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^fn parse_cmd<'a>($/;"	f
parse_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn parse_emoji(mention: impl AsRef<str>) -> Option<EmojiIdentifier> {$/;"	f
parse_group	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^fn parse_group<'a>($/;"	f
parse_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^fn parse_header<T: FromStr>(headers: &HeaderMap, header: &str) -> Result<Option<T>> {$/;"	f
parse_invite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn parse_invite(code: &str) -> &str {$/;"	f
parse_mentions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^        fn parse_mentions() {$/;"	f	module:test::utils
parse_message_id_pair	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^pub fn parse_message_id_pair(s: &str) -> Option<(ChannelId, MessageId)> {$/;"	f
parse_message_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^pub fn parse_message_url(s: &str) -> Option<(GuildId, ChannelId, MessageId)> {$/;"	f
parse_quotes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn parse_quotes(s: impl AsRef<str>) -> Vec<String> {$/;"	f
parse_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn parse_role(mention: impl AsRef<str>) -> Option<u64> {$/;"	f
parse_token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^fn parse_token(token: impl AsRef<str>) -> String {$/;"	f
parse_user_tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn parse_user_tag(s: &str) -> Option<(&str, u16)> {$/;"	f
parse_username	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn parse_username(mention: impl AsRef<str>) -> Option<u64> {$/;"	f
parse_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn parse_webhook(url: &Url) -> Option<(u64, &str)> {$/;"	f
parsed_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    parsed_string: String,$/;"	m	struct:EmojiIdentifierParseError
partial_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod partial_channel;$/;"	n
partial_cmp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn partial_cmp(&self, other: &Role) -> Option<Ordering> {$/;"	P	implementation:Role
partial_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod partial_guild;$/;"	n
partial_read_set_len_ok	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn partial_read_set_len_ok() {$/;"	f
participant_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    participant_count: u64,$/;"	m	struct:InviteStageInstance
party	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub party: Option<ActivityParty>,$/;"	m	struct:Activity
party_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub party_id: Option<String>,$/;"	m	struct:MessageActivity
password	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_profile.rs	/^    pub fn password(&mut self, password: &str) -> &mut Self {$/;"	P	implementation:EditProfile
path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub path: String,$/;"	m	struct:DiscordJsonSingleError
path	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub fn path(&self) -> PathBuf {$/;"	P	implementation:DirEntry
payload_json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/multipart.rs	/^    pub payload_json: Option<Value>,$/;"	m	struct:Multipart
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn peek(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn peek(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn peek(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
peek_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn peek_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UdpSocket
peek_sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn peek_sender(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
peek_sender_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn peek_sender_inner(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:ReadHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:WriteHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedReadHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedWriteHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:TcpStream
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixDatagram
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:ReadHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:WriteHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedReadHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:OwnedWriteHalf
peer_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn peer_addr(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UnixStream
peer_cred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn peer_cred(&self) -> io::Result<UCred> {$/;"	P	implementation:UnixStream
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub pending: bool,$/;"	m	struct:GuildMemberUpdateEvent
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub pending: bool,$/;"	m	struct:InterimMember
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub pending: bool,$/;"	m	struct:Member
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub pending: bool,$/;"	m	struct:PartialMember
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pending: EntryList,$/;"	m	struct:Wheel
pending	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pending: AtomicBool,$/;"	m	struct:EventInfo
pending_cnt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    pending_cnt: Arc<AtomicUsize>,$/;"	m	struct:ResetFuture
perform	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub async fn perform(&self, req: RatelimitedRequest<'_>) -> Result<Response> {$/;"	P	implementation:Ratelimiter
period	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    period: Duration,$/;"	m	struct:Interval
period	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn period(&self) -> Duration {$/;"	P	implementation:Interval
permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn permission(&mut self, permission: bool) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandPermissionData
permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub permission: bool,$/;"	m	struct:CommandPermissionData
permission	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub permission: CommandPermission,$/;"	m	struct:ApplicationCommandPermissionsUpdateEvent
permission_overwrites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub permission_overwrites: Vec<PermissionOverwrite>,$/;"	m	struct:ChannelCategory
permission_overwrites	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub permission_overwrites: Vec<PermissionOverwrite>,$/;"	m	struct:GuildChannel
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    permissions: Permissions,$/;"	m	struct:CreateBotAuthParameters
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    pub fn permissions(&mut self, permissions: Permissions) -> &mut Self {$/;"	P	implementation:CreateBotAuthParameters
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn permissions<I>(&mut self, perms: I) -> &mut Self$/;"	P	implementation:CreateChannel
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn permissions<I>(&mut self, perms: I) -> &mut Self$/;"	P	implementation:EditChannel
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub fn permissions(&mut self, permissions: Permissions) -> &mut Self {$/;"	P	implementation:EditRole
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub permissions: Vec<String>,$/;"	m	struct:TeamMember
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub permissions: Vec<CommandPermissionData>,$/;"	m	struct:CommandPermission
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/partial_channel.rs	/^    pub permissions: Option<Permissions>,$/;"	m	struct:PartialChannel
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn permissions(&self, cache: impl AsRef<Cache>) -> Result<Permissions> {$/;"	P	implementation:Member
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub permissions: Option<Permissions>,$/;"	m	struct:InterimMember
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub permissions: Option<Permissions>,$/;"	m	struct:Member
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub permissions: Option<Permissions>,$/;"	m	struct:PartialMember
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub permissions: Permissions,$/;"	m	struct:GuildInfo
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub permissions: Option<String>,$/;"	m	struct:PartialGuild
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub permissions: Permissions,$/;"	m	struct:InterimRole
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub permissions: Permissions,$/;"	m	struct:Role
permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod permissions;$/;"	n
permissions_for_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn permissions_for_role($/;"	P	implementation:GuildChannel
permissions_for_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn permissions_for_user($/;"	P	implementation:GuildChannel
permissions_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^fn permissions_in($/;"	f
permissions_serde	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    fn permissions_serde() {$/;"	f	module:tests
permissions_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    fn permissions_variant() {$/;"	f	module:tests
permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    permits: AtomicUsize,$/;"	m	struct:Semaphore
permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    permits: u32,$/;"	m	struct:OwnedSemaphorePermit
permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    permits: u32,$/;"	m	struct:SemaphorePermit
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    permits_acquired: u32,$/;"	m	struct:Inner
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) permits_acquired: u32,$/;"	m	struct:OwnedRwLockWriteGuard
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    permits_acquired: u32,$/;"	m	struct:Inner
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) permits_acquired: u32,$/;"	m	struct:OwnedRwLockMappedWriteGuard
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    permits_acquired: u32,$/;"	m	struct:Inner
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) permits_acquired: u32,$/;"	m	struct:RwLockWriteGuard
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    permits_acquired: u32,$/;"	m	struct:Inner
permits_acquired	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) permits_acquired: u32,$/;"	m	struct:RwLockMappedWriteGuard
pid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pid: Option<unix::pid_t>,$/;"	m	struct:UCred
pid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub fn pid(&self) -> Option<unix::pid_t> {$/;"	P	implementation:UCred
pid_t	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub type pid_t = i32;$/;"	t
pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn pin(self, http: impl AsRef<Http>, message_id: impl Into<MessageId>) -> Result<(/;"	P	implementation:ChannelId
pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn pin($/;"	P	implementation:GuildChannel
pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn pin(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Message
pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn pin($/;"	P	implementation:PrivateChannel
pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod pin;$/;"	n
pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/pin.rs	/^macro_rules! pin {$/;"	M
pin_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn pin_message($/;"	P	implementation:Http
ping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn ping(self) -> Option<PingInteraction> {$/;"	P	implementation:Interaction
ping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^pub mod ping;$/;"	n
ping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/interactions.rs	/^pub mod ping {$/;"	n
pinned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub pinned: bool,$/;"	m	struct:Message
pinned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub pinned: Option<bool>,$/;"	m	struct:MessageUpdateEvent
pinned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn pinned(&mut self, pinned: bool) -> &mut Self {$/;"	P	implementation:CustomMessage
pins	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn pins(self, http: impl AsRef<Http>) -> Result<Vec<Message>> {$/;"	P	implementation:ChannelId
pins	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn pins(&self, http: impl AsRef<Http>) -> Result<Vec<Message>> {$/;"	P	implementation:GuildChannel
pins	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn pins(&self, http: impl AsRef<Http>) -> Result<Vec<Message>> {$/;"	P	implementation:PrivateChannel
pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub mod pipe;$/;"	n
pipe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn pipe() -> Self {$/;"	P	implementation:SignalKind
pipe_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pipe_mode: PipeMode,$/;"	m	struct:ClientOptions
pipe_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pipe_mode: PipeMode,$/;"	m	struct:ServerOptions
pipe_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn pipe_mode(&mut self, pipe_mode: PipeMode) -> &mut Self {$/;"	P	implementation:ClientOptions
pipe_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn pipe_mode(&mut self, pipe_mode: PipeMode) -> &mut Self {$/;"	P	implementation:ServerOptions
placeholder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn placeholder<D: ToString>(&mut self, label: D) -> &mut Self {$/;"	P	implementation:CreateInputText
placeholder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn placeholder<D: ToString>(&mut self, label: D) -> &mut Self {$/;"	P	implementation:CreateSelectMenu
placeholder	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub placeholder: Option<String>,$/;"	m	struct:SelectMenu
plain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub async fn plain($/;"	f
playing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn playing<N>(name: N) -> Activity$/;"	P	implementation:Activity
pointer_width	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^pub(crate) const fn pointer_width() -> u32 {$/;"	f
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pointers: Mutex<Pointers>,$/;"	m	struct:Inject
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    unsafe fn pointers(target: NonNull<Header>) -> NonNull<linked_list::Pointers<Header>> {$/;"	P	implementation:Task
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pointers: linked_list::Pointers<TimerShared>,$/;"	m	struct:TimerShared
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn pointers($/;"	P	implementation:TimerShared
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pointers: linked_list::Pointers<Waiter>,$/;"	m	struct:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    unsafe fn pointers(target: NonNull<Waiter>) -> NonNull<linked_list::Pointers<Waiter>> {$/;"	P	implementation:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pointers: linked_list::Pointers<Waiter>,$/;"	m	struct:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    unsafe fn pointers(target: NonNull<Waiter>) -> NonNull<linked_list::Pointers<Waiter>> {$/;"	P	implementation:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    pointers: linked_list::Pointers<Waiter>,$/;"	m	struct:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    unsafe fn pointers(target: NonNull<Waiter>) -> NonNull<linked_list::Pointers<Waiter>> {$/;"	P	implementation:Waiter
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pointers: linked_list::Pointers<ListEntry<T>>,$/;"	m	struct:ListEntry
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    unsafe fn pointers($/;"	P	implementation:ListEntry
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        pointers: Pointers<Entry>,$/;"	m	struct:tests::Entry
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        unsafe fn pointers(target: NonNull<Entry>) -> NonNull<Pointers<Entry>> {$/;"	P	implementation:tests::Entry
pointers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    unsafe fn pointers(target: NonNull<Self::Target>) -> NonNull<Pointers<Self::Target>>;$/;"	P	interface:Link
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    fn poll(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ClientBuilder
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    fn poll(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Self::Output> {$/;"	P	implementation:CollectComponentInteraction
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    fn poll(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Self::Output> {$/;"	P	implementation:CollectReply
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    fn poll(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Self::Output> {$/;"	P	implementation:CollectModalInteraction
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fn poll(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Self::Output> {$/;"	P	implementation:CollectReaction
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:JoinHandle
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:MaybeDone
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<T> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/try_join.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/seek.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/fill_buf.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:FillBuf
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/flush.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_buf.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ReadLine
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ReadUntil
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/shutdown.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all_buf.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_buf.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_vectored.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<usize>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn poll(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:test::Mock
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Child
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Child
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/task.rs	/^    fn poll(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<R> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    poll: mio::Poll,$/;"	m	struct:Driver
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn poll(&self, mut cx: Context<'_>) -> Poll<T::Output> {$/;"	P	implementation:Core
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn poll(self) {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:JoinHandle
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn poll(self) {$/;"	P	implementation:RawTask
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) poll: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn poll<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:BlockedFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:ResetFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Track
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<F::Output> {$/;"	P	implementation:test_combination::FutWrapper
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn poll(&self, waker: &Waker) -> Poll<TimerResult> {$/;"	P	implementation:StateCell
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn poll(&mut self, now: u64) -> Option<TimerHandle> {$/;"	P	implementation:Wheel
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^        fn poll(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<u32> {$/;"	P	implementation:test::ZeroSizedFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<T> {$/;"	P	implementation:ReusableBoxFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn poll(&mut self, cx: &mut Context<'_>) -> Poll<T> {$/;"	P	implementation:ReusableBoxFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Acquire
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<T, RecvError>> {$/;"	f
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {$/;"	P	implementation:Notified
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Receiver
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<bool> {$/;"	P	implementation:OnClose
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut std::task::Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:LocalSet
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut std::task::Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:RunUntil
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:TaskLocalFuture
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^        fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {$/;"	P	implementation:yield_now::YieldNow
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut task::Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Sleep
poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut task::Context<'_>) -> Poll<Self::Output> {$/;"	f
poll_accept	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn poll_accept(&self, cx: &mut Context<'_>) -> Poll<io::Result<(TcpStream, SocketAddr)>>/;"	P	implementation:TcpListener
poll_accept	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn poll_accept(&self, cx: &mut Context<'_>) -> Poll<io::Result<(UnixStream, SocketAddr)>/;"	P	implementation:UnixListener
poll_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn poll_acquire($/;"	P	implementation:Semaphore
poll_acquire_many_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_many_available() {$/;"	f
poll_acquire_many_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_many_unavailable() {$/;"	f
poll_acquire_one_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_one_available() {$/;"	f
poll_acquire_one_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_one_unavailable() {$/;"	f
poll_acquire_one_zero_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn poll_acquire_one_zero_permits() {$/;"	f
poll_and_cancel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^    async fn poll_and_cancel(semaphore: Arc<Semaphore>) {$/;"	f	function:concurrent_cancel
poll_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn poll_at(&self) -> Option<u64> {$/;"	P	implementation:Wheel
poll_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn poll_closed(&mut self, cx: &mut Context<'_>) -> Poll<()> {$/;"	P	implementation:Sender
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_complete(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:File
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn poll_complete(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:Cursor
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn poll_complete(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	f
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn poll_complete(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>;$/;"	P	interface:AsyncSeek
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_complete(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:BufReader
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_complete(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:BufStream
poll_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_complete(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>> {$/;"	P	implementation:BufWriter
poll_copy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    pub(super) fn poll_copy<R, W>($/;"	P	implementation:CopyBuffer
poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    poll_count: u64,$/;"	m	struct:MetricsBatch
poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) poll_count: AtomicU64,$/;"	m	struct:WorkerMetrics
poll_count_on_last_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    poll_count_on_last_park: u64,$/;"	m	struct:MetricsBatch
poll_drop_handle_then_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn poll_drop_handle_then_drop() {$/;"	f	module:group_b
poll_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn poll_elapsed($/;"	P	implementation:TimerEntry
poll_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    fn poll_elapsed(self: Pin<&mut Self>, cx: &mut task::Context<'_>) -> Poll<Result<(), Error>>/;"	P	implementation:Sleep
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:Cursor
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:u8
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	f
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>;$/;"	P	interface:AsyncBufRead
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:BufReader
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:BufStream
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:BufWriter
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	f
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    fn poll_fill_buf<R>($/;"	P	implementation:CopyBuffer
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:Empty
poll_fill_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    fn poll_fill_buf(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>> {$/;"	P	implementation:Take
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_flush(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:Inner
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	P	implementation:File
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Cursor
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Vec
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>;$/;"	P	interface:AsyncWrite
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	f
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:WriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	P	implementation:Stderr
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Result<(), io::Error>/;"	P	implementation:tests::LoggingMockWriter
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Result<(), io::Error>/;"	P	implementation:tests::TextMockWriter
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn poll_flush($/;"	f
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	P	implementation:Stdout
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufReader
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufStream
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufWriter
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_flush($/;"	P	implementation:DuplexStream
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut task::Context<'_>) -> Poll<std::io::Result<()>> /;"	P	implementation:Pipe
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:Sink
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:WriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:OwnedWriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:TcpStream
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Sender
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:WriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:OwnedWriteHalf
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_flush(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixStream
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeClient
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeServer
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdin
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_flush(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdio
poll_flush	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll_flush(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdio
poll_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/mod.rs	/^mod poll_fn;$/;"	n
poll_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/poll_fn.rs	/^pub fn poll_fn<T, F>(f: F) -> PollFn<F>$/;"	f
poll_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^fn poll_future<T: Future, S: Schedule>(core: &Core<T, S>, cx: Context<'_>) -> Poll<()> {$/;"	f
poll_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn poll_inner(&self) -> PollFuture {$/;"	f
poll_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    fn poll_io<R>($/;"	P	implementation:Registration
poll_join_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn poll_join_next(&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<T, JoinError>>> {$/;"	P	implementation:JoinSet
poll_join_next_with_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    fn poll_join_next_with_id($/;"	P	implementation:JoinSet
poll_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_lock(&self, cx: &mut Context<'_>) -> Poll<Guard<'_, T>> {$/;"	P	implementation:Inner
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    fn poll_next(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Option<Self::Item>>/;"	P	implementation:ComponentInteractionCollector
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn poll_next(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Option<Self::Item>>/;"	P	implementation:EventCollector
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    fn poll_next(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Option<Self::Item>>/;"	P	implementation:MessageCollector
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    fn poll_next(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Option<Self::Item>>/;"	P	implementation:ModalInteractionCollector
poll_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    fn poll_next(mut self: Pin<&mut Self>, ctx: &mut FutContext<'_>) -> Poll<Option<Self::Item>>/;"	P	implementation:ReactionCollector
poll_next_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    pub fn poll_next_entry(&mut self, cx: &mut Context<'_>) -> Poll<io::Result<Option<DirEntry>>/;"	P	implementation:ReadDir
poll_next_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^    pub fn poll_next_line($/;"	f
poll_next_segment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^    pub fn poll_next_segment($/;"	f
poll_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn poll_notified(self: Pin<&mut Self>, waker: Option<&Waker>) -> Poll<()> {$/;"	P	implementation:Notified
poll_peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn poll_peek($/;"	P	implementation:ReadHalf
poll_peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn poll_peek($/;"	P	implementation:OwnedReadHalf
poll_peek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn poll_peek($/;"	P	implementation:TcpStream
poll_peek_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_peek_from($/;"	P	implementation:UdpSocket
poll_peek_sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_peek_sender(&self, cx: &mut Context<'_>) -> Poll<io::Result<SocketAddr>> {$/;"	P	implementation:UdpSocket
poll_process_levels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn poll_process_levels() {$/;"	f
poll_process_levels_targeted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn poll_process_levels_targeted() {$/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_read($/;"	P	implementation:File
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^    fn poll_read($/;"	P	implementation:Cursor
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^    fn poll_read($/;"	P	implementation:u8
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^    fn poll_read($/;"	P	interface:AsyncRead
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^    fn poll_read($/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    fn poll_read($/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_read($/;"	P	implementation:ReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^    fn poll_read($/;"	P	implementation:Stdin
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_read($/;"	P	implementation:BufReader
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_read($/;"	P	implementation:BufStream
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_read($/;"	P	implementation:BufWriter
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^    fn poll_read($/;"	f
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^    fn poll_read($/;"	P	implementation:Empty
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_read($/;"	P	implementation:DuplexStream
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/repeat.rs	/^    fn poll_read($/;"	P	implementation:Repeat
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    fn poll_read($/;"	P	implementation:Take
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_read($/;"	P	implementation:ReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_read($/;"	P	implementation:OwnedReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_read($/;"	P	implementation:TcpStream
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_read($/;"	P	implementation:Receiver
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_read($/;"	P	implementation:ReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_read($/;"	P	implementation:OwnedReadHalf
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_read($/;"	P	implementation:UnixStream
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_read($/;"	P	implementation:NamedPipeClient
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_read($/;"	P	implementation:NamedPipeServer
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_read($/;"	P	implementation:ChildStderr
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_read($/;"	P	implementation:ChildStdout
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_read($/;"	P	implementation:ChildStdio
poll_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll_read($/;"	P	implementation:ChildStdio
poll_read_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_read_internal($/;"	P	implementation:Pipe
poll_read_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn poll_read_io<R>($/;"	P	implementation:Registration
poll_read_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(crate) fn poll_read_priv($/;"	P	implementation:TcpStream
poll_read_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(crate) fn poll_read_priv($/;"	P	implementation:UnixStream
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn poll_read_ready<'a>($/;"	P	implementation:AsyncFd
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:TcpStream
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Receiver
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixStream
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeClient
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeServer
poll_read_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn poll_read_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<ReadyEvent>> {$/;"	P	implementation:Registration
poll_read_ready_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn poll_read_ready_mut<'a>($/;"	P	implementation:AsyncFd
poll_read_to_end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^fn poll_read_to_end<V: VecU8, R: AsyncRead + ?Sized>($/;"	f
poll_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn poll_readiness($/;"	P	implementation:ScheduledIo
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    pub fn poll_ready<'a>(&'a self, cx: &mut Context<'_>) -> Poll<io::Result<AioEvent>> {$/;"	P	implementation:Aio
poll_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    fn poll_ready($/;"	P	implementation:Registration
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_recv(&self, cx: &mut Context<'_>, buf: &mut ReadBuf<'_>) -> Poll<io::Result<()>>/;"	P	implementation:UdpSocket
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_recv(&self, cx: &mut Context<'_>, buf: &mut ReadBuf<'_>) -> Poll<io::Result<()>>/;"	P	implementation:UnixDatagram
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn poll_recv(&mut self, _cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:test::MockStream
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^    fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:RxFuture
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:Signal
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>>;$/;"	P	interface:InternalStream
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:Signal
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlBreak
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlC
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlClose
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlLogoff
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<()>> {$/;"	P	implementation:CtrlShutdown
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<T>> {$/;"	P	implementation:Receiver
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn poll_recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<T>> {$/;"	P	implementation:UnboundedReceiver
poll_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn poll_recv(&self, cx: &mut Context<'_>) -> Poll<Result<T, RecvError>> {$/;"	P	implementation:Inner
poll_recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_recv_from($/;"	P	implementation:UdpSocket
poll_recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_recv_from($/;"	P	implementation:UnixDatagram
poll_recv_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_recv_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UdpSocket
poll_recv_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_recv_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixDatagram
poll_result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        poll_result: Poll<Result<(), ()>>,$/;"	m	struct:test::Mock
poll_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_send(&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>> {$/;"	P	implementation:UdpSocket
poll_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_send(&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>> {$/;"	P	implementation:UnixDatagram
poll_send_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_send_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UdpSocket
poll_send_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_send_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixDatagram
poll_send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn poll_send_to($/;"	P	implementation:UdpSocket
poll_send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn poll_send_to<P>($/;"	P	implementation:UnixDatagram
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>> /;"	P	implementation:File
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Vec
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>;$/;"	P	interface:AsyncWrite
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Cursor
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	f
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>/;"	f
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>> /;"	P	implementation:WriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    fn poll_shutdown($/;"	P	implementation:Stderr
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_shutdown($/;"	P	implementation:tests::LoggingMockWriter
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_shutdown($/;"	P	implementation:tests::TextMockWriter
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn poll_shutdown($/;"	f
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    fn poll_shutdown($/;"	P	implementation:Stdout
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufReader
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufStream
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_shutdown(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:BufWriter
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_shutdown($/;"	P	implementation:DuplexStream
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_shutdown($/;"	P	implementation:Pipe
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:Sink
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:WriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:OwnedWriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:TcpStream
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Sender
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:WriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:OwnedWriteHalf
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixStream
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeClient
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeServer
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_shutdown(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdin
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdio
poll_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll_shutdown(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:ChildStdio
poll_tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn poll_tick(&mut self, cx: &mut Context<'_>) -> Poll<Instant> {$/;"	P	implementation:Interval
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn poll_write($/;"	P	implementation:File
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write($/;"	P	implementation:Cursor
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write($/;"	P	implementation:Vec
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write($/;"	P	interface:AsyncWrite
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write($/;"	f
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    fn poll_write($/;"	f
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn poll_write($/;"	P	implementation:WriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^    fn poll_write($/;"	P	implementation:Stderr
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_write($/;"	P	implementation:tests::LoggingMockWriter
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        fn poll_write($/;"	P	implementation:tests::TextMockWriter
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn poll_write($/;"	f
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^    fn poll_write($/;"	P	implementation:Stdout
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_write($/;"	P	implementation:BufReader
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_write($/;"	P	implementation:BufStream
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_write($/;"	P	implementation:BufWriter
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_write($/;"	P	implementation:DuplexStream
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^    fn poll_write($/;"	P	implementation:Sink
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_write($/;"	P	implementation:WriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_write($/;"	P	implementation:OwnedWriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_write($/;"	P	implementation:TcpStream
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_write($/;"	P	implementation:Sender
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_write($/;"	P	implementation:WriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_write($/;"	P	implementation:OwnedWriteHalf
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_write($/;"	P	implementation:UnixStream
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_write($/;"	P	implementation:NamedPipeClient
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_write($/;"	P	implementation:NamedPipeServer
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_write($/;"	P	implementation:ChildStdin
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_write($/;"	P	implementation:ChildStdio
poll_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn poll_write($/;"	P	implementation:ChildStdio
poll_write_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    fn poll_write_buf<R, W>($/;"	P	implementation:CopyBuffer
poll_write_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    fn poll_write_internal($/;"	P	implementation:Pipe
poll_write_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn poll_write_io<R>($/;"	P	implementation:Registration
poll_write_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(super) fn poll_write_priv($/;"	P	implementation:TcpStream
poll_write_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(crate) fn poll_write_priv($/;"	P	implementation:UnixStream
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn poll_write_ready<'a>($/;"	P	implementation:AsyncFd
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:TcpStream
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:Sender
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:UnixStream
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeClient
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<()>> {$/;"	P	implementation:NamedPipeServer
poll_write_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn poll_write_ready(&self, cx: &mut Context<'_>) -> Poll<io::Result<ReadyEvent>> /;"	P	implementation:Registration
poll_write_ready_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn poll_write_ready_mut<'a>($/;"	P	implementation:AsyncFd
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write_vectored($/;"	P	implementation:Cursor
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write_vectored($/;"	P	implementation:Vec
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write_vectored($/;"	P	interface:AsyncWrite
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_write.rs	/^    fn poll_write_vectored($/;"	f
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn poll_write_vectored($/;"	P	implementation:BufReader
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn poll_write_vectored($/;"	P	implementation:BufStream
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn poll_write_vectored($/;"	P	implementation:BufWriter
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    fn poll_write_vectored($/;"	P	implementation:WriteHalf
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    fn poll_write_vectored($/;"	P	implementation:OwnedWriteHalf
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn poll_write_vectored($/;"	P	implementation:TcpStream
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    fn poll_write_vectored($/;"	P	implementation:Sender
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    fn poll_write_vectored($/;"	P	implementation:WriteHalf
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    fn poll_write_vectored($/;"	P	implementation:OwnedWriteHalf
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn poll_write_vectored($/;"	P	implementation:UnixStream
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_write_vectored($/;"	P	implementation:NamedPipeClient
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    fn poll_write_vectored($/;"	P	implementation:NamedPipeServer
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn poll_write_vectored($/;"	P	implementation:ChildStdin
poll_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn poll_write_vectored($/;"	P	implementation:ChildStdio
poll_write_vectored_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(super) fn poll_write_vectored_priv($/;"	P	implementation:TcpStream
poll_write_vectored_priv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(super) fn poll_write_vectored_priv($/;"	P	implementation:UnixStream
pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^pub(super) mod pool {$/;"	n
pool	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^mod pool;$/;"	n
pool_multi_notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn pool_multi_notify() {$/;"	f	module:group_d
pool_multi_spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn pool_multi_spawn() {$/;"	f	module:group_a
pool_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn pool_shutdown() {$/;"	f	module:group_c
pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn pop(&self) -> Option<task::Notified<Arc<Handle>>> {$/;"	P	implementation:Handle
pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn pop(&mut self) -> Option<task::Notified<T>> {$/;"	P	implementation:Local
pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn pop(&self) -> Option<task::Notified<T>> {$/;"	P	implementation:Inject
pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) fn pop(&mut self, tx: &Tx<T>) -> Option<block::Read<T>> {$/;"	P	implementation:Rx
pop_back	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn pop_back(&mut self) -> Option<L::Handle> {$/;"	P	implementation:LinkedList
pop_back_locked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn pop_back_locked(&mut self, _waiters: &mut WaitList) -> Option<NonNull<Waiter>> {$/;"	P	implementation:NotifyWaitersList
pop_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn pop_local(&self) -> Option<task::Notified<Arc<Shared>>> {$/;"	P	implementation:LocalSet
pop_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^            fn pop_next(&mut self) -> bool {$/;"	P	implementation:IdleNotifiedSet::drain::AllEntries
pop_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn pop_notified(&mut self, waker: &Waker) -> Option<EntryInOneOfTheLists<'_, T>> /;"	P	implementation:IdleNotifiedSet
pop_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn pop_task(&mut self, handle: &Handle) -> Option<task::Notified<Arc<Handle>>> {$/;"	P	implementation:Core
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pos: u64,$/;"	m	struct:Inner
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pos: usize,$/;"	m	struct:Buf
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    pos: usize,$/;"	m	struct:CopyBuffer
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pos: u64,$/;"	m	struct:Slot
pos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pos: u64,$/;"	m	struct:Tail
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn position(&mut self, pos: u32) -> &mut Self {$/;"	P	implementation:CreateChannel
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn position(&mut self, position: u64) -> &mut Self {$/;"	P	implementation:EditChannel
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub fn position(&mut self, position: u8) -> &mut Self {$/;"	P	implementation:EditRole
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_category.rs	/^    pub position: i64,$/;"	m	struct:ChannelCategory
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub position: i64,$/;"	m	struct:GuildChannel
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub fn position(&self) -> Option<i64> {$/;"	P	implementation:Channel
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub position: i64,$/;"	m	struct:InterimRole
position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub position: i64,$/;"	m	struct:Role
post_hook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub async fn post_hook(&mut self, response: &Response, route: &Route) -> Result<bool> {$/;"	P	implementation:Ratelimit
pre_exec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub unsafe fn pre_exec<F>(&mut self, f: F) -> &mut Command$/;"	P	implementation:Command
pre_hook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub async fn pre_hook(&mut self, route: &Route) {$/;"	P	implementation:Ratelimit
pre_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn pre_shutdown(&mut self, worker: &Worker) {$/;"	P	implementation:Core
preferred_locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn preferred_locale(&mut self, locale: Option<&str>) -> &mut Self {$/;"	P	implementation:EditGuild
preferred_locale	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub preferred_locale: String,$/;"	m	struct:Guild
prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn prefix(&mut self, prefix: impl ToString) -> &mut Self {$/;"	P	implementation:Configuration
prefix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^pub async fn prefix<'a>($/;"	f
prefix_only	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    prefix_only: Option<PrefixOnlyHook>,$/;"	m	struct:StandardFramework
prefix_only	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn prefix_only(mut self, f: PrefixOnlyHook) -> Self {$/;"	P	implementation:StandardFramework
prefixes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn prefixes<T, It>(&mut self, prefixes: It) -> &mut Self$/;"	P	implementation:Configuration
prefixes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub prefixes: Vec<String>,$/;"	m	struct:Configuration
prefixes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub prefixes: bool,$/;"	m	struct:WithWhiteSpace
prefixes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub prefixes: Vec<&'static str>,$/;"	m	struct:GroupCommandsPair
prefixes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub prefixes: &'static [&'static str],$/;"	m	struct:GroupOptions
prelude	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/mod.rs	/^pub mod prelude;$/;"	n
prelude	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub mod prelude {$/;"	n
prelude	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod prelude;$/;"	n
prelude	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod prelude;$/;"	n
prelude	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod prelude {$/;"	n
premium_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub premium_since: Option<Timestamp>,$/;"	m	struct:GuildMemberUpdateEvent
premium_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub premium_since: Option<Timestamp>,$/;"	m	struct:InterimMember
premium_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub premium_since: Option<Timestamp>,$/;"	m	struct:Member
premium_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub premium_since: Option<Timestamp>,$/;"	m	struct:PartialMember
premium_subscriber	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub premium_subscriber: bool,$/;"	m	struct:RoleTags
premium_subscriber	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^mod premium_subscriber {$/;"	n
premium_subscriber_role_serde	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    fn premium_subscriber_role_serde() {$/;"	f	module:tests
premium_subscription_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub premium_subscription_count: u64,$/;"	m	struct:Guild
premium_subscription_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub premium_subscription_count: u64,$/;"	m	struct:PartialGuild
premium_tier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub premium_tier: PremiumTier,$/;"	m	struct:Guild
premium_tier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod premium_tier;$/;"	n
premium_tier	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub premium_tier: PremiumTier,$/;"	m	struct:PartialGuild
presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub presence: Presence,$/;"	m	struct:PresenceUpdateEvent
presence_replace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn presence_replace(&self, _ctx: Context, _: Vec<Presence>) {}$/;"	P	interface:EventHandler
presence_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn presence_update(&self, _ctx: Context, _new_data: Presence) {}$/;"	P	interface:EventHandler
presences	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) presences: DashMap<UserId, Presence>,$/;"	m	struct:Cache
presences	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub presences: Vec<Presence>,$/;"	m	struct:PresencesReplaceEvent
presences	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub presences: HashMap<UserId, Presence>,$/;"	m	struct:Ready
presences	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub presences: HashMap<UserId, Presence>,$/;"	m	struct:Guild
presences	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub mod presences {$/;"	n
presets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    presets: Option<Cow<'a, [KeywordPresetType]>>,$/;"	m	struct:InterimTriggerMetadata
presets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    presets: Option<Vec<KeywordPresetType>>,$/;"	m	struct:TriggerMetadata
prev	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^        prev: Budget,$/;"	m	struct:with_budget::ResetGuard
prev	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    prev: Option<NonNull<T>>,$/;"	m	struct:PointersInner
prev_len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    prev_len: usize,$/;"	m	struct:Page
preview_asset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    pub preview_asset: Option<String>,$/;"	m	struct:Sticker
priority_speaker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn priority_speaker(self) -> bool {$/;"	P	implementation:Permissions
private	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub fn private(self) -> Option<PrivateChannel> {$/;"	P	implementation:Channel
private_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn private_channel(&self, channel_id: impl Into<ChannelId>) -> Option<PrivateChannel> {$/;"	P	implementation:Cache
private_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn private_channel() -> &'static str {$/;"	P	implementation:Route
private_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^        fn private_channel() -> PrivateChannel {$/;"	f	module:test::model_utils
private_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod private_channel;$/;"	n
private_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn private_channels(&self) -> DashMap<ChannelId, PrivateChannel> {$/;"	P	implementation:Cache
private_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) private_channels: DashMap<ChannelId, PrivateChannel>,$/;"	m	struct:Cache
private_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub private_channels: HashMap<ChannelId, Channel>,$/;"	m	struct:Ready
private_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub mod private_channels {$/;"	n
privileged	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub const fn privileged() -> GatewayIntents {$/;"	P	implementation:GatewayIntents
process	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    fn process(&mut self) {$/;"	P	implementation:Driver
process	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(self) fn process(&self, clock: &Clock) {$/;"	P	implementation:Handle
process_at_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(self) fn process_at_time(&self, mut now: u64) {$/;"	P	implementation:Handle
process_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) fn process_expiration(&mut self, expiration: &Expiration) {$/;"	P	implementation:Wheel
process_group	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn process_group(&mut self, pgroup: i32) -> &mut Command {$/;"	P	implementation:Command
project	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    fn project(self: Pin<&mut Self>) -> (Pin<&mut Waiter>, &Semaphore, u32, &mut bool) {$/;"	P	implementation:Acquire
project	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn project(self: Pin<&mut Self>) -> (&mut Receiver<T>, &UnsafeCell<Waiter>) {$/;"	P	implementation:Recv
project	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    fn project(self: Pin<&mut Self>) -> (&Notify, &mut State, &usize, &UnsafeCell<Waiter>) {$/;"	P	implementation:Notified
provider	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub provider: Option<EmbedProvider>,$/;"	m	struct:Embed
proxy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    proxy: Option<Url>,$/;"	m	struct:HttpBuilder
proxy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn proxy(mut self, proxy: impl Into<String>) -> Result<Self> {$/;"	P	implementation:HttpBuilder
proxy	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub proxy: Option<Url>,$/;"	m	struct:Http
proxy_icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub proxy_icon_url: Option<String>,$/;"	m	struct:EmbedAuthor
proxy_icon_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub proxy_icon_url: Option<String>,$/;"	m	struct:EmbedFooter
proxy_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub proxy_url: String,$/;"	m	struct:Attachment
proxy_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub proxy_url: Option<String>,$/;"	m	struct:EmbedImage
proxy_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub proxy_url: Option<String>,$/;"	m	struct:EmbedThumbnail
proxy_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub proxy_url: Option<String>,$/;"	m	struct:EmbedVideo
prune_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn prune_count(self, http: impl AsRef<Http>, days: u16) -> Result<GuildPrune> {$/;"	P	implementation:GuildId
prune_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn prune_count(&self, cache_http: impl CacheHttp, days: u16) -> Result<GuildPrune>/;"	P	implementation:Guild
prune_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn prune_count(&self, http: impl AsRef<Http>, days: u16) -> Result<GuildPrune> {$/;"	P	implementation:PartialGuild
pruned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub pruned: u64,$/;"	m	struct:GuildPrune
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    ptr: *const u8,$/;"	m	struct:ReadBufParts
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    ptr: NonNull<Header>,$/;"	m	struct:RawTask
ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn ptr(r: &Pin<Box<Entry>>) -> NonNull<Entry> {$/;"	f	module:tests
ptr_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn ptr_eq(&self, other: &Handle) -> bool {$/;"	P	implementation:Handle
ptr_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn ptr_eq(&self, other: &Shared) -> bool {$/;"	P	implementation:Shared
public_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub public_flags: Option<UserPublicFlags>,$/;"	m	struct:PresenceUser
public_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub public_flags: Option<UserPublicFlags>,$/;"	m	struct:CurrentUser
public_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub public_flags: Option<UserPublicFlags>,$/;"	m	struct:User
public_updates_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn public_updates_channel_id(&mut self, channel_id: Option<ChannelId>) -> &mut Self {$/;"	P	implementation:EditGuild
public_updates_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub public_updates_channel_id: Option<ChannelId>,$/;"	m	struct:Guild
public_updates_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub public_updates_channel_id: Option<ChannelId>,$/;"	m	struct:PartialGuild
push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push() {$/;"	f	module:test
push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn push(&self, task: task::Notified<T>) {$/;"	P	implementation:Inject
push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) fn push(&self, value: T) {$/;"	P	implementation:Tx
push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    pub(crate) fn push(&mut self, val: Waker) {$/;"	P	implementation:WakeList
push_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn push_all<'a>($/;"	f	module:tests
push_and_drain	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn push_and_drain() {$/;"	f	module:tests
push_back	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn push_back($/;"	P	implementation:Local
push_batch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    pub(crate) fn push_batch<I>(&self, mut iter: I)$/;"	P	implementation:Inject
push_batch_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    fn push_batch_inner($/;"	P	implementation:Inject
push_bold	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_bold(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_bold_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_bold_line(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_bold_line_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_bold_line_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_bold_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_bold_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_codeblock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push_codeblock() {$/;"	f	module:test
push_codeblock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_codeblock($/;"	P	implementation:MessageBuilder
push_codeblock_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push_codeblock_safe() {$/;"	f	module:test
push_codeblock_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_codeblock_safe($/;"	P	implementation:MessageBuilder
push_front	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) fn push_front(&mut self, val: L::Handle) {$/;"	P	implementation:LinkedList
push_italic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_italic(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_italic_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_italic_line(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_italic_line_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_italic_line_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_italic_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_italic_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_line(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_line_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_line_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_mono	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_mono(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_mono_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_mono_line(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_mono_line_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_mono_line_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_mono_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_mono_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_named_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push_named_link(&mut self, name: impl Into<Content>, url: impl Into<Content>) -> &mut Sel/;"	P	implementation:MessageBuilder
push_named_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push_named_link(&mut self, name: impl Into<Content>, url: impl Into<Content>) -> &mut Sel/;"	P	interface:EmbedMessageBuilding
push_named_link_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push_named_link_safe($/;"	P	implementation:MessageBuilder
push_named_link_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push_named_link_safe($/;"	P	interface:EmbedMessageBuilding
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn push_orphan(&self, orphan: StdChild) {$/;"	P	implementation:GlobalOrphanQueue
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn push_orphan(&self, orphan: W) {$/;"	P	implementation:test::MockQueue
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn push_orphan(&self, orphan: T) {$/;"	P	implementation:O
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn push_orphan(&self, orphan: T);$/;"	P	interface:OrphanQueue
push_orphan	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    pub(crate) fn push_orphan(&self, orphan: T)$/;"	P	implementation:OrphanQueueImpl
push_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn push_overflow($/;"	P	implementation:Local
push_pop_push_pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn push_pop_push_pop() {$/;"	f	module:tests
push_quote	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_quote(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_quote_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_quote_line(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_quote_line_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_quote_line_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_quote_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_quote_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push_safe() {$/;"	f	module:test
push_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_spoiler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_spoiler(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_spoiler_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_spoiler_line(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_spoiler_line_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_spoiler_line_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_spoiler_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_spoiler_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_strike	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_strike(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_strike_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_strike_line(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_strike_line_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_strike_line_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_strike_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_strike_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn push_task(&mut self, handle: &Handle, task: task::Notified<Arc<Handle>>) {$/;"	P	implementation:Core
push_underline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_underline(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_underline_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_underline_line(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_underline_line_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_underline_line_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_underline_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn push_underline_safe(&mut self, content: impl Into<Content>) -> &mut Self {$/;"	P	implementation:MessageBuilder
push_unsafe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn push_unsafe() {$/;"	f	module:test
put_back_original_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^fn put_back_original_data(output: &mut String, mut vector: Vec<u8>, num_bytes_read: usize) {$/;"	f
put_slice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn put_slice(&mut self, buf: &[u8]) {$/;"	P	implementation:ReadBuf
query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod query {$/;"	n
query	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query ($/;"	M
query_as	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_as ($/;"	M
query_as_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_as_unchecked ($/;"	M
query_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file ($/;"	M
query_file_as	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_as ($/;"	M
query_file_as_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_as_unchecked ($/;"	M
query_file_scalar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_scalar ($/;"	M
query_file_scalar_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_scalar_unchecked ($/;"	M
query_file_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_file_unchecked ($/;"	M
query_scalar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_scalar ($/;"	M
query_scalar_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_scalar_unchecked ($/;"	M
query_unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/macros/mod.rs	/^macro_rules! query_unchecked ($/;"	M
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub queue: VecDeque<(u64, u64)>,$/;"	m	struct:ShardQueuer
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    queue: Mutex<Vec<T>>,$/;"	m	struct:OrphanQueueImpl
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    queue: VecDeque<Task>,$/;"	m	struct:Shared
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    queue: Mutex<Option<VecDeque<task::Notified<Arc<Handle>>>>>,$/;"	m	struct:Shared
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^pub(crate) mod queue;$/;"	n
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    queue: VecDeque<task::Notified<Runtime>>,$/;"	m	struct:Core
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    queue: LinkedList<Waiter, <Waiter as linked_list::Link>::Target>,$/;"	m	struct:Waitlist
queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    queue: Mutex<Option<VecDeque<task::Notified<Arc<Shared>>>>>,$/;"	m	struct:Shared
queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    queue_depth: AtomicUsize,$/;"	m	struct:SpawnerMetrics
queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) fn queue_depth(&self) -> usize {$/;"	P	implementation:WorkerMetrics
queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) queue_depth: AtomicUsize,$/;"	m	struct:WorkerMetrics
queue_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) queue_next: UnsafeCell<Option<NonNull<Header>>>,$/;"	m	struct:Header
queued	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    queued: bool,$/;"	m	struct:Acquire
queued	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    queued: bool,$/;"	m	struct:Waiter
quit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn quit() -> Self {$/;"	P	implementation:SignalKind
quote_rest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn quote_rest(&mut self) -> &mut Self {$/;"	P	implementation:MessageBuilder
quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn quoted(&mut self) -> &mut Self {$/;"	P	implementation:Args
quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn quoted(&mut self) -> &mut Self {$/;"	P	implementation:Iter
quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    quoted: bool,$/;"	m	struct:RawArguments
r	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn r() {$/;"	f	module:test
r	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub const fn r(self) -> u8 {$/;"	P	implementation:Colour
r	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    r: u32,$/;"	m	struct:RngSeed
racy_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn racy_shutdown() {$/;"	f	module:group_a
rand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^pub(crate) mod rand {$/;"	n
rand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod rand {$/;"	n
rand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    rand: FastRand,$/;"	m	struct:Core
rand	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod rand;$/;"	n
rate_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub rate_limit: Duration,$/;"	m	struct:RateLimitInfo
rate_limit_per_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn rate_limit_per_user(&mut self, seconds: u64) -> &mut Self {$/;"	P	implementation:CreateChannel
rate_limit_per_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_thread.rs	/^    pub fn rate_limit_per_user(&mut self, seconds: u64) -> &mut Self {$/;"	P	implementation:CreateThread
rate_limit_per_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn rate_limit_per_user(&mut self, seconds: u64) -> &mut Self {$/;"	P	implementation:EditChannel
rate_limit_per_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub rate_limit_per_user: Option<u64>,$/;"	m	struct:GuildChannel
ratelimit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub ratelimit: Ratelimit,$/;"	m	struct:TicketCounter
ratelimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn ratelimiter(mut self, ratelimiter: Ratelimiter) -> Self {$/;"	P	implementation:HttpBuilder
ratelimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub ratelimiter: Ratelimiter,$/;"	m	struct:Http
ratelimiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    ratelimiter: Option<Ratelimiter>,$/;"	m	struct:HttpBuilder
ratelimiter_disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn ratelimiter_disabled(mut self, ratelimiter_disabled: bool) -> Self {$/;"	P	implementation:HttpBuilder
ratelimiter_disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub ratelimiter_disabled: bool,$/;"	m	struct:Http
ratelimiter_disabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    ratelimiter_disabled: bool,$/;"	m	struct:HttpBuilder
ratelimiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub mod ratelimiting;$/;"	n
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn raw(&self) -> RawArguments<'_> {$/;"	P	implementation:Args
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    raw: Arc<StdFile>,$/;"	m	struct:ChildStdio
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/abort.rs	/^    raw: RawTask,$/;"	m	struct:AbortHandle
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    raw: RawTask,$/;"	m	struct:Task
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    raw: RawTask,$/;"	m	struct:UnownedTask
raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod raw;$/;"	n
raw_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn raw_event(&self, _ctx: Context, _ev: Event) {}$/;"	P	interface:RawEventHandler
raw_event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub raw_event_handler: &'a Option<Arc<dyn RawEventHandler>>,$/;"	m	struct:ShardManagerOptions
raw_event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub raw_event_handler: Option<Arc<dyn RawEventHandler>>,$/;"	m	struct:ShardQueuer
raw_event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub raw_event_handler: Option<Arc<dyn RawEventHandler>>,$/;"	m	struct:ShardRunnerOptions
raw_event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    raw_event_handler: Option<Arc<dyn RawEventHandler>>,$/;"	m	struct:ShardRunner
raw_event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn raw_event_handler<H: RawEventHandler + 'static>(mut self, raw_event_handler: H) -> Se/;"	P	implementation:ClientBuilder
raw_event_handler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    raw_event_handler: Option<Arc<dyn RawEventHandler>>,$/;"	m	struct:ClientBuilder
raw_quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn raw_quoted(&self) -> RawArguments<'_> {$/;"	P	implementation:Args
raw_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^fn raw_waker(header: NonNull<Header>) -> RawWaker {$/;"	f
react	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn react($/;"	P	implementation:Message
reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    reaction: LazyArc<'a, Reaction>,$/;"	m	struct:LazyReactionAction
reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod reaction;$/;"	n
reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub reaction: Reaction,$/;"	m	struct:ReactionAddEvent
reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub reaction: Reaction,$/;"	m	struct:ReactionRemoveEvent
reaction_add	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn reaction_add(&self, _ctx: Context, _add_reaction: Reaction) {}$/;"	P	interface:EventHandler
reaction_collector	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^pub mod reaction_collector;$/;"	n
reaction_filters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    reaction_filters: Vec<ReactionFilter>,$/;"	m	struct:ShardRunner
reaction_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn reaction_remove(&self, _ctx: Context, _removed_reaction: Reaction) {}$/;"	P	interface:EventHandler
reaction_remove_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn reaction_remove_all($/;"	P	interface:EventHandler
reaction_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub reaction_type: ReactionType,$/;"	m	struct:MessageReaction
reaction_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn reaction_users($/;"	P	implementation:ChannelId
reaction_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn reaction_users($/;"	P	implementation:GuildChannel
reaction_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn reaction_users($/;"	P	implementation:Message
reaction_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn reaction_users<M, R, U>($/;"	P	implementation:PrivateChannel
reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn reactions<R: Into<ReactionType>, It: IntoIterator<Item = R>>($/;"	P	implementation:CreateMessage
reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub reactions: Vec<MessageReaction>,$/;"	m	struct:Message
reactions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn reactions<It>(&mut self, reactions: It) -> &mut Self$/;"	P	implementation:CustomMessage
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:MockFile
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod read;$/;"	n
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn read(&mut self, read: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read.rs	/^pub async fn read(path: impl AsRef<Path>) -> io::Result<Vec<u8>> {$/;"	f
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    read: Arc<Mutex<Pipe>>,$/;"	m	struct:DuplexStream
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read.rs	/^pub(crate) fn read<'a, R>(reader: &'a mut R, buf: &'a mut [u8]) -> Read<'a, R>$/;"	f
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn read(&self) -> LockResult<RwLockReadGuard<'_, T>> {$/;"	P	implementation:RwLock
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn read(&mut self, allowed: bool) -> &mut Self {$/;"	P	implementation:ClientOptions
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn read(&mut self, bytes: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Pipe
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn read(&mut self, bytes: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ArcFile
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn read(&self, slot_index: usize) -> Option<Read<T>> {$/;"	P	implementation:Block
read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub async fn read(&self) -> RwLockReadGuard<'_, T> {$/;"	P	implementation:RwLock
read_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/mod.rs	/^mod read_buf;$/;"	n
read_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_buf.rs	/^pub(crate) fn read_buf<'a, R, B>(reader: &'a mut R, buf: &'a mut B) -> ReadBuf<'a, R, B>$/;"	f
read_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod read_dir;$/;"	n
read_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^pub async fn read_dir(path: impl AsRef<Path>) -> io::Result<ReadDir> {$/;"	f
read_done	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    read_done: bool,$/;"	m	struct:CopyBuffer
read_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_err() {$/;"	f
read_err_then_read_success	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_err_then_read_success() {$/;"	f
read_exact	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_exact.rs	/^pub(crate) fn read_exact<'a, A>(reader: &'a mut A, buf: &'a mut [u8]) -> ReadExact<'a, A>$/;"	f
read_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn read_from<T: Read>(&mut self, rd: &mut T) -> io::Result<usize> {$/;"	P	implementation:Buf
read_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod read_guard;$/;"	n
read_image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn read_image<P: AsRef<Path>>(path: P) -> Result<String> {$/;"	f
read_line	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^pub(crate) fn read_line<'a, R>(reader: &'a mut R, string: &'a mut String) -> ReadLine<'a, R>$/;"	f
read_line_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_line.rs	/^pub(super) fn read_line_internal<R: AsyncBufRead + ?Sized>($/;"	f
read_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod read_link;$/;"	n
read_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_link.rs	/^pub async fn read_link(path: impl AsRef<Path>) -> io::Result<PathBuf> {$/;"	f
read_message_history	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn read_message_history(self) -> bool {$/;"	P	implementation:Permissions
read_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub async fn read_owned(self: Arc<Self>) -> OwnedRwLockReadGuard<T> {$/;"	P	implementation:RwLock
read_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn read_state(&self) -> Poll<TimerResult> {$/;"	P	implementation:StateCell
read_to_end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^pub(crate) fn read_to_end<'a, R>(reader: &'a mut R, buffer: &'a mut Vec<u8>) -> ReadToEnd<'a, R>$/;"	f
read_to_end	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        async fn read_to_end<A: AsyncRead + Unpin>(io: &mut Option<A>) -> io::Result<Vec<u8>> {$/;"	f	method:Child::wait_with_output
read_to_end_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_end.rs	/^pub(super) fn read_to_end_internal<V: VecU8, R: AsyncRead + ?Sized>($/;"	f
read_to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod read_to_string;$/;"	n
read_to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_to_string.rs	/^pub async fn read_to_string(path: impl AsRef<Path>) -> io::Result<String> {$/;"	f
read_to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^pub(crate) fn read_to_string<'a, R>($/;"	f
read_to_string_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_to_string.rs	/^fn read_to_string_internal<R: AsyncRead + ?Sized>($/;"	f
read_twice_before_dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_twice_before_dispatch() {$/;"	f
read_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^pub(crate) fn read_until<'a, R>($/;"	f
read_until_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_until.rs	/^pub(super) fn read_until_internal<R: AsyncBufRead + ?Sized>($/;"	f
read_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    read_waker: Option<Waker>,$/;"	m	struct:Pipe
read_with_bigger_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_with_bigger_buf() {$/;"	f
read_with_buffer_larger_than_max	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_with_buffer_larger_than_max() {$/;"	f
read_with_smaller_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn read_with_smaller_buf() {$/;"	f
read_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn read_write(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:OpenOptions
read_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    read_write: bool,$/;"	m	struct:OpenOptions
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub async fn readable<'a>(&'a self) -> io::Result<AsyncFdReadyGuard<'a, T>> {$/;"	P	implementation:AsyncFd
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:ReadHalf
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:OwnedReadHalf
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:TcpStream
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:UdpSocket
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:UnixDatagram
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:Receiver
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:ReadHalf
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:OwnedReadHalf
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:UnixStream
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeClient
readable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn readable(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeServer
readable_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub async fn readable_mut<'a>(&'a mut self) -> io::Result<AsyncFdReadyMutGuard<'a, T>> {$/;"	P	implementation:AsyncFd
reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    reader: &'a mut R,$/;"	m	struct:Copy
reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_int.rs	/^macro_rules! reader {$/;"	M
reader	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    reader: Option<Waker>,$/;"	m	struct:Waiters
reader8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/read_int.rs	/^macro_rules! reader8 {$/;"	M
readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    async fn readiness(&self, interest: Interest) -> io::Result<AsyncFdReadyGuard<'_, T>> {$/;"	P	implementation:AsyncFd
readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    readiness: AtomicUsize,$/;"	m	struct:ScheduledIo
readiness_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    async fn readiness_mut($/;"	P	implementation:AsyncFd
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn ready(&self, _ctx: Context, _data_about_bot: Ready) {}$/;"	P	interface:EventHandler
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub ready: Ready,$/;"	m	struct:ReadyEvent
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod ready;$/;"	n
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/ready.rs	/^macro_rules! ready {$/;"	M
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:ReadHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:WriteHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:OwnedReadHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:OwnedWriteHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:TcpStream
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:UdpSocket
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:UnixDatagram
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:Receiver
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:Sender
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:ReadHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:WriteHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:OwnedReadHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:OwnedWriteHalf
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:UnixStream
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:NamedPipeClient
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn ready(&self, interest: Interest) -> io::Result<Ready> {$/;"	P	implementation:NamedPipeServer
ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) ready: Ready,$/;"	m	struct:ReadyEvent
ready_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/io.rs	/^    pub(super) ready_count: AtomicU64,$/;"	m	struct:IoDriverMetrics
ready_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn ready_event(&self, interest: Interest) -> ReadyEvent {$/;"	P	implementation:ScheduledIo
ready_slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    ready_slots: AtomicUsize,$/;"	m	struct:BlockHeader
reap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^mod reap;$/;"	n
reap_orphans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    pub(crate) fn reap_orphans(handle: &SignalHandle) {$/;"	P	implementation:GlobalOrphanQueue
reap_orphans	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    pub(crate) fn reap_orphans(&self, handle: &SignalHandle)$/;"	P	implementation:OrphanQueueImpl
reaper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    fn reaper() {$/;"	f	module:test
reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub reason: Option<String>,$/;"	m	struct:AuditLogEntry
reason	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub reason: Option<String>,$/;"	m	struct:Ban
reason_into_header	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^fn reason_into_header(reason: &str) -> Headers {$/;"	f
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    receiver: Pin<Box<Receiver<Arc<MessageComponentInteraction>>>>,$/;"	m	struct:ComponentInteractionCollector
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    receiver: Pin<Box<Receiver<Arc<Event>>>>,$/;"	m	struct:EventCollector
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    receiver: Pin<Box<Receiver<Arc<Message>>>>,$/;"	m	struct:MessageCollector
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    receiver: Pin<Box<Receiver<Arc<ModalSubmitInteraction>>>>,$/;"	m	struct:ModalInteractionCollector
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    receiver: Pin<Box<Receiver<Arc<ReactionAction>>>>,$/;"	m	struct:ReactionCollector
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    receiver: UnixStream,$/;"	m	struct:Driver
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub(crate) receiver: UnixStream,$/;"	m	struct:OsExtraData
receiver	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    receiver: &'a mut Receiver<T>,$/;"	m	struct:Recv
receiver_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn receiver_count(&self) -> usize {$/;"	P	implementation:Sender
receiver_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn receiver_count(&self) -> usize {$/;"	P	implementation:Sender
recipient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub recipient: User,$/;"	m	struct:PrivateChannel
reclaim	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn reclaim(&mut self) {$/;"	P	implementation:Block
reclaim_block	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) unsafe fn reclaim_block(&self, mut block: NonNull<Block<T>>) {$/;"	P	implementation:Tx
reclaim_blocks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn reclaim_blocks(&mut self, tx: &Tx<T>) {$/;"	P	implementation:Rx
reconnect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn reconnect(&mut self) -> Result<()> {$/;"	P	implementation:Shard
reconnection_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn reconnection_type(&self) -> ReconnectType {$/;"	P	implementation:Shard
record_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn record_event(&self, event_id: EventId) {$/;"	P	implementation:Registry
record_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pub(crate) fn record_event(&self, event_id: EventId) {$/;"	P	implementation:Globals
record_invalid_event_does_nothing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn record_invalid_event_does_nothing() {$/;"	f	module:tests
recursive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    pub fn recursive(&mut self, recursive: bool) -> &mut Self {$/;"	P	implementation:DirBuilder
recursive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/dir_builder.rs	/^    recursive: bool,$/;"	m	struct:DirBuilder
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    async fn recv(&mut self) -> Result<bool> {$/;"	P	implementation:ShardRunner
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UnixDatagram
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    pub(crate) fn recv(self) -> T {$/;"	P	implementation:Receiver
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^    async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:RxFuture
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:Signal
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlBreak
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlC
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlClose
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlLogoff
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows.rs	/^    pub async fn recv(&mut self) -> Option<()> {$/;"	P	implementation:CtrlShutdown
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub async fn recv(&mut self) -> Result<T, RecvError> {$/;"	P	implementation:Receiver
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn recv(&mut self) -> Option<T> {$/;"	P	implementation:Receiver
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn recv(&mut self, cx: &mut Context<'_>) -> Poll<Option<T>> {$/;"	P	implementation:Rx
recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub async fn recv(&mut self) -> Option<T> {$/;"	P	implementation:UnboundedReceiver
recv_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn recv_buffer_size(&self) -> io::Result<u32> {$/;"	P	implementation:TcpSocket
recv_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn recv_closed() {$/;"	f
recv_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    async fn recv_event(&mut self) -> Result<(Option<Event>, Option<ShardAction>, bool)> {$/;"	P	implementation:ShardRunner
recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UdpSocket
recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UnixDatagram
recv_json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^    async fn recv_json(&mut self) -> Result<Option<Value>> {$/;"	P	implementation:WsStream
recv_json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^    async fn recv_json(&mut self) -> Result<Option<Value>>;$/;"	P	interface:ReceiverExt
recv_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    fn recv_ref($/;"	P	implementation:Receiver
ref_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_count(self) -> usize {$/;"	P	implementation:Snapshot
ref_count_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    ref_count_rx: AtomicUsize,$/;"	m	struct:Shared
ref_dec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_dec(&mut self) {$/;"	P	implementation:Snapshot
ref_dec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_dec(&self) -> bool {$/;"	P	implementation:State
ref_dec_twice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_dec_twice(&self) -> bool {$/;"	P	implementation:State
ref_inc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn ref_inc(self) {$/;"	P	implementation:RawTask
ref_inc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn ref_inc(&mut self) {$/;"	P	implementation:Snapshot
ref_inc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn ref_inc(&self) {$/;"	P	implementation:State
reference_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn reference_message(&mut self, reference: impl Into<MessageReference>) -> &mut Self {$/;"	P	implementation:CreateMessage
referenced_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub referenced_message: Option<Box<Message>>, \/\/ Boxed to avoid recursion$/;"	m	struct:Message
refresh	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    async fn refresh(&mut self) -> Result<()> {$/;"	P	implementation:MessagesIter
refresh	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    async fn refresh(&mut self) -> Result<()> {$/;"	P	implementation:MembersIter
refresh	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn refresh(&mut self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:User
refresh	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn refresh(&mut self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:Webhook
refresh	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn refresh(&mut self, page: &Page<T>) {$/;"	P	implementation:CachedPage
register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn register($/;"	P	implementation:MioSource
register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn register(&mut self, kq: RawFd, token: usize);$/;"	P	interface:AioSource
register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn register($/;"	P	implementation:Pipe
register_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    pub(crate) fn register_by_ref(&self, waker: &Waker) {$/;"	P	implementation:AtomicWaker
register_listener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn register_listener(&self, event_id: EventId) -> watch::Receiver<()> {$/;"	P	implementation:Registry
register_listener	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pub(crate) fn register_listener(&self, event_id: EventId) -> watch::Receiver<()> {$/;"	P	implementation:Globals
register_panics_on_invalid_input	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn register_panics_on_invalid_input() {$/;"	f	module:tests
register_shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/voice/mod.rs	/^    async fn register_shard(&self, shard_id: u64, sender: Sender<InterMessage>);$/;"	P	interface:VoiceGatewayManager
registered	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    registered: bool,$/;"	m	struct:TimerEntry
registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    registration: Registration,$/;"	m	struct:AsyncFd
registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    registration: Registration,$/;"	m	struct:Aio
registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/poll_evented.rs	/^    pub(crate) fn registration(&self) -> &Registration {$/;"	P	implementation:PollEvented
registration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^mod registration;$/;"	n
registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    registry: mio::Registry,$/;"	m	struct:Handle
registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^pub(crate) mod registry;$/;"	n
registry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    registry: Registry<OsStorage>,$/;"	m	struct:Globals
reject_remote_clients	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn reject_remote_clients(&mut self, reject: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
reject_remote_clients	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    reject_remote_clients: bool,$/;"	m	struct:ServerOptions
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^    fn release(&self, _task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:BlockingSchedule
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn release(&self, task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:Arc
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn release(&self, task: &Task) -> Option<Task> {$/;"	P	implementation:Arc
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn release(&self) -> usize {$/;"	f
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn release(&self, task: &Task<Self>) -> Option<Task<Self>>;$/;"	P	interface:Schedule
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^        fn release(&self, _task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:noop_scheduler::NoopSchedule
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^    fn release(&self, _task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:Runtime
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn release(&self, task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:Runtime
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn release(&self, added: usize) {$/;"	P	implementation:Semaphore
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn release(mut self) -> Sender<T> {$/;"	P	implementation:OwnedPermit
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn release() {$/;"	f
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn release(&self, task: &Task<Self>) -> Option<Task<Self>> {$/;"	P	implementation:Arc
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn release(&self) -> Arc<Page<T>> {$/;"	P	implementation:Value
release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn release(&self, value: *const Value<T>) {$/;"	P	implementation:Page
release_during_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^fn release_during_acquire() {$/;"	f
release_permits_at_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn release_permits_at_drop() {$/;"	f
rem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    rem: AtomicUsize,$/;"	m	struct:Slot
remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn remaining(&self) -> usize {$/;"	P	implementation:Args
remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub fn remaining(&self) -> i64 {$/;"	P	implementation:Ratelimit
remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    remaining: i64,$/;"	m	struct:Ratelimit
remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub remaining: u64,$/;"	m	struct:SessionStartLimit
remaining	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn remaining(&self) -> usize {$/;"	P	implementation:ReadBuf
remains	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn remains(&self) -> Option<&str> {$/;"	P	implementation:Args
remote_abort	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn remote_abort(&self) {$/;"	P	implementation:RawTask
remote_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn remote_schedule_count(&self) -> u64 {$/;"	P	implementation:RuntimeMetrics
remote_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/scheduler.rs	/^    pub(super) remote_schedule_count: AtomicU64,$/;"	m	struct:SchedulerMetrics
remotes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    remotes: Box<[Remote]>,$/;"	m	struct:Shared
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn remove(&self, task: &Task<S>) -> Option<Task<S>> {$/;"	P	implementation:LocalOwnedTasks
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    pub(crate) fn remove(&self, task: &Task<S>) -> Option<Task<S>> {$/;"	P	implementation:OwnedTasks
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    pub(crate) unsafe fn remove(&mut self, item: NonNull<TimerShared>) {$/;"	P	implementation:Wheel
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn remove(self) -> T {$/;"	P	implementation:EntryInOneOfTheLists
remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    pub(crate) unsafe fn remove(&mut self, node: NonNull<L::Target>) -> Option<L::Handle> {$/;"	P	implementation:LinkedList
remove_ban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn remove_ban($/;"	P	implementation:Http
remove_by_address	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn remove_by_address() {$/;"	f	module:tests
remove_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod remove_dir;$/;"	n
remove_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/remove_dir.rs	/^pub async fn remove_dir(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
remove_dir_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod remove_dir_all;$/;"	n
remove_dir_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/remove_dir_all.rs	/^pub async fn remove_dir_all(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
remove_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) unsafe fn remove_entry(&mut self, item: NonNull<TimerShared>) {$/;"	P	implementation:Level
remove_existing_attachment	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn remove_existing_attachment(&mut self, attachment: AttachmentId) -> &mut Self {$/;"	P	implementation:EditMessage
remove_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod remove_file;$/;"	n
remove_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/remove_file.rs	/^pub async fn remove_file(path: impl AsRef<Path>) -> io::Result<()> {$/;"	f
remove_member_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn remove_member_role($/;"	P	implementation:Http
remove_quotes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^fn remove_quotes(s: &str) -> &str {$/;"	f
remove_role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn remove_role($/;"	P	implementation:Member
remove_roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn remove_roles($/;"	P	implementation:Member
remove_thread_channel_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn remove_thread_channel_member(&self, channel_id: u64, user_id: u64) -> Result<()/;"	P	implementation:Http
remove_thread_member	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn remove_thread_member($/;"	P	implementation:ChannelId
remove_unnecessary_voice_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub(crate) fn remove_unnecessary_voice_permissions($/;"	P	implementation:Guild
remove_unusable_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub(crate) fn remove_unusable_permissions(permissions: &mut Permissions) {$/;"	P	implementation:Guild
removed_members_ids	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub removed_members_ids: Vec<UserId>,$/;"	m	struct:ThreadMembersUpdateEvent
rename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod rename;$/;"	n
rename	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/rename.rs	/^pub async fn rename(from: impl AsRef<Path>, to: impl AsRef<Path>) -> io::Result<()> {$/;"	f
reorder_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn reorder_channels<It>(self, http: impl AsRef<Http>, channels: It) -> Result<()>$/;"	P	implementation:GuildId
reorder_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn reorder_channels<It>(&self, http: impl AsRef<Http>, channels: It) -> Result<()>$/;"	P	implementation:Guild
reorder_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn reorder_channels<It>(&self, http: impl AsRef<Http>, channels: It) -> Result<()>$/;"	P	implementation:PartialGuild
replace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) fn replace(&self, val: Option<Rc<T>>) -> Option<Rc<T>> {$/;"	P	implementation:RcCell
replace_seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    pub(crate) fn replace_seed(&self, seed: RngSeed) -> RngSeed {$/;"	P	implementation:FastRand
replied_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    pub fn replied_user(&mut self, mention_user: bool) -> &mut Self {$/;"	P	implementation:CreateAllowedMentions
reply	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn reply($/;"	P	implementation:Message
reply_mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn reply_mention($/;"	P	implementation:Message
reply_ping	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn reply_ping($/;"	P	implementation:Message
req	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    req: Request<'a>,$/;"	m	struct:RatelimitedRequest
request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn request(&self, mut req: Request<'_>) -> Result<ReqwestResponse> {$/;"	P	implementation:Http
request	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub mod request;$/;"	n
request_restart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    async fn request_restart(&mut self) -> Result<()> {$/;"	P	implementation:ShardRunner
request_to_speak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_voice_state.rs	/^    pub fn request_to_speak(&mut self, request: bool) -> &mut Self {$/;"	P	implementation:EditVoiceState
request_to_speak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn request_to_speak(self) -> bool {$/;"	P	implementation:Permissions
request_to_speak_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_voice_state.rs	/^    pub fn request_to_speak_timestamp<T: Into<Timestamp>>($/;"	P	implementation:EditVoiceState
request_to_speak_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            request_to_speak_timestamp: Option<Timestamp>,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
request_to_speak_timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub request_to_speak_timestamp: Option<Timestamp>,$/;"	m	struct:VoiceState
require_colons	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub require_colons: bool,$/;"	m	struct:Emoji
required	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn required(&mut self, required: bool) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
required	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn required(&mut self, required: bool) -> &mut Self {$/;"	P	implementation:CreateInputText
required	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub required: bool,$/;"	m	struct:CommandOption
required_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn required_permissions(&self) -> &Permissions {$/;"	P	implementation:CommandOptions
required_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn required_permissions(&self) -> &Permissions {$/;"	P	implementation:GroupOptions
required_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn required_permissions(&self) -> &Permissions;$/;"	P	interface:CommonOptions
required_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub required_permissions: Permissions,$/;"	m	struct:CommandOptions
required_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub required_permissions: Permissions,$/;"	m	struct:GroupOptions
reqwest_method	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^    pub fn reqwest_method(self) -> Method {$/;"	P	implementation:LightMethod
reregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/bsd/poll_aio.rs	/^    fn reregister($/;"	P	implementation:MioSource
reregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn reregister($/;"	P	implementation:Pipe
reregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(self) unsafe fn reregister($/;"	P	implementation:Handle
reserve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn reserve(&mut self, num_bytes: usize) {$/;"	f
reserve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn reserve(&self) -> Result<Permit<'_, T>, SendError<()>> {$/;"	P	implementation:Sender
reserve_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    async fn reserve_inner(&self) -> Result<(), SendError<()>> {$/;"	P	implementation:Sender
reserve_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn reserve_owned(self) -> Result<OwnedPermit<T>, SendError<()>> {$/;"	P	implementation:Sender
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn reset(&mut self) {$/;"	P	implementation:Shard
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub fn reset(&self) -> Option<SystemTime> {$/;"	P	implementation:Ratelimit
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    reset: Option<SystemTime>,$/;"	m	struct:Ratelimit
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    fn reset(&self) {$/;"	P	implementation:ScheduledIo
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(crate) fn reset(mut self: Pin<&mut Self>, new_time: Instant, reregister: bool) {$/;"	P	implementation:TimerEntry
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn reset(&mut self) {$/;"	P	implementation:Interval
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub fn reset(self: Pin<&mut Self>, deadline: Instant) {$/;"	P	implementation:Sleep
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^        fn reset(&self) {$/;"	P	implementation:test::Foo
reset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn reset(&self);$/;"	P	interface:Entry
reset_after	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub fn reset_after(&self) -> Option<Duration> {$/;"	P	implementation:Ratelimit
reset_after	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    reset_after: Option<Duration>,$/;"	m	struct:Ratelimit
reset_after	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub reset_after: u64,$/;"	m	struct:SessionStartLimit
reset_future	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn reset_future() {$/;"	f
reset_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    fn reset_inner(self: Pin<&mut Self>, deadline: Instant) {$/;"	P	implementation:Sleep
reset_presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn reset_presence(&self) {$/;"	P	implementation:Context
reset_without_reregister	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^    pub(crate) fn reset_without_reregister(self: Pin<&mut Self>, deadline: Instant) {$/;"	P	implementation:Sleep
reset_woken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn reset_woken(&self) -> bool {$/;"	P	implementation:Handle
resolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub resolved: CommandDataResolved,$/;"	m	struct:CommandData
resolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub resolved: Option<CommandDataOptionValue>,$/;"	m	struct:CommandDataOption
resolved_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub resolved_at: Option<String>,$/;"	m	struct:Incident
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Barrier
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Semaphore
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:MappedMutexGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:MappedMutexGuardInner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Mutex
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:MutexGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:MutexGuardInner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:OwnedMappedMutexGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:OwnedMappedMutexGuardInner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:OwnedMutexGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    resource_span: tracing::Span,$/;"	m	struct:OwnedMutexGuardInner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Receiver
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Sender
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    resource_span: tracing::Span,$/;"	m	struct:RwLock
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:OwnedRwLockReadGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:OwnedRwLockWriteGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:OwnedRwLockMappedWriteGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:RwLockReadGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:RwLockWriteGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) resource_span: tracing::Span,$/;"	m	struct:RwLockMappedWriteGuard
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Inner
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Semaphore
resource_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    resource_span: tracing::Span,$/;"	m	struct:Interval
resources	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    resources: Slab<ScheduledIo>,$/;"	m	struct:Driver
rest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn rest(&self) -> &str {$/;"	P	implementation:Args
restart	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub async fn restart(&mut self, shard_id: ShardId) {$/;"	P	implementation:ShardManager
restore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn restore(&mut self) {$/;"	P	implementation:Args
resubscribe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn resubscribe(&self) -> Self {$/;"	P	implementation:Receiver
result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    result: UnsafeCell<TimerResult>,$/;"	m	struct:StateCell
resume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn resume(&self, _ctx: Context, _: ResumedEvent) {}$/;"	P	interface:EventHandler
resume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn resume(&mut self) -> Result<()> {$/;"	P	implementation:Shard
retain_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/backports.rs	/^pub fn retain_mut<T>(vec: &mut Vec<T>, f: impl FnMut(&mut T) -> bool) {$/;"	f
retain_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/backports.rs	/^pub fn retain_mut<T>(vec: &mut Vec<T>, mut f: impl FnMut(&mut T) -> bool) {$/;"	f
retain_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn retain_ready(&mut self) {$/;"	P	implementation:AsyncFdReadyGuard
retain_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn retain_ready(&mut self) {$/;"	P	implementation:AsyncFdReadyMutGuard
return_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        return_err: bool,$/;"	m	struct:test::MockWait
returned_from_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn returned_from_park(&mut self) {$/;"	P	implementation:MetricsBatch
returned_from_park	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn returned_from_park(&mut self) {}$/;"	P	implementation:MetricsBatch
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn reunite(self, other: OwnedReadHalf) -> Result<TcpStream, ReuniteError> {$/;"	P	implementation:OwnedWriteHalf
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn reunite(self, other: OwnedWriteHalf) -> Result<TcpStream, ReuniteError> {$/;"	P	implementation:OwnedReadHalf
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub(crate) fn reunite($/;"	f
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn reunite(self, other: OwnedReadHalf) -> Result<UnixStream, ReuniteError> {$/;"	P	implementation:OwnedWriteHalf
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn reunite(self, other: OwnedWriteHalf) -> Result<UnixStream, ReuniteError> {$/;"	P	implementation:OwnedReadHalf
reunite	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub(crate) fn reunite($/;"	f
reusable_box	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^mod reusable_box;$/;"	n
reuseaddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn reuseaddr(&self) -> io::Result<bool> {$/;"	P	implementation:TcpSocket
reuseport	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn reuseport(&self) -> io::Result<bool> {$/;"	P	implementation:TcpSocket
revoked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub revoked: bool,$/;"	m	struct:Connection
revoked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub revoked: Option<bool>,$/;"	m	struct:Integration
rewind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn rewind(&mut self) -> &mut Self {$/;"	P	implementation:Args
rng	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    rng: FastRand,$/;"	m	struct:Context
role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn role<G, R>(&self, guild_id: G, role_id: R) -> Option<Role>$/;"	P	implementation:Cache
role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub role: Role,$/;"	m	struct:GuildRoleCreateEvent
role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub role: Role,$/;"	m	struct:GuildRoleUpdateEvent
role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod role;$/;"	n
role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^            role: InterimRole,$/;"	m	struct:roles::deserialize_event::Event
role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^mod role;$/;"	n
role	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn role<R: Into<RoleId>>(&mut self, role: R) -> &mut Self {$/;"	P	implementation:MessageBuilder
role_by_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn role_by_name(&self, role_name: &str) -> Option<&Role> {$/;"	P	implementation:Guild
role_by_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn role_by_name(&self, role_name: &str) -> Option<&Role> {$/;"	P	implementation:PartialGuild
role_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub role_id: RoleId,$/;"	m	struct:GuildRoleDeleteEvent
role_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub role_id: Option<RoleId>,$/;"	m	struct:Integration
role_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub role_name: Option<String>,$/;"	m	struct:Options
role_parser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^    fn role_parser() {$/;"	f	module:test
role_permissions_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn role_permissions_in(&self, channel: &GuildChannel, role: &Role) -> Result<Permissions/;"	P	implementation:Guild
role_permissions_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn role_permissions_in(&self, channel: &GuildChannel, role: &Role) -> Result<Permissions/;"	P	implementation:PartialGuild
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/add_member.rs	/^    pub fn roles(&mut self, roles: impl IntoIterator<Item = impl AsRef<RoleId>>) -> &mut Self {$/;"	P	implementation:AddMember
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    pub fn roles<R: Into<RoleId>>(&mut self, users: impl IntoIterator<Item = R>) -> &mut Self {$/;"	P	implementation:CreateAllowedMentions
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn roles<T: AsRef<RoleId>, It: IntoIterator<Item = T>>(&mut self, roles: It) -> &mut Sel/;"	P	implementation:EditMember
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub roles: HashMap<RoleId, Role>,$/;"	m	struct:CommandDataResolved
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub roles: Vec<RoleId>,$/;"	m	struct:GuildMemberUpdateEvent
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub roles: Vec<RoleId>,$/;"	m	struct:Emoji
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn roles(self, http: impl AsRef<Http>) -> Result<HashMap<RoleId, Role>> {$/;"	P	implementation:GuildId
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub fn roles(&self, cache: impl AsRef<Cache>) -> Option<Vec<Role>> {$/;"	P	implementation:Member
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub roles: Vec<RoleId>,$/;"	m	struct:InterimMember
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub roles: Vec<RoleId>,$/;"	m	struct:Member
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub roles: Vec<RoleId>,$/;"	m	struct:PartialMember
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub roles: HashMap<RoleId, Role>,$/;"	m	struct:Guild
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub roles: HashMap<RoleId, Role>,$/;"	m	struct:PartialGuild
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub mod roles {$/;"	n
roles	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub mod roles {$/;"	n	module:colours
route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn route(&mut self, route_info: RouteInfo<'a>) -> &mut Self {$/;"	P	implementation:RequestBuilder
route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub(super) route: RouteInfo<'a>,$/;"	m	struct:Request
route	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    route: RouteInfo<'a>,$/;"	m	struct:RequestBuilder
route_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn route_mut(&mut self) -> &mut RouteInfo<'a> {$/;"	P	implementation:Request
route_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/request.rs	/^    pub fn route_ref(&self) -> &RouteInfo<'_> {$/;"	P	implementation:Request
routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    pub fn routes(&self) -> Arc<RwLock<HashMap<Route, Arc<Mutex<Ratelimit>>>>> {$/;"	P	implementation:Ratelimiter
routes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    routes: Arc<RwLock<HashMap<Route, Arc<Mutex<Ratelimit>>>>>,$/;"	m	struct:Ratelimiter
routing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub mod routing;$/;"	n
rpc_origins	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub rpc_origins: Vec<String>,$/;"	m	struct:CurrentApplicationInfo
rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        rt: crate::runtime::Runtime,$/;"	m	struct:test_combination::Rt
rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn rt(start_paused: bool) -> crate::runtime::Runtime {$/;"	f
rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn rt() -> Runtime {$/;"	f	module:tests
rt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^    fn rt() -> Runtime {$/;"	f	module:tests
rtc_region	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub rtc_region: Option<String>,$/;"	m	struct:GuildChannel
rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub rule: Rule,$/;"	m	struct:AutoModerationRuleCreateEvent
rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub rule: Rule,$/;"	m	struct:AutoModerationRuleDeleteEvent
rule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub rule: Rule,$/;"	m	struct:AutoModerationRuleUpdateEvent
rule_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub rule_id: RuleId,$/;"	m	struct:ActionExecution
rule_trigger_serde	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn rule_trigger_serde() {$/;"	f	module:tests
rules_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn rules_channel_id(&mut self, channel_id: Option<ChannelId>) -> &mut Self {$/;"	P	implementation:EditGuild
rules_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub rules_channel_id: Option<ChannelId>,$/;"	m	struct:Guild
rules_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub rules_channel_id: Option<ChannelId>,$/;"	m	struct:PartialGuild
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^    pub async fn run(&mut self) -> Result<()> {$/;"	P	implementation:ShardManagerMonitor
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub async fn run(&mut self) {$/;"	P	implementation:ShardQueuer
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub async fn run(&mut self) -> Result<()> {$/;"	P	implementation:ShardRunner
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn run(&self, worker_thread_id: usize) {$/;"	P	implementation:Inner
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn run(self) {$/;"	P	implementation:Task
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn run(&self, mut core: Box<Core>) -> RunResult {$/;"	P	implementation:Context
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^fn run(worker: Arc<Worker>) {$/;"	f
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(crate) fn run(self) {$/;"	P	implementation:LocalNotified
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(crate) fn run(self) {$/;"	P	implementation:UnownedTask
run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^        fn run(ctx: &Context) {$/;"	f	function:try_recv
run_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    pub(in super::super) fn run_one() {$/;"	f	module:pool
run_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    run_queue: queue::Local<Arc<Handle>>,$/;"	m	struct:Core
run_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn run_task<R>(&self, mut core: Box<Core>, f: impl FnOnce() -> R) -> (Box<Core>, R) {$/;"	P	implementation:Context
run_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn run_task(&self, task: Notified, mut core: Box<Core>) -> RunResult {$/;"	P	implementation:Context
run_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub async fn run_until<F>(&self, future: F) -> F::Output$/;"	P	implementation:LocalSet
runner_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    runner_rx: Receiver<InterMessage>,$/;"	m	struct:ShardRunner
runner_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    pub runner_tx: ShardMessenger,$/;"	m	struct:ShardRunnerInfo
runner_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub(super) fn runner_tx(&self) -> Sender<InterMessage> {$/;"	P	implementation:ShardRunner
runner_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    runner_tx: Sender<InterMessage>,$/;"	m	struct:ShardRunner
runners	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub runners: Arc<Mutex<HashMap<ShardId, ShardRunnerInfo>>>,$/;"	m	struct:ShardManager
runners	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub runners: Arc<Mutex<HashMap<ShardId, ShardRunnerInfo>>>,$/;"	m	struct:ShardQueuer
runtime	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    runtime: Cell<EnterRuntime>,$/;"	m	struct:Context
runtime_flavor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn runtime_flavor(&self) -> RuntimeFlavor {$/;"	P	implementation:Handle
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^    pub rx: Receiver<ShardManagerMessage>,$/;"	m	struct:ShardManagerMonitor
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub rx: Receiver<ShardQueuerMessage>,$/;"	m	struct:ShardQueuer
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    rx: oneshot::Receiver<T>,$/;"	m	struct:JoinHandle
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    rx: oneshot::Receiver<()>,$/;"	m	struct:Waiting
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^    rx: oneshot::Receiver<()>,$/;"	m	struct:Receiver
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    rx: Receiver<()>,$/;"	m	struct:BlockedFuture
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_current_thread_scheduler.rs	/^    rx: Receiver<()>,$/;"	m	struct:ResetFuture
rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^            rx: Mutex<mpsc::Receiver<()>>,$/;"	m	struct:try_recv::Context
rx_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    rx_closed: bool,$/;"	m	struct:RxFields
rx_cnt	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    rx_cnt: usize,$/;"	m	struct:Tail
rx_fields	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    rx_fields: UnsafeCell<RxFields<T>>,$/;"	m	struct:Chan
rx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    rx_task: Task,$/;"	m	struct:Inner
rx_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    rx_waker: AtomicWaker,$/;"	m	struct:Chan
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    s: &'a semaphore::Semaphore,$/;"	m	struct:MappedMutexGuard
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    s: &'a semaphore::Semaphore,$/;"	m	struct:MappedMutexGuardInner
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    s: semaphore::Semaphore,$/;"	m	struct:Mutex
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    s: Semaphore,$/;"	m	struct:RwLock
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub(super) s: &'a Semaphore,$/;"	m	struct:RwLockReadGuard
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    s: &'a Semaphore,$/;"	m	struct:Inner
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub(super) s: &'a Semaphore,$/;"	m	struct:RwLockWriteGuard
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    s: &'a Semaphore,$/;"	m	struct:Inner
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub(super) s: &'a Semaphore,$/;"	m	struct:RwLockMappedWriteGuard
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    s: &'a Semaphore,$/;"	m	struct:Inner
s	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    s: u32,$/;"	m	struct:RngSeed
safe_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn safe_content() {$/;"	f	module:test
same_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn same_channel(&self, other: &Self) -> bool {$/;"	P	implementation:Sender
same_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn same_channel(&self, other: &Self) -> bool {$/;"	P	implementation:Tx
same_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn same_channel(&self, other: &Self) -> bool {$/;"	P	implementation:UnboundedSender
same_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn same_channel(&self, other: &Self) -> bool {$/;"	P	implementation:Receiver
same_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^pub fn same_type<T>(_1: &T, _2: &T) {}$/;"	f
saturating_duration_since	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    pub fn saturating_duration_since(&self, earlier: Instant) -> Duration {$/;"	P	implementation:Instant
say	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn say($/;"	P	implementation:ChannelId
say	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn say($/;"	P	implementation:GuildChannel
say	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn say(&self, http: impl AsRef<Http>, content: impl fmt::Display) -> Result<Messag/;"	P	implementation:PrivateChannel
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^mod schedule;$/;"	n
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/schedule.rs	/^    fn schedule(&self, _task: task::Notified<Self>) {$/;"	P	implementation:BlockingSchedule
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn schedule(&self, task: task::Notified<Self>) {$/;"	P	implementation:Arc
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn schedule(&self, task: Notified) {$/;"	P	implementation:Arc
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn schedule(&self, task: Notified<Self>);$/;"	P	interface:Schedule
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn schedule(self) {$/;"	P	implementation:RawTask
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) schedule: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn schedule<S: Schedule>(ptr: NonNull<Header>) {$/;"	f
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^        fn schedule(&self, _task: task::Notified<Self>) {$/;"	P	implementation:noop_scheduler::NoopSchedule
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^    fn schedule(&self, _task: task::Notified<Self>) {$/;"	P	implementation:Runtime
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn schedule(&self, task: task::Notified<Self>) {$/;"	P	implementation:Runtime
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn schedule() {$/;"	f
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn schedule(&self, task: task::Notified<Arc<Self>>) {$/;"	P	implementation:Shared
schedule	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn schedule(&self, task: task::Notified<Self>) {$/;"	P	implementation:Arc
schedule_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn schedule_local(&self, core: &mut Core, task: Notified, is_yield: bool) {$/;"	P	implementation:Handle
schedule_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) fn schedule_task(&self, task: Notified, is_yield: bool) {$/;"	P	implementation:Handle
scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn scheduled_event($/;"	P	implementation:GuildId
scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn scheduled_event($/;"	P	implementation:Guild
scheduled_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod scheduled_event;$/;"	n
scheduled_event_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    scheduled_event_id: ScheduledEventId,$/;"	m	struct:GuildScheduledEventUserAddEvent
scheduled_event_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    scheduled_event_id: ScheduledEventId,$/;"	m	struct:GuildScheduledEventUserRemoveEvent
scheduled_event_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn scheduled_event_users($/;"	P	implementation:GuildId
scheduled_event_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn scheduled_event_users($/;"	P	implementation:Guild
scheduled_event_users_optioned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn scheduled_event_users_optioned($/;"	P	implementation:GuildId
scheduled_event_users_optioned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn scheduled_event_users_optioned($/;"	P	implementation:Guild
scheduled_events	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn scheduled_events($/;"	P	implementation:GuildId
scheduled_events	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn scheduled_events($/;"	P	implementation:Guild
scheduled_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^mod scheduled_io;$/;"	n
scheduled_maintenances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^            scheduled_maintenances: Vec<Maintenance>,$/;"	m	struct:Http::get_active_maintenances::StatusResponse
scheduled_maintenances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^            scheduled_maintenances: Vec<Maintenance>,$/;"	m	struct:Http::get_upcoming_maintenances::StatusResponse
scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^pub(crate) mod scheduler;$/;"	n
scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    scheduler: Scheduler,$/;"	m	struct:Runtime
scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    scheduler: &'a CurrentThread,$/;"	m	struct:CoreGuard
scheduler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) scheduler: S,$/;"	m	struct:Core
scheduler_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    scheduler_metrics: SchedulerMetrics,$/;"	m	struct:Shared
scheduler_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) scheduler_metrics: SchedulerMetrics,$/;"	m	struct:Shared
scheduler_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) scheduler_offset: usize,$/;"	m	struct:Vtable
schema	/home/trey/code/sqlx-crud/src/lib.rs	/^pub mod schema;$/;"	n
scope	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn scope<F>(&'static self, value: T, f: F) -> TaskLocalFuture<T, F>$/;"	P	implementation:LocalKey
scope_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    fn scope_inner<F, R>(&'static self, slot: &mut Option<T>, f: F) -> Result<R, ScopeInnerErr>$/;"	P	implementation:LocalKey
scoped_thread_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^macro_rules! scoped_thread_local {$/;"	M
scoped_tls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^pub(crate) mod scoped_tls;$/;"	n
scopes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    pub fn scopes(&mut self, scopes: &[Scope]) -> &mut Self {$/;"	P	implementation:CreateBotAuthParameters
scopes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/bot_auth_parameters.rs	/^    scopes: Vec<Scope>,$/;"	m	struct:CreateBotAuthParameters
sealed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^pub(crate) mod sealed {$/;"	n
search_guild_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn search_guild_members($/;"	P	implementation:Http
search_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn search_members($/;"	P	implementation:GuildId
search_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn search_members($/;"	P	implementation:Guild
search_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn search_members($/;"	P	implementation:PartialGuild
searched_lowercase	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub fn searched_lowercase<'rec, 'a: 'rec>($/;"	f
secrets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub secrets: Option<ActivitySecrets>,$/;"	m	struct:Activity
security_qos_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn security_qos_flags(&mut self, flags: u32) -> &mut Self {$/;"	P	implementation:ClientOptions
security_qos_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    security_qos_flags: u32,$/;"	m	struct:ClientOptions
seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^    pub(crate) fn seed() -> u64 {$/;"	f	module:rand
seed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    pub(crate) fn seed() -> u64 {$/;"	f	module:rand
seed_generator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) seed_generator: RngSeedGenerator,$/;"	m	struct:Builder
seed_generator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) seed_generator: RngSeedGenerator,$/;"	m	struct:Config
seed_generator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) seed_generator: RngSeedGenerator,$/;"	m	struct:Handle
seed_generator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) seed_generator: RngSeedGenerator,$/;"	m	struct:Handle
seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn seek(&mut self, pos: SeekFrom) -> io::Result<u64> {$/;"	P	implementation:MockFile
seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/seek.rs	/^pub(crate) fn seek<S>(seek: &mut S, pos: SeekFrom) -> Seek<'_, S>$/;"	f
select	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/select.rs	/^macro_rules! select {$/;"	M
select_by_id_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub select_by_id_sql: &'s str,$/;"	m	struct:Metadata
select_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn select_by_id_sql() -> &'static str;$/;"	P	interface:Schema
select_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub select_sql: &'s str,$/;"	m	struct:Metadata
select_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn select_sql() -> &'static str;$/;"	P	interface:Schema
select_variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/select.rs	/^macro_rules! select_variant {$/;"	M
self_deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            self_deaf: bool,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
self_deaf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub self_deaf: bool,$/;"	m	struct:VoiceState
self_mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            self_mute: bool,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
self_mute	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub self_mute: bool,$/;"	m	struct:VoiceState
self_stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            self_stream: Option<bool>,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
self_stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub self_stream: Option<bool>,$/;"	m	struct:VoiceState
self_video	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            self_video: bool,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
self_video	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub self_video: bool,$/;"	m	struct:VoiceState
sem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    sem: &'a Semaphore,$/;"	m	struct:SemaphorePermit
sem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    sem: Arc<Semaphore>,$/;"	m	struct:OwnedSemaphorePermit
sem	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^            sem: Arc<Semaphore>,$/;"	m	struct:try_recv::Context
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    semaphore: &'a Semaphore,$/;"	m	struct:Acquire
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub(crate) semaphore: semaphore::Semaphore,$/;"	m	struct:Semaphore
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(super) fn semaphore(&self) -> &S {$/;"	P	implementation:Tx
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    semaphore: S,$/;"	m	struct:Chan
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    semaphore: Semaphore,$/;"	m	struct:OnceCell
semaphore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_semaphore_batch.rs	/^        semaphore: Semaphore,$/;"	m	struct:basic_usage::Shared
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UnixDatagram
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    pub(crate) fn send(self, value: T) {$/;"	P	implementation:Sender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn send(&self, value: T) -> Result<usize, SendError<T>> {$/;"	P	implementation:Sender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn send(&self, value: T) -> Result<(), SendError<T>> {$/;"	P	implementation:Sender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn send(mut self, value: T) -> Sender<T> {$/;"	P	implementation:OwnedPermit
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn send(self, value: T) {$/;"	P	implementation:Permit
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    fn send(&self, value: T) {$/;"	P	implementation:Chan
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn send(&self, value: T) {$/;"	P	implementation:Tx
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn send(&self, message: T) -> Result<(), SendError<T>> {$/;"	P	implementation:UnboundedSender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn send(mut self, t: T) -> Result<(), T> {$/;"	P	implementation:Sender
send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn send(&self, value: T) -> Result<(), error::SendError<T>> {$/;"	P	implementation:Sender
send_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn send_buffer_size(&self) -> io::Result<u32> {$/;"	P	implementation:TcpSocket
send_chunk_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_chunk_guild($/;"	P	implementation:WsStream
send_chunk_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_chunk_guild($/;"	P	interface:WebSocketGatewayClientExt
send_error_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn send_error_embed($/;"	f
send_event	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub(crate) fn send_event(&mut self, event: &mut LazyArc<'_, Event>) -> bool {$/;"	P	implementation:EventFilter
send_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn send_files<'a, T, It: IntoIterator<Item = T>>($/;"	P	implementation:Http
send_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn send_files<'a, F, T, It>($/;"	P	implementation:ChannelId
send_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn send_files<'a, F, T, It>($/;"	P	implementation:GuildChannel
send_files	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn send_files<'a, F, T, It>($/;"	P	implementation:PrivateChannel
send_grouped_commands_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn send_grouped_commands_embed($/;"	f
send_heartbeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_heartbeat(&mut self, shard_info: &[u64; 2], seq: Option<u64>) -> Result<()> {$/;"	P	implementation:WsStream
send_heartbeat	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_heartbeat(&mut self, shard_info: &[u64; 2], seq: Option<u64>) -> Result<()>;$/;"	P	interface:WebSocketGatewayClientExt
send_identify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_identify($/;"	P	implementation:WsStream
send_identify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_identify($/;"	P	interface:WebSocketGatewayClientExt
send_if_modified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn send_if_modified<F>(&self, modify: F) -> bool$/;"	P	implementation:Sender
send_interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    pub(crate) fn send_interaction($/;"	P	implementation:ComponentInteractionFilter
send_interaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    pub(crate) fn send_interaction($/;"	P	implementation:ModalInteractionFilter
send_json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^    async fn send_json(&mut self, value: &Value) -> Result<()> {$/;"	P	implementation:WsStream
send_json	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/ws_impl.rs	/^    async fn send_json(&mut self, value: &Value) -> Result<()>;$/;"	P	interface:SenderExt
send_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    pub(crate) fn send_message(&mut self, message: &mut LazyArc<'_, Message>) -> bool {$/;"	P	implementation:MessageFilter
send_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn send_message(&self, channel_id: u64, map: &Value) -> Result<Message> {$/;"	P	implementation:Http
send_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn send_message<'a, F>(self, http: impl AsRef<Http>, f: F) -> Result<Message>$/;"	P	implementation:ChannelId
send_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn send_message<'a, F>(&self, cache_http: impl CacheHttp, f: F) -> Result<Message>$/;"	P	implementation:GuildChannel
send_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn send_message<'a, F>(&self, http: impl AsRef<Http>, f: F) -> Result<Message>$/;"	P	implementation:PrivateChannel
send_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn send_messages(self) -> bool {$/;"	P	implementation:Permissions
send_messages_in_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn send_messages_in_threads(self) -> bool {$/;"	P	implementation:Permissions
send_modify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn send_modify<F>(&self, modify: F)$/;"	P	implementation:Sender
send_presence_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_presence_update($/;"	P	implementation:WsStream
send_presence_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_presence_update($/;"	P	interface:WebSocketGatewayClientExt
send_reaction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub(crate) fn send_reaction(&mut self, reaction: &mut LazyReactionAction<'_>) -> bool {$/;"	P	implementation:ReactionFilter
send_replace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn send_replace(&self, mut value: T) -> T {$/;"	P	implementation:Sender
send_resume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_resume($/;"	P	implementation:WsStream
send_resume	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/ws_client_ext.rs	/^    async fn send_resume($/;"	P	interface:WebSocketGatewayClientExt
send_single_command_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn send_single_command_embed($/;"	f
send_suggestion_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^async fn send_suggestion_embed($/;"	f
send_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub async fn send_timeout($/;"	P	implementation:Sender
send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn send_to<A: ToSocketAddrs>(&self, buf: &[u8], target: A) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn send_to<P>(&self, buf: &[u8], target: P) -> io::Result<usize>$/;"	P	implementation:UnixDatagram
send_to_addr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    async fn send_to_addr(&self, buf: &[u8], target: SocketAddr) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
send_to_shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn send_to_shard(&self, msg: ShardRunnerMessage) -> Result<(), TrySendError<InterMessage/;"	P	implementation:ShardMessenger
send_tts_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn send_tts_messages(self) -> bool {$/;"	P	implementation:Permissions
sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    sender: Sender<Arc<MessageComponentInteraction>>,$/;"	m	struct:ComponentInteractionFilter
sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    sender: Sender<Arc<Event>>,$/;"	m	struct:EventFilter
sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    sender: Sender<Arc<Message>>,$/;"	m	struct:MessageFilter
sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    sender: Sender<Arc<ModalSubmitInteraction>>,$/;"	m	struct:ModalInteractionFilter
sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    sender: Sender<Arc<ReactionAction>>,$/;"	m	struct:ReactionFilter
sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    sender: UnixStream,$/;"	m	struct:OsExtraData
seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn seq(&self) -> u64 {$/;"	P	implementation:Shard
seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    seq: u64,$/;"	m	struct:Shard
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:ActionRowComponent
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    fn serialize<S: Serializer>(&self, serializer: S) -> Result<S::Ok, S::Error> {$/;"	P	implementation:Interaction
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> StdResult<S::Ok, S::Error>$/;"	P	implementation:Channel
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> StdResult<S::Ok, S::Error>$/;"	P	implementation:PermissionOverwrite
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn serialize<S>(&self, serializer: S) -> StdResult<S::Ok, S::Error>$/;"	P	implementation:ReactionType
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    fn serialize<S: Serializer>(&self, serializer: S) -> StdResult<S::Ok, S::Error> {$/;"	P	implementation:Action
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    fn serialize<S: Serializer>(&self, serializer: S) -> Result<S::Ok, S::Error> {$/;"	P	implementation:Change
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^    pub fn serialize<S: Serializer>(value: &Option<u64>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:optional_string
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn serialize<S: Serializer>(&self, serializer: S) -> Result<S::Ok, S::Error> {$/;"	P	implementation:Action
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    fn serialize<S: Serializer>(&self, serializer: S) -> Result<S::Ok, S::Error> {$/;"	P	implementation:Trigger
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub fn serialize<S: Serializer>(_: &bool, serializer: S) -> Result<S::Ok, S::Error> {$/;"	f	module:premium_subscriber
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    fn serialize<S: Serializer>(&self, serializer: S) -> Result<S::Ok, S::Error> {$/;"	P	implementation:GuildWelcomeChannel
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^    pub fn serialize<S: Serializer>(id: &u64, serializer: S) -> Result<S::Ok, S::Error> {$/;"	f	module:snowflake
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Permissions
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        pub fn serialize<S: Serializer>($/;"	f	module:discriminator::option
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn serialize<S: Serializer>(value: &u16, serializer: S) -> Result<S::Ok, S::Error> {$/;"	f	module:discriminator
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn serialize<S: Serializer>(user: &User, serializer: S) -> Result<S::Ok, S::Error> {$/;"	f	module:single_recipient
serialize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    pub fn serialize<S: Serializer>(vec: &Vec<String>, serializer: S) -> Result<S::Ok, S::Error>/;"	f	module:comma_separated_string
serialize_map_values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn serialize_map_values<K, S: Serializer, V: Serialize>($/;"	f
serialize_variants	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^        macro_rules! serialize_variants {$/;"	M	method:Change::serialize
server_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/voice/mod.rs	/^    async fn server_update(&self, guild_id: GuildId, endpoint: &Option<String>, token: &str);$/;"	P	interface:VoiceGatewayManager
session_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn session_id(&self) -> Option<&String> {$/;"	P	implementation:Shard
session_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    session_id: Option<String>,$/;"	m	struct:Shard
session_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub session_id: Option<String>,$/;"	m	struct:Activity
session_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub session_id: String,$/;"	m	struct:Ready
session_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            session_id: String,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
session_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub session_id: String,$/;"	m	struct:VoiceState
session_start_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub session_start_limit: SessionStartLimit,$/;"	m	struct:BotGateway
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^    pub(crate) fn set<F, R>(&'static self, t: &T, f: F) -> R$/;"	P	implementation:ScopedKey
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn set<F>(&mut self, future: F)$/;"	P	implementation:ReusableBoxFuture
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn set(&self, value: T) -> Result<(), SetError<T>> {$/;"	P	implementation:OnceCell
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    pub(crate) fn set(&self, val: Box<T>) {$/;"	P	implementation:AtomicCell
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    set: &'a mut IdleNotifiedSet<T>,$/;"	m	struct:EntryInOneOfTheLists
set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    pub(crate) fn set(&self, val: Option<Rc<T>>) {$/;"	P	implementation:RcCell
set_action_row	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn set_action_row(&mut self, mut row: CreateActionRow) -> &mut Self {$/;"	P	implementation:CreateComponents
set_action_rows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn set_action_rows(&mut self, rows: Vec<CreateActionRow>) -> &mut Self {$/;"	P	implementation:CreateComponents
set_activity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn set_activity(&self, activity: Option<Activity>) {$/;"	P	implementation:ShardMessenger
set_activity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn set_activity(&self, activity: Activity) {$/;"	P	implementation:Context
set_activity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn set_activity(&mut self, activity: Option<Activity>) {$/;"	P	implementation:Shard
set_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn set_application_commands($/;"	P	implementation:CreateApplicationCommands
set_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn set_application_commands($/;"	P	implementation:CreateApplicationCommandsPermissions
set_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn set_application_commands<F>($/;"	P	implementation:GuildId
set_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn set_application_commands<F>($/;"	P	implementation:Guild
set_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn set_application_commands<F>($/;"	P	implementation:PartialGuild
set_application_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn set_application_commands_permissions<F>($/;"	P	implementation:GuildId
set_application_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn set_application_commands_permissions<F>($/;"	P	implementation:Guild
set_application_commands_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn set_application_commands_permissions<F>($/;"	P	implementation:PartialGuild
set_application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn set_application_id(&self, application_id: u64) {$/;"	P	implementation:Http
set_author	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn set_author(&mut self, author: CreateEmbedAuthor) -> &mut Self {$/;"	P	implementation:CreateEmbed
set_autocomplete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn set_autocomplete(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:CreateApplicationCommandOption
set_broadcast	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_broadcast(&self, on: bool) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_cached_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    unsafe fn set_cached_when(&self, when: u64) {$/;"	P	implementation:TimerShared
set_cancelled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn set_cancelled(&mut self) {$/;"	P	implementation:Snapshot
set_choices	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn set_choices(&mut self, choices: Value) -> &mut Self {$/;"	P	implementation:CreateAutocompleteResponse
set_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn set_closed(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
set_closed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn set_closed(&self) {$/;"	P	implementation:state::AtomicState
set_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn set_complete(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
set_component_interaction_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn set_component_interaction_filter(&self, collector: ComponentInteractionFilter) {$/;"	P	implementation:ShardMessenger
set_component_interaction_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn set_component_interaction_filter(&self, filter: ComponentInteractionFilter) {$/;"	P	implementation:Context
set_components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn set_components(&mut self, components: CreateComponents) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
set_components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn set_components(&mut self, components: CreateComponents) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
set_components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn set_components(&mut self, components: CreateComponents) -> &mut Self {$/;"	P	implementation:CreateMessage
set_components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn set_components(&mut self, components: CreateComponents) -> &mut Self {$/;"	P	implementation:EditMessage
set_components	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn set_components(&mut self, components: CreateComponents) -> &mut Self {$/;"	P	implementation:ExecuteWebhook
set_elapsed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn set_elapsed(&mut self, when: u64) {$/;"	P	implementation:Wheel
set_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn set_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
set_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn set_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
set_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn set_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:CreateMessage
set_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    pub fn set_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:EditInteractionResponse
set_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn set_embed(&mut self, embed: CreateEmbed) -> &mut Self {$/;"	P	implementation:EditMessage
set_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn set_embeds(&mut self, embeds: impl IntoIterator<Item = CreateEmbed>) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
set_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn set_embeds(&mut self, embeds: impl IntoIterator<Item = CreateEmbed>) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
set_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn set_embeds(&mut self, embeds: Vec<CreateEmbed>) -> &mut Self {$/;"	P	implementation:CreateMessage
set_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_interaction_response.rs	/^    pub fn set_embeds(&mut self, embeds: Vec<CreateEmbed>) -> &mut Self {$/;"	P	implementation:EditInteractionResponse
set_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn set_embeds(&mut self, embeds: Vec<CreateEmbed>) -> &mut Self {$/;"	P	implementation:EditMessage
set_event_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn set_event_filter(&self, collector: EventFilter) {$/;"	P	implementation:ShardMessenger
set_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn set_expiration(&self, timestamp: u64) {$/;"	P	implementation:StateCell
set_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn set_expiration(&self, t: u64) {$/;"	P	implementation:TimerShared
set_expiration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn set_expiration(&self, tick: u64) {$/;"	P	implementation:TimerHandle
set_filled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn set_filled(&mut self, n: usize) {$/;"	P	implementation:ReadBuf
set_footer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn set_footer(&mut self, create_embed_footer: CreateEmbedFooter) -> &mut Self {$/;"	P	implementation:CreateEmbed
set_global_application_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub async fn set_global_application_commands<F>($/;"	P	implementation:Command
set_http	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn set_http(&mut self, http: Arc<Http>) {$/;"	P	implementation:Shard
set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^fn set_join_waker($/;"	f
set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/join.rs	/^    pub(crate) fn set_join_waker(&mut self, waker: &Waker) {$/;"	P	implementation:JoinHandle
set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn set_join_waker(&mut self) {$/;"	P	implementation:Snapshot
set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn set_join_waker(&self) -> UpdateResult {$/;"	P	implementation:State
set_len	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn set_len(&self, size: u64) -> io::Result<()> {$/;"	P	implementation:File
set_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^    pub fn set_limit(&mut self, limit: u64) {$/;"	P	implementation:Take
set_linger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_linger(&self, dur: Option<Duration>) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_max_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn set_max_messages(&self, max: usize) {$/;"	P	implementation:Cache
set_message_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn set_message_filter(&self, collector: MessageFilter) {$/;"	P	implementation:ShardMessenger
set_message_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn set_message_filter(&self, filter: MessageFilter) {$/;"	P	implementation:Context
set_missed_tick_behavior	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub fn set_missed_tick_behavior(&mut self, behavior: MissedTickBehavior) {$/;"	P	implementation:Interval
set_modal_interaction_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn set_modal_interaction_filter(&self, collector: ModalInteractionFilter) {$/;"	P	implementation:ShardMessenger
set_multicast_loop_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_multicast_loop_v4(&self, on: bool) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_multicast_loop_v6	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_multicast_loop_v6(&self, on: bool) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_multicast_ttl_v4	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_multicast_ttl_v4(&self, ttl: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^fn set_next(header: NonNull<task::Header>, val: Option<NonNull<task::Header>>) {$/;"	f
set_next	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn set_next(&mut self, value: Option<NonNull<T>>) {$/;"	P	implementation:Pointers
set_nodelay	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn set_nodelay(&self, nodelay: bool) -> io::Result<()> {$/;"	P	implementation:TcpStream
set_nonblocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^fn set_nonblocking(file: &mut File, current_flags: libc::c_int) -> io::Result<()> {$/;"	f
set_nonblocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^fn set_nonblocking<T: AsRawFd>(fd: &mut T, nonblocking: bool) -> io::Result<()> {$/;"	f
set_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn set_notified(&mut self) {$/;"	P	implementation:Snapshot
set_options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command.rs	/^    pub fn set_options(&mut self, options: Vec<CreateApplicationCommandOption>) -> &mut Self {$/;"	P	implementation:CreateApplicationCommand
set_options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn set_options(&mut self, options: Vec<CreateSelectMenuOption>) -> &mut Self {$/;"	P	implementation:CreateSelectMenuOptions
set_owner_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn set_owner_id(&self, owner: u64) {$/;"	P	implementation:Header
set_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn set_permissions($/;"	P	implementation:CreateApplicationCommandPermissions
set_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_application_command_permission.rs	/^    pub fn set_permissions($/;"	P	implementation:CreateApplicationCommandPermissionsData
set_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn set_permissions(&self, perm: Permissions) -> io::Result<()> {$/;"	P	implementation:File
set_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod set_permissions;$/;"	n
set_permissions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/set_permissions.rs	/^pub async fn set_permissions(path: impl AsRef<Path>, perm: Permissions) -> io::Result<()> {$/;"	f
set_presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn set_presence(&self, activity: Option<Activity>, mut status: OnlineStatus) {$/;"	P	implementation:ShardMessenger
set_presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn set_presence(&self, activity: Option<Activity>, status: OnlineStatus) {$/;"	P	implementation:Context
set_presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn set_presence(&mut self, status: OnlineStatus, activity: Option<Activity>) {$/;"	P	implementation:Shard
set_prev	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    fn set_prev(&mut self, value: Option<NonNull<T>>) {$/;"	P	implementation:Pointers
set_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn set_queue_depth(&self, _len: usize) {}$/;"	P	implementation:WorkerMetrics
set_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) fn set_queue_depth(&self, len: usize) {$/;"	P	implementation:WorkerMetrics
set_reaction_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn set_reaction_filter(&self, collector: ReactionFilter) {$/;"	P	implementation:ShardMessenger
set_reaction_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub async fn set_reaction_filter(&self, filter: ReactionFilter) {$/;"	P	implementation:Context
set_readiness	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn set_readiness($/;"	P	implementation:ScheduledIo
set_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    fn set_ready(&self, slot: usize) {$/;"	P	implementation:Block
set_recv_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_recv_buffer_size(&self, size: u32) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_reuseaddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_reuseaddr(&self, reuseaddr: bool) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_reuseport	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_reuseport(&self, reuseport: bool) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn set_running(&mut self) {$/;"	P	implementation:Snapshot
set_rx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn set_rx_task(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
set_same_layout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    unsafe fn set_same_layout<F>(&mut self, future: F)$/;"	P	implementation:ReusableBoxFuture
set_send_buffer_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_send_buffer_size(&self, size: u32) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_shards	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub async fn set_shards(&mut self, index: u64, init: u64, total: u64) {$/;"	P	implementation:ShardManager
set_stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    unsafe fn set_stage(&self, stage: Stage<T>) {$/;"	P	implementation:Core
set_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^fn set_state(data: usize, state: usize) -> usize {$/;"	f
set_status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn set_status(&self, mut online_status: OnlineStatus) {$/;"	P	implementation:ShardMessenger
set_status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn set_status(&mut self, mut status: OnlineStatus) {$/;"	P	implementation:Shard
set_sticker_ids	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn set_sticker_ids<T: Into<StickerId>, It: IntoIterator<Item = T>>($/;"	P	implementation:CreateMessage
set_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn set_task(&self, cx: &mut Context<'_>) {$/;"	P	implementation:Task
set_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub set_time: Instant,$/;"	m	struct:UnitRatelimit
set_tos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn set_tos(&self, tos: u32) -> io::Result<()> {$/;"	P	implementation:TcpSocket
set_tos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_tos(&self, tos: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	P	implementation:TcpListener
set_ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	P	implementation:TcpStream
set_ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn set_ttl(&self, ttl: u32) -> io::Result<()> {$/;"	P	implementation:UdpSocket
set_tx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn set_tx_task(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
set_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    fn set_value(&self, value: T, permit: SemaphorePermit<'_>) -> &T {$/;"	P	implementation:OnceCell
set_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn set_waker(&self, waker: Option<Waker>) {$/;"	P	implementation:Trailer
set_welcome_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild_welcome_screen.rs	/^    pub fn set_welcome_channels(&mut self, channels: Vec<CreateGuildWelcomeChannel>) -> &mut Sel/;"	P	implementation:EditGuildWelcomeScreen
settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn settings(&self) -> Settings {$/;"	P	implementation:Cache
settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    settings: RwLock<Settings>,$/;"	m	struct:Cache
settings	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^mod settings;$/;"	n
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub shard: Shard,$/;"	m	struct:ShardRunnerOptions
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub(crate) shard: Shard,$/;"	m	struct:ShardRunner
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub shard: ShardMessenger,$/;"	m	struct:Context
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:CollectComponentInteraction
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:ComponentInteractionCollectorBuilder
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:EventCollectorBuilder
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:CollectReply
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:MessageCollectorBuilder
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:CollectModalInteraction
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:ModalInteractionCollectorBuilder
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:CollectReaction
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    shard: Option<ShardMessenger>,$/;"	m	struct:ReactionCollectorBuilder
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^mod shard;$/;"	n
shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub shard: Option<[u64; 2]>,$/;"	m	struct:Ready
shard_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn shard_count(&self) -> u64 {$/;"	P	implementation:Cache
shard_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) shard_count: RwLock<u64>,$/;"	m	struct:Cache
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/event.rs	/^    pub shard_id: ShardId,$/;"	m	struct:ShardStageUpdateEvent
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/context.rs	/^    pub shard_id: u64,$/;"	m	struct:Context
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn shard_id(self, cache: impl AsRef<Cache>) -> u64 {$/;"	P	implementation:GuildId
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn shard_id(self, shard_count: u64) -> u64 {$/;"	P	implementation:GuildId
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn shard_id(&self, cache: impl AsRef<Cache>) -> u64 {$/;"	P	implementation:Guild
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn shard_id(&self, shard_count: u64) -> u64 {$/;"	P	implementation:Guild
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn shard_id(&self, cache: impl AsRef<Cache>) -> u64 {$/;"	P	implementation:PartialGuild
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn shard_id(&self, shard_count: u64) -> u64 {$/;"	P	implementation:PartialGuild
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub fn shard_id(&self, cache: impl AsRef<Cache>) -> u64 {$/;"	P	implementation:InviteGuild
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub fn shard_id(&self, shard_count: u64) -> u64 {$/;"	P	implementation:InviteGuild
shard_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub fn shard_id(guild_id: impl Into<u64>, shard_count: u64) -> u64 {$/;"	f
shard_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub shard_index: u64,$/;"	m	struct:ShardManagerOptions
shard_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    shard_index: u64,$/;"	m	struct:ShardManager
shard_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn shard_info(&self) -> [u64; 2] {$/;"	P	implementation:Shard
shard_info	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    shard_info: [u64; 2],$/;"	m	struct:Shard
shard_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub shard_init: u64,$/;"	m	struct:ShardManagerOptions
shard_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    shard_init: u64,$/;"	m	struct:ShardManager
shard_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^mod shard_manager;$/;"	n
shard_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub shard_manager: Arc<Mutex<ShardManager>>,$/;"	m	struct:Client
shard_manager_monitor	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^mod shard_manager_monitor;$/;"	n
shard_manager_worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    shard_manager_worker: ShardManagerMonitor,$/;"	m	struct:Client
shard_messenger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^mod shard_messenger;$/;"	n
shard_queuer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^mod shard_queuer;$/;"	n
shard_queuer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    shard_queuer: Sender<ShardQueuerMessage>,$/;"	m	struct:ShardManager
shard_runner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^mod shard_runner;$/;"	n
shard_runner_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^mod shard_runner_message;$/;"	n
shard_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    shard_shutdown: Receiver<ShardId>,$/;"	m	struct:ShardManager
shard_stage_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn shard_stage_update(&self, _ctx: Context, _: ShardStageUpdateEvent) {}$/;"	P	interface:EventHandler
shard_total	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub shard_total: u64,$/;"	m	struct:ShardManagerOptions
shard_total	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    shard_total: u64,$/;"	m	struct:ShardManager
shards	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub shards: u64,$/;"	m	struct:BotGateway
shards_instantiated	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub async fn shards_instantiated(&self) -> Vec<ShardId> {$/;"	P	implementation:ShardManager
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    shared: Mutex<Shared>,$/;"	m	struct:Inner
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    shared: Shared,$/;"	m	struct:Handle
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(super) shared: worker::Shared,$/;"	m	struct:Handle
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    shared: Arc<Shared>,$/;"	m	struct:Inner
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    shared: Arc<Shared<T>>,$/;"	m	struct:Receiver
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    shared: Arc<Shared<T>>,$/;"	m	struct:Sender
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    shared: Arc<Shared<T>>,$/;"	m	struct:Receiver
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    shared: Arc<Shared<T>>,$/;"	m	struct:Sender
shared	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    shared: Arc<Shared>,$/;"	m	struct:Context
shift	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    shift: u32,$/;"	m	struct:Pack
short_link	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub short_link: String,$/;"	m	struct:Incident
should_fail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    async fn should_fail<'a>($/;"	P	implementation:StandardFramework
should_ignore	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    fn should_ignore(&self, msg: &Message) -> bool {$/;"	P	implementation:StandardFramework
should_reconnect	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn should_reconnect(&mut self) -> Option<ReconnectType> {$/;"	P	implementation:Shard
show_activity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub show_activity: bool,$/;"	m	struct:Connection
show_discriminator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    pub fn show_discriminator(mut self, b: bool) -> Self {$/;"	P	implementation:ContentSafeOptions
show_discriminator	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    show_discriminator: bool,$/;"	m	struct:ContentSafeOptions
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub async fn shutdown(&mut self, shard_id: ShardId, code: u16) {$/;"	P	implementation:ShardManager
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager_monitor.rs	/^    pub shutdown: Sender<ShardId>,$/;"	m	struct:ShardManagerMonitor
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub async fn shutdown(&mut self, shard_id: ShardId, code: u16) {$/;"	P	implementation:ShardQueuer
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/shutdown.rs	/^pub(super) fn shutdown<A>(a: &mut A) -> Shutdown<'_, A>$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn shutdown(&self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:UnixDatagram
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^mod shutdown;$/;"	n
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn shutdown(&mut self, timeout: Option<Duration>) {$/;"	P	implementation:BlockingPool
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    shutdown: bool,$/;"	m	struct:Shared
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn shutdown(&mut self, handle: &Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn shutdown(&self) -> bool {$/;"	P	implementation:Handle
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn shutdown(&mut self, rt_handle: &driver::Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn shutdown(&self) {$/;"	P	implementation:ScheduledIo
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn shutdown(&self) {$/;"	P	implementation:Inner
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn shutdown(&mut self) {$/;"	P	implementation:ParkThread
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    pub(crate) fn shutdown(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn shutdown(&mut self, handle: &scheduler::Handle) {$/;"	P	implementation:CurrentThread
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) fn shutdown(&self) {$/;"	P	implementation:Handle
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^    pub(crate) fn shutdown(&mut self, handle: &scheduler::Handle) {$/;"	P	implementation:MultiThread
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn shutdown(&self, handle: &driver::Handle) {$/;"	P	implementation:Inner
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn shutdown(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Parker
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn shutdown(&mut self, handle: &Handle) {$/;"	P	implementation:Core
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/signal/mod.rs	/^    pub(crate) fn shutdown(&mut self, handle: &driver::Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn shutdown(self) {$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(crate) fn shutdown(self) {$/;"	P	implementation:Task
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    pub(crate) fn shutdown(self) {$/;"	P	implementation:UnownedTask
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn shutdown(self) {$/;"	P	implementation:RawTask
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) shutdown: unsafe fn(NonNull<Header>),$/;"	m	struct:Vtable
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn shutdown<T: Future, S: Schedule>(ptr: NonNull<Header>) {$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn shutdown(&self) {$/;"	P	implementation:Runtime
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn shutdown() {$/;"	f
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(crate) fn shutdown(&mut self, rt_handle: &driver::Handle) {$/;"	P	implementation:Driver
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub async fn shutdown(&mut self) {$/;"	P	implementation:JoinSet
shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/error.rs	/^    pub fn shutdown() -> Error {$/;"	P	implementation:Error
shutdown_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub async fn shutdown_all(&mut self) {$/;"	P	implementation:ShardManager
shutdown_background	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn shutdown_background(self) {$/;"	P	implementation:Runtime
shutdown_clean	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn shutdown_clean(&self) {$/;"	P	implementation:ShardMessenger
shutdown_core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn shutdown_core(&self, core: Box<Core>) {$/;"	P	implementation:Handle
shutdown_cores	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    shutdown_cores: Mutex<Vec<Box<Core>>>,$/;"	m	struct:Shared
shutdown_immediately	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn shutdown_immediately() {$/;"	f
shutdown_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    shutdown_on_drop: bool,$/;"	m	struct:OwnedWriteHalf
shutdown_on_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    shutdown_on_drop: bool,$/;"	m	struct:OwnedWriteHalf
shutdown_or_run_if_mandatory	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn shutdown_or_run_if_mandatory(self) {$/;"	P	implementation:Task
shutdown_runners	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    async fn shutdown_runners(&mut self) {$/;"	P	implementation:ShardQueuer
shutdown_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    shutdown_rx: shutdown::Receiver,$/;"	m	struct:BlockingPool
shutdown_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub(super) fn shutdown_std(&self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:TcpStream
shutdown_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub(super) fn shutdown_std(&self, how: Shutdown) -> io::Result<()> {$/;"	P	implementation:UnixStream
shutdown_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn shutdown_timeout(mut self, duration: Duration) {$/;"	P	implementation:Runtime
shutdown_tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    shutdown_tx: Option<shutdown::Sender>,$/;"	m	struct:Shared
shutdown_with_notification	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    fn shutdown_with_notification() {$/;"	f	module:group_b
sigchild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    sigchild: Mutex<Option<watch::Receiver<()>>>,$/;"	m	struct:OrphanQueueImpl
signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^    signal: S,$/;"	m	struct:Reaper
signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) signal: SignalHandle,$/;"	m	struct:Handle
signal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub fn signal(kind: SignalKind) -> io::Result<Signal> {$/;"	f
signal_enable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^fn signal_enable(signal: SignalKind, handle: &Handle) -> io::Result<()> {$/;"	f
signal_enable_error_on_forbidden_input	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn signal_enable_error_on_forbidden_input() {$/;"	f	module:tests
signal_enable_error_on_invalid_input	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    fn signal_enable_error_on_invalid_input() {$/;"	f	module:tests
signal_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/process.rs	/^    signal_handle: SignalHandle,$/;"	m	struct:Driver
signal_ready	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    signal_ready: bool,$/;"	m	struct:Driver
signal_with_handle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^pub(crate) fn signal_with_handle($/;"	f
single	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn single<T: FromStr>(&mut self) -> Result<T, T::Err> {$/;"	P	implementation:Args
single_command_to_plain_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn single_command_to_plain_string(help_options: &HelpOptions, command: &Command<'_>) -> String {$/;"	f
single_quoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn single_quoted<T: FromStr>(&mut self) -> Result<T, T::Err> {$/;"	P	implementation:Args
single_recipient	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub mod single_recipient {$/;"	n
single_timer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/tests/mod.rs	/^fn single_timer() {$/;"	f
size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub size: u64,$/;"	m	struct:Attachment
size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub size: Option<[u64; 2]>,$/;"	m	struct:ActivityParty
size_hint	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:MessageIterator
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn skip_drop(self) -> MappedMutexGuardInner<'a, T> {$/;"	P	implementation:MappedMutexGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn skip_drop(self) -> MutexGuardInner<'a, T> {$/;"	P	implementation:MutexGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn skip_drop(self) -> OwnedMappedMutexGuardInner<T, U> {$/;"	P	implementation:OwnedMappedMutexGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    fn skip_drop(self) -> OwnedMutexGuardInner<T> {$/;"	P	implementation:OwnedMutexGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    fn skip_drop(self) -> Inner<T, U> {$/;"	P	implementation:OwnedRwLockReadGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    fn skip_drop(self) -> Inner<T> {$/;"	P	implementation:OwnedRwLockWriteGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    fn skip_drop(self) -> Inner<T, U> {$/;"	P	implementation:OwnedRwLockMappedWriteGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    fn skip_drop(self) -> Inner<'a, T> {$/;"	P	implementation:RwLockReadGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    fn skip_drop(self) -> Inner<'a, T> {$/;"	P	implementation:RwLockWriteGuard
skip_drop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    fn skip_drop(self) -> Inner<'a, T> {$/;"	P	implementation:RwLockMappedWriteGuard
skip_serializing_if_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    fn skip_serializing_if_none() {$/;"	f	module:tests
sku_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub sku_id: SkuId,$/;"	m	struct:StickerPack
sleep	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod sleep;$/;"	n
sleep	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^pub fn sleep(duration: Duration) -> Sleep {$/;"	f
sleep_until	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/sleep.rs	/^pub fn sleep_until(deadline: Instant) -> Sleep {$/;"	f
sleepers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    sleepers: Mutex<Vec<usize>>,$/;"	m	struct:Idle
slice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn slice(&self) -> &str {$/;"	P	implementation:Args
slice_assume_init	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^unsafe fn slice_assume_init(slice: &[MaybeUninit<u8>]) -> &[u8] {$/;"	f
slice_assume_init_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^unsafe fn slice_assume_init_mut(slice: &mut [MaybeUninit<u8>]) -> &mut [u8] {$/;"	f
slice_to_uninit_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^unsafe fn slice_to_uninit_mut(slice: &mut [u8]) -> &mut [MaybeUninit<u8>] {$/;"	f
slice_to_vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^        fn slice_to_vec(addrs: &[SocketAddr]) -> Vec<SocketAddr> {$/;"	f	method:SocketAddr::to_socket_addrs
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) slot: usize,$/;"	m	struct:Expiration
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    slot: [EntryList; LEVEL_MULT],$/;"	m	struct:Level
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    slot: RwLockReadGuard<'a, Slot<T>>,$/;"	m	struct:RecvGuard
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            slot: &'a mut Option<T>,$/;"	m	struct:LocalKey::scope_inner::Guard
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    slot: Option<T>,$/;"	m	struct:TaskLocalFuture
slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    fn slot(&self, addr: Address) -> usize {$/;"	P	implementation:Page
slot_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^fn slot_for(duration: u64, level: usize) -> usize {$/;"	f
slot_range	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^fn slot_range(level: usize) -> u64 {$/;"	f
slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    slots: *const Slot<T>,$/;"	m	struct:CachedPage
slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    slots: Mutex<Slots<T>>,$/;"	m	struct:Page
slots	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    slots: Vec<Slot<T>>,$/;"	m	struct:Slots
small_image	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub small_image: Option<String>,$/;"	m	struct:ActivityAssets
small_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub small_text: Option<String>,$/;"	m	struct:ActivityAssets
smoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    fn smoke() {$/;"	f	module:tests
smoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_list.rs	/^fn smoke() {$/;"	f
smoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn smoke() {$/;"	f
smoke	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_watch.rs	/^fn smoke() {$/;"	f
snowflake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^pub(crate) mod snowflake {$/;"	n
socket	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/mod.rs	/^pub(crate) mod socket;$/;"	n
socketaddr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^mod socketaddr;$/;"	n
sort_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub sort_value: Option<u64>,$/;"	m	struct:Sticker
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:Error
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:Error
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:ChannelCategoryParseError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:ChannelParseError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/channel.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:GuildChannelParseError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/message.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:MessageParseError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/role.rs	/^    fn source(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	P	implementation:RoleParseError
source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod source;$/;"	n
span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn span(&self) -> (usize, usize) {$/;"	P	implementation:Args
span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    span: (usize, usize),$/;"	m	struct:Token
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn spawn(&mut self) -> io::Result<Child> {$/;"	P	implementation:Command
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn spawn<F>(&self, future: F) -> JoinHandle<F::Output>$/;"	P	implementation:Handle
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn spawn<F>(&self, future: F) -> JoinHandle<F::Output>$/;"	P	implementation:Runtime
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    pub(crate) fn spawn<F>($/;"	P	implementation:Handle
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/handle.rs	/^    pub(crate) fn spawn<F>(me: &Arc<Self>, future: F, id: task::Id) -> JoinHandle<F::Output>$/;"	P	implementation:Handle
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn spawn<T>(&self, future: T) -> JoinHandle<T::Output>$/;"	P	implementation:Runtime
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        fn spawn<T>(&self, task: T) -> JoinHandle<T::Output>$/;"	P	implementation:test_combination::Rt
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn<Fut>(self, future: Fut) -> io::Result<JoinHandle<Fut::Output>>$/;"	P	implementation:Builder
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn<F>(&mut self, task: F) -> AbortHandle$/;"	P	implementation:JoinSet
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn<F>(self, future: F) -> std::io::Result<AbortHandle>$/;"	P	implementation:Builder
spawn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn spawn<F>(&self, future: F, name: Option<&str>) -> JoinHandle<F::Output>$/;"	P	implementation:Context
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^pub(super) fn spawn_blocking<F, R>(f: F) -> JoinHandle<R>$/;"	f
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn spawn_blocking<F, R>(&self, rt: &Handle, func: F) -> JoinHandle<R>$/;"	P	implementation:Spawner
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^pub(crate) fn spawn_blocking<F, R>(func: F) -> JoinHandle<R>$/;"	f
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn spawn_blocking<F, R>(&self, func: F) -> JoinHandle<R>$/;"	P	implementation:Handle
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/runtime.rs	/^    pub fn spawn_blocking<F, R>(&self, func: F) -> JoinHandle<R>$/;"	P	implementation:Runtime
spawn_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_blocking<Function, Output>($/;"	P	implementation:Builder
spawn_blocking_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn spawn_blocking_inner<F, R>($/;"	P	implementation:Spawner
spawn_blocking_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_blocking_on<Function, Output>($/;"	P	implementation:Builder
spawn_blocking_when_paused	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn spawn_blocking_when_paused() {$/;"	f
spawn_child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(crate) fn spawn_child(cmd: &mut std::process::Command) -> io::Result<SpawnedChild> {$/;"	f
spawn_child	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(crate) fn spawn_child(cmd: &mut StdCommand) -> io::Result<SpawnedChild> {$/;"	f
spawn_during_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn spawn_during_shutdown() {$/;"	f
spawn_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_local<Fut>(self, future: Fut) -> io::Result<JoinHandle<Fut::Output>>$/;"	P	implementation:Builder
spawn_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_local<F>(&mut self, task: F) -> AbortHandle$/;"	P	implementation:JoinSet
spawn_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_local<F>(self, future: F) -> std::io::Result<AbortHandle>$/;"	P	implementation:Builder
spawn_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub fn spawn_local<F>(&self, future: F) -> JoinHandle<F::Output>$/;"	P	implementation:LocalSet
spawn_local_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_local_on<Fut>($/;"	P	implementation:Builder
spawn_local_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_local_on<F>(&mut self, task: F, local_set: &LocalSet) -> AbortHandle$/;"	P	implementation:JoinSet
spawn_local_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_local_on<F>(self, future: F, local_set: &LocalSet) -> std::io::Result<AbortHand/;"	P	implementation:Builder
spawn_mandatory_blocking	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^pub(super) fn spawn_mandatory_blocking<F, R>(f: F) -> Option<JoinHandle<R>>$/;"	f
spawn_mandatory_blocking_should_always_run	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn spawn_mandatory_blocking_should_always_run() {$/;"	f
spawn_mandatory_blocking_should_run_even_when_shutting_down_from_other_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_blocking.rs	/^fn spawn_mandatory_blocking_should_run_even_when_shutting_down_from_other_thread() {$/;"	f
spawn_named	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/tokio.rs	/^pub fn spawn_named<F, T>(_name: &str, future: F) -> tokio::task::JoinHandle<T>$/;"	f
spawn_named	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/tokio.rs	/^pub fn spawn_named<F, T>(name: &str, future: F) -> tokio::task::JoinHandle<T>$/;"	f
spawn_named	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub(crate) fn spawn_named<F>(&self, future: F, _name: Option<&str>) -> JoinHandle<F::Output>$/;"	P	implementation:Handle
spawn_named	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub(in crate::task) fn spawn_named<F>($/;"	P	implementation:LocalSet
spawn_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/builder.rs	/^    pub fn spawn_on<Fut>(self, future: Fut, handle: &Handle) -> io::Result<JoinHandle<Fut::Outpu/;"	P	implementation:Builder
spawn_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_on<F>(&mut self, task: F, handle: &Handle) -> AbortHandle$/;"	P	implementation:JoinSet
spawn_on	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/join_set.rs	/^    pub fn spawn_on<F>(self, future: F, handle: &Handle) -> std::io::Result<AbortHandle>$/;"	P	implementation:Builder
spawn_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn spawn_task(&self, task: Task, rt: &Handle) -> Result<(), SpawnError> {$/;"	P	implementation:Spawner
spawn_thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    fn spawn_thread($/;"	P	implementation:Spawner
spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    pub(crate) fn spawner(&self) -> &Spawner {$/;"	P	implementation:BlockingPool
spawner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    spawner: Spawner,$/;"	m	struct:BlockingPool
speak	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn speak(self) -> bool {$/;"	P	implementation:Permissions
speaker_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    speaker_count: u64,$/;"	m	struct:InviteStageInstance
spectate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub spectate: Option<String>,$/;"	m	struct:ActivitySecrets
splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn splash(&mut self, splash: Option<&str>) -> &mut Self {$/;"	P	implementation:EditGuild
splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_preview.rs	/^    pub splash: Option<String>,$/;"	m	struct:GuildPreview
splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub splash: Option<String>,$/;"	m	struct:Guild
splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub splash: Option<String>,$/;"	m	struct:PartialGuild
splash	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub splash: Option<String>,$/;"	m	struct:InviteGuild
splash_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn splash_url(&self) -> Option<String> {$/;"	P	implementation:Guild
splash_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn splash_url(&self) -> Option<String> {$/;"	P	implementation:InviteGuild
splash_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn splash_url(&self) -> Option<String> {$/;"	P	implementation:PartialGuild
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^pub(crate) fn split<R>(reader: R, delim: u8) -> Split<R>$/;"	f
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/mod.rs	/^mod split;$/;"	n
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^pub(crate) fn split(stream: &mut TcpStream) -> (ReadHalf<'_>, WriteHalf<'_>) {$/;"	f
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn split<'a>(&'a mut self) -> (ReadHalf<'a>, WriteHalf<'a>) {$/;"	P	implementation:TcpStream
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^mod split;$/;"	n
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^pub(crate) fn split(stream: &mut UnixStream) -> (ReadHalf<'_>, WriteHalf<'_>) {$/;"	f
split	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn split<'a>(&'a mut self) -> (ReadHalf<'a>, WriteHalf<'a>) {$/;"	P	implementation:UnixStream
split_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/mod.rs	/^mod split_owned;$/;"	n
split_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^pub(crate) fn split_owned(stream: TcpStream) -> (OwnedReadHalf, OwnedWriteHalf) {$/;"	f
split_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^mod split_owned;$/;"	n
split_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^pub(crate) fn split_owned(stream: UnixStream) -> (OwnedReadHalf, OwnedWriteHalf) {$/;"	f
spoiler	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub spoiler: bool,$/;"	m	struct:Content
stack_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    stack_size: Option<usize>,$/;"	m	struct:Inner
stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/mod.rs	/^    pub stage: ConnectionStage,$/;"	m	struct:ShardRunnerInfo
stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub fn stage(&self) -> ConnectionStage {$/;"	P	implementation:Shard
stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    stage: ConnectionStage,$/;"	m	struct:Shard
stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) stage: CoreStage<T>,$/;"	m	struct:Core
stage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    stage: UnsafeCell<Stage<T>>,$/;"	m	struct:CoreStage
stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn stage_instance(channel_id: u64) -> String {$/;"	P	implementation:Route
stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub stage_instance: StageInstance,$/;"	m	struct:StageInstanceCreateEvent
stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub stage_instance: StageInstance,$/;"	m	struct:StageInstanceDeleteEvent
stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub stage_instance: StageInstance,$/;"	m	struct:StageInstanceUpdateEvent
stage_instance	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub stage_instance: Option<InviteStageInstance>,$/;"	m	struct:Invite
stage_instance_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn stage_instance_create(&self, _ctx: Context, _stage_instance: StageInstance) {}$/;"	P	interface:EventHandler
stage_instance_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn stage_instance_delete(&self, _ctx: Context, _stage_instance: StageInstance) {}$/;"	P	interface:EventHandler
stage_instance_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn stage_instance_update(&self, _ctx: Context, _stage_instance: StageInstance) {}$/;"	P	interface:EventHandler
stage_instances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn stage_instances() -> &'static str {$/;"	P	implementation:Route
stage_instances	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub stage_instances: Vec<StageInstance>,$/;"	m	struct:Guild
standard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/mod.rs	/^pub mod standard;$/;"	n
start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    async fn start(&mut self, shard_id: u64, shard_total: u64) -> Result<()> {$/;"	P	implementation:ShardQueuer
start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub async fn start(&mut self) -> Result<()> {$/;"	P	implementation:Client
start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/typing.rs	/^    pub fn start(http: Arc<Http>, channel_id: u64) -> Result<Self> {$/;"	P	implementation:Typing
start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub start: Option<u64>,$/;"	m	struct:ActivityTimestamps
start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub start: String,$/;"	m	struct:Maintenance
start_autosharded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub async fn start_autosharded(&mut self) -> Result<()> {$/;"	P	implementation:Client
start_connection	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    async fn start_connection(&mut self, shard_data: [u64; 3]) -> Result<()> {$/;"	P	implementation:Client
start_guild_prune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn start_guild_prune($/;"	P	implementation:Http
start_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    start_index: usize,$/;"	m	struct:BlockHeader
start_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^pub(crate) fn start_index(slot_index: usize) -> usize {$/;"	f
start_integration_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn start_integration_sync(&self, guild_id: u64, integration_id: u64) -> Result<()>/;"	P	implementation:Http
start_integration_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn start_integration_sync($/;"	P	implementation:GuildId
start_integration_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn start_integration_sync($/;"	P	implementation:Guild
start_integration_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn start_integration_sync($/;"	P	implementation:PartialGuild
start_kill	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn start_kill(&mut self) -> io::Result<()> {$/;"	P	implementation:Child
start_paused	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    start_paused: bool,$/;"	m	struct:Builder
start_paused	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) start_paused: bool,$/;"	m	struct:Cfg
start_prune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn start_prune(self, http: impl AsRef<Http>, days: u16) -> Result<GuildPrune> {$/;"	P	implementation:GuildId
start_prune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn start_prune(&self, cache_http: impl CacheHttp, days: u16) -> Result<GuildPrune>/;"	P	implementation:Guild
start_prune	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn start_prune(&self, cache_http: impl CacheHttp, days: u16) -> Result<GuildPrune>/;"	P	implementation:PartialGuild
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    fn start_seek(self: Pin<&mut Self>, mut pos: SeekFrom) -> io::Result<()> {$/;"	P	implementation:File
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn start_seek(mut self: Pin<&mut Self>, pos: SeekFrom) -> io::Result<()> {$/;"	P	implementation:Cursor
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn start_seek(self: Pin<&mut Self>, pos: SeekFrom) -> io::Result<()> {$/;"	f
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_seek.rs	/^    fn start_seek(self: Pin<&mut Self>, position: SeekFrom) -> io::Result<()>;$/;"	P	interface:AsyncSeek
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    fn start_seek(self: Pin<&mut Self>, pos: SeekFrom) -> io::Result<()> {$/;"	P	implementation:BufReader
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    fn start_seek(self: Pin<&mut Self>, position: SeekFrom) -> io::Result<()> {$/;"	P	implementation:BufStream
start_seek	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    fn start_seek(self: Pin<&mut Self>, pos: SeekFrom) -> io::Result<()> {$/;"	P	implementation:BufWriter
start_shard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub async fn start_shard(&mut self, shard: u64, shards: u64) -> Result<()> {$/;"	P	implementation:Client
start_shard_range	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub async fn start_shard_range(&mut self, range: [u64; 2], total_shards: u64) -> Result<()> /;"	P	implementation:Client
start_shards	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub async fn start_shards(&mut self, total_shards: u64) -> Result<()> {$/;"	P	implementation:Client
start_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_scheduled_event.rs	/^    pub fn start_time<T: Into<Timestamp>>(&mut self, timestamp: T) -> &mut Self {$/;"	P	implementation:CreateScheduledEvent
start_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub fn start_time<T: Into<Timestamp>>(&mut self, timestamp: T) -> &mut Self {$/;"	P	implementation:EditScheduledEvent
start_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub start_time: Timestamp,$/;"	m	struct:ScheduledEvent
start_time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    start_time: Instant,$/;"	m	struct:TimeSource
start_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn start_typing(self: &Arc<Self>, channel_id: u64) -> Result<Typing> {$/;"	P	implementation:Http
start_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub fn start_typing(self, http: &Arc<Http>) -> Result<Typing> {$/;"	P	implementation:ChannelId
start_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub fn start_typing(self, http: &Arc<Http>) -> Result<Typing> {$/;"	P	implementation:GuildChannel
start_typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub fn start_typing(self, http: &Arc<Http>) -> Result<Typing> {$/;"	P	implementation:PrivateChannel
started	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub started: Instant,$/;"	m	struct:Shard
starts_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^        fn starts_with(prefix: &str, case_sensitive: bool, name: &str) -> bool {$/;"	f	method:Guild::members_starting_with
starts_with_case_insensitive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^fn starts_with_case_insensitive(to_look_at: &str, to_find: &str) -> bool {$/;"	f
starts_with_whole_word	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn starts_with_whole_word(search_on: &str, word: &str) -> bool {$/;"	f
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    state: State,$/;"	m	struct:Args
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    state: State,$/;"	m	struct:Iter
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub state: Option<String>,$/;"	m	struct:Activity
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    state: State,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    state: State<T>,$/;"	m	struct:Blocking
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    state: AtomicUsize,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    state: AtomicUsize,$/;"	m	struct:Idle
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    state: AtomicUsize,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) state: State,$/;"	m	struct:Header
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn state(&self) -> &State {$/;"	f
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod state;$/;"	n
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn state(&self) -> &State {$/;"	P	implementation:RawTask
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    state: AtomicU64,$/;"	m	struct:StateCell
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    state: StateCell,$/;"	m	struct:TimerShared
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    pub(super) state: Mutex<InnerState>,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    state: Mutex<BarrierState>,$/;"	m	struct:Barrier
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    state: AtomicUsize,$/;"	m	struct:Waiter
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    state: AtomicUsize,$/;"	m	struct:Notify
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    state: State,$/;"	m	struct:Notified
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    state: AtomicUsize,$/;"	m	struct:Inner
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    state: AtomicUsize,$/;"	m	struct:AtomicWaker
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    state: AtomicState,$/;"	m	struct:Shared
state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^mod state {$/;"	n
state_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/voice/mod.rs	/^    async fn state_update(&self, guild_id: GuildId, voice_state: &VoiceState);$/;"	P	interface:VoiceGatewayManager
static_avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn static_avatar_url(&self) -> Option<String> {$/;"	P	implementation:CurrentUser
static_avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn static_avatar_url(&self) -> Option<String> {$/;"	P	implementation:User
static_avatar_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^fn static_avatar_url(user_id: UserId, hash: Option<&String>) -> Option<String> {$/;"	f
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_scheduled_event.rs	/^    pub fn status(&mut self, status: ScheduledEventStatus) -> &mut Self {$/;"	P	implementation:EditScheduledEvent
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/macros.rs	/^macro_rules! status {$/;"	M
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub status: OnlineStatus,$/;"	m	struct:Presence
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub status: ScheduledEventStatus,$/;"	m	struct:ScheduledEvent
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub status: IncidentStatus,$/;"	m	struct:IncidentUpdate
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub status: String,$/;"	m	struct:Incident
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn status(&mut self) -> impl Future<Output = io::Result<ExitStatus>> {$/;"	P	implementation:Command
status	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        status: ExitStatus,$/;"	m	struct:test::MockWait
status_code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub fn status_code(&self) -> Option<StatusCode> {$/;"	P	implementation:Error
status_code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub status_code: StatusCode,$/;"	m	struct:ErrorResponse
status_incidents_unresolved	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn status_incidents_unresolved() -> &'static str {$/;"	P	implementation:Route
status_maintenances_active	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn status_maintenances_active() -> &'static str {$/;"	P	implementation:Route
status_maintenances_upcoming	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn status_maintenances_upcoming() -> &'static str {$/;"	P	implementation:Route
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    std: Arc<StdFile>,$/;"	m	struct:File
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/read_dir.rs	/^    std: Arc<std::fs::DirEntry>,$/;"	m	struct:DirEntry
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mod.rs	/^mod std;$/;"	n
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    std: StdCommand,$/;"	m	struct:Command
std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    std: std::time::Instant,$/;"	m	struct:Instant
stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn stderr<T: Into<Stdio>>(&mut self, cfg: T) -> &mut Command {$/;"	P	implementation:Command
stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub stderr: Option<ChildStderr>,$/;"	m	struct:Child
stderr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    stderr: Option<imp::ChildStdio>,$/;"	m	struct:SpawnedChild
stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn stdin<T: Into<Stdio>>(&mut self, cfg: T) -> &mut Command {$/;"	P	implementation:Command
stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub stdin: Option<ChildStdin>,$/;"	m	struct:Child
stdin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    stdin: Option<imp::ChildStdio>,$/;"	m	struct:SpawnedChild
stdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^pub(super) fn stdio<T>(io: T) -> io::Result<ChildStdio>$/;"	f
stdio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^pub(super) fn stdio<T>(io: T) -> io::Result<ChildStdio>$/;"	f
stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn stdout<T: Into<Stdio>>(&mut self, cfg: T) -> &mut Command {$/;"	P	implementation:Command
stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub stdout: Option<ChildStdout>,$/;"	m	struct:Child
stdout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    stdout: Option<imp::ChildStdio>,$/;"	m	struct:SpawnedChild
steal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    steal: queue::Steal<Arc<Handle>>,$/;"	m	struct:Remote
steal_batch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn steal_batch() {$/;"	f
steal_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    steal_count: u64,$/;"	m	struct:MetricsBatch
steal_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) steal_count: AtomicU64,$/;"	m	struct:WorkerMetrics
steal_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    pub(crate) fn steal_into($/;"	P	implementation:Steal
steal_into2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    fn steal_into2(&self, dst: &mut Local<T>, dst_tail: UnsignedShort) -> UnsignedShort {$/;"	P	implementation:Steal
steal_operations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    steal_operations: u64,$/;"	m	struct:MetricsBatch
steal_operations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/worker.rs	/^    pub(crate) steal_operations: AtomicU64,$/;"	m	struct:WorkerMetrics
steal_overflow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^fn steal_overflow() {$/;"	f
steal_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_queue.rs	/^    fn steal_tasks(steal: queue::Steal<NoopSchedule>) -> usize {$/;"	f	function:multi_stealer
steal_work	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn steal_work(&mut self, worker: &Worker) -> Option<Notified> {$/;"	P	implementation:Core
sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn sticker(sticker_id: u64) -> String {$/;"	P	implementation:Route
sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn sticker(&self, http: impl AsRef<Http>, sticker_id: StickerId) -> Result<Sticker/;"	P	implementation:GuildId
sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod sticker;$/;"	n
sticker_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn sticker_id(&mut self, sticker_id: impl Into<StickerId>) -> &mut Self {$/;"	P	implementation:CreateMessage
sticker_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^pub mod sticker_id;$/;"	n
sticker_item	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^pub mod sticker_item;$/;"	n
sticker_items	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub sticker_items: Vec<StickerItem>,$/;"	m	struct:Message
sticker_pack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^pub mod sticker_pack;$/;"	n
sticker_packs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^            sticker_packs: Vec<StickerPack>,$/;"	m	struct:Http::get_nitro_stickers::StickerPacks
sticker_packs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn sticker_packs() -> &'static str {$/;"	P	implementation:Route
sticker_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^fn sticker_url(sticker_id: StickerId, sticker_format_type: StickerFormatType) -> Option<String> /;"	f
stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub stickers: HashMap<StickerId, Sticker>,$/;"	m	struct:GuildStickersUpdateEvent
stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn stickers(&self, http: impl AsRef<Http>) -> Result<Vec<Sticker>> {$/;"	P	implementation:GuildId
stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub stickers: HashMap<StickerId, Sticker>,$/;"	m	struct:Guild
stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub stickers: HashMap<StickerId, Sticker>,$/;"	m	struct:PartialGuild
stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_pack.rs	/^    pub stickers: Vec<Sticker>,$/;"	m	struct:StickerPack
stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub mod stickers {$/;"	n
stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    pub fn stop(mut self) {$/;"	P	implementation:ComponentInteractionCollector
stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn stop(mut self) {$/;"	P	implementation:EventCollector
stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    pub fn stop(mut self) {$/;"	P	implementation:MessageCollector
stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    pub fn stop(mut self) {$/;"	P	implementation:ModalInteractionCollector
stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    pub fn stop(mut self) {$/;"	P	implementation:ReactionCollector
stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/typing.rs	/^    pub fn stop(self) -> Option<()> {$/;"	P	implementation:Typing
stop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub stop: String,$/;"	m	struct:Maintenance
storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    pub(crate) fn storage(&self) -> &OsStorage {$/;"	P	implementation:Globals
storage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    storage: S,$/;"	m	struct:Registry
store	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u64_as_mutex.rs	/^    pub(crate) fn store(&self, val: u64, _: Ordering) {$/;"	P	implementation:AtomicU64
store_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn store_output(&self, output: super::Result<T::Output>) {$/;"	P	implementation:Core
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^impl StrExt for &str {$/;"	c
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const APPLICATION_COMMAND_PERMISSIONS_UPDATE: &'static str =$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const AUTO_MODERATION_ACTION_EXECUTION: &'static str = "AUTO_MODERATION_ACTION_EXECUTION";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const AUTO_MODERATION_RULE_CREATE: &'static str = "AUTO_MODERATION_RULE_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const AUTO_MODERATION_RULE_DELETE: &'static str = "AUTO_MODERATION_RULE_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const AUTO_MODERATION_RULE_UPDATE: &'static str = "AUTO_MODERATION_RULE_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const CHANNEL_CREATE: &'static str = "CHANNEL_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const CHANNEL_DELETE: &'static str = "CHANNEL_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const CHANNEL_PINS_UPDATE: &'static str = "CHANNEL_PINS_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const CHANNEL_UPDATE: &'static str = "CHANNEL_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_BAN_ADD: &'static str = "GUILD_BAN_ADD";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_BAN_REMOVE: &'static str = "GUILD_BAN_REMOVE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_CREATE: &'static str = "GUILD_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_DELETE: &'static str = "GUILD_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_EMOJIS_UPDATE: &'static str = "GUILD_EMOJIS_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_INTEGRATIONS_UPDATE: &'static str = "GUILD_INTEGRATIONS_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_MEMBERS_CHUNK: &'static str = "GUILD_MEMBERS_CHUNK";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_MEMBER_ADD: &'static str = "GUILD_MEMBER_ADD";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_MEMBER_REMOVE: &'static str = "GUILD_MEMBER_REMOVE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_MEMBER_UPDATE: &'static str = "GUILD_MEMBER_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_ROLE_CREATE: &'static str = "GUILD_ROLE_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_ROLE_DELETE: &'static str = "GUILD_ROLE_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_ROLE_UPDATE: &'static str = "GUILD_ROLE_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_SCHEDULED_EVENT_CREATE: &'static str = "GUILD_SCHEDULED_EVENT_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_SCHEDULED_EVENT_DELETE: &'static str = "GUILD_SCHEDULED_EVENT_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_SCHEDULED_EVENT_UPDATE: &'static str = "GUILD_SCHEDULED_EVENT_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_SCHEDULED_EVENT_USER_ADD: &'static str = "GUILD_SCHEDULED_EVENT_USER_ADD";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_SCHEDULED_EVENT_USER_REMOVE: &'static str = "GUILD_SCHEDULED_EVENT_USER_REMOVE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_STICKERS_UPDATE: &'static str = "GUILD_STICKERS_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const GUILD_UPDATE: &'static str = "GUILD_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const INTEGRATION_CREATE: &'static str = "INTEGRATION_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const INTEGRATION_DELETE: &'static str = "INTEGRATION_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const INTEGRATION_UPDATE: &'static str = "INTEGRATION_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const INTERACTION_CREATE: &'static str = "INTERACTION_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const INVITE_CREATE: &'static str = "INVITE_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const INVITE_DELETE: &'static str = "INVITE_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const MESSAGE_CREATE: &'static str = "MESSAGE_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const MESSAGE_DELETE: &'static str = "MESSAGE_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const MESSAGE_DELETE_BULK: &'static str = "MESSAGE_DELETE_BULK";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const MESSAGE_REACTION_ADD: &'static str = "MESSAGE_REACTION_ADD";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const MESSAGE_REACTION_REMOVE: &'static str = "MESSAGE_REACTION_REMOVE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const MESSAGE_REACTION_REMOVE_ALL: &'static str = "MESSAGE_REACTION_REMOVE_ALL";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const MESSAGE_UPDATE: &'static str = "MESSAGE_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const PRESENCES_REPLACE: &'static str = "PRESENCES_REPLACE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const PRESENCE_UPDATE: &'static str = "PRESENCE_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const READY: &'static str = "READY";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const RESUMED: &'static str = "RESUMED";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const STAGE_INSTANCE_CREATE: &'static str = "STAGE_INSTANCE_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const STAGE_INSTANCE_DELETE: &'static str = "STAGE_INSTANCE_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const STAGE_INSTANCE_UPDATE: &'static str = "STAGE_INSTANCE_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const THREAD_CREATE: &'static str = "THREAD_CREATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const THREAD_DELETE: &'static str = "THREAD_DELETE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const THREAD_LIST_SYNC: &'static str = "THREAD_LIST_SYNC";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const THREAD_MEMBERS_UPDATE: &'static str = "THREAD_MEMBERS_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const THREAD_MEMBER_UPDATE: &'static str = "THREAD_MEMBER_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const THREAD_UPDATE: &'static str = "THREAD_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const TYPING_START: &'static str = "TYPING_START";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const USER_UPDATE: &'static str = "USER_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const VOICE_SERVER_UPDATE: &'static str = "VOICE_SERVER_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const VOICE_STATE_UPDATE: &'static str = "VOICE_STATE_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    const WEBHOOKS_UPDATE: &'static str = "WEBHOOKS_UPDATE";$/;"	v	implementation:EventType
str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_broadcast.rs	/^        let (tx, mut rx1) = broadcast::channel::<Arc<&'static str>>(16);$/;"	v	function:broadcast_two
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub fn stream($/;"	P	implementation:MessagesIter
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn stream(http: impl AsRef<Http>, guild_id: GuildId) -> impl Stream<Item = Result<Member/;"	P	implementation:MembersIter
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn stream(self) -> bool {$/;"	P	implementation:Permissions
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    stream: UnsafeCell<T>,$/;"	m	struct:Inner
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod stream {}$/;"	n
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/mod.rs	/^pub(crate) mod stream;$/;"	n
stream	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub(crate) mod stream;$/;"	n
stream_pin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    fn stream_pin(&mut self) -> Pin<&mut T> {$/;"	P	implementation:Guard
streaming	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn streaming<N, U>(name: N, url: U) -> Activity$/;"	P	implementation:Activity
stress1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn stress1() {$/;"	f
stress2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/queue.rs	/^fn stress2() {$/;"	f
strikethrough	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub strikethrough: bool,$/;"	m	struct:Content
strikethrough_commands_tip_in_dm	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub strikethrough_commands_tip_in_dm: Option<&'static str>,$/;"	m	struct:HelpOptions
strikethrough_commands_tip_in_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub strikethrough_commands_tip_in_guild: Option<&'static str>,$/;"	m	struct:HelpOptions
strip	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^fn strip(s: &str, begin: char, end: char) -> Option<&str> {$/;"	f
structures	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^mod structures;$/;"	n
style	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn style(&mut self, kind: ButtonStyle) -> &mut Self {$/;"	P	implementation:CreateButton
style	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn style(&mut self, kind: InputTextStyle) -> &mut Self {$/;"	P	implementation:CreateInputText
style	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub style: ButtonStyle,$/;"	m	struct:Button
sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/ready.rs	/^    fn sub(self, other: Ready) -> Ready {$/;"	P	implementation:Ready
sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn sub(self, rhs: Duration) -> Instant {$/;"	P	implementation:Instant
sub	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn sub(self, rhs: Instant) -> Duration {$/;"	P	implementation:Instant
sub_assign	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^    fn sub_assign(&mut self, rhs: Duration) {$/;"	P	implementation:Instant
sub_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub sub_commands: Vec<String>,$/;"	m	struct:Command
sub_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub sub_commands: &'static [&'static Command],$/;"	m	struct:CommandOptions
sub_commands_label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub sub_commands_label: &'static str,$/;"	m	struct:HelpOptions
sub_groups	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub sub_groups: Vec<GroupCommandsPair>,$/;"	m	struct:GroupCommandsPair
sub_groups	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub sub_groups: &'static [&'static CommandGroup],$/;"	m	struct:GroupOptions
submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/batch.rs	/^    pub(crate) fn submit(&mut self, worker: &WorkerMetrics) {$/;"	P	implementation:MetricsBatch
submit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/mock.rs	/^    pub(crate) fn submit(&mut self, _to: &WorkerMetrics) {}$/;"	P	implementation:MetricsBatch
subscribe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn subscribe(&self) -> Receiver<T> {$/;"	P	implementation:Sender
subscribe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    pub fn subscribe(&self) -> Receiver<T> {$/;"	P	implementation:Sender
subscriber_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub subscriber_count: Option<u64>,$/;"	m	struct:Integration
success	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    success: bool,$/;"	m	struct:BudgetDecrement
suggestion_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub suggestion_text: &'static str,$/;"	m	struct:HelpOptions
suggestions_join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    fn suggestions_join() {$/;"	f	module:tests
summary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub summary: Option<&'static str>,$/;"	m	struct:GroupCommandsPair
summary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub summary: Option<&'static str>,$/;"	m	struct:GroupOptions
support	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^pub mod support;$/;"	n
suppress	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_voice_state.rs	/^    pub fn suppress(&mut self, deafen: bool) -> &mut Self {$/;"	P	implementation:EditVoiceState
suppress	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            suppress: bool,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
suppress	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub suppress: bool,$/;"	m	struct:VoiceState
suppress_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_message.rs	/^    pub fn suppress_embeds(&mut self, suppress: bool) -> &mut Self {$/;"	P	implementation:EditMessage
suppress_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn suppress_embeds(&mut self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Message
swap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    pub(crate) fn swap(&self, val: Option<Box<T>>) -> Option<Box<T>> {$/;"	P	implementation:AtomicCell
symlink	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/symlink.rs	/^pub async fn symlink(src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()> {$/;"	f
symlink_dir	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/symlink_dir.rs	/^pub async fn symlink_dir(src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()> {$/;"	f
symlink_file	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/symlink_file.rs	/^pub async fn symlink_file(src: impl AsRef<Path>, dst: impl AsRef<Path>) -> io::Result<()> {$/;"	f
symlink_metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod symlink_metadata;$/;"	n
symlink_metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/symlink_metadata.rs	/^pub async fn symlink_metadata(path: impl AsRef<Path>) -> io::Result<Metadata> {$/;"	f
sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^pub(crate) mod sync {$/;"	n
sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod sync {$/;"	n
sync_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn sync_all(&self) -> io::Result<()> {$/;"	P	implementation:File
sync_all_err_ordered_after_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn sync_all_err_ordered_after_write() {$/;"	f
sync_all_ordered_after_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn sync_all_ordered_after_write() {$/;"	f
sync_data	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn sync_data(&self) -> io::Result<()> {$/;"	P	implementation:File
sync_data_err_ordered_after_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn sync_data_err_ordered_after_write() {$/;"	f
sync_data_ordered_after_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn sync_data_ordered_after_write() {$/;"	f
sync_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub sync_id: Option<String>,$/;"	m	struct:Activity
sync_scope	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn sync_scope<F, R>(&'static self, value: T, f: F) -> R$/;"	P	implementation:LocalKey
sync_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn sync_when(&self) -> u64 {$/;"	P	implementation:TimerHandle
sync_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) unsafe fn sync_when(&self) -> u64 {$/;"	P	implementation:TimerShared
synced_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub synced_at: Option<Timestamp>,$/;"	m	struct:Integration
syncing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub syncing: Option<bool>,$/;"	m	struct:Integration
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stderr.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdin.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdout.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^pub(crate) mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^mod sys {$/;"	n
sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/platform.rs	/^mod sys {$/;"	n
system_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod system_channel;$/;"	n
system_channel_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn system_channel_flags(&mut self, system_channel_flags: SystemChannelFlags) -> &mut Sel/;"	P	implementation:EditGuild
system_channel_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub system_channel_flags: SystemChannelFlags,$/;"	m	struct:Guild
system_channel_flags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub system_channel_flags: SystemChannelFlags,$/;"	m	struct:PartialGuild
system_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn system_channel_id(&mut self, channel_id: Option<ChannelId>) -> &mut Self {$/;"	P	implementation:EditGuild
system_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub system_channel_id: Option<ChannelId>,$/;"	m	struct:Guild
system_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub system_channel_id: Option<ChannelId>,$/;"	m	struct:PartialGuild
table_name	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub table_name: &'s str,$/;"	m	struct:Metadata
table_name	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn table_name() -> &'static str;$/;"	P	interface:Schema
tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn tag(&self) -> String {$/;"	P	implementation:CurrentUser
tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub fn tag(&self) -> String {$/;"	P	implementation:User
tag	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^fn tag(name: &str, discriminator: u16) -> String {$/;"	f
tags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_sticker.rs	/^    pub fn tags<S: ToString>(&mut self, tags: S) -> &mut Self {$/;"	P	implementation:CreateSticker
tags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_sticker.rs	/^    pub fn tags<S: ToString>(&mut self, tags: S) -> &mut Self {$/;"	P	implementation:EditSticker
tags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/sticker.rs	/^    pub tags: Option<String>,$/;"	m	struct:Sticker
tags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub tags: RoleTags,$/;"	m	struct:InterimRole
tags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub tags: RoleTags,$/;"	m	struct:Role
tags	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub tags: Vec<String>,$/;"	m	struct:Sticker
tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^    tail: AtomicUnsignedShort,$/;"	m	struct:Inner
tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/inject.rs	/^    tail: Option<NonNull<task::Header>>,$/;"	m	struct:Pointers
tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    tail: Mutex<Tail>,$/;"	m	struct:Shared
tail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^    tail: Option<NonNull<T>>,$/;"	m	struct:LinkedList
tail_position	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    tail_position: AtomicUsize,$/;"	m	struct:Tx
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub async fn take(&mut self, ctx: &Context, msg: &Message) -> Option<RateLimitInfo> {$/;"	P	implementation:Bucket
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub async fn take(&mut self, ctx: &Context, msg: &Message, id: u64) -> Option<RateLimitInfo>/;"	P	implementation:TicketCounter
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn take(&mut self, n: usize) -> ReadBuf<'_> {$/;"	P	implementation:ReadBuf
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^pub(super) fn take<R: AsyncRead>(inner: R, limit: u64) -> Take<R> {$/;"	f
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    pub(crate) fn take(&mut self) -> Vec<u8> {$/;"	P	implementation:VecWithInitialized
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        pub(super) fn take(&self) -> Option<T> {$/;"	P	implementation:atomic_take::AtomicTake
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    pub fn take(&mut self) -> Option<T> {$/;"	P	implementation:OnceCell
take	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^    pub(crate) fn take(&self) -> Option<Box<T>> {$/;"	P	implementation:AtomicCell
take_core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn take_core(&self, handle: &Arc<Handle>) -> Option<CoreGuard<'_>> {$/;"	P	implementation:CurrentThread
take_entries	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn take_entries(&mut self, expiration: &Expiration) -> EntryList {$/;"	P	implementation:Wheel
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:TcpSocket
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:TcpStream
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:UdpSocket
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:UnixDatagram
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:UnixListener
take_error	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn take_error(&self) -> io::Result<Option<io::Error>> {$/;"	P	implementation:UnixStream
take_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    fn take_inner(&mut self) -> Option<T> {$/;"	P	implementation:AsyncFd
take_local_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn take_local_queue(&self) -> VecDeque<task::Notified<Arc<Shared>>> {$/;"	P	implementation:LocalState
take_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/maybe_done.rs	/^    pub fn take_output(self: Pin<&mut Self>) -> Option<Fut::Output> {$/;"	P	implementation:MaybeDone
take_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn take_output(&self) -> super::Result<T::Output> {$/;"	P	implementation:Core
take_slot	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    pub(crate) fn take_slot(&mut self, slot: usize) -> EntryList {$/;"	P	implementation:Level
take_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    pub(crate) fn take_waker(&self) -> Option<Waker> {$/;"	P	implementation:AtomicWaker
taken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^        taken: AtomicBool,$/;"	m	struct:atomic_take::AtomicTake
target	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub fn target(&self) -> Option<ResolvedTarget> {$/;"	P	implementation:CommandData
target_application	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub target_application: Option<ApplicationId>,$/;"	m	struct:Invite
target_application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^    pub fn target_application_id(&mut self, target_application_id: ApplicationId) -> &mut Self {$/;"	P	implementation:CreateInvite
target_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub target_id: Option<TargetId>,$/;"	m	struct:CommandData
target_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub target_id: Option<u64>,$/;"	m	struct:AuditLogEntry
target_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^    pub fn target_type(&mut self, target_type: InviteTargetType) -> &mut Self {$/;"	P	implementation:CreateInvite
target_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub target_type: Option<InviteTargetType>,$/;"	m	struct:Invite
target_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub target_user: Option<UserId>,$/;"	m	struct:Invite
target_user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^    pub fn target_user_id(&mut self, target_user_id: UserId) -> &mut Self {$/;"	P	implementation:CreateInvite
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^pub mod task;$/;"	n
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/mod.rs	/^mod task;$/;"	n
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    task: task::UnownedTask<BlockingSchedule>,$/;"	m	struct:Task
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    task: Task<S>,$/;"	m	struct:LocalNotified
task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^    task: AtomicWaker,$/;"	m	struct:Chan
task_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) task_id: Id,$/;"	m	struct:Core
task_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^macro_rules! task_local {$/;"	M
task_pop_front	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn task_pop_front(&self) -> Option<task::Notified<Arc<Shared>>> {$/;"	P	implementation:LocalState
task_push_back	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn task_push_back(&self, task: task::Notified<Arc<Shared>>) {$/;"	P	implementation:LocalState
task_remove	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unsafe fn task_remove(&self, task: &Task<Arc<Shared>>) -> Option<Task<Arc<Shared>>> {$/;"	P	implementation:LocalState
tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    tasks: VecDeque<task::Notified<Arc<Handle>>>,$/;"	m	struct:Core
team	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub team: Option<Team>,$/;"	m	struct:CurrentApplicationInfo
team_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub team_id: u64,$/;"	m	struct:TeamMember
temp_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) temp_channels: DashCache<ChannelId, GuildChannel>,$/;"	m	struct:Cache
temp_users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) temp_users: DashCache<UserId, User>,$/;"	m	struct:Cache
temporary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^    pub fn temporary(&mut self, temporary: bool) -> &mut Self {$/;"	P	implementation:CreateInvite
temporary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub temporary: bool,$/;"	m	struct:InviteCreateEvent
temporary	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub temporary: bool,$/;"	m	struct:RichInvite
terminate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn terminate() -> Self {$/;"	P	implementation:SignalKind
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^pub(crate) mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^mod test {$/;"	n
test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^mod test {$/;"	n
test_attachment_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment_type.rs	/^    fn test_attachment_type() {$/;"	f	module:test
test_build_with_multiple_event_types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn test_build_with_multiple_event_types() {$/;"	f	module:test
test_build_with_multiple_id_filters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn test_build_with_multiple_id_filters() {$/;"	f	module:test
test_build_with_single_id_filter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn test_build_with_single_id_filter() {$/;"	f	module:test
test_cache_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    fn test_cache_messages() {$/;"	f	module:test
test_channel_parser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^    fn test_channel_parser() {$/;"	f	module:test
test_combination	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^fn test_combination($/;"	f
test_combinations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^fn test_combinations() {$/;"	f
test_content_safe	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^    fn test_content_safe() {$/;"	f	module:tests
test_core	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        fn test_core() {$/;"	f	module:test::model
test_created_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^    fn test_created_at() {$/;"	f	module:tests
test_different_futures	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn test_different_futures() {$/;"	f	module:test
test_different_sizes	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn test_different_sizes() {$/;"	f	module:test
test_discriminator_serde	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    fn test_discriminator_serde() {$/;"	f	module:test
test_dupe_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^fn test_dupe_value() {$/;"	f
test_emoji_parser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^    fn test_emoji_parser() {$/;"	f	module:test
test_error_response_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    async fn test_error_response_into() {$/;"	f	module:test
test_formatters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    fn test_formatters() {$/;"	f	module:test
test_from_embed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    fn test_from_embed() {$/;"	f	module:test
test_generations_assert_same	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^fn test_generations_assert_same() {$/;"	f
test_id_not_broken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    fn test_id_not_broken() {$/;"	f	module:tests
test_id_serde	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^    fn test_id_serde() {$/;"	f	module:tests
test_invite_parser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^    fn test_invite_parser() {$/;"	f	module:test
test_join_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_join_set.rs	/^fn test_join_set() {$/;"	f
test_level_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/mod.rs	/^    fn test_level_for() {$/;"	f	module:test
test_local_queue_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^fn test_local_queue_capacity() {$/;"	f
test_match_borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^fn test_match_borrow() {$/;"	f
test_mention	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mention.rs	/^    fn test_mention() {$/;"	f	module:test
test_no_event_types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn test_no_event_types() {$/;"	f	module:test
test_panicky_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_atomic_waker.rs	/^fn test_panicky_waker() {$/;"	f
test_parse_header_errors	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    fn test_parse_header_errors() {$/;"	f	module:tests
test_parse_header_good	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    fn test_parse_header_good() -> Result<()> {$/;"	f	module:tests
test_pseudo_text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn test_pseudo_text() {$/;"	f	module:tests
test_quote_parser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^    fn test_quote_parser() {$/;"	f	module:test
test_slot_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/wheel/level.rs	/^    fn test_slot_for() {$/;"	f	module:test
test_splitter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^    fn test_splitter() {$/;"	f	module:tests
test_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^fn test_state() {$/;"	f
test_username_parser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^    fn test_username_parser() {$/;"	f	module:test
test_webhook_parser	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^    fn test_webhook_parser() {$/;"	f	module:test
test_wrap_same	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^fn test_wrap_same() {$/;"	f
test_zero_sized	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    fn test_zero_sized() {$/;"	f	module:test
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/timestamp.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/content_safe.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/chain.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_buf.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/empty.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/lines.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/repeat.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/sink.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/split.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/take.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/mod.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/windows/sys.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mod.rs	/^mod tests;$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^pub(crate) mod tests {$/;"	n
tests	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/memchr.rs	/^mod tests {$/;"	n
text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn text<S: ToString>(&mut self, text: S) -> &mut Self {$/;"	P	implementation:CreateEmbedFooter
text	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub text: String,$/;"	m	struct:EmbedFooter
text_channel_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub text_channel_count: Option<u64>,$/;"	m	struct:InviteGuild
then	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) const fn then(&self, width: u32) -> Pack {$/;"	P	implementation:Pack
thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub thread: GuildChannel,$/;"	m	struct:ThreadCreateEvent
thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub thread: GuildChannel,$/;"	m	struct:ThreadUpdateEvent
thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub thread: PartialGuildChannel,$/;"	m	struct:ThreadDeleteEvent
thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^pub(crate) mod thread {$/;"	n
thread	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^pub(crate) mod thread {$/;"	n
thread_cap	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    thread_cap: usize,$/;"	m	struct:Inner
thread_create	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn thread_create(&self, _ctx: Context, _thread: GuildChannel) {}$/;"	P	interface:EventHandler
thread_delete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn thread_delete(&self, _ctx: Context, _thread: PartialGuildChannel) {}$/;"	P	interface:EventHandler
thread_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^    thread_id: Cell<Option<ThreadId>>,$/;"	m	struct:Context
thread_keep_alive	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn thread_keep_alive(&mut self, duration: Duration) -> &mut Self {$/;"	P	implementation:Builder
thread_list_sync	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn thread_list_sync(&self, _ctx: Context, _thread_list_sync: ThreadListSyncEvent) {}$/;"	P	interface:EventHandler
thread_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/mod.rs	/^mod thread_local;$/;"	n
thread_member_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn thread_member_update(&self, _ctx: Context, _thread_member: ThreadMember) {}$/;"	P	interface:EventHandler
thread_members_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn thread_members_update($/;"	P	interface:EventHandler
thread_metadata	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub thread_metadata: Option<ThreadMetadata>,$/;"	m	struct:GuildChannel
thread_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    thread_name: ThreadNameFn,$/;"	m	struct:Inner
thread_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn thread_name(&mut self, val: impl Into<String>) -> &mut Self {$/;"	P	implementation:Builder
thread_name	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) thread_name: ThreadNameFn,$/;"	m	struct:Builder
thread_name_fn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn thread_name_fn<F>(&mut self, f: F) -> &mut Self$/;"	P	implementation:Builder
thread_rng_n	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/context.rs	/^pub(crate) fn thread_rng_n(n: u32) -> u32 {$/;"	f
thread_stack_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn thread_stack_size(&mut self, val: usize) -> &mut Self {$/;"	P	implementation:Builder
thread_stack_size	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) thread_stack_size: Option<usize>,$/;"	m	struct:Builder
thread_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn thread_update(&self, _ctx: Context, _thread: GuildChannel) {}$/;"	P	interface:EventHandler
threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub threads: Vec<GuildChannel>,$/;"	m	struct:ThreadsData
threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub threads: Vec<GuildChannel>,$/;"	m	struct:ThreadListSyncEvent
threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub threads: Vec<GuildChannel>,$/;"	m	struct:Guild
thumbnail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn thumbnail<S: ToString>(&mut self, url: S) -> &mut Self {$/;"	P	implementation:CreateEmbed
thumbnail	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub thumbnail: Option<EmbedThumbnail>,$/;"	m	struct:Embed
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    tick: u8,$/;"	m	struct:Driver
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    tick: u8,$/;"	m	struct:ReadyEvent
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    tick: u32,$/;"	m	struct:Core
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn tick(&mut self) {$/;"	P	implementation:Core
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    tick: u32,$/;"	m	struct:Core
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn tick(&self) -> usize {$/;"	P	implementation:Runtime
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn tick(&self) -> bool {$/;"	P	implementation:LocalSet
tick	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/interval.rs	/^    pub async fn tick(&mut self) -> Instant {$/;"	P	implementation:Interval
tick_max	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^    fn tick_max(&self, max: usize) -> usize {$/;"	P	implementation:Runtime
tick_to_duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/source.rs	/^    pub(crate) fn tick_to_duration(&self, t: u64) -> Duration {$/;"	P	implementation:TimeSource
tickets	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub tickets: u32,$/;"	m	struct:UnitRatelimit
tickets_for	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub tickets_for: HashMap<u64, UnitRatelimit>,$/;"	m	struct:TicketCounter
time	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) time: TimeHandle,$/;"	m	struct:Handle
time_source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(crate) fn time_source(&self) -> &TimeSource {$/;"	P	implementation:Handle
time_source	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(super) time_source: TimeSource,$/;"	m	struct:Handle
time_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub fn time_span(&mut self, secs: u64) -> &mut Self {$/;"	P	implementation:BucketBuilder
time_span	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/buckets.rs	/^    pub(crate) time_span: Duration,$/;"	m	struct:BucketBuilder
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:CollectComponentInteraction
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:ComponentInteractionCollector
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/component_interaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:ComponentInteractionCollectorBuilder
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    pub fn timeout(mut self, duration: Duration) -> Self {$/;"	P	implementation:EventCollectorBuilder
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:EventCollector
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:EventCollectorBuilder
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:CollectReply
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:MessageCollector
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/message_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:MessageCollectorBuilder
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:CollectModalInteraction
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:ModalInteractionCollector
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/modal_interaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:ModalInteractionCollectorBuilder
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:CollectReaction
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:ReactionCollector
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/reaction_collector.rs	/^    timeout: Option<Pin<Box<Sleep>>>,$/;"	m	struct:ReactionCollectorBuilder
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/mod.rs	/^mod timeout;$/;"	n
timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^pub fn timeout<F>(duration: Duration, future: F) -> Timeout<F>$/;"	f
timeout_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/timeout.rs	/^pub fn timeout_at<F>(deadline: Instant, future: F) -> Timeout<F>$/;"	f
timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn timestamp<T: Into<Timestamp>>(&mut self, timestamp: T) -> &mut Self {$/;"	P	implementation:CreateEmbed
timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub timestamp: Option<String>,$/;"	m	struct:Embed
timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub timestamp: Timestamp,$/;"	m	struct:Message
timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub timestamp: Option<Timestamp>,$/;"	m	struct:MessageUpdateEvent
timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub timestamp: u64,$/;"	m	struct:TypingStartEvent
timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod timestamp;$/;"	n
timestamp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn timestamp<T: Into<Timestamp>>(&mut self, timestamp: T) -> &mut Self {$/;"	P	implementation:CustomMessage
timestamps	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub timestamps: Option<ActivityTimestamps>,$/;"	m	struct:Activity
title	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn title<D: ToString>(&mut self, title: D) -> &mut Self {$/;"	P	implementation:CreateEmbed
title	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn title<D: ToString>(&mut self, title: D) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
title	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub title: Option<String>,$/;"	m	struct:Embed
to_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn to_channel(self, cache_http: impl CacheHttp) -> Result<Channel> {$/;"	P	implementation:ChannelId
to_channel_cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub fn to_channel_cached(self, cache: impl AsRef<Cache>) -> Option<Channel> {$/;"	P	implementation:ChannelId
to_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    fn to_content(&self) -> Content {$/;"	P	implementation:ContentModifier
to_guild_cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn to_guild_cached(self, cache: impl AsRef<Cache>) -> Option<Guild> {$/;"	P	implementation:GuildId
to_lowercase	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^fn to_lowercase<'a>(config: &Configuration, s: &'a str) -> Cow<'a, str> {$/;"	f
to_message_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub fn to_message_id(self) -> MessageId {$/;"	P	implementation:TargetId
to_mio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/interest.rs	/^    pub(crate) const fn to_mio(self) -> mio::Interest {$/;"	P	implementation:Interest
to_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^    fn to_number(self) -> Value {$/;"	P	implementation:T
to_number	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^    fn to_number(self) -> Value;$/;"	P	interface:ToNumber
to_partial_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn to_partial_guild(self, http: impl AsRef<Http>) -> Result<PartialGuild> {$/;"	P	implementation:GuildId
to_partial_guild_with_counts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn to_partial_guild_with_counts($/;"	P	implementation:GuildId
to_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/atomic_cell.rs	/^fn to_raw<T>(data: Option<Box<T>>) -> *mut T {$/;"	f
to_role_cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub fn to_role_cached(self, cache: impl AsRef<Cache>) -> Option<Role> {$/;"	P	implementation:RoleId
to_role_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub fn to_role_id(self) -> RoleId {$/;"	P	implementation:CommandPermissionId
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^        fn to_socket_addrs(&self, internal: Internal) -> Self::Future;$/;"	P	interface:sealed::ToSocketAddrsPriv
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	P	implementation:SocketAddr
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	P	implementation:SocketAddrV4
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	P	implementation:SocketAddrV6
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	P	implementation:u16
to_socket_addrs	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^    fn to_socket_addrs(&self, _: sealed::Internal) -> Self::Future {$/;"	f
to_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_id.rs	/^    pub async fn to_sticker(&self, http: impl AsRef<Http>) -> Result<Sticker> {$/;"	P	implementation:StickerId
to_sticker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/sticker_item.rs	/^    pub async fn to_sticker(&self, http: impl AsRef<Http>) -> Result<Sticker> {$/;"	P	implementation:StickerItem
to_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    fn to_str(&self) -> Cow<'_, str> {$/;"	P	implementation:Delimiter
to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub(crate) fn to_string<T>(v: &T) -> Result<String>$/;"	f
to_string	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn to_string(&self) -> String {$/;"	P	implementation:Content
to_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn to_user(&self) -> Option<User> {$/;"	P	implementation:PresenceUser
to_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn to_user(self, cache_http: impl CacheHttp) -> Result<User> {$/;"	P	implementation:UserId
to_user_cached	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub async fn to_user_cached(self, cache: impl AsRef<Cache>) -> Option<User> {$/;"	P	implementation:UserId
to_user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub fn to_user_id(self) -> UserId {$/;"	P	implementation:CommandPermissionId
to_user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub fn to_user_id(self) -> UserId {$/;"	P	implementation:TargetId
to_value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/json.rs	/^pub(crate) fn to_value<T>(value: T) -> Result<Value>$/;"	f
to_webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub async fn to_webhook(self, http: impl AsRef<Http>) -> Result<Webhook> {$/;"	P	implementation:WebhookId
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn token(mut self, token: impl AsRef<str>) -> Self {$/;"	P	implementation:ClientBuilder
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub token: String,$/;"	m	struct:Shard
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub fn token(mut self, token: impl AsRef<str>) -> Self {$/;"	P	implementation:HttpBuilder
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub token: String,$/;"	m	struct:Http
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    token: String,$/;"	m	struct:HttpBuilder
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/ratelimiting.rs	/^    token: String,$/;"	m	struct:Ratelimiter
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub token: String,$/;"	m	struct:ApplicationCommandInteraction
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub token: String,$/;"	m	struct:AutocompleteInteraction
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub token: String,$/;"	m	struct:MessageComponentInteraction
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub fn token(&self) -> &str {$/;"	P	implementation:Interaction
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub token: String,$/;"	m	struct:ModalSubmitInteraction
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/ping.rs	/^    pub token: String,$/;"	m	struct:PingInteraction
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub token: String,$/;"	m	struct:VoiceServerUpdateEvent
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            token: Option<String>,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub token: Option<String>,$/;"	m	struct:VoiceState
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub token: Option<String>,$/;"	m	struct:Webhook
token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/mod.rs	/^pub mod token;$/;"	n
tokens	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    tokens: &'a [Token],$/;"	m	struct:RawArguments
tokio	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/mod.rs	/^pub mod tokio;$/;"	n
tokio_thread_local	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/thread_local.rs	/^macro_rules! tokio_thread_local {$/;"	M
topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn topic<D: ToString>(&mut self, topic: D) -> &mut Self {$/;"	P	implementation:CreateChannel
topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_stage_instance.rs	/^    pub fn topic<D: ToString>(&mut self, topic: D) -> &mut Self {$/;"	P	implementation:CreateStageInstance
topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn topic<S: ToString>(&mut self, topic: S) -> &mut Self {$/;"	P	implementation:EditChannel
topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_stage_instance.rs	/^    pub fn topic<D: ToString>(&mut self, topic: D) -> &mut Self {$/;"	P	implementation:EditStageInstance
topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub topic: Option<String>,$/;"	m	struct:GuildChannel
topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/mod.rs	/^    pub topic: String,$/;"	m	struct:StageInstance
topic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    topic: String,$/;"	m	struct:InviteStageInstance
tos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/socket.rs	/^    pub fn tos(&self) -> io::Result<u32> {$/;"	P	implementation:TcpSocket
tos	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn tos(&self) -> io::Result<u32> {$/;"	P	implementation:UdpSocket
total	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub total: u64,$/;"	m	struct:SessionStartLimit
total_kills	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        total_kills: usize,$/;"	m	struct:test::MockWait
total_polls	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        total_polls: usize,$/;"	m	struct:test::MockStream
total_waits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        total_waits: Rc<Cell<usize>>,$/;"	m	struct:test::MockWait
total_waits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        total_waits: usize,$/;"	m	struct:test::MockWait
trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub trace: Vec<Option<String>>,$/;"	m	struct:ResumedEvent
trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub trace: Vec<String>,$/;"	m	struct:Ready
trace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^pub(crate) mod trace;$/;"	n
tracing_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) tracing_id: Option<tracing::Id>,$/;"	m	struct:Header
track	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^fn track<T: Future>(f: T) -> Track<T> {$/;"	f
trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) trailer: Trailer,$/;"	m	struct:Cell
trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    fn trailer(&self) -> &Trailer {$/;"	f
trailer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn trailer(&self) -> &Trailer {$/;"	P	implementation:RawTask
trailer_offset	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) trailer_offset: usize,$/;"	m	struct:Vtable
trailer_ptr	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) fn trailer_ptr(&self) -> NonNull<Trailer> {$/;"	P	implementation:RawTask
traits	/home/trey/code/sqlx-crud/src/lib.rs	/^pub mod traits;$/;"	n
transfer_one_direction	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy_bidirectional.rs	/^fn transfer_one_direction<A, B>($/;"	f
transform_content	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub(crate) fn transform_content(&mut self) {$/;"	P	implementation:Message
transition_from_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_from_parked(&mut self, worker: &Worker) -> bool {$/;"	P	implementation:Core
transition_from_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_from_searching(&mut self, worker: &Worker) {$/;"	P	implementation:Core
transition_to_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_complete(&self) -> Snapshot {$/;"	P	implementation:State
transition_to_idle	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_idle(&self) -> TransitionToIdle {$/;"	P	implementation:State
transition_to_notified_and_cancel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_notified_and_cancel(&self) -> bool {$/;"	P	implementation:State
transition_to_notified_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_notified_by_ref(&self) -> TransitionToNotifiedByRef {$/;"	P	implementation:State
transition_to_notified_by_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_notified_by_val(&self) -> TransitionToNotifiedByVal {$/;"	P	implementation:State
transition_to_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_to_parked(&mut self, worker: &Worker) -> bool {$/;"	P	implementation:Core
transition_to_running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_running(&self) -> TransitionToRunning {$/;"	P	implementation:State
transition_to_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_to_searching(&mut self, worker: &Worker) -> bool {$/;"	P	implementation:Core
transition_to_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_shutdown(&self) -> bool {$/;"	P	implementation:State
transition_to_terminal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn transition_to_terminal(&self, count: usize) -> bool {$/;"	P	implementation:State
transition_worker_from_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn transition_worker_from_searching(&self) -> bool {$/;"	P	implementation:Idle
transition_worker_from_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn transition_worker_from_searching(&self) {$/;"	P	implementation:Handle
transition_worker_to_parked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn transition_worker_to_parked(&self, worker: usize, is_searching: bool) -> bool /;"	P	implementation:Idle
transition_worker_to_searching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn transition_worker_to_searching(&self) -> bool {$/;"	P	implementation:Idle
tried_fetch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    tried_fetch: bool,$/;"	m	struct:MessagesIter
tried_fetch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    tried_fetch: bool,$/;"	m	struct:MembersIter
trigger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_automod_rule.rs	/^    pub fn trigger(&mut self, trigger: Trigger) -> &mut Self {$/;"	P	implementation:EditAutoModRule
trigger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^            trigger: Trigger,$/;"	m	struct:tests::rule_trigger_serde::Rule
trigger	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub trigger: Trigger,$/;"	m	struct:Rule
trigger_type	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub trigger_type: TriggerType,$/;"	m	struct:ActionExecution
trim	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^        fn trim(s: &str) -> &str {$/;"	f	method:Args::apply
trim_prefixless_group	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^fn trim_prefixless_group(group_name: &str, searched_group: &mut String) -> bool {$/;"	f
trimmed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn trimmed(&mut self) -> &mut Self {$/;"	P	implementation:Args
trimmed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn trimmed(&mut self) -> &mut Self {$/;"	P	implementation:Iter
true_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    pub(super) fn true_when(&self) -> u64 {$/;"	P	implementation:TimerShared
true_when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    true_when: AtomicU64,$/;"	m	struct:TimerShared
truncate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn truncate(&mut self, truncate: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
try_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    pub(crate) fn try_acquire(&self, num_permits: u32) -> Result<(), TryAcquireError> {$/;"	P	implementation:Semaphore
try_acquire	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn try_acquire(&self) -> Result<SemaphorePermit<'_>, TryAcquireError> {$/;"	P	implementation:Semaphore
try_acquire_many	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn try_acquire_many(&self, n: u32) -> Result<SemaphorePermit<'_>, TryAcquireError> {$/;"	P	implementation:Semaphore
try_acquire_many_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn try_acquire_many_available() {$/;"	f
try_acquire_many_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn try_acquire_many_owned($/;"	P	implementation:Semaphore
try_acquire_many_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn try_acquire_many_unavailable() {$/;"	f
try_acquire_one_available	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn try_acquire_one_available() {$/;"	f
try_acquire_one_unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn try_acquire_one_unavailable() {$/;"	f
try_acquire_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/semaphore.rs	/^    pub fn try_acquire_owned(self: Arc<Self>) -> Result<OwnedSemaphorePermit, TryAcquireError> {$/;"	P	implementation:Semaphore
try_advancing_head	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    fn try_advancing_head(&mut self) -> bool {$/;"	P	implementation:Rx
try_application_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    fn try_application_id(&self) -> Result<u64> {$/;"	P	implementation:Http
try_clone	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub async fn try_clone(&self) -> io::Result<File> {$/;"	P	implementation:File
try_current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/handle.rs	/^    pub fn try_current() -> Result<Self, TryCurrentError> {$/;"	P	implementation:Handle
try_downgrade_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn try_downgrade_map<F, U: ?Sized>($/;"	P	implementation:OwnedRwLockWriteGuard
try_downgrade_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn try_downgrade_map<F, U: ?Sized>(this: Self, f: F) -> Result<RwLockReadGuard<'a, U>, S/;"	P	implementation:RwLockWriteGuard
try_exists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod try_exists;$/;"	n
try_exists	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/try_exists.rs	/^pub async fn try_exists(path: impl AsRef<Path>) -> io::Result<bool> {$/;"	f
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn try_from(emoji_str: &str) -> std::result::Result<Self, Self::Error> {$/;"	P	implementation:ReactionType
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    fn try_from(emoji_string: String) -> std::result::Result<Self, Self::Error> {$/;"	P	implementation:ReactionType
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    fn try_from(value: RelatedId<T>) -> StdResult<Self, Self::Error> {$/;"	P	implementation:Option
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    fn try_from(stream: net::TcpListener) -> Result<Self, Self::Error> {$/;"	P	implementation:TcpListener
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    fn try_from(stream: std::net::TcpStream) -> Result<Self, Self::Error> {$/;"	P	implementation:TcpStream
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    fn try_from(stream: std::net::UdpSocket) -> Result<Self, Self::Error> {$/;"	P	implementation:UdpSocket
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    fn try_from(stream: std::os::unix::net::UnixDatagram) -> Result<Self, Self::Error> {$/;"	P	implementation:UnixDatagram
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/listener.rs	/^    fn try_from(stream: std::os::unix::net::UnixListener) -> io::Result<Self> {$/;"	P	implementation:UnixListener
try_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    fn try_from(stream: net::UnixStream) -> io::Result<Self> {$/;"	P	implementation:UnixStream
try_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/id.rs	/^pub fn try_id() -> Option<Id> {$/;"	f
try_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn try_into(self) -> Result<Stdio, Self::Error> {$/;"	P	implementation:ChildStderr
try_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn try_into(self) -> Result<Stdio, Self::Error> {$/;"	P	implementation:ChildStdin
try_into	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    fn try_into(self) -> Result<Stdio, Self::Error> {$/;"	P	implementation:ChildStdout
try_into_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/error.rs	/^    pub fn try_into_panic(self) -> Result<Box<dyn Any + Send + 'static>, JoinError> {$/;"	P	implementation:JoinError
try_into_std	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file.rs	/^    pub fn try_into_std(mut self) -> Result<StdFile, Self> {$/;"	P	implementation:File
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn try_io<R>($/;"	P	implementation:AsyncFdReadyGuard
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn try_io<R>($/;"	P	implementation:AsyncFdReadyMutGuard
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_io<R>($/;"	P	implementation:TcpStream
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_io<R>($/;"	P	implementation:UdpSocket
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_io<R>($/;"	P	implementation:UnixDatagram
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_io<R>($/;"	P	implementation:UnixStream
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_io<R>($/;"	P	implementation:NamedPipeClient
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_io<R>($/;"	P	implementation:NamedPipeServer
try_io	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/registration.rs	/^    pub(crate) fn try_io<R>($/;"	P	implementation:Registration
try_join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/try_join.rs	/^macro_rules! try_join {$/;"	M
try_join3	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/future/try_join.rs	/^pub(crate) fn try_join3<T1, F1, T2, F2, T3, F3, E>($/;"	f
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/mocked.rs	/^        pub(crate) fn try_lock(&self) -> Option<MutexGuard<'_, T>> {$/;"	P	implementation:sync::Mutex
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mutex.rs	/^    pub(crate) fn try_lock(&self) -> Option<MutexGuard<'_, T>> {$/;"	P	implementation:Mutex
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn try_lock(&self) -> Option<MutexGuard<'_, T>> {$/;"	P	implementation:Mutex
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_lock(&self) -> Result<MutexGuard<'_, T>, TryLockError> {$/;"	P	implementation:Mutex
try_lock	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/try_lock.rs	/^    pub(crate) fn try_lock(&self) -> Option<LockGuard<'_, T>> {$/;"	P	implementation:TryLock
try_lock_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_lock_owned(self: Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError> {$/;"	P	implementation:Mutex
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_map<S, F>(mut this: Self, f: F) -> Result<OwnedMappedMutexGuard<T, S>, Self>$/;"	P	implementation:OwnedMappedMutexGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_map<U, F>(mut this: Self, f: F) -> Result<MappedMutexGuard<'a, U>, Self>$/;"	P	implementation:MappedMutexGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_map<U, F>(mut this: Self, f: F) -> Result<MappedMutexGuard<'a, U>, Self>$/;"	P	implementation:MutexGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mutex.rs	/^    pub fn try_map<U, F>(mut this: Self, f: F) -> Result<OwnedMappedMutexGuard<T, U>, Self>$/;"	P	implementation:OwnedMutexGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_read_guard.rs	/^    pub fn try_map<F, V: ?Sized>(this: Self, f: F) -> Result<OwnedRwLockReadGuard<T, V>, Self>$/;"	P	implementation:OwnedRwLockReadGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard.rs	/^    pub fn try_map<F, U: ?Sized>($/;"	P	implementation:OwnedRwLockWriteGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/owned_write_guard_mapped.rs	/^    pub fn try_map<F, V: ?Sized>($/;"	P	implementation:OwnedRwLockMappedWriteGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/read_guard.rs	/^    pub fn try_map<F, U: ?Sized>(this: Self, f: F) -> Result<RwLockReadGuard<'a, U>, Self>$/;"	P	implementation:RwLockReadGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard.rs	/^    pub fn try_map<F, U: ?Sized>($/;"	P	implementation:RwLockWriteGuard
try_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock/write_guard_mapped.rs	/^    pub fn try_map<F, U: ?Sized>($/;"	P	implementation:RwLockMappedWriteGuard
try_parse	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/parse/mod.rs	/^fn try_parse<M: ParseMap>($/;"	f
try_peek_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_peek_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UdpSocket
try_peek_sender	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_peek_sender(&self) -> io::Result<SocketAddr> {$/;"	P	implementation:UdpSocket
try_pop	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/list.rs	/^    pub(crate) fn try_pop(&mut self, tx: &Tx<T>) -> TryPopResult<T> {$/;"	P	implementation:Rx
try_push	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn try_push($/;"	P	implementation:Block
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Receiver
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UnixStream
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeClient
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_read(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeServer
try_read	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn try_read(&self) -> Result<RwLockReadGuard<'_, T>, TryLockError> {$/;"	P	implementation:RwLock
try_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn try_read_output(self, dst: &mut Poll<super::Result<T::Output>>, waker: &Waker)/;"	f
try_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) try_read_output: unsafe fn(NonNull<Header>, *mut (), &Waker),$/;"	m	struct:Vtable
try_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^    pub(super) unsafe fn try_read_output(self, dst: *mut (), waker: &Waker) {$/;"	P	implementation:RawTask
try_read_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^unsafe fn try_read_output<T: Future, S: Schedule>($/;"	f
try_read_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn try_read_owned(self: Arc<Self>) -> Result<OwnedRwLockReadGuard<T>, TryLockError> {$/;"	P	implementation:RwLock
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:Receiver
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:ReadHalf
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:OwnedReadHalf
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:UnixStream
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeClient
try_read_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_read_vectored(&self, bufs: &mut [io::IoSliceMut<'_>]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeServer
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_recv(&self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:UnixDatagram
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:Receiver
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:Receiver
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^            macro_rules! try_recv {$/;"	M	method:Rx::recv
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^            macro_rules! try_recv {$/;"	M	method:Rx::try_recv
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:Rx
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:UnboundedReceiver
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	P	implementation:Receiver
try_recv	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^fn try_recv() {$/;"	f
try_recv_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^fn try_recv_close() {$/;"	f
try_recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UdpSocket
try_recv_from	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_recv_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {$/;"	P	implementation:UnixDatagram
try_reserve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn try_reserve(&self) -> Result<Permit<'_, T>, TrySendError<()>> {$/;"	P	implementation:Sender
try_reserve_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn try_reserve_owned(self) -> Result<OwnedPermit<T>, TrySendError<Self>> {$/;"	P	implementation:Sender
try_resolve	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^fn try_resolve($/;"	f
try_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
try_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_send(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UnixDatagram
try_send	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn try_send(&self, message: T) -> Result<(), TrySendError<T>> {$/;"	P	implementation:Sender
try_send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn try_send_to(&self, buf: &[u8], target: SocketAddr) -> io::Result<usize> {$/;"	P	implementation:UdpSocket
try_send_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn try_send_to<P>(&self, buf: &[u8], target: P) -> io::Result<usize>$/;"	P	implementation:UnixDatagram
try_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/reusable_box.rs	/^    pub(crate) fn try_set<F>(&mut self, future: F) -> Result<(), F>$/;"	P	implementation:ReusableBoxFuture
try_set_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn try_set_join_waker(&self, waker: &Waker) -> bool {$/;"	P	implementation:RawTask
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:Child
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:StdChild
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    pub(crate) fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:Child
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:test::MockWait
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:T
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^    fn try_wait(&mut self) -> io::Result<Option<ExitStatus>>;$/;"	P	interface:Wait
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:test::MockWait
try_wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    pub(crate) fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {$/;"	P	implementation:Child
try_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn try_with<F, R>(&'static self, f: F) -> Result<R, AccessError>$/;"	P	implementation:LocalKey
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:WriteHalf
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedWriteHalf
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Sender
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:WriteHalf
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:OwnedWriteHalf
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:UnixStream
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeClient
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_write(&self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeServer
try_write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn try_write(&self) -> Result<RwLockWriteGuard<'_, T>, TryLockError> {$/;"	P	implementation:RwLock
try_write_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn try_write_owned(self: Arc<Self>) -> Result<OwnedRwLockWriteGuard<T>, TryLockError> {$/;"	P	implementation:RwLock
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub fn try_write_vectored(&self, bufs: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:WriteHalf
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub fn try_write_vectored(&self, bufs: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:OwnedWriteHalf
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn try_write_vectored(&self, bufs: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:TcpStream
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:Sender
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:WriteHalf
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:OwnedWriteHalf
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:UnixStream
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeClient
try_write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn try_write_vectored(&self, buf: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:NamedPipeServer
ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/listener.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	P	implementation:TcpListener
ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	P	implementation:TcpStream
ttl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub fn ttl(&self) -> io::Result<u32> {$/;"	P	implementation:UdpSocket
tts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response.rs	/^    pub fn tts(&mut self, tts: bool) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseData
tts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn tts(&mut self, tts: bool) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
tts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_message.rs	/^    pub fn tts(&mut self, tts: bool) -> &mut Self {$/;"	P	implementation:CreateMessage
tts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn tts(&mut self, tts: bool) -> &mut Self {$/;"	P	implementation:ExecuteWebhook
tts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub tts: bool,$/;"	m	struct:Message
tts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub tts: Option<bool>,$/;"	m	struct:MessageUpdateEvent
tts	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn tts(&mut self, tts: bool) -> &mut Self {$/;"	P	implementation:CustomMessage
tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    fn tuple() {$/;"	f	module:test
tuple	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/colour.rs	/^    pub const fn tuple(self) -> (u8, u8, u8) {$/;"	P	implementation:Colour
turn	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    fn turn(&mut self, handle: &Handle, max_wait: Option<Duration>) {$/;"	P	implementation:Driver
two	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rand.rs	/^    two: Cell<u32>,$/;"	m	struct:FastRand
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub(crate) tx: Sender<InterMessage>,$/;"	m	struct:ShardMessenger
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    tx: *mut Option<oneshot::Sender<()>>,$/;"	m	struct:Waiting
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/registry.rs	/^    tx: watch::Sender<()>,$/;"	m	struct:EventInfo
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    tx: list::Tx<T>,$/;"	m	struct:Chan
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_mpsc.rs	/^            tx: mpsc::Sender<()>,$/;"	m	struct:try_recv::Context
tx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/loom_oneshot.rs	/^    tx: &'a mut oneshot::Sender<i32>,$/;"	m	struct:OnClose
tx_close	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn tx_close(&self) {$/;"	P	implementation:Block
tx_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    tx_count: AtomicUsize,$/;"	m	struct:Chan
tx_release	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn tx_release(&self, tail_position: usize) {$/;"	P	implementation:Block
tx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    tx_task: Task,$/;"	m	struct:Inner
ty_match	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod ty_match;$/;"	n
type_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn type_map(mut self, type_map: TypeMap) -> Self {$/;"	P	implementation:ClientBuilder
type_map_insert	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn type_map_insert<T: TypeMapKey>(mut self, value: T::Value) -> Self {$/;"	P	implementation:ClientBuilder
types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/lib.rs	/^pub mod types {$/;"	n
typing	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^pub mod typing;$/;"	n
typing_start	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn typing_start(&self, _ctx: Context, _: TypingStartEvent) {}$/;"	P	interface:EventHandler
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for (IpAddr, u16) {}$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for (Ipv4Addr, u16) {}$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl ToSocketAddrs for (Ipv6Addr, u16) {}$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for (IpAddr, u16) {$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for (Ipv4Addr, u16) {$/;"	c
u16	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/addr.rs	/^impl sealed::ToSocketAddrsPriv for (Ipv6Addr, u16) {$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl From<ActionType> for u8 {$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl From<EventType> for u8 {$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl From<KeywordPresetType> for u8 {$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^impl From<TriggerType> for u8 {$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_buf_read.rs	/^impl AsyncBufRead for &[u8] {$/;"	c
u8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_read.rs	/^impl AsyncRead for &[u8] {$/;"	c
ucred	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^mod ucred;$/;"	n
uid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    pub fn uid(&self) -> unix::uid_t {$/;"	P	implementation:UCred
uid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/ucred.rs	/^    uid: unix::uid_t,$/;"	m	struct:UCred
uid	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub fn uid(&mut self, id: u32) -> &mut Command {$/;"	P	implementation:Command
uid_t	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/mod.rs	/^pub type uid_t = u32;$/;"	t
unavailable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub unavailable: bool,$/;"	m	struct:UnavailableGuild
unavailable_guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn unavailable_guilds(&self) -> DashSet<GuildId> {$/;"	P	implementation:Cache
unavailable_guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) unavailable_guilds: DashSet<GuildId>,$/;"	m	struct:Cache
unban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn unban(self, http: impl AsRef<Http>, user_id: impl Into<UserId>) -> Result<()> {$/;"	P	implementation:GuildId
unban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub async fn unban(&self, http: impl AsRef<Http>) -> Result<()> {$/;"	P	implementation:Member
unban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn unban($/;"	P	implementation:Guild
unban	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn unban(&self, http: impl AsRef<Http>, user_id: impl Into<UserId>) -> Result<()> /;"	P	implementation:PartialGuild
unbound	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub fn unbound() -> io::Result<UnixDatagram> {$/;"	P	implementation:UnixDatagram
unbounded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/mod.rs	/^mod unbounded;$/;"	n
unbounded_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>) {$/;"	f
unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub fn unchecked(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:OpenOptions
unchecked	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    unchecked: bool,$/;"	m	struct:OpenOptions
unconstrained	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^    pub(super) const fn unconstrained() -> Budget {$/;"	P	implementation:Budget
unconstrained	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/unconstrained.rs	/^pub fn unconstrained<F>(inner: F) -> Unconstrained<F> {$/;"	f
underline	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub underline: bool,$/;"	m	struct:Content
unfilled_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub unsafe fn unfilled_mut(&mut self) -> &mut [MaybeUninit<u8>] {$/;"	P	implementation:ReadBuf
ungrouped_label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub ungrouped_label: &'static str,$/;"	m	struct:HelpOptions
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub(super) unhandled_panic: UnhandledPanic,$/;"	m	struct:Builder
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/config.rs	/^    pub(crate) unhandled_panic: crate::runtime::UnhandledPanic,$/;"	m	struct:Config
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    unhandled_panic: bool,$/;"	m	struct:Core
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn unhandled_panic(&self) {$/;"	P	interface:Schedule
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    pub(crate) unhandled_panic: crate::runtime::UnhandledPanic,$/;"	m	struct:Shared
unhandled_panic	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    unhandled_panic: Cell<bool>,$/;"	m	struct:Context
unicode_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_role.rs	/^    pub fn unicode_emoji<S: ToString>(&mut self, unicode_emoji: S) -> &mut Self {$/;"	P	implementation:EditRole
unicode_emoji	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^    pub unicode_emoji: Option<String>,$/;"	m	struct:Role
unicode_eq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub fn unicode_eq(&self, other: &str) -> bool {$/;"	P	implementation:ReactionType
unicode_partial_cmp	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub fn unicode_partial_cmp(&self, other: &str) -> Option<Ordering> {$/;"	P	implementation:ReactionType
uninit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/read_buf.rs	/^    pub fn uninit(buf: &'a mut [MaybeUninit<u8>]) -> ReadBuf<'a> {$/;"	P	implementation:ReadBuf
uninterruptibly	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^macro_rules! uninterruptibly {$/;"	M
unique	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_invite.rs	/^    pub fn unique(&mut self, unique: bool) -> &mut Self {$/;"	P	implementation:CreateInvite
unix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^pub(crate) mod unix {$/;"	n
unix	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^pub mod unix;$/;"	n
unknown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn unknown(&self, _ctx: Context, _name: String, _raw: Value) {}$/;"	P	interface:EventHandler
unknown_members	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn unknown_members(&self) -> u64 {$/;"	P	implementation:Cache
unowned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^    pub(crate) fn unowned<T>(task: T) -> (Notified<NoopSchedule>, JoinHandle<T::Output>)$/;"	f	module:unowned_wrapper
unowned_poll	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn unowned_poll() {$/;"	f
unowned_wrapper	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/mod.rs	/^mod unowned_wrapper {$/;"	n
unpack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/queue.rs	/^fn unpack(n: UnsignedLong) -> (UnsignedShort, UnsignedShort) {$/;"	f
unpack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) fn unpack(&self, src: usize) -> usize {$/;"	P	implementation:Pack
unpack	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^pub(crate) const fn unpack(src: usize, mask: usize, shift: u32) -> usize {$/;"	f
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/driver.rs	/^    pub(crate) fn unpark(&self) {$/;"	P	implementation:Handle
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    pub(crate) fn unpark(&self) {$/;"	P	implementation:Handle
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn unpark(&self) -> Result<UnparkThread, AccessError> {$/;"	P	implementation:CachedParkThread
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn unpark(&self) {$/;"	P	implementation:Inner
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn unpark(&self) -> UnparkThread {$/;"	P	implementation:ParkThread
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn unpark(&self) {$/;"	P	implementation:UnparkThread
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn unpark(&self, driver: &driver::Handle) {$/;"	P	implementation:Inner
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn unpark(&self) -> Unparker {$/;"	P	implementation:Parker
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    pub(crate) fn unpark(&self, driver: &driver::Handle) {$/;"	P	implementation:Unparker
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    unpark: Unparker,$/;"	m	struct:Remote
unpark	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/handle.rs	/^    pub(crate) fn unpark(&self) {$/;"	P	implementation:Handle
unpark_condvar	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/park.rs	/^    fn unpark_condvar(&self) {$/;"	P	implementation:Inner
unpark_one	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    fn unpark_one(cell: &AtomicUsize, num_searching: usize) {$/;"	P	implementation:State
unpark_worker_by_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn unpark_worker_by_id(&self, worker_id: usize) -> bool {$/;"	P	implementation:Idle
unparker_to_raw_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn unparker_to_raw_waker(unparker: Arc<Inner>) -> RawWaker {$/;"	f
unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn unpin($/;"	P	implementation:ChannelId
unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn unpin($/;"	P	implementation:GuildChannel
unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub async fn unpin(&self, cache_http: impl CacheHttp) -> Result<()> {$/;"	P	implementation:Message
unpin	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/private_channel.rs	/^    pub async fn unpin($/;"	P	implementation:PrivateChannel
unpin_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub async fn unpin_message($/;"	P	implementation:Http
unquoted	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn unquoted(&mut self) -> &mut Self {$/;"	P	implementation:Args
unrecognised_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    pub fn unrecognised_command(mut self, f: UnrecognisedHook) -> Self {$/;"	P	implementation:StandardFramework
unrecognised_command	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/mod.rs	/^    unrecognised_command: Option<UnrecognisedHook>,$/;"	m	struct:StandardFramework
unsafe_cell	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^mod unsafe_cell;$/;"	n
unset_join_interested	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn unset_join_interested(&mut self) {$/;"	P	implementation:Snapshot
unset_join_interested	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn unset_join_interested(&self) -> UpdateResult {$/;"	P	implementation:State
unset_join_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn unset_join_waker(&mut self) {$/;"	P	implementation:Snapshot
unset_notified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn unset_notified(&mut self) {$/;"	P	implementation:Snapshot
unset_running	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    fn unset_running(&mut self) {$/;"	P	implementation:Snapshot
unset_rx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn unset_rx_task(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
unset_tx_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    fn unset_tx_task(cell: &AtomicUsize) -> State {$/;"	P	implementation:State
unset_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    pub(super) fn unset_waker(&self) -> UpdateResult {$/;"	P	implementation:State
unsplit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/split.rs	/^    pub fn unsplit(self, wr: WriteHalf<T>) -> T$/;"	P	implementation:ReadHalf
unsync_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u16.rs	/^    pub(crate) unsafe fn unsync_load(&self) -> u16 {$/;"	P	implementation:AtomicU16
unsync_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_u32.rs	/^    pub(crate) unsafe fn unsync_load(&self) -> u32 {$/;"	P	implementation:AtomicU32
unsync_load	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    pub(crate) unsafe fn unsync_load(&self) -> usize {$/;"	P	implementation:AtomicUsize
untrimmed	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/args.rs	/^    pub fn untrimmed(&mut self) -> &mut Self {$/;"	P	implementation:Args
unwrap_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^            fn unwrap_with(&self, n: usize) -> usize {$/;"	P	implementation:Content::to_string::bool
unwrap_with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^            fn unwrap_with(&self, n: usize) -> usize;$/;"	P	interface:Content::to_string::UnwrapWith
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/cache_update.rs	/^    fn update(&mut self, _: &Cache) -> Option<Self::Output>;$/;"	P	interface:CacheUpdate
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:ChannelDeleteEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:ChannelPinsUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:ChannelUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:GuildCreateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:GuildEmojisUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:GuildMemberAddEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:GuildMembersChunkEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:GuildRoleCreateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:GuildStickersUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:GuildUnavailableEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:GuildUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:PresenceUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:PresencesReplaceEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<()> {$/;"	P	implementation:ReadyEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:ChannelCreateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:GuildDeleteEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:GuildMemberRemoveEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:GuildMemberUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:GuildRoleDeleteEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:GuildRoleUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:MessageCreateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:MessageUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:ThreadCreateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:ThreadDeleteEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:ThreadUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<Self::Output> {$/;"	P	implementation:UserUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/event.rs	/^    fn update(&mut self, cache: &Cache) -> Option<VoiceState> {$/;"	P	implementation:VoiceStateUpdateEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn update<E: CacheUpdate>(&self, e: &mut E) -> Option<E::Output> {$/;"	P	implementation:Cache
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^    fn update(&mut self, cache_and_http: &Arc<CacheAndHttp>) {$/;"	P	implementation:DispatchEvent
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^fn update<E: CacheUpdate + fmt::Debug>($/;"	f
update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/dispatch.rs	/^fn update<E>(_cache_and_http: &Arc<CacheAndHttp>, _event: &mut E) -> Option<()> {$/;"	f
update	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update(self, pool: E) -> CrudFut<'e, Self> {$/;"	P	interface:Crud
update_args	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update_args(self) -> <E::Database as HasArguments<'e>>::Arguments;$/;"	P	interface:Crud
update_by_id_sql	/home/trey/code/sqlx-crud/src/schema.rs	/^    pub update_by_id_sql: &'s str,$/;"	m	struct:Metadata
update_by_id_sql	/home/trey/code/sqlx-crud/src/traits.rs	/^    fn update_by_id_sql() -> &'static str;$/;"	P	interface:Schema
update_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    fn update_manager(&self) {$/;"	P	implementation:ShardRunner
update_presence	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    pub async fn update_presence(&mut self) -> Result<()> {$/;"	P	implementation:Shard
update_user_entry	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) fn update_user_entry(&self, user: &User) {$/;"	P	implementation:Cache
update_with_user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub(crate) fn update_with_user(&mut self, user: User) {$/;"	P	implementation:PresenceUser
updated_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub updated_at: String,$/;"	m	struct:Incident
updated_at	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub updated_at: String,$/;"	m	struct:IncidentUpdate
upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/bounded.rs	/^    pub fn upgrade(&self) -> Option<Sender<T>> {$/;"	P	implementation:WeakSender
upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(super) fn upgrade(chan: Arc<Chan<T, S>>) -> Option<Self> {$/;"	P	implementation:Tx
upgrade	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/unbounded.rs	/^    pub fn upgrade(&self) -> Option<UnboundedSender<T>> {$/;"	P	implementation:WeakUnboundedSender
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn url<D: ToString>(&mut self, url: D) -> &mut Self {$/;"	P	implementation:CreateButton
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn url<S: ToString>(&mut self, url: S) -> &mut Self {$/;"	P	implementation:CreateEmbed
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    pub fn url<S: ToString>(&mut self, url: S) -> &mut Self {$/;"	P	implementation:CreateEmbedAuthor
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/error.rs	/^    pub url: Url,$/;"	m	struct:ErrorResponse
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub url: Option<String>,$/;"	m	struct:Button
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub url: String,$/;"	m	struct:Attachment
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub url: Option<String>,$/;"	m	struct:Embed
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub url: Option<String>,$/;"	m	struct:EmbedAuthor
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub url: Option<String>,$/;"	m	struct:EmbedProvider
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub url: String,$/;"	m	struct:EmbedImage
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub url: String,$/;"	m	struct:EmbedThumbnail
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub url: String,$/;"	m	struct:EmbedVideo
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub url: Option<Url>,$/;"	m	struct:Activity
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub url: String,$/;"	m	struct:ActivityButton
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub url: String,$/;"	m	struct:BotGateway
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub url: String,$/;"	m	struct:Gateway
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub fn url(&self) -> String {$/;"	P	implementation:Emoji
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub fn url(&self) -> String {$/;"	P	implementation:Invite
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub fn url(&self) -> String {$/;"	P	implementation:RichInvite
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    pub fn url(&self) -> String {$/;"	P	implementation:EmojiIdentifier
url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub fn url(&self) -> Result<String> {$/;"	P	implementation:Webhook
url_object	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_embed.rs	/^    fn url_object(&mut self, name: &'static str, url: String) -> &mut Self {$/;"	P	implementation:CreateEmbed
usage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub usage: Option<&'static str>,$/;"	m	struct:Command
usage	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub usage: Option<&'static str>,$/;"	m	struct:CommandOptions
usage_label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub usage_label: &'static str,$/;"	m	struct:HelpOptions
usage_sample	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^    pub usage_sample: Vec<&'static str>,$/;"	m	struct:Command
usage_sample_label	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub usage_sample_label: &'static str,$/;"	m	struct:HelpOptions
use_embedded_activities	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn use_embedded_activities(self) -> bool {$/;"	P	implementation:Permissions
use_external_emojis	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn use_external_emojis(self) -> bool {$/;"	P	implementation:Permissions
use_external_stickers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn use_external_stickers(self) -> bool {$/;"	P	implementation:Permissions
use_slash_commands	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn use_slash_commands(self) -> bool {$/;"	P	implementation:Permissions
use_vad	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn use_vad(self) -> bool {$/;"	P	implementation:Permissions
used	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    used: AtomicUsize,$/;"	m	struct:Page
used	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    used: usize,$/;"	m	struct:Slots
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn user<U: Into<UserId>>(&self, user_id: U) -> Option<User> {$/;"	P	implementation:Cache
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) user: RwLock<CurrentUser>,$/;"	m	struct:Cache
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn user<D: Display>(target: D) -> String {$/;"	P	implementation:Route
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application.rs	/^    pub user: User,$/;"	m	struct:TeamMember
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub user: User,$/;"	m	struct:ApplicationCommandInteraction
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub user: User,$/;"	m	struct:AutocompleteInteraction
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub user: User,$/;"	m	struct:MessageComponentInteraction
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/mod.rs	/^    pub user: User,$/;"	m	struct:MessageInteraction
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub user: User,$/;"	m	struct:ModalSubmitInteraction
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub async fn user(&self, cache_http: impl CacheHttp) -> Result<User> {$/;"	P	implementation:Reaction
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub user: User,$/;"	m	struct:GuildBanAddEvent
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub user: User,$/;"	m	struct:GuildBanRemoveEvent
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub user: User,$/;"	m	struct:GuildMemberRemoveEvent
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub user: User,$/;"	m	struct:GuildMemberUpdateEvent
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub user: CurrentUser,$/;"	m	struct:Ready
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub user: PresenceUser,$/;"	m	struct:Presence
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/emoji.rs	/^    pub user: Option<User>,$/;"	m	struct:Emoji
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/integration.rs	/^    pub user: Option<User>,$/;"	m	struct:Integration
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub user: Option<User>,$/;"	m	struct:PartialMember
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub user: User,$/;"	m	struct:InterimMember
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub user: User,$/;"	m	struct:Member
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub user: User,$/;"	m	struct:Ban
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub user: User,$/;"	m	struct:ScheduledEventUser
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod user;$/;"	n
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/sticker/mod.rs	/^    pub user: Option<User>,$/;"	m	struct:Sticker
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/webhook.rs	/^    pub user: Option<User>,$/;"	m	struct:Webhook
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/argument_convert/mod.rs	/^mod user;$/;"	n
user	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/message_builder.rs	/^    pub fn user<U: Into<UserId>>(&mut self, user: U) -> &mut Self {$/;"	P	implementation:MessageBuilder
user_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn user_count(&self) -> usize {$/;"	P	implementation:Cache
user_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/scheduled_event.rs	/^    pub user_count: Option<u64>,$/;"	m	struct:ScheduledEvent
user_defined1	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn user_defined1() -> Self {$/;"	P	implementation:SignalKind
user_defined2	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn user_defined2() -> Self {$/;"	P	implementation:SignalKind
user_dm_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn user_dm_channels<D: Display>(target: D) -> String {$/;"	P	implementation:Route
user_guild	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn user_guild<D: Display>(target: D, guild_id: u64) -> String {$/;"	P	implementation:Route
user_guilds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn user_guilds<D: Display>(target: D) -> String {$/;"	P	implementation:Route
user_guilds_optioned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn user_guilds_optioned<D: Display>($/;"	P	implementation:Route
user_has_perms	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn user_has_perms($/;"	f
user_has_perms_cache	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^pub fn user_has_perms_cache($/;"	f
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    user_id: Vec<UserId>,$/;"	m	struct:FilterOptions
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub user_id: Option<UserId>,$/;"	m	struct:Reaction
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub user_id: UserId,$/;"	m	struct:TypingStartEvent
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub user_id: bool,$/;"	m	struct:RelatedIdsForEventType
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    user_id: UserId,$/;"	m	struct:GuildScheduledEventUserAddEvent
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    user_id: UserId,$/;"	m	struct:GuildScheduledEventUserRemoveEvent
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub user_id: UserId,$/;"	m	struct:AuditLogEntry
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^    pub user_id: UserId,$/;"	m	struct:ActionExecution
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/member.rs	/^    pub user_id: Option<UserId>,$/;"	m	struct:ThreadMember
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^            user_id: UserId,$/;"	m	struct:VoiceState::deserialize::InterimVoiceState
user_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/voice.rs	/^    pub user_id: UserId,$/;"	m	struct:VoiceState
user_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_channel.rs	/^    pub fn user_limit(&mut self, limit: u32) -> &mut Self {$/;"	P	implementation:CreateChannel
user_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn user_limit(&mut self, user_limit: u64) -> &mut Self {$/;"	P	implementation:EditChannel
user_limit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub user_limit: Option<u64>,$/;"	m	struct:GuildChannel
user_me_connections	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn user_me_connections() -> &'static str {$/;"	P	implementation:Route
user_permissions_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub fn user_permissions_in($/;"	P	implementation:Guild
user_permissions_in	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub fn user_permissions_in($/;"	P	implementation:PartialGuild
user_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn user_update(&self, _ctx: Context, _new_data: CurrentUser) {}$/;"	P	interface:EventHandler
user_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn user_update(&self, _ctx: Context, _old_data: CurrentUser, _new: CurrentUser) {}$/;"	P	interface:EventHandler
username	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_interaction_response_followup.rs	/^    pub fn username<D: ToString>(&mut self, username: D) -> &mut Self {$/;"	P	implementation:CreateInteractionResponseFollowup
username	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_profile.rs	/^    pub fn username<S: ToString>(&mut self, username: S) -> &mut Self {$/;"	P	implementation:EditProfile
username	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/execute_webhook.rs	/^    pub fn username<S: ToString>(&mut self, username: S) -> &mut Self {$/;"	P	implementation:ExecuteWebhook
users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_allowed_mentions.rs	/^    pub fn users<U: Into<UserId>>(&mut self, users: impl IntoIterator<Item = U>) -> &mut Self {$/;"	P	implementation:CreateAllowedMentions
users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub fn users(&self) -> DashMap<UserId, User> {$/;"	P	implementation:Cache
users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/cache/mod.rs	/^    pub(crate) users: DashMap<UserId, User>,$/;"	m	struct:Cache
users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub users: HashMap<UserId, User>,$/;"	m	struct:CommandDataResolved
users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^    pub async fn users<R, U>($/;"	P	implementation:Reaction
users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub users: HashMap<UserId, User>,$/;"	m	struct:AuditLogs
users	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^pub mod users {$/;"	n
uses	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub uses: u64,$/;"	m	struct:RichInvite
usize	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^impl From<State> for usize {$/;"	c
util	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/lib.rs	/^mod util;$/;"	n
utils	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/mod.rs	/^mod utils;$/;"	n
utils	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/lib.rs	/^pub mod utils;$/;"	n
utils	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^mod utils;$/;"	n
utils	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/misc.rs	/^    mod utils {$/;"	n	module:test
utils	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^mod utils;$/;"	n
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^            val: *const (),$/;"	m	struct:ScopedKey::set::Reset
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/state.rs	/^    val: AtomicUsize,$/;"	m	struct:State
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    val: UnsafeCell<Option<T>>,$/;"	m	struct:Slot
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                val: Option<Rc<Context>>,$/;"	m	struct:LocalSet::with::Reset
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^                val: Option<Rc<Context>>,$/;"	m	struct:LocalSet::with_if_possible::Reset
val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/linked_list.rs	/^        val: i32,$/;"	m	struct:tests::Entry
validate	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/token.rs	/^pub fn validate(token: impl AsRef<str>) -> Result<(), InvalidToken> {$/;"	f
validate_options	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/event_collector.rs	/^    fn validate_options(options: &FilterOptions) -> Result<()> {$/;"	P	implementation:EventFilter
validates_max_permits	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^fn validates_max_permits() {$/;"	f
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn value<D: ToString>(&mut self, value: D) -> &mut Self {$/;"	P	implementation:CreateInputText
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/create_components.rs	/^    pub fn value<D: ToString>(&mut self, value: D) -> &mut Self {$/;"	P	implementation:CreateSelectMenuOption
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/collector/mod.rs	/^    value: &'a T,$/;"	m	struct:LazyArc
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub value: Value,$/;"	m	struct:CommandOptionChoice
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub value: String,$/;"	m	struct:InputText
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub value: String,$/;"	m	struct:SelectMenuOption
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub value: Option<Value>,$/;"	m	struct:CommandDataOption
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub value: String,$/;"	m	struct:EmbedField
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub value: Value,$/;"	m	struct:UnknownEvent
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_oneshot.rs	/^    value: Mutex<Option<T>>,$/;"	m	struct:Inner
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_pool.rs	/^    value: std::sync::Arc<atomic_take::AtomicTake<oneshot::Sender<T>>>,$/;"	m	struct:AtomicOneshot
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    value: UnsafeCell<MaybeUninit<T>>,$/;"	m	struct:OnceCell
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    value: UnsafeCell<Option<T>>,$/;"	m	struct:Inner
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    value: RwLock<T>,$/;"	m	struct:Shared
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^            value: &'a Option<T>,$/;"	m	struct:fmt::TransparentOption
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    value: UnsafeCell<ManuallyDrop<T>>,$/;"	m	struct:ListEntry
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/once_cell.rs	/^    value: UnsafeCell<MaybeUninit<T>>,$/;"	m	struct:OnceCell
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    value: *const Value<T>,$/;"	m	struct:Ref
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    value: T,$/;"	m	struct:Value
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/slab.rs	/^    value: UnsafeCell<Value<T>>,$/;"	m	struct:Slot
value	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/sync_wrapper.rs	/^    value: T,$/;"	m	struct:SyncWrapper
value_set	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/once_cell.rs	/^    value_set: AtomicBool,$/;"	m	struct:OnceCell
values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/component.rs	/^    pub values: Vec<String>,$/;"	m	struct:SelectMenu
values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub values: Vec<String>,$/;"	m	struct:MessageComponentInteractionData
values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/reap.rs	/^        values: Vec<Option<()>>,$/;"	m	struct:test::MockStream
values	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    values: Values<T>,$/;"	m	struct:Block
vanity_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn vanity_url(self, http: impl AsRef<Http>) -> Result<String> {$/;"	P	implementation:GuildId
vanity_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn vanity_url(&self, http: impl AsRef<Http>) -> Result<String> {$/;"	P	implementation:Guild
vanity_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn vanity_url(&self, http: impl AsRef<Http>) -> Result<String> {$/;"	P	implementation:PartialGuild
vanity_url_code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub vanity_url_code: Option<String>,$/;"	m	struct:Guild
vanity_url_code	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub vanity_url_code: Option<String>,$/;"	m	struct:PartialGuild
variant	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/time/instant.rs	/^mod variant {$/;"	n
variant_keys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^        macro_rules! variant_keys {$/;"	M	method:Change::key
vec	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/vec_with_initialized.rs	/^    vec: V,$/;"	m	struct:VecWithInitialized
verification_level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_guild.rs	/^    pub fn verification_level<V>(&mut self, verification_level: V) -> &mut Self$/;"	P	implementation:EditGuild
verification_level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub verification_level: VerificationLevel,$/;"	m	struct:Guild
verification_level	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub verification_level: VerificationLevel,$/;"	m	struct:PartialGuild
verified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub verified: bool,$/;"	m	struct:Connection
verified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub verified: Option<bool>,$/;"	m	struct:PresenceUser
verified	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^    pub verified: Option<bool>,$/;"	m	struct:CurrentUser
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/command.rs	/^    pub version: CommandVersionId,$/;"	m	struct:Command
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/application_command.rs	/^    pub version: u8,$/;"	m	struct:ApplicationCommandInteraction
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/autocomplete.rs	/^    pub version: u8,$/;"	m	struct:AutocompleteInteraction
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/message_component.rs	/^    pub version: u8,$/;"	m	struct:MessageComponentInteraction
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/modal.rs	/^    pub version: u8,$/;"	m	struct:ModalSubmitInteraction
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/application/interaction/ping.rs	/^    pub version: u8,$/;"	m	struct:PingInteraction
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub version: u64,$/;"	m	struct:Ready
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^        pub(super) fn version(self) -> Version {$/;"	P	implementation:state::StateSnapshot
version	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    version: Version,$/;"	m	struct:Receiver
video	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub video: Option<EmbedVideo>,$/;"	m	struct:Embed
video_quality_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn video_quality_mode(&mut self, quality: VideoQualityMode) -> &mut Self {$/;"	P	implementation:EditChannel
video_quality_mode	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub video_quality_mode: Option<VideoQualityMode>,$/;"	m	struct:GuildChannel
view_audit_log	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn view_audit_log(self) -> bool {$/;"	P	implementation:Permissions
view_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn view_channel(self) -> bool {$/;"	P	implementation:Permissions
view_guild_insights	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^    pub fn view_guild_insights(self) -> bool {$/;"	P	implementation:Permissions
visibility	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/connection.rs	/^    pub visibility: ConnectionVisibility,$/;"	m	struct:Connection
visit_i64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^        fn visit_i64<E: Error>(self, value: i64) -> Result<Self::Value, E> {$/;"	P	implementation:snowflake::SnowflakeVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/reaction.rs	/^            fn visit_map<V: MapAccess<'de>>(self, mut map: V) -> StdResult<Self::Value, V::Error/;"	P	implementation:ReactionType::deserialize::ReactionTypeVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            fn visit_map<A: MapAccess<'de>>(self, mut map: A) -> StdResult<Self::Value, A::Error/;"	P	implementation:GuildMembersChunkEvent::deserialize::GuildMembersChunkVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/change.rs	/^    fn visit_map<A: MapAccess<'de>>(self, mut map: A) -> Result<Change, A::Error> {$/;"	P	implementation:ChangeVisitor
visit_map	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/automod.rs	/^            fn visit_map<A: MapAccess<'de>>(self, mut map: A) -> Result<Self::Value, A::Error> {$/;"	P	implementation:Action::deserialize::Visitor
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^        fn visit_none<E: Error>(self) -> Result<Self::Value, E> {$/;"	P	implementation:optional_string::OptionalStringVisitor
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^        fn visit_none<E: Error>(self) -> Result<Self::Value, E> {$/;"	P	implementation:premium_subscriber::NullValueVisitor
visit_none	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^            fn visit_none<E: Error>(self) -> Result<Self::Value, E> {$/;"	P	implementation:discriminator::option::OptionalDiscriminatorVisitor
visit_seq	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/utils.rs	/^    fn visit_seq<A>(mut self, mut seq: A) -> StdResult<Self::Value, A::Error>$/;"	f
visit_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^        fn visit_some<D: Deserializer<'de>>($/;"	P	implementation:optional_string::OptionalStringVisitor
visit_some	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^            fn visit_some<D: Deserializer<'de>>($/;"	P	implementation:discriminator::option::OptionalDiscriminatorVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^            fn visit_str<E>(self, v: &str) -> StdResult<Self::Value, E>$/;"	P	implementation:EventType::deserialize::EventTypeVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^        fn visit_str<E: Error>(self, string: &str) -> Result<Option<u64>, E> {$/;"	P	implementation:optional_string::OptionalStringVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^        fn visit_str<E: Error>(self, value: &str) -> Result<Self::Value, E> {$/;"	P	implementation:snowflake::SnowflakeVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/permissions.rs	/^            fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:Permissions::deserialize::StringVisitor
visit_str	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        fn visit_str<E: Error>(self, s: &str) -> Result<Self::Value, E> {$/;"	P	implementation:discriminator::DiscriminatorVisitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^        fn visit_u64<E: Error>(self, val: u64) -> Result<Option<u64>, E> {$/;"	P	implementation:optional_string::OptionalStringVisitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/id.rs	/^        fn visit_u64<E: Error>(self, value: u64) -> Result<Self::Value, E> {$/;"	P	implementation:snowflake::SnowflakeVisitor
visit_u64	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^        fn visit_u64<E: Error>(self, value: u64) -> Result<Self::Value, E> {$/;"	P	implementation:discriminator::DiscriminatorVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^        fn visit_unit<E: Error>(self) -> Result<Self::Value, E> {$/;"	P	implementation:optional_string::OptionalStringVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/role.rs	/^        fn visit_unit<E: Error>(self) -> Result<Self::Value, E> {$/;"	P	implementation:premium_subscriber::NullValueVisitor
visit_unit	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/user.rs	/^            fn visit_unit<E: Error>(self) -> Result<Self::Value, E> {$/;"	P	implementation:discriminator::option::OptionalDiscriminatorVisitor
voice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/mod.rs	/^pub mod voice;$/;"	n
voice	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod voice;$/;"	n
voice_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_member.rs	/^    pub fn voice_channel<C: Into<ChannelId>>(&mut self, channel_id: C) -> &mut Self {$/;"	P	implementation:EditMember
voice_channel_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/invite.rs	/^    pub voice_channel_count: Option<u64>,$/;"	m	struct:InviteGuild
voice_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub voice_manager: &'a Option<Arc<dyn VoiceGatewayManager + Send + Sync + 'static>>,$/;"	m	struct:ShardManagerOptions
voice_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub voice_manager: Option<Arc<dyn VoiceGatewayManager + Send + Sync + 'static>>,$/;"	m	struct:ShardQueuer
voice_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    pub voice_manager: Option<Arc<dyn VoiceGatewayManager + Send + Sync>>,$/;"	m	struct:ShardRunnerOptions
voice_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_runner.rs	/^    voice_manager: Option<Arc<dyn VoiceGatewayManager + Send + Sync + 'static>>,$/;"	m	struct:ShardRunner
voice_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn voice_manager<V>(mut self, voice_manager: V) -> Self$/;"	P	implementation:ClientBuilder
voice_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub voice_manager: Option<Arc<dyn VoiceGatewayManager + Send + Sync + 'static>>,$/;"	m	struct:Client
voice_manager	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    voice_manager: Option<Arc<dyn VoiceGatewayManager + Send + Sync + 'static>>,$/;"	m	struct:ClientBuilder
voice_manager_arc	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub fn voice_manager_arc($/;"	P	implementation:ClientBuilder
voice_region	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/builder/edit_channel.rs	/^    pub fn voice_region(&mut self, id: Option<String>) -> &mut Self {$/;"	P	implementation:EditChannel
voice_regions	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn voice_regions() -> &'static str {$/;"	P	implementation:Route
voice_server_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn voice_server_update(&self, _ctx: Context, _: VoiceServerUpdateEvent) {}$/;"	P	interface:EventHandler
voice_state	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^    pub voice_state: VoiceState,$/;"	m	struct:VoiceStateUpdateEvent
voice_state_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn voice_state_update(&self, _ctx: Context, _: VoiceState) {}$/;"	P	interface:EventHandler
voice_state_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn voice_state_update(&self, _ctx: Context, _old: Option<VoiceState>, _new: VoiceState/;"	P	interface:EventHandler
voice_states	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub voice_states: HashMap<UserId, VoiceState>,$/;"	m	struct:Guild
vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) vtable: &'static Vtable,$/;"	m	struct:Header
vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/raw.rs	/^pub(super) fn vtable<T: Future, S: Schedule>() -> &'static Vtable {$/;"	f
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn wait<'a, T>($/;"	P	implementation:Condvar
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub async fn wait(&mut self) -> io::Result<ExitStatus> {$/;"	P	implementation:Child
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/shutdown.rs	/^    pub(crate) fn wait(&mut self, timeout: Option<Duration>) -> bool {$/;"	P	implementation:Receiver
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    pub async fn wait(&self) -> BarrierWaitResult {$/;"	P	implementation:Barrier
wait	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    wait: watch::Receiver<usize>,$/;"	m	struct:Barrier
wait_complete	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task_combinations.rs	/^        wait_complete: Option<oneshot::Receiver<()>>,$/;"	m	struct:test_combination::Signals
wait_internal	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    async fn wait_internal(&self) -> BarrierWaitResult {$/;"	P	implementation:Barrier
wait_object	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    wait_object: HANDLE,$/;"	m	struct:Waiting
wait_timeout	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn wait_timeout<'a, T>($/;"	P	implementation:Condvar
wait_with_output	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^    pub async fn wait_with_output(mut self) -> io::Result<Output> {$/;"	P	implementation:Child
waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    waiter: UnsafeCell<Waiter>,$/;"	m	struct:Recv
waiter	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    waiter: UnsafeCell<Waiter>,$/;"	m	struct:Notified
waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    waiters: Mutex<Waiters>,$/;"	m	struct:ScheduledIo
waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    waiters: Mutex<Waitlist>,$/;"	m	struct:Semaphore
waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    waiters: LinkedList<Waiter, <Waiter as linked_list::Link>::Target>,$/;"	m	struct:Tail
waiters	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    waiters: Mutex<WaitList>,$/;"	m	struct:Notify
waiting	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    waiting: Option<Waiting>,$/;"	m	struct:Child
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/defer.rs	/^    pub(crate) fn wake(&mut self) {$/;"	P	implementation:Defer
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    pub(super) fn wake(&self, ready: Ready) {$/;"	P	implementation:ScheduledIo
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn wake(raw: *const ()) {$/;"	f
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn wake(arc_self: Arc<Self>) {$/;"	P	implementation:Handle
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn wake(self) {$/;"	P	implementation:Waker
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    fn wake(self);$/;"	P	interface:WakerRef
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    pub(crate) fn wake(&self) {$/;"	P	implementation:AtomicWaker
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    unsafe fn wake(_data: *const ()) {$/;"	f	function:notify_clones_waker_before_lock
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    fn wake(me: Arc<Self>) {$/;"	P	implementation:ListEntry
wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    fn wake(arc_self: Arc<Self>);$/;"	P	interface:Wake
wake_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake_list.rs	/^    pub(crate) fn wake_all(&mut self) {$/;"	P	implementation:WakeList
wake_arc_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn wake_arc_raw<T: Wake>(data: *const ()) {$/;"	f
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^unsafe fn wake_by_ref(raw: *const ()) {$/;"	f
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn wake_by_ref(arc_self: &Arc<Self>) {$/;"	P	implementation:Handle
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn wake_by_ref(&self) {$/;"	P	implementation:RawTask
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^unsafe fn wake_by_ref(ptr: *const ()) {$/;"	f
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^        fn wake_by_ref(_arc_self: &Arc<Self>) {$/;"	P	implementation:notify_waiters_handles_panicking_waker::PanickingWaker
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^    unsafe fn wake_by_ref(_data: *const ()) {$/;"	f	function:notify_clones_waker_before_lock
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/semaphore_batch.rs	/^        fn wake_by_ref(_arc_self: &Arc<Self>) {}$/;"	P	implementation:release_permits_at_drop::ReleaseOnDrop
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    fn wake_by_ref(me: &Arc<Self>) {$/;"	P	implementation:ListEntry
wake_by_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    fn wake_by_ref(arc_self: &Arc<Self>);$/;"	P	interface:Wake
wake_by_ref_arc_raw	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^unsafe fn wake_by_ref_arc_raw<T: Wake>(data: *const ()) {$/;"	f
wake_by_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/harness.rs	/^    pub(super) fn wake_by_val(&self) {$/;"	P	implementation:RawTask
wake_by_val	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^unsafe fn wake_by_val(ptr: *const ()) {$/;"	f
wake_deferred_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^fn wake_deferred_tasks() {$/;"	f
wake_deferred_tasks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^fn wake_deferred_tasks() {$/;"	f
wake_during_shutdown	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_local.rs	/^fn wake_during_shutdown() {$/;"	f
wake_join	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn wake_join(&self) {$/;"	P	implementation:Trailer
wake_list	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/mod.rs	/^mod wake_list;$/;"	n
wake_rx	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/chan.rs	/^    pub(crate) fn wake_rx(&self) {$/;"	P	implementation:Tx
wake_without_register	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/atomic_waker.rs	/^fn wake_without_register() {$/;"	f
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/mod.rs	/^    waker: mio::Waker,$/;"	m	struct:Handle
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    pub(crate) fn waker(&self) -> Result<Waker, AccessError> {$/;"	P	implementation:CachedParkThread
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) waker: UnsafeCell<Option<Waker>>,$/;"	m	struct:Trailer
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^mod waker;$/;"	n
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^    waker: ManuallyDrop<Waker>,$/;"	m	struct:WakerRef
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    waker: AtomicWaker,$/;"	m	struct:StateCell
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/barrier.rs	/^    waker: watch::Sender<usize>,$/;"	m	struct:BarrierState
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/batch_semaphore.rs	/^    waker: UnsafeCell<Option<Waker>>,$/;"	m	struct:Waiter
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/broadcast.rs	/^    waker: Option<Waker>,$/;"	m	struct:Waiter
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/notify.rs	/^    waker: Option<Waker>,$/;"	m	struct:Waiter
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/task/atomic_waker.rs	/^    waker: UnsafeCell<Option<Waker>>,$/;"	m	struct:AtomicWaker
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    waker: AtomicWaker,$/;"	m	struct:Shared
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    waker: Option<Waker>,$/;"	m	struct:ListsInner
waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^    waker: ManuallyDrop<Waker>,$/;"	m	struct:WakerRef
waker_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    fn waker_ref(me: &Arc<Self>) -> WakerRef<'_> {$/;"	P	implementation:Handle
waker_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/waker.rs	/^pub(super) fn waker_ref<T, S>(header: &NonNull<Header>) -> WakerRef<'_, S>$/;"	f
waker_ref	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^pub(crate) fn waker_ref<W: Wake>(wake: &Arc<W>) -> WakerRef<'_> {$/;"	f
waker_vtable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/wake.rs	/^fn waker_vtable<W: Wake>() -> &'static RawWakerVTable {$/;"	f
wakes_to_local_queue	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn wakes_to_local_queue() {$/;"	f	module:tests
watch_borrow	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn watch_borrow() {$/;"	f	module:tests
watch_spurious_wakeup	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/watch.rs	/^    fn watch_spurious_wakeup() {$/;"	f	module:tests
watch_test	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/tests/notify.rs	/^fn watch_test() {$/;"	f
watching	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub fn watching<N>(name: N) -> Activity$/;"	P	implementation:Activity
web	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/gateway.rs	/^    pub web: Option<OnlineStatus>,$/;"	m	struct:ClientStatus
webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn webhook(webhook_id: u64) -> String {$/;"	P	implementation:Route
webhook	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/mod.rs	/^pub mod webhook;$/;"	n
webhook_followup_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn webhook_followup_message<D: Display>($/;"	P	implementation:Route
webhook_followup_messages	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn webhook_followup_messages<D: Display>(application_id: u64, token: D) -> String {$/;"	P	implementation:Route
webhook_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/message.rs	/^    pub webhook_id: Option<WebhookId>,$/;"	m	struct:Message
webhook_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/partial_channel.rs	/^    webhook_id: WebhookId,$/;"	m	struct:FollowedChannel
webhook_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/utils/custom_message.rs	/^    pub fn webhook_id(&mut self, id: WebhookId) -> &mut Self {$/;"	P	implementation:CustomMessage
webhook_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn webhook_message<D>(webhook_id: u64, token: D, message_id: u64) -> String$/;"	P	implementation:Route
webhook_original_interaction_response	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn webhook_original_interaction_response<D: Display>($/;"	P	implementation:Route
webhook_update	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/event_handler.rs	/^    async fn webhook_update($/;"	P	interface:EventHandler
webhook_with_token	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn webhook_with_token<D>(webhook_id: u64, token: D) -> String$/;"	P	implementation:Route
webhook_with_token_optioned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/routing.rs	/^    pub fn webhook_with_token_optioned<D>(webhook_id: u64, token: D, wait: bool) -> String$/;"	P	implementation:Route
webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/channel_id.rs	/^    pub async fn webhooks(self, http: impl AsRef<Http>) -> Result<Vec<Webhook>> {$/;"	P	implementation:ChannelId
webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/guild_channel.rs	/^    pub async fn webhooks(&self, http: impl AsRef<Http>) -> Result<Vec<Webhook>> {$/;"	P	implementation:GuildChannel
webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log.rs	/^    pub webhooks: HashMap<WebhookId, Webhook>,$/;"	m	struct:AuditLogs
webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/audit_log/utils.rs	/^pub mod webhooks {$/;"	n
webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub async fn webhooks(self, http: impl AsRef<Http>) -> Result<Vec<Webhook>> {$/;"	P	implementation:GuildId
webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub async fn webhooks(&self, http: impl AsRef<Http>) -> Result<Vec<Webhook>> {$/;"	P	implementation:Guild
webhooks	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub async fn webhooks(&self, http: impl AsRef<Http>) -> Result<Vec<Webhook>> {$/;"	P	implementation:PartialGuild
websocket_message	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_messenger.rs	/^    pub fn websocket_message(&self, message: Message) {$/;"	P	implementation:ShardMessenger
welcome_channels	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/welcome_screen.rs	/^    pub welcome_channels: Vec<GuildWelcomeChannel>,$/;"	m	struct:GuildWelcomeScreen
welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub welcome_screen: Option<GuildWelcomeScreen>,$/;"	m	struct:Guild
welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^mod welcome_screen;$/;"	n
welcome_screen	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub welcome_screen: Option<GuildWelcomeScreen>,$/;"	m	struct:PartialGuild
wheel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^    wheel: wheel::Wheel,$/;"	m	struct:InnerState
wheel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/mod.rs	/^mod wheel;$/;"	n
when	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/time/entry.rs	/^    fn when(&self) -> Option<u64> {$/;"	P	implementation:StateCell
widget_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub widget_channel_id: Option<ChannelId>,$/;"	m	struct:Guild
widget_channel_id	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub widget_channel_id: Option<ChannelId>,$/;"	m	struct:PartialGuild
widget_enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/mod.rs	/^    pub widget_enabled: Option<bool>,$/;"	m	struct:Guild
widget_enabled	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/partial_guild.rs	/^    pub widget_enabled: Option<bool>,$/;"	m	struct:PartialGuild
widget_image_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/guild/guild_id.rs	/^    pub fn widget_image_url(&self, style: GuildWidgetStyle) -> String {$/;"	P	implementation:GuildId
width	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/attachment.rs	/^    pub width: Option<u64>,$/;"	m	struct:Attachment
width	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub width: Option<u64>,$/;"	m	struct:EmbedImage
width	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub width: Option<u64>,$/;"	m	struct:EmbedThumbnail
width	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/channel/embed.rs	/^    pub width: Option<u64>,$/;"	m	struct:EmbedVideo
width	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/bit.rs	/^    pub(crate) const fn width(&self) -> u32 {$/;"	P	implementation:Pack
will_wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) unsafe fn will_wake(&self, waker: &Waker) -> bool {$/;"	P	implementation:Trailer
will_wake	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn will_wake(&self, cx: &mut Context<'_>) -> bool {$/;"	P	implementation:Task
wind	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/http/client.rs	/^    pub(super) async fn wind(&self, expected: u16, req: Request<'_>) -> Result<()> {$/;"	P	implementation:Http
window_change	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/unix.rs	/^    pub const fn window_change() -> Self {$/;"	P	implementation:SignalKind
windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/doc/os.rs	/^pub mod windows {$/;"	n
windows	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/signal/mod.rs	/^pub mod windows;$/;"	n
windows_sys	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub(super) mod windows_sys {$/;"	n	module:doc
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^    pub(crate) fn with<R>(&self, f: impl FnOnce(*const T) -> R) -> R {$/;"	P	implementation:UnsafeCell
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/macros/scoped_tls.rs	/^    pub(crate) fn with<F, R>(&'static self, f: F) -> R$/;"	P	implementation:ScopedKey
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/task.rs	/^fn with(f: impl FnOnce(Runtime)) {$/;"	f
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn with<T>(&self, f: impl FnOnce() -> T) -> T {$/;"	P	implementation:LocalSet
with	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/task_local.rs	/^    pub fn with<F, R>(&'static self, f: F) -> R$/;"	P	implementation:LocalKey
with_budget	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^fn with_budget<R>(budget: Budget, f: impl FnOnce() -> R) -> R {$/;"	f
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn with_capacity(n: usize) -> Buf {$/;"	P	implementation:Buf
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_reader.rs	/^    pub fn with_capacity(capacity: usize, inner: R) -> Self {$/;"	P	implementation:BufReader
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_stream.rs	/^    pub fn with_capacity($/;"	P	implementation:BufStream
with_capacity	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/buf_writer.rs	/^    pub fn with_capacity(cap: usize, inner: W) -> Self {$/;"	P	implementation:BufWriter
with_current	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/park.rs	/^    fn with_current<F, R>(&self, f: F) -> Result<R, AccessError>$/;"	P	implementation:CachedParkThread
with_embeds	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/help_commands.rs	/^pub async fn with_embeds($/;"	f
with_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/orphan.rs	/^        fn with_err() -> Self {$/;"	P	implementation:test::MockWait
with_if_possible	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/local.rs	/^    fn with_if_possible<T>(&self, f: impl FnOnce() -> T) -> T {$/;"	P	implementation:LocalSet
with_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/list.rs	/^    fn with_inner<F, T>(&self, f: F) -> T$/;"	P	implementation:LocalOwnedTasks
with_inner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/rc_cell.rs	/^    unsafe fn with_inner<F, R>(&self, f: F) -> R$/;"	P	implementation:RcCell
with_interest	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub fn with_interest(inner: T, interest: Interest) -> io::Result<Self>$/;"	P	implementation:AsyncFd
with_max_readers	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub fn with_max_readers(value: T, max_reads: u32) -> RwLock<T>$/;"	P	implementation:RwLock
with_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/atomic_usize.rs	/^    pub(crate) fn with_mut<R>(&mut self, f: impl FnOnce(&mut usize) -> R) -> R {$/;"	P	implementation:AtomicUsize
with_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/unsafe_cell.rs	/^    pub(crate) fn with_mut<R>(&self, f: impl FnOnce(*mut T) -> R) -> R {$/;"	P	implementation:UnsafeCell
with_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/core.rs	/^    pub(super) fn with_mut<R>(&self, f: impl FnOnce(*mut Stage<T>) -> R) -> R {$/;"	P	implementation:CoreStage
with_related_ids_for_event_types	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/model/event.rs	/^macro_rules! with_related_ids_for_event_types {$/;"	M
with_result	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/mod.rs	/^        fn with_result(result: Poll<Result<(), ()>>) -> Self {$/;"	P	implementation:test::Mock
with_task	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/oneshot.rs	/^    unsafe fn with_task<F, R>(&self, f: F) -> R$/;"	P	implementation:Task
with_unconstrained	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/coop.rs	/^pub(crate) fn with_unconstrained<R>(f: impl FnOnce() -> R) -> R {$/;"	f
with_value_and_context	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/util/idle_notified_set.rs	/^    pub(crate) fn with_value_and_context<F, U>(&mut self, func: F) -> U$/;"	P	implementation:EntryInOneOfTheLists
with_whitespace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub fn with_whitespace<I: Into<WithWhiteSpace>>(&mut self, with: I) -> &mut Self {$/;"	P	implementation:Configuration
with_whitespace	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/configuration.rs	/^    pub with_whitespace: WithWhiteSpace,$/;"	m	struct:Configuration
woken	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    woken: AtomicBool,$/;"	m	struct:Shared
worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/mod.rs	/^mod worker;$/;"	n
worker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    worker: Arc<Worker>,$/;"	m	struct:Context
worker_local_queue_depth	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_local_queue_depth(&self, worker: usize) -> usize {$/;"	P	implementation:RuntimeMetrics
worker_local_schedule_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_local_schedule_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/current_thread.rs	/^    worker_metrics: WorkerMetrics,$/;"	m	struct:Shared
worker_metrics	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    pub(super) worker_metrics: Box<[WorkerMetrics]>,$/;"	m	struct:Shared
worker_noop_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_noop_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_overflow_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_overflow_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_park_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_park_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_poll_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_poll_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_steal_count	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_steal_count(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_steal_operations	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_steal_operations(&self, worker: usize) -> u64 {$/;"	P	implementation:RuntimeMetrics
worker_thread_index	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    worker_thread_index: usize,$/;"	m	struct:Shared
worker_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/blocking/pool.rs	/^    worker_threads: HashMap<usize, thread::JoinHandle<()>>,$/;"	m	struct:Shared
worker_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    pub fn worker_threads(&mut self, val: usize) -> &mut Self {$/;"	P	implementation:Builder
worker_threads	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/builder.rs	/^    worker_threads: Option<usize>,$/;"	m	struct:Builder
worker_to_notify	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/idle.rs	/^    pub(super) fn worker_to_notify(&self) -> Option<usize> {$/;"	P	implementation:Idle
worker_total_busy_duration	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/metrics/runtime.rs	/^    pub fn worker_total_busy_duration(&self, worker: usize) -> Duration {$/;"	P	implementation:RuntimeMetrics
wrap_same	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.6.3/src/ty_match.rs	/^    fn wrap_same(self) -> Self::Wrapped {$/;"	P	interface:WrapSameExt
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub async fn writable<'a>(&'a self) -> io::Result<AsyncFdReadyGuard<'a, T>> {$/;"	P	implementation:AsyncFd
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:WriteHalf
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/split_owned.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:OwnedWriteHalf
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/tcp/stream.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:TcpStream
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/udp.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:UdpSocket
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/datagram/socket.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:UnixDatagram
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/pipe.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:Sender
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:WriteHalf
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/split_owned.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:OwnedWriteHalf
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/unix/stream.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:UnixStream
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeClient
writable	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub async fn writable(&self) -> io::Result<()> {$/;"	P	implementation:NamedPipeServer
writable_mut	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/async_fd.rs	/^    pub async fn writable_mut<'a>(&'a mut self) -> io::Result<AsyncFdReadyMutGuard<'a, T>> {$/;"	P	implementation:AsyncFd
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mocks.rs	/^    fn write(&mut self, src: &[u8]) -> io::Result<usize> {$/;"	P	implementation:MockFile
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/mod.rs	/^mod write;$/;"	n
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/open_options.rs	/^    pub fn write(&mut self, write: bool) -> &mut OpenOptions {$/;"	P	implementation:OpenOptions
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/write.rs	/^pub async fn write(path: impl AsRef<Path>, contents: impl AsRef<[u8]>) -> io::Result<()> {$/;"	f
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    write: Arc<Mutex<Pipe>>,$/;"	m	struct:DuplexStream
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write.rs	/^pub(crate) fn write<'a, W>(writer: &'a mut W, buf: &'a [u8]) -> Write<'a, W>$/;"	f
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/parking_lot.rs	/^    pub(crate) fn write(&self) -> LockResult<RwLockWriteGuard<'_, T>> {$/;"	P	implementation:RwLock
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn write(&mut self, allowed: bool) -> &mut Self {$/;"	P	implementation:ClientOptions
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn write(&mut self, bytes: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Pipe
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/windows.rs	/^    fn write(&mut self, bytes: &[u8]) -> io::Result<usize> {$/;"	P	implementation:ArcFile
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/mpsc/block.rs	/^    pub(crate) unsafe fn write(&self, slot_index: usize, value: T) {$/;"	P	implementation:Block
write	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub async fn write(&self) -> RwLockWriteGuard<'_, T> {$/;"	P	implementation:RwLock
write_all	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all.rs	/^pub(crate) fn write_all<'a, W>(writer: &'a mut W, buf: &'a [u8]) -> WriteAll<'a, W>$/;"	f
write_all_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_all_buf.rs	/^pub(crate) fn write_all_buf<'a, W, B>(writer: &'a mut W, buf: &'a mut B) -> WriteAllBuf<'a, W, B/;"	f
write_buf	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_buf.rs	/^pub(crate) fn write_buf<'a, W, B>(writer: &'a mut W, buf: &'a mut B) -> WriteBuf<'a, W, B>$/;"	f
write_dac	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn write_dac(&mut self, requested: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
write_dac	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    write_dac: bool,$/;"	m	struct:ServerOptions
write_guard	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod write_guard;$/;"	n
write_guard_mapped	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^pub(crate) mod write_guard_mapped;$/;"	n
write_history	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/stdio_common.rs	/^        write_history: Vec<usize>,$/;"	m	struct:tests::LoggingMockWriter
write_owned	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/sync/rwlock.rs	/^    pub async fn write_owned(self: Arc<Self>) -> OwnedRwLockWriteGuard<T> {$/;"	P	implementation:RwLock
write_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    pub fn write_owner(&mut self, requested: bool) -> &mut Self {$/;"	P	implementation:ServerOptions
write_owner	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/net/windows/named_pipe.rs	/^    write_owner: bool,$/;"	m	struct:ServerOptions
write_read_flush_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_read_flush_err() {$/;"	f
write_read_write_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_read_write_err() {$/;"	f
write_seek_flush_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_seek_flush_err() {$/;"	f
write_seek_write_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_seek_write_err() {$/;"	f
write_to	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/blocking.rs	/^    pub(crate) fn write_to<T: Write>(&mut self, wr: &mut T) -> io::Result<()> {$/;"	P	implementation:Buf
write_twice_before_dispatch	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_twice_before_dispatch() {$/;"	f
write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_vectored.rs	/^pub(crate) fn write_vectored<'a, 'b, W>($/;"	f
write_vectored	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/process/unix/mod.rs	/^    fn write_vectored(&mut self, bufs: &[io::IoSlice<'_>]) -> io::Result<usize> {$/;"	P	implementation:Pipe
write_waker	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/mem.rs	/^    write_waker: Option<Waker>,$/;"	m	struct:Pipe
write_with_buffer_larger_than_max	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_with_buffer_larger_than_max() {$/;"	f
write_write_err	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/fs/file/tests.rs	/^fn write_write_err() {$/;"	f
writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/copy.rs	/^    writer: &'a mut W,$/;"	m	struct:Copy
writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_int.rs	/^macro_rules! writer {$/;"	M
writer	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/io/scheduled_io.rs	/^    writer: Option<Waker>,$/;"	m	struct:Waiters
writer8	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/io/util/write_int.rs	/^macro_rules! writer8 {$/;"	M
wrong_channel	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/framework/standard/structures/mod.rs	/^    pub wrong_channel: HelpBehaviour,$/;"	m	struct:HelpOptions
ws_client_ext	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/mod.rs	/^mod ws_client_ext;$/;"	n
ws_impl	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/internal/mod.rs	/^pub mod ws_impl;$/;"	n
ws_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_manager.rs	/^    pub ws_url: &'a Arc<Mutex<String>>,$/;"	m	struct:ShardManagerOptions
ws_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/bridge/gateway/shard_queuer.rs	/^    pub ws_url: Arc<Mutex<String>>,$/;"	m	struct:ShardQueuer
ws_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/client/mod.rs	/^    pub ws_url: Arc<Mutex<String>>,$/;"	m	struct:Client
ws_url	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/serenity-0.11.5/src/gateway/shard.rs	/^    ws_url: Arc<Mutex<String>>,$/;"	m	struct:Shard
yield_calls_park_before_scheduling_again	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/tests/loom_yield.rs	/^fn yield_calls_park_before_scheduling_again() {$/;"	f
yield_now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/loom/std/mod.rs	/^    pub(crate) fn yield_now() {$/;"	f	module:thread
yield_now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/scheduler/multi_thread/worker.rs	/^    fn yield_now(&self, task: Notified) {$/;"	P	implementation:Arc
yield_now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/runtime/task/mod.rs	/^    fn yield_now(&self, task: Notified<Self>) {$/;"	P	interface:Schedule
yield_now	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^pub async fn yield_now() {$/;"	f
yielded	/home/trey/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.27.0/src/task/yield_now.rs	/^        yielded: bool,$/;"	m	struct:yield_now::YieldNow
